/*! For license information please see app-14a5a0a9.js.LICENSE.txt */
(self.webpackChunk = self.webpackChunk || []).push([[2143], {
    90028: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => s
        });
        const s = {
            "course-card-container": "_2jhpw"
        }
    }
    ,
    42985: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => s
        });
        const s = {
            _button: "_1so1r",
            "google-solid": "_38eRM _1so1r",
            "facebook-solid": "_2xkK- _1l4ed _1so1r",
            stroke: "_3m1fU _1so1r",
            "account-icon": "_2Drh9",
            "account-text": "_3KZ9i"
        }
    }
    ,
    4368: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => s
        });
        const s = {
            "duration-fade": "0.3s",
            "duration-slide": "0.4s",
            "height-tabbar-mobile": "82px",
            "juicy-bee": "rgb(var(--color-bee))",
            "margin-popover": "8px",
            "margin-popover-stem": "15px",
            "margin-popover-text": "5px",
            "z-index-modal": "310",
            "z-index-overlay": "300",
            "z-index-popover": "150",
            "z-index-topbar": "210"
        }
    }
    ,
    98980: (e, t, a) => {
        "use strict";
        a.d(t, {
            Q: () => c,
            m: () => l
        });
        var s = a(40893)
          , n = a(59510)
          , r = a(18867)
          , i = a(96195)
          , o = a(19172);
        const l = (0,
        i.d)("featuresAtom", (0,
        o.f)("featuresAtom").primitive(void 0).reducer(( (e, t) => {
            var a;
            return "network-success" === t.result.type ? t.result.value : "network-failure" === t.result.type && (0,
            r.Hx)(t.result.ex) && 401 === (null === (a = t.result.ex.response) || void 0 === a ? void 0 : a.status) ? void 0 : e
        }
        )).build(), (e => {
            const t = e.untracked(n.v)
              , a = e.untracked(s.t_);
            return t || !a.length || 1 === a.length && "users" === a[0] ? [] : [{
                queryFn: () => () => r.PA.getFeatures("DLAW"),
                queryKey: ["features"]
            }]
        }
        ))
          , c = (0,
        o.f)("canShakeToReport").selectedTracked(l, (e => void 0 !== e)).build()
    }
    ,
    40893: (e, t, a) => {
        "use strict";
        a.d(t, {
            DW: () => l,
            LF: () => o,
            oo: () => c,
            t_: () => d
        });
        var s = a(42659)
          , n = a(48469)
          , r = a(19172)
          , i = a(97106);
        const o = (0,
        n.R)(s.np)
          , l = (0,
        n.R)(s.dY)
          , c = (0,
        n.R)((e => (0,
        i.ab)(e.user.timezoneOffset, e.user.xpGains) > 0))
          , d = (0,
        r.f)("userRoles").derived((e => {
            var t;
            return null !== (t = e(o).roles) && void 0 !== t ? t : []
        }
        )).build()
    }
    ,
    59510: (e, t, a) => {
        "use strict";
        a.d(t, {
            v: () => l
        });
        var s = a(80254)
          , n = a(54174)
          , r = a(48469)
          , i = a(19172);
        const o = s.ZP.once(( () => (0,
        r.R)(n.d)))
          , l = (0,
        i.f)("isZombieModeAtom").derived((e => e(o()))).build()
    }
    ,
    40412: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => o
        });
        var s = a(27378)
          , n = a(50548)
          , r = a(88868)
          , i = a(79465);
        const o = () => {
            const e = (0,
            n.TH)();
            return s.useEffect(( () => {
                e.pathname !== r.Oy && (async () => {
                    await (0,
                    i.track)("page_not_found", {}, !1),
                    await (0,
                    r.Zs)(r.Oy, !0)
                }
                )()
            }
            ), []),
            null
        }
    }
    ,
    47725: (e, t, a) => {
        "use strict";
        a.d(t, {
            ZP: () => u,
            av: () => g
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(95324)
          , o = a(65783)
          , l = a(17060)
          , c = a(79465);
        const d = ({activeClassName: e, autoFocus: t, className: a, href: s, id: d, isRoutableUrl: u=( () => !0), locationState: g, onClick: p, trackingScreen: m, trackingTarget: h, ..._}, v) => {
            var f;
            const S = r.useRef(null)
              , y = r.useMemo(( () => (0,
            i.Z)([v, S])), [v, S]);
            return (0,
            l.Z)({
                disabled: !d,
                id: d,
                offset: -100
            }),
            r.useEffect(( () => {
                var e;
                t && (null === (e = S.current) || void 0 === e || e.focus())
            }
            ), [t]),
            "_blank" === (null === (f = _.target) || void 0 === f ? void 0 : f.toLowerCase()) && (_.rel = void 0 === _.rel || "noopener" === _.rel ? "noopener" : `${_.rel} noopener`),
            r.createElement(o.OL, {
                ..._,
                className: ({isActive: t}) => t ? n()(a, e) : a,
                onClick: e => {
                    m && h && (0,
                    c.track)("click", {
                        screen: m,
                        target: h
                    }),
                    null == p || p(e)
                }
                ,
                ref: y,
                reloadDocument: !u(s),
                state: g,
                to: s
            })
        }
          , u = r.forwardRef(d)
          , g = r.forwardRef(d)
    }
    ,
    11899: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => d
        });
        var s = a(27378)
          , n = a(30427)
          , r = a(80645)
          , i = a(42659)
          , o = a(59604)
          , l = a(18804);
        const c = n.P1(i.Mb, (e => "CN" === e.ipCountry && (0,
        o.O)("disable_avatars_cn", !1, e) || (0,
        o.O)("disable_avatars_global", !1, e)))
          , d = e => {
            const {forceNoPicture: t=!1} = e
              , a = (0,
            l.Fx)(i.dY)
              , n = (0,
            l.Fx)(c)
              , o = e.user.id === a;
            return s.createElement(r.ZP, {
                ...e,
                forceNoPicture: t || n,
                isSelf: o
            })
        }
    }
    ,
    81928: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => o
        });
        var s = a(27378)
          , n = a(47725)
          , r = a(30033)
          , i = a(79465);
        const o = ({[r.m5]: e, children: t, className: a}) => s.createElement(n.ZP, {
            className: a,
            href: "/help",
            onClick: () => {
                (0,
                i.track)("help_center_tap", {})
            }
            ,
            ...(0,
            r._q)(e)
        }, t)
    }
    ,
    22498: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => s
        });
        const s = (0,
        a(1398).ZP)(( () => Promise.all([a.e(7053), a.e(5314), a.e(5410), a.e(4265), a.e(938), a.e(6864)]).then(a.bind(a, 65047)).then((e => ({
            default: e.LottieAnimation
        })))))
    }
    ,
    56252: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => v
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(36798)
          , o = a(71814)
          , l = a(47725);
        const c = a.p + "images/28d1f7a89ba7b57d86c6c1b2e40d8f4e.svg"
          , d = a.p + "images/17db14133432ce4e82a799e760bd3e0e.svg"
          , u = a.p + "images/4a9f9204e7e5c1d3ed3b79b7b7af8568.svg"
          , g = {
            _wrap: "sknt2",
            "size-default": "_1yZgj",
            "size-compact": "_1FLLT",
            "size-icon": "EULtK",
            "size-medium": "_3nMbq",
            icon: "_1F1hW",
            text: "_3smle",
            "wrap-macaw": "L5pyk sknt2 _2ibm0",
            "wrap-snow": "_14Z2G sknt2 _1mMPW",
            "wrap-snow-always-light": "_133DB sknt2 _3-Y9x",
            "wrap-snow-solid": "_1FhLg sknt2 _1fsx9",
            "wrap-snow-solid-always-light": "wFEyN sknt2 _3MeDN"
        };
        var p = a(68903)
          , m = a(95940)
          , h = a(79465);
        const _ = ({children: e, className: t, href: a, image: s, onClick: c, size: d="default", style: u="snow"}) => r.createElement(l.ZP, {
            className: n()((0,
            o.yO)({
                variant: "macaw" === u || "snow-solid" === u || "snow-solid-always-light" === u ? "solid" : "stroke"
            }), g[`wrap-${u}`], g[`size-${d}`], t),
            href: a,
            onClick: c
        }, r.createElement(i.Z, {
            className: g.icon,
            guaranteedSafeSrc: s
        }), r.createElement("span", {
            className: g.text
        }, e))
          , v = ({type: e, via: t, ...a}) => {
            switch (r.useEffect(( () => {
                t && (0,
                h.track)("web_to_app_store_load", {
                    via: t
                })
            }
            ), []),
            e) {
            case "apple":
                return r.createElement(_, {
                    image: d,
                    ...a
                }, (0,
                m._i)(7893));
            case "china":
                return r.createElement(_, {
                    image: c,
                    ...a
                }, r.createElement("span", null, r.createElement("span", null, "下载请前往"), "360 手机助手"));
            case "google":
                return r.createElement(_, {
                    image: u,
                    ...a
                }, (0,
                m._i)(9328));
            default:
                return (0,
                p.RJ)(e),
                null
            }
        }
    }
    ,
    99961: (e, t, a) => {
        "use strict";
        a.d(t, {
            _: () => f,
            Z: () => v
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(64502)
          , o = a(63837)
          , l = a(47725);
        const c = a.p + "images/7ab97bf88f7cb74897e7b8e2acd77371.svg";
        var d = a(17833);
        const u = {
            "image-container": "_2RQkf",
            "_course-card-base": "_1IKTB",
            "_course-card": "qcdrk _1IKTB",
            "course-card-snow": "Pb9x4 qcdrk _1IKTB",
            "course-card-snow-always-light": "_1dr5q qcdrk _1IKTB",
            "course-card-transparent-always-light": "_2gY7r qcdrk _1IKTB",
            "course-card-disabled": "_10qD5",
            "course-card-header": "_2W-iU",
            "course-card-flag": "_1u85P",
            "course-card-disabled-flag": "_2H3Kk _1u85P",
            "course-card-sub-flag": "_1t5ud",
            "badge-row": "_1me_G",
            _badge: "_1o79T",
            "learning-badge-container-snow": "_3Lqga _1o79T",
            "learning-badge-container-snow-always-light": "_1XTi6 _1o79T",
            "learning-badge-container-transparent-always-light": "_2aE1V _3Lqga _1o79T",
            "learning-badge": "IKNb-",
            "_language-name": "_29k2o",
            "language-name-snow": "_3xBT6 _29k2o",
            "language-name-snow-always-light": "D4mMa _29k2o",
            "language-name-transparent-always-light": "_2_BQv _29k2o",
            "_learn-count": "_1E3L-",
            "learn-count-snow": "_2xVei _1E3L-",
            "learn-count-snow-always-light": "cUC7E _1E3L-",
            "learn-count-transparent-always-light": "rg2zM _1E3L-"
        };
        var g = a(30033)
          , p = a(67173)
          , m = a(95940)
          , h = a(67116);
        const _ = ({badge: e, className: t, flagName: a, fromLanguageId: s, headingTag: i, heading: c, interaction: d, languageId: m, selectedFromLanguageId: _, subheading: v, style: f}) => {
            const S = d ? u["course-card-flag"] : u["course-card-disabled-flag"]
              , y = m ? r.createElement(o.ZP, {
                className: S,
                name: m,
                size: 88
            }) : a ? r.createElement(o.ZP, {
                className: S,
                name: a,
                size: 88
            }) : null
              , E = "all" === _ && s && s !== h.h9 ? r.createElement(o.ZP, {
                className: u["course-card-sub-flag"],
                name: s,
                size: 88
            }) : null
              , b = r.createElement("div", {
                className: u["course-card-header"]
            }, y, E)
              , I = () => r.createElement("div", {
                className: u["image-container"]
            }, r.createElement("div", {
                className: u["badge-row"]
            }, void 0 === e ? null : r.createElement("div", {
                className: u[`learning-badge-container-${f}`]
            }, r.createElement("img", {
                className: u["learning-badge"],
                src: e
            }))), b, r.createElement(i, {
                className: u[`language-name-${f}`]
            }, c), void 0 === v ? null : r.createElement("div", {
                className: u[`learn-count-${f}`]
            }, v));
            if (d) {
                const e = {
                    className: n()(u[`course-card-${f}`], t),
                    onClick: d.onClick,
                    ...(0,
                    g._q)(p.V.LanguageCard, `language-${m}`)
                };
                return d.href ? r.createElement(l.ZP, {
                    ...e,
                    href: d.href
                }, I()) : r.createElement("button", {
                    ...e
                }, I())
            }
            return r.createElement("div", {
                className: n()(u[`course-card-${f}`], u["course-card-disabled"], t)
            }, I())
        }
          , v = ({className: e, course: t, headingTag: a="div", href: s, learning: n=!1, onSelectCourse: o, selectedFromLanguageId: l, style: u="snow"}) => {
            const g = "dark" === (0,
            i.Fg)()
              , {fromLanguageId: p, learningLanguageId: v, numLearners: f} = t
              , S = new Intl.NumberFormat(h.h9,{
                maximumSignificantDigits: 3,
                notation: "compact"
            })
              , y = (0,
            m._i)(9517, {
                num_learners: f,
                num_learners_string: S.format(f)
            })
              , E = n ? g && "snow" === u ? c : d : void 0
              , b = "en" === p && "en" === v
              , I = {
                href: s,
                onClick: o
            };
            return r.createElement(_, {
                badge: E,
                className: e,
                fromLanguageId: p,
                heading: b ? "Intermediate English" : (0,
                m._i)(154, {
                    language_name: (0,
                    h.vY)(v)
                }),
                headingTag: a,
                interaction: I,
                languageId: v,
                selectedFromLanguageId: l,
                style: u,
                subheading: y
            })
        }
          , f = ({flagName: e, courseName: t, subheading: a, headingTag: s="div", style: n="snow"}) => r.createElement(_, {
            flagName: e,
            heading: t,
            headingTag: s,
            selectedFromLanguageId: "all",
            style: n,
            subheading: a
        })
    }
    ,
    75025: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => r
        });
        var s = a(27378)
          , n = a(92883);
        const r = ({content: e}) => s.createElement(n.ql, null, s.createElement("meta", {
            content: e,
            id: "meta-description",
            name: "description"
        }), s.createElement("meta", {
            content: e,
            name: "twitter:description"
        }), s.createElement("meta", {
            content: e,
            name: "og:description"
        }))
    }
    ,
    23831: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => c
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(31542)
          , o = a(40966);
        var l = a(30033);
        const c = r.forwardRef(( ({[l.m5]: e, className: t, disablePointerEvents: a, portalToOverlays: s, secondaryOverlayType: c, style: d, ...u}, g) => {
            const p = r.createElement(o.Z, {
                ...(0,
                l._q)(e),
                className: n()("modal" === c ? "_2zxQ8" : "drawer" === c ? "SGgzF" : "_1Fnem", t),
                ref: g,
                style: a ? {
                    ...d,
                    pointerEvents: "none"
                } : d,
                ...u
            });
            return s ? (0,
            i.createPortal)(p, document.querySelector("#overlays")) : p
        }
        ))
    }
    ,
    27147: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => o
        });
        var s = a(27378)
          , n = a(1375);
        var r = a(8649)
          , i = a(79465);
        const o = ({disabled: e=!1, onClick: t, style: a}) => {
            const o = s.useRef(null)
              , [l,c] = s.useState(!1);
            return s.useEffect(( () => {
                (0,
                r.dH)()
            }
            ), []),
            (0,
            n.Z)(( () => {
                window.google && (0,
                r.EV)() && c(!0)
            }
            ), l || e ? void 0 : 10),
            s.useLayoutEffect(( () => {
                var a;
                l && !e && window.google.accounts.id.renderButton(o.current, {
                    click_listener: t,
                    width: null === (a = o.current) || void 0 === a ? void 0 : a.offsetWidth
                })
            }
            ), [l, e, t]),
            e ? null : s.createElement("div", {
                className: "_1tOsv",
                onClick: () => l ? void 0 : (0,
                i.track)("sign_in_tap", {
                    target: "google_not_loaded"
                }),
                ref: o,
                style: a
            })
        }
    }
    ,
    36011: (e, t, a) => {
        "use strict";
        a.d(t, {
            Mk: () => n,
            ZP: () => i
        });
        var s = a(27378);
        const n = s.createContext(void 0);
        class r {
            constructor() {
                this.refCallbacks = {
                    gemsInHomepage: [],
                    heartsInSession: []
                },
                this.setHeartsStatInLessonRef = e => {
                    this.heartsStatInLessonRef = e,
                    this.triggerCallbacks("heartsInSession")
                }
                ,
                this.getHeartsStatInLessonRef = () => this.heartsStatInLessonRef,
                this.setGemsHomepageRef = e => {
                    this.gemsHomepageRef = e,
                    this.triggerCallbacks("gemsInHomepage")
                }
                ,
                this.getGemsHomepageRef = () => this.gemsHomepageRef
            }
            addCallback(e, t) {
                this.refCallbacks[e].push(t)
            }
            removeCallback(e, t) {
                this.refCallbacks[e] = this.refCallbacks[e].filter((e => e !== t))
            }
            triggerCallbacks(e) {
                this.refCallbacks[e].forEach((e => e()))
            }
        }
        const i = ({children: e}) => {
            const [t] = s.useState(( () => new r));
            return s.createElement(n.Provider, {
                value: t
            }, e)
        }
    }
    ,
    53173: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i
        });
        var s = a(27378)
          , n = a(68744)
          , r = a(8765);
        const i = e => s.createElement(n.Z, {
            colors: r.D,
            ...e
        })
    }
    ,
    7334: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => p
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(80254)
          , o = a(8069)
          , l = a(47725);
        const c = {
            "single-column": "ZowLe",
            "double-column": "_20NXf",
            "ui-language-item": "_26cAT",
            "always-light": "_1l-Wg",
            "ui-language-link": "_3OsZs",
            "ui-language-flag": "_3UD0R"
        };
        var d = a(67116)
          , u = a(79465);
        const g = i.XP(d.Jl)
          , p = ({className: e, singleColumn: t, style: a, trackingScreen: s, via: i}) => r.createElement("ul", {
            className: n()(e, c[(t ? "single" : "double") + "-column"], {
                [c["always-light"]]: "always-light" === a
            })
        }, g.map((e => {
            const t = (0,
            d.l)(e);
            return r.createElement("li", {
                className: c["ui-language-item"],
                key: e
            }, r.createElement(l.ZP, {
                className: c["ui-language-link"],
                href: t,
                onClick: () => {
                    (async e => {
                        "splash" !== s && "course_picker" !== s && "courses_page" !== s && "course_splash" !== s || await (0,
                        u.track)("language_selector_tap", {
                            fromLanguage: d.h9,
                            toLanguage: e,
                            via: i
                        })
                    }
                    )(e),
                    (async () => {
                        "splash" === s && await (0,
                        u.track)("splash_tap", {
                            target: "switch_language"
                        })
                    }
                    )()
                }
            }, r.createElement(o.Z, {
                className: c["ui-language-flag"],
                lang: e,
                size: 24
            }), (0,
            d.lx)(e)))
        }
        )))
    }
    ,
    40635: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => E
        });
        var s = a(27378)
          , n = a(31542)
          , r = a(64502)
          , i = a(36666)
          , o = a(7334)
          , l = a(29531)
          , c = a(82187)
          , d = a(52761);
        const u = a.p + "images/splash/ca207386f803360434a992c33872c226.svg"
          , g = a.p + "images/splash/c6eae48dd48246c89e415b89f9e55282.svg"
          , p = a.p + "images/splash/255ee21b76e98df868332c509534e531.svg"
          , m = a.p + "images/splash/936d5abdc28aa4f6f7219f6784691930.svg"
          , h = {
            _button: "_3IYFo _2Rt1l",
            "button-hare": "_3QcXd _3IYFo _2Rt1l",
            "button-hare-always-light": "_2cPiq _3IYFo _2Rt1l",
            "button-snow": "_3Sc-w _3IYFo _2Rt1l",
            "button-snow-always-light": "__UZi _3IYFo _2Rt1l",
            caret: "_3fvmi",
            inner: "_3_cnU",
            _popover: "_22xje",
            "popover-hare": "_3WIIs _22xje",
            "popover-snow": "_33Vhe _22xje",
            "popover-hare-always-light": "_25fsq",
            "popover-snow-always-light": "_2XkMa"
        };
        var _ = a(4368)
          , v = a(68903)
          , f = a(95940)
          , S = a(67116);
        const y = parseFloat(_.Z["margin-popover"]) + parseFloat(_.Z["margin-popover-text"])
          , E = ({className: e, trackingScreen: t, style: a="snow"}) => {
            const [E,b] = s.useState(!1)
              , I = (0,
            l.f)({
                modifiers: [{
                    name: "offset",
                    options: {
                        offset: [0, y]
                    }
                }],
                placement: "bottom-end"
            })
              , w = "dark" === (0,
            r.Fg)()
              , k = "splash" === t ? "splash" : "course_picker" === t ? "splash_course_picker" : "courses_page" === t ? "courses_logged_out_top_bar" : "course_splash" === t ? "course_splash" : void 0;
            return s.createElement(c.Z, {
                className: e,
                customOffset: y,
                isOpen: E,
                onClose: () => b(!1),
                onOpen: () => b(!0),
                onToggle: () => b(!E),
                popoverState: I.props.state,
                ref: I.setElementRef
            }, s.createElement(i.Z, {
                className: h[`button-${a}`]
            }, s.createElement("span", null, (0,
            f._i)(18889), " ", (0,
            f._i)(154, {
                language_name: (0,
                S.vY)(S.h9)
            })), s.createElement("img", {
                alt: "",
                className: h.caret,
                src: ( () => {
                    switch (a) {
                    case "hare":
                        return w ? u : g;
                    case "hare-always-light":
                        return g;
                    case "snow":
                        return w ? p : m;
                    case "snow-always-light":
                        return m;
                    default:
                        return void (0,
                        v.RJ)(a)
                    }
                }
                )()
            })), E ? (0,
            n.createPortal)(s.createElement(d.Z, {
                className: h[`popover-${a}`],
                innerClassName: h.inner,
                onRequestClose: () => b(!1),
                popperProps: I.props,
                ref: I.setPopoverRef,
                stemContainerRef: I.setArrowRef,
                zIndex: parseInt(_.Z["z-index-popover"], 10)
            }, s.createElement(o.Z, {
                singleColumn: !1,
                style: "hare-always-light" === a || "snow-always-light" === a ? "always-light" : void 0,
                trackingScreen: t,
                via: k
            })), document.querySelector("#overlays")) : null)
        }
    }
    ,
    44451: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => o
        });
        var s = a(27378);
        const n = class {
            constructor(e, {resetEvery: t, slowFrameThreshold: a}) {
                this.isObserving = !1,
                this.slowFrames = 0,
                this.slowFramesDuration = 0,
                this.totalDuration = 0,
                this.totalFrames = 0,
                this.disconnect = () => {
                    void 0 !== this.requestAnimationFrameId && (cancelAnimationFrame(this.requestAnimationFrameId),
                    this.requestAnimationFrameId = void 0),
                    this.isObserving = !1
                }
                ,
                this.flush = () => {
                    this.report(),
                    this.reset()
                }
                ,
                this.observe = () => {
                    this.isObserving = !0,
                    this.lastFrame = void 0,
                    this.requestFrame()
                }
                ,
                this.frame = e => {
                    var t;
                    this.requestAnimationFrameId = void 0;
                    const a = this.lastFrame ? Math.min(e - this.lastFrame, 1e4) : void 0;
                    this.lastFrame = e,
                    void 0 !== a && (this.slowestFrame = Math.max(null !== (t = this.slowestFrame) && void 0 !== t ? t : 0, a),
                    this.totalDuration += a,
                    this.totalFrames++,
                    a >= this.slowFrameThreshold && (this.slowFrames++,
                    this.slowFramesDuration += a),
                    void 0 !== this.resetEvery && this.totalDuration >= this.resetEvery && this.flush()),
                    this.requestFrame()
                }
                ,
                this.report = () => {
                    void 0 !== this.slowestFrame && this.callback({
                        slowFrames: this.slowFrames,
                        slowFramesDuration: this.slowFramesDuration,
                        slowestFrame: this.slowestFrame,
                        totalDuration: this.totalDuration,
                        totalFrames: this.totalFrames
                    })
                }
                ,
                this.requestFrame = () => {
                    this.isObserving && void 0 === this.requestAnimationFrameId && (this.requestAnimationFrameId = requestAnimationFrame(this.frame))
                }
                ,
                this.reset = () => {
                    this.lastFrame = void 0,
                    this.slowFrames = 0,
                    this.slowFramesDuration = 0,
                    this.slowestFrame = void 0,
                    this.totalDuration = 0,
                    this.totalFrames = 0
                }
                ,
                this.callback = e,
                this.resetEvery = t,
                this.slowFrameThreshold = a
            }
        }
        ;
        var r = a(59604)
          , i = a(79465);
        const o = e => {
            const t = (0,
            r.Z)("web_frame_metrics_sampling_rate", 0)
              , a = (0,
            r.Z)("web_frame_metrics_slow_frame_threshold", Math.ceil(1e3 / 60));
            s.useEffect(( () => {
                if (Math.random() < t) {
                    const s = new n((s => {
                        e ? (0,
                        i.track)("app_performance_frames", {
                            sampling_rate: t,
                            slow_frame_count: s.slowFrames,
                            slow_frame_duration_total: Math.round(s.slowFramesDuration),
                            slow_frame_max_duration: s.slowestFrame >= a ? Math.round(s.slowestFrame) : void 0,
                            slow_frame_session_duration: Math.round(s.totalDuration),
                            slow_frame_session_name: e,
                            slow_frame_threshold: a,
                            total_frame_count: s.totalFrames
                        }) : (0,
                        i.track)("app_performance_frames_aggregated", {
                            sampling_rate: t,
                            slow_frame_count_agg: s.slowFrames,
                            slow_frame_duration_total_agg: Math.round(s.slowFramesDuration),
                            slow_frame_max_duration_agg: s.slowestFrame >= a ? Math.round(s.slowestFrame) : void 0,
                            slow_frame_session_duration_agg: Math.round(s.totalDuration),
                            slow_frame_threshold: a,
                            total_frame_count_agg: s.totalFrames
                        })
                    }
                    ),{
                        resetEvery: 36e5,
                        slowFrameThreshold: a
                    })
                      , r = () => {
                        "hidden" === document.visibilityState ? (s.disconnect(),
                        s.flush()) : s.observe()
                    }
                    ;
                    return document.addEventListener("visibilitychange", r),
                    r(),
                    () => {
                        document.removeEventListener("visibilitychange", r),
                        s.disconnect(),
                        s.flush()
                    }
                }
            }
            ), [])
        }
    }
    ,
    31801: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => r
        });
        var s = a(27378);
        var n = a(10391);
        const r = e => {
            const [t,a] = s.useState()
              , r = ( (e, t) => {
                const a = s.useRef()
                  , n = s.useRef(null)
                  , r = s.useRef();
                return s.useLayoutEffect(( () => {
                    a.current = e
                }
                )),
                s.useLayoutEffect(( () => {
                    const e = new IntersectionObserver((e => {
                        var t;
                        return null === (t = a.current) || void 0 === t ? void 0 : t.call(a, e[0])
                    }
                    ),t);
                    return n.current && e.observe(n.current),
                    r.current = e,
                    () => e.disconnect()
                }
                ), [null == t ? void 0 : t.root, null == t ? void 0 : t.rootMargin]),
                s.useCallback((e => {
                    var t, a;
                    n.current && (null === (t = r.current) || void 0 === t || t.unobserve(n.current)),
                    e && (null === (a = r.current) || void 0 === a || a.observe(e)),
                    n.current = e
                }
                ), [])
            }
            )((e => a(e.isIntersecting)), e)
              , i = s.useRef(null);
            return [t, s.useCallback((t => {
                null == t ? a(void 0) : null === i.current && (t => {
                    var s;
                    const r = (0,
                    n.jL)(null == e ? void 0 : e.rootMargin)
                      , i = (0,
                    n.iY)((0,
                    n.tW)(null !== (s = null == e ? void 0 : e.root) && void 0 !== s ? s : null), r)
                      , o = t.getBoundingClientRect()
                      , l = (0,
                    n.mH)(i, o);
                    a(void 0 !== l)
                }
                )(t),
                r(t),
                i.current = t
            }
            ), [])]
        }
    }
    ,
    69755: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => n
        });
        var s = a(73790);
        const n = () => (0,
        s.Z)() > 0
    }
    ,
    58034: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i,
            y: () => r
        });
        var s = a(27378)
          , n = a(18804);
        const r = async () => {
            try {
                return (await navigator.permissions.query({
                    name: "microphone"
                })).state
            } catch {
                return "prompt"
            }
        }
          , i = () => {
            const e = (0,
            n.tX)();
            s.useEffect(( () => {
                let t = !1;
                return (async () => {
                    const a = await r();
                    t || e({
                        type: "MICROPHONE_PERMISSION",
                        value: a
                    })
                }
                )(),
                () => {
                    t = !0
                }
            }
            ), [])
        }
    }
    ,
    15746: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i
        });
        var s = a(42659)
          , n = a(70220)
          , r = a(18804);
        const i = () => (0,
        r.Fx)((e => (0,
        s.Lm)(e) && !e.user.animationEnabled)) || n.H
    }
    ,
    73790: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => r
        });
        var s = a(27378)
          , n = a(3731);
        const r = () => {
            const [e,t] = s.useState(( () => n.O.y));
            return s.useLayoutEffect(( () => {
                const e = () => t(n.O.y);
                return n.O.addEventListener("scroll", e),
                () => {
                    n.O.removeEventListener("scroll", e)
                }
            }
            ), []),
            e
        }
    }
    ,
    17060: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i
        });
        var s = a(27378)
          , n = a(3731);
        let r = !1;
        const i = ({disabled: e, id: t, offset: a=0}={}) => {
            s.useEffect(( () => {
                if (!e && !r && window.location.hash.length > 1) {
                    const e = window.location.hash.slice(1);
                    if (t && e !== t)
                        return;
                    const s = document.getElementById(e);
                    s && (n.O.scrollTo(0, n.O.y + s.getBoundingClientRect().top + a),
                    r = !0)
                }
            }
            ), [])
        }
    }
    ,
    44780: (e, t, a) => {
        "use strict";
        a.d(t, {
            Ue: () => U,
            ZP: () => V,
            gs: () => M
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(8069)
          , o = a(36666)
          , l = a(11899)
          , c = a(42659);
        const d = a.p + "images/leagues/5642e1e72813a88e8973b551a2004c7f.svg"
          , u = a.p + "images/leagues/f12703218fc80de76a63e650726f742e.svg";
        var g = a(78466);
        const p = a.p + "images/leagues/9fadb349c2ece257386a0e576359c867.svg"
          , m = a.p + "images/leagues/a8e5c18e80054228b2c61168846ff643.svg"
          , h = a.p + "images/leagues/6b8a8db5ac7f847e7e87efe97c8b451a.svg"
          , _ = a.p + "images/leagues/535fc27de224cc7d311dbb5de4f33be6.svg"
          , v = a.p + "images/leagues/2ceb401cae52712705b66a77df83ce40.svg"
          , f = a.p + "images/leagues/beb0df263d0f696bc7095d56b448ca78.svg"
          , S = a.p + "images/leagues/573de2bc90b2499eeb2b3738cff90133.svg"
          , y = a.p + "images/leagues/6df6337370e45c1b9a5029e78211d114.svg"
          , E = a.p + "images/leagues/a35f1db4398fd29e66f1abc33a0d11a2.svg"
          , b = a.p + "images/leagues/2439bac00452e99ba7bf6a7ed0b04196.svg"
          , I = a.p + "images/leagues/22df4cb957e6cf2d7198b6e5449a342e.svg"
          , w = {
            "active-dot": "_2yc73",
            "main-content": "_2LvZa",
            base: "_2R_e4",
            "base-blue": "_3kHdq _2R_e4",
            "base-green": "_2dLgE _2R_e4",
            "base-purple": "_2zS3T _2R_e4",
            "base-large": "_3mRSn _2R_e4",
            "base-green-large": "_3YIae _3mRSn _2R_e4",
            "base-purple-large": "_5V3uJ _3mRSn _2R_e4",
            img: "_m6h6",
            "img-large": "QRO37",
            placeholder: "_1ZPDZ",
            "placeholder-mobile": "_2nB8S",
            "img-green": "_23gzy",
            "img-green-large": "_2XrTN",
            "flag-img": "_1cxQk",
            "flag-img-large": "_2hLBo",
            "button-base": "_2FxcQ",
            "button-gray": "_5Keb0 _2FxcQ",
            "button-active-gray": "_25saE _2FxcQ",
            "button-green": "_3cwVc _2FxcQ",
            "button-active-green": "_333Yq _3cwVc _2FxcQ",
            "button-purple": "_39lxK _2FxcQ",
            "button-active-purple": "mHYBG _39lxK _2FxcQ",
            "button-img": "_3-Vxu",
            set: "_2LYFC",
            "panel-avatar": "ZgBN6",
            "drawer-avatar": "_3pPG3 ZgBN6",
            "set-reaction-animation": "_2Ubs8",
            "scale-up-down": "lIsSW",
            transparent: "Y3mVB"
        };
        var k = a(68903)
          , T = a(28818)
          , C = a(87443)
          , R = a(67116)
          , L = a(87471)
          , P = a(18804);
        const A = R.Dz.map((e => `FLAG,${e}`))
          , D = e => e.slice(5)
          , O = ["NONE", "ANGRY", "SUNGLASSES", "CAT", "TROPHY_DIAMOND", "DUMPSTER_FIRE", "EYES", "FLEX", "ONE_HUNDRED", "POOP", "POPCORN", "POPPER", "TROPHY", ...A]
          , N = ["ANGRY", "TROPHY_DIAMOND", "SUNGLASSES"]
          , x = {
            ANGRY: u,
            CAT: _,
            DUMPSTER_FIRE: p,
            EYES: m,
            FLEX: h,
            ONE_HUNDRED: d,
            POOP: f,
            POPCORN: S,
            POPPER: v,
            SUNGLASSES: b,
            TROPHY: I,
            TROPHY_DIAMOND: g
        }
          , M = (0,
        k.p)(O)
          , F = (0,
        k.p)(A)
          , U = ({className: e, isEmphasizing: t=!1, isSmall: a, reaction: s, returnPlaceholder: o=!1}) => {
            const [l,c] = r.useState("NONE")
              , [d,u] = r.useState("NONE" === s ? l : s)
              , [g,p] = r.useState(!1);
            if (r.useEffect(( () => {
                "NONE" === s ? (p(!0),
                u(l)) : (p(!1),
                u(s),
                c(s))
            }
            ), [s]),
            "NONE" === s) {
                if (o)
                    return r.createElement("div", {
                        className: n()(e, a ? w["base-blue"] : w["base-large"])
                    }, r.createElement("img", {
                        className: a ? w["placeholder-mobile"] : w.placeholder,
                        src: a ? y : E
                    }));
                if ("NONE" === l)
                    return null
            }
            const m = F(d)
              , h = N.includes(d)
              , _ = ( () => {
                if (!m)
                    return h ? a ? w["img-green"] : w["img-green-large"] : a ? w.img : w["img-large"]
            }
            )()
              , v = m ? a ? w["flag-img"] : w["flag-img-large"] : void 0
              , f = ( () => {
                if (h) {
                    const e = [s, l].includes("TROPHY_DIAMOND") ? "purple" : "green";
                    return a ? w[`base-${e}`] : w[`base-${e}-large`]
                }
                return a ? w.base : w["base-large"]
            }
            )()
              , S = n()(e, f, t ? w["set-reaction-animation"] : void 0, g ? w.transparent : void 0);
            return r.createElement("div", {
                className: S
            }, m ? r.createElement(i.Z, {
                className: v,
                lang: D(d),
                size: a ? 22 : 38
            }) : r.createElement("img", {
                className: _,
                src: x[d]
            }))
        }
          , H = (e, t) => {
            if (!O.includes(e))
                return w["button-gray"];
            if (N.includes(e)) {
                const a = "TROPHY_DIAMOND" === e ? "purple" : "green";
                return e === t ? w[`button-active-${a}`] : w[`button-${a}`]
            }
            return e === t ? w["button-active-gray"] : w["button-gray"]
        }
          , G = ({activeReaction: e, onReactionClick: t, reactions: a}) => r.createElement("div", {
            className: w.set,
            style: {
                gridTemplateColumns: `repeat(${a.length}, 1fr)`
            }
        }, a.map(( (a, s) => r.createElement(o.Z, {
            className: H(a, e),
            key: s,
            onClick: () => t(a),
            variant: "stroke"
        }, F(a) ? r.createElement(i.Z, {
            lang: D(a),
            size: 38
        }) : r.createElement("img", {
            className: w["button-img"],
            src: x[a]
        })))))
          , V = ({displayedReaction: e, isEmphasizing: t, onReactionClick: a, type: s}) => {
            var n, i;
            const o = (0,
            P.Fx)(c.Mb)
              , d = (0,
            P.Fx)(c.Oz)
              , u = (0,
            P.Fx)(c.np)
              , g = "FLAG,".concat(d.learningLanguage)
              , p = (0,
            T.tj)(C.gz)
              , m = (null !== (n = null == p ? void 0 : p.numWins) && void 0 !== n ? n : 0) > 0
              , h = m ? ["TROPHY_DIAMOND", "SUNGLASSES", "POPPER", "FLEX", "EYES", "POPCORN"] : ["SUNGLASSES", "POPPER", "FLEX", "EYES", "POPCORN", g]
              , _ = m ? ["ANGRY", "ONE_HUNDRED", "POOP", g, "DUMPSTER_FIRE", "CAT"] : ["ANGRY", "ONE_HUNDRED", "POOP", "TROPHY", "DUMPSTER_FIRE", "CAT"];
            return r.createElement("div", {
                className: w["main-content"]
            }, r.createElement("div", {
                className: "panel" === s ? w["panel-avatar"] : w["drawer-avatar"]
            }, r.createElement(l.Z, {
                displaySize: 80,
                forceNoPicture: (0,
                L.d0)(u, o),
                size: "xxlarge",
                user: {
                    id: u.id,
                    name: null !== (i = u.name) && void 0 !== i ? i : u.username,
                    picture: u.picture
                }
            }), r.createElement(U, {
                isEmphasizing: !1,
                isSmall: !1,
                reaction: "NONE",
                returnPlaceholder: !0
            }), r.createElement(U, {
                isEmphasizing: t,
                isSmall: !1,
                reaction: e
            }), r.createElement("span", {
                className: w["active-dot"]
            })), r.createElement(G, {
                activeReaction: e,
                onReactionClick: a,
                reactions: h
            }), r.createElement(G, {
                activeReaction: e,
                onReactionClick: a,
                reactions: _
            }))
        }
    }
    ,
    98071: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => l
        });
        var s = a(27378)
          , n = a(59815)
          , r = a(58576)
          , i = a(79465);
        class o extends s.Component {
            constructor() {
                super(...arguments),
                this.state = {
                    hasError: !1
                }
            }
            static getDerivedStateFromError() {
                return {
                    hasError: !0
                }
            }
            componentDidCatch(e, t) {
                if (!(0,
                n.Wp)(e)) {
                    const a = (0,
                    r.vU)(e, {
                        data: t
                    });
                    (0,
                    i.track)("app_crash", {
                        crash_message: e.message,
                        crash_type: e.name,
                        sentry_event_id: a
                    })
                }
            }
            render() {
                return this.state.hasError ? null : s.createElement(s.Suspense, {
                    fallback: null
                }, this.props.children)
            }
        }
        const l = o
    }
    ,
    31809: (e, t, a) => {
        "use strict";
        a.d(t, {
            J: () => C,
            Z: () => L
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(31542)
          , o = a(2580)
          , l = a(63169)
          , c = a(91374)
          , d = a(64502)
          , u = a(42659)
          , g = a(95649)
          , p = a(42004)
          , m = a(89090)
          , h = a(45633);
        const _ = {
            "style-super": "_3I9hN",
            "style-white": "FohH5",
            container: "_3Mzt6",
            "container-secondary-modal": "lagNb",
            _content: "_3fFQQ",
            content: "_1yFTM _3fFQQ",
            "content-fullscreen": "H-DGD _3fFQQ",
            close: "rXoiv",
            "close-fullscreen": "_1sSQy",
            "close-top-left": "_3CQt_ rXoiv",
            "close-top-left-with-header": "_2csbn _3CQt_ rXoiv",
            "close-back": "_2bBzy _3CQt_ rXoiv"
        };
        var v = a(3731)
          , f = a(9979)
          , S = a(50498)
          , y = a(30033)
          , E = a(67173)
          , b = a(68903)
          , I = a(26506)
          , w = a(35160)
          , k = a(18804);
        const T = ({closeStyle: e, isDark: t, isFullscreen: a, onDismiss: s}) => {
            const n = {
                back: _["close-back"],
                default: _.close,
                fullscreen: _["close-fullscreen"],
                "top-left": _["close-top-left"],
                "top-left-with-header": _["close-top-left-with-header"]
            }
              , i = a ? n.fullscreen : n[null != e ? e : "default"];
            return r.createElement("div", {
                ...(0,
                y._q)("back" === e ? E.V.BackArrow : E.V.CloseButton),
                className: i,
                onClick: s
            }, r.createElement("img", {
                src: "back" === e ? t ? g : p : t ? m : h
            }))
        }
          , C = ({animateOnMount: e, children: t, className: a, closeStyle: s, dir: i, forceDisableFocusLock: g, isFullscreen: p, isSecondaryModal: m, onDismiss: h, restoreScrollPosition: f, visibility: S}) => {
            const y = (0,
            k.Fx)(u.Sg)
              , E = (0,
            k.Fx)(u.ep) && !m
              , b = r.useRef(null)
              , w = r.useRef(null);
            (0,
            l.Z)({
                disabled: "visible" !== S || y || E || p,
                onClick: h,
                ref: w
            }),
            (0,
            v.H)("invisible" !== S, f),
            (0,
            c.Z)({
                animateOnMount: e,
                isVisible: "visible" === S,
                ref: b
            });
            const C = "dark" === (0,
            d.Fg)();
            return r.useEffect(( () => {
                if (y || "visible" !== S || E)
                    return;
                const e = e => {
                    "Escape" === e.key && h()
                }
                ;
                return I.U.disableListeners(),
                I._.disableListeners(),
                document.addEventListener("keydown", e),
                () => {
                    I.U.enableListeners(),
                    I._.enableListeners(),
                    document.removeEventListener("keydown", e)
                }
            }
            ), [y, E, h, S]),
            r.createElement(o.ZP, {
                autoFocus: !1,
                disabled: g,
                whiteList: e => "com-1password-menu" !== e.localName
            }, r.createElement("div", {
                className: m ? _["container-secondary-modal"] : _.container,
                ref: b
            }, r.createElement("div", {
                className: n()(_["content" + (p ? "-fullscreen" : "")], a),
                dir: i,
                ref: w
            }, "hidden" === s ? null : r.createElement(T, {
                closeStyle: s,
                isDark: C,
                isFullscreen: p,
                onDismiss: h
            }), t)))
        }
          , R = e => {
            const {animation: t, isFullscreen: a, isVisible: s} = e
              , n = (0,
            k.Fx)((e => e.ui.modalShouldWaitForOverlay))
              , [i,o] = r.useState(s ? "visible" : "invisible");
            return r.useEffect(( () => {
                let e = !1;
                return s ? (async () => {
                    switch (i) {
                    case "before-fade-in":
                        await (0,
                        f.Gg)(),
                        e || o("overlay");
                        break;
                    case "fading-out":
                        o("overlay");
                        break;
                    case "invisible":
                        o("before-fade-in");
                        break;
                    case "overlay":
                        "overlay-then-modal" === t && !a && n && await (0,
                        S._v)(f.nN),
                        e || o("visible");
                        break;
                    case "visible":
                        break;
                    default:
                        (0,
                        b.RJ)(i)
                    }
                }
                )() : (async () => {
                    switch (i) {
                    case "before-fade-in":
                        o("invisible");
                        break;
                    case "fading-out":
                        await (0,
                        S._v)(f.nN),
                        e || o("invisible");
                        break;
                    case "invisible":
                        break;
                    case "overlay":
                    case "visible":
                        o("fading-out");
                        break;
                    default:
                        (0,
                        b.RJ)(i)
                    }
                }
                )(),
                () => {
                    e = !0
                }
            }
            ), [a, s, i]),
            "invisible" === i ? null : r.createElement(C, {
                ...e,
                visibility: i
            })
        }
          , L = ({animateOnMount: e=!1, animation: t="overlay-then-modal", children: a, className: s, closeStyle: o, customStyle: l=w.W.White, dir: c, isFullscreen: d=!1, isSecondaryModal: u=!1, modalName: g, onDismiss: p}) => {
            var m;
            const h = (0,
            k.tX)()
              , v = (0,
            k.Fx)((e => e.ui.isModalReallyOpen))
              , f = (0,
            k.Fx)((e => e.ui.modal))
              , S = (0,
            k.Fx)((e => e.ui.secondaryModal))
              , y = (0,
            k.CC)()
              , [E,b] = r.useState()
              , I = (null == f ? void 0 : f.name) === g || u && (null == S ? void 0 : S.name) === g
              , T = u ? S : f;
            I && T !== E && b(T),
            r.useLayoutEffect(( () => (h({
                name: g,
                type: "MODAL_MOUNTED"
            }),
            () => {
                h({
                    name: g,
                    type: "MODAL_UNMOUNTED"
                })
            }
            )), []),
            r.useEffect(( () => {
                if (I)
                    return v || h({
                        type: "MODAL_OPENED"
                    }),
                    () => {
                        var e;
                        void 0 === (null === (e = y.getState().ui.modal) || void 0 === e ? void 0 : e.name) && h({
                            type: "MODAL_CLOSED"
                        })
                    }
            }
            ), [I]);
            const C = () => {
                p && E ? p({
                    modalOptions: E
                }) : h(u ? {
                    options: void 0,
                    type: "TOGGLE_SECONDARY_MODAL"
                } : {
                    options: void 0,
                    type: "TOGGLE_MODAL"
                })
            }
            ;
            return (0,
            i.createPortal)(r.createElement(R, {
                animateOnMount: e,
                animation: t,
                className: n()(_[l], s),
                closeStyle: o,
                dir: c,
                isFullscreen: d,
                isSecondaryModal: u,
                isVisible: I,
                onDismiss: C,
                restoreScrollPosition: null === (m = null == E ? void 0 : E.restoreScrollPosition) || void 0 === m || m
            }, E ? a({
                modalOptions: E,
                onDismiss: C
            }) : null), document.querySelector("#overlays"))
        }
    }
    ,
    22772: (e, t, a) => {
        "use strict";
        a.r(t),
        a.d(t, {
            default: () => S,
            getRemainingSessions: () => v
        });
        var s = a(27378)
          , n = a(86155)
          , r = a(42659)
          , i = a(54174)
          , o = a(93540)
          , l = a(68903)
          , c = a(60752)
          , d = a(58576)
          , u = a(23275)
          , g = a(89260)
          , p = a(80820)
          , m = a(18804)
          , h = a(79465)
          , _ = a(64591);
        function *v(e, t) {
            for (t || (t = {
                level: e[0].levels[0],
                levelIndex: 0,
                unitIndex: 0,
                unitNumber: 1
            }); t; ) {
                if ("unit_test" === t.level.state)
                    return;
                for (let e = t.level.finishedSessions; e < t.level.totalSessions; e++)
                    yield(0,
                    _.$f)(t, ["level"], {
                        finishedSessions: e,
                        state: "active"
                    });
                t = (0,
                u.OE)(e, t)
            }
        }
        const f = async (e, t, a, s, n, r) => {
            const i = {
                pathLevelNumber: (e.levelIndex + 1).toString(),
                pathUnitNumber: (e.unitIndex + 1).toString(),
                type: "path-level"
            };
            return (0,
            g.u4)({
                dispatch: t.dispatch.bind(t),
                getState: t.getState.bind(t),
                includeFreeform: a,
                includeListening: s,
                includeSmartTips: n,
                includeSpeaking: r,
                levelData: e,
                params: i,
                sessionWillStartRightAway: !1
            })
        }
          , S = () => {
            const e = (0,
            m.Fx)(r.$4)
              , t = (0,
            m.Fx)(r.Xr)
              , a = (0,
            m.Fx)(i.d)
              , u = (0,
            m.CC)()
              , {includeListening: g, includeSpeaking: S} = (0,
            n.ZP)();
            return s.useEffect(( () => {
                t && !a && (async () => {
                    try {
                        await (async (e, t, a, s, n) => {
                            const r = e.getState()
                              , i = (0,
                            o.cb)(r)
                              , u = (0,
                            o.HF)(r);
                            if (!i || !u)
                                return;
                            const g = await (0,
                            c.b)()
                              , [m,S] = ( (e, t) => {
                                const a = [];
                                let s = !1;
                                for (const n of v(e, t))
                                    if ((0,
                                    p.tr)(n.level)) {
                                        if ("listen" === n.level.pathLevelClientData.mode ? a.push([n, (0,
                                        _.$f)(n, ["level", "pathLevelClientData"], {
                                            mode: "read"
                                        })]) : a.push([n]),
                                        8 === a.length)
                                            break
                                    } else if ("chest" === n.level.type) {
                                        if (s)
                                            return a.pop(),
                                            [a.flat(), !0];
                                        s = !0
                                    }
                                return [a.flat(), !1]
                            }
                            )(u, i)
                              , y = m.map((async n => {
                                try {
                                    const r = await f(n, e, s && "story" === n.level.type, t, s && "story" !== n.level.type, a);
                                    switch (r.cacheType) {
                                    case "error":
                                        return "error";
                                    case "existing":
                                        return !1;
                                    case "fresh":
                                        return !0;
                                    case void 0:
                                        return (0,
                                        d.Kp)("Tried to prefetch a session that isn't eligible for caching", {
                                            data: n
                                        }),
                                        "error";
                                    default:
                                        return (0,
                                        l.RJ)(r.cacheType),
                                        !1
                                    }
                                } catch (e) {
                                    return (0,
                                    d.Kp)(e),
                                    "error"
                                }
                            }
                            ))
                              , E = await Promise.all(y);
                            if (await (0,
                            p._x)(e),
                            await (0,
                            p.rb)(e),
                            Math.random() < .1) {
                                const e = E.filter((e => !0 === e)).length
                                  , t = E.filter((e => "error" === e)).length
                                  , a = (await g.getAllKeys("prefetchedSessions")).length;
                                (0,
                                h.track)("prefetch_sessions_end", {
                                    download_time_seconds: Math.round((window.performance.now() - n) / 1e3),
                                    num_sessions_downloaded: e,
                                    num_sessions_in_cache: a,
                                    num_sessions_remaining: t,
                                    prefetch_end_reason: t > 0 ? "error" : S ? "multiple_chests" : e > 0 ? "finished" : "nothing_to_download"
                                })
                            }
                        }
                        )(u, g, S, e, window.performance.now())
                    } catch (e) {
                        (0,
                        d.Kp)(e)
                    }
                }
                )()
            }
            ), [g, S, e, t, a]),
            null
        }
    }
    ,
    77888: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i
        });
        var s = a(42659)
          , n = a(21791)
          , r = a(18804);
        const i = () => {
            const e = (0,
            r.Fx)(s.Oz);
            return (0,
            r.Fx)((t => void 0 === e ? 0 : (0,
            n.L)(t)))
        }
    }
    ,
    29531: (e, t, a) => {
        "use strict";
        a.d(t, {
            R: () => o,
            f: () => d
        });
        var s = a(27378)
          , n = a(97276)
          , r = a(4368)
          , i = a(92209);
        const o = "bottom"
          , l = i.B
          , c = e => [{
            name: "arrow",
            options: {
                element: e,
                padding: parseFloat(r.Z["margin-popover-stem"])
            }
        }, {
            name: "flip",
            options: {
                padding: l
            }
        }, {
            name: "offset",
            options: {
                offset: [0, parseFloat(r.Z["margin-popover"])]
            }
        }, {
            name: "preventOverflow",
            options: {
                padding: l
            }
        }]
          , d = ({modifiers: e=[], ...t}={}) => {
            var a, r;
            const [i,l] = s.useState(null)
              , [d,u] = s.useState(null)
              , [g,p] = s.useState(null)
              , m = (0,
            n.D)(d, g, {
                modifiers: [...c(null != i ? i : void 0), ...e],
                ...t
            });
            return {
                currentPlacement: null !== (r = null === (a = m.state) || void 0 === a ? void 0 : a.placement) && void 0 !== r ? r : o,
                props: m,
                setArrowRef: l,
                setElementRef: u,
                setPopoverRef: p
            }
        }
    }
    ,
    82187: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => d
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(55160)
          , o = a(29531);
        const l = {
            _after: "j0sMI",
            wrap: "tFegI",
            "wrap-open-down": "_2YMBW j0sMI tFegI",
            "wrap-open-left": "RgvWC j0sMI tFegI",
            "wrap-open-right": "_27RAb j0sMI tFegI",
            "wrap-open-up": "_1156w j0sMI tFegI"
        }
          , c = e => null !== e && "direction"in e
          , d = r.forwardRef(( ({children: e, className: t, customOffset: a, isOpen: s, onClose: d, onOpen: u, onToggle: g, popoverState: p, tabIndex: m, ...h}, _) => {
            var v;
            const f = c(p) ? p.direction : (0,
            i.h)(null !== (v = null == p ? void 0 : p.placement) && void 0 !== v ? v : o.R)
              , S = () => c(p) ? p.ref.current : null == p ? void 0 : p.elements.popper;
            return r.createElement("div", {
                className: n()(l["wrap" + (s ? `-open-${f}` : "")], t),
                onClick: e => {
                    var t;
                    (null === (t = S()) || void 0 === t ? void 0 : t.contains(e.target)) || g()
                }
                ,
                onKeyDown: e => {
                    ["Enter", " "].includes(e.key) && (g(),
                    e.preventDefault())
                }
                ,
                onMouseEnter: u,
                onMouseLeave: d,
                onMouseUp: e => {
                    e.stopPropagation()
                }
                ,
                onTouchEnd: e => {
                    var t;
                    (null === (t = S()) || void 0 === t ? void 0 : t.contains(e.target)) || (e.preventDefault(),
                    g())
                }
                ,
                ref: _,
                style: void 0 !== a && a >= 0 ? {
                    "--offset": `${a}px`
                } : void 0,
                tabIndex: null != m ? m : 0,
                ...h
            }, e)
        }
        ))
    }
    ,
    52761: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => l
        });
        var s = a(27378)
          , n = a(55160)
          , r = a(29531)
          , i = a(95940);
        const o = e => "placement"in e
          , l = s.forwardRef(( ({dir: e, popperProps: t, style: a, ...l}, c) => {
            var d, u;
            let g = (0,
            n.h)(o(t) ? t.placement : null !== (u = null === (d = t.state) || void 0 === d ? void 0 : d.placement) && void 0 !== u ? u : r.R);
            const p = "left" === g ? 90 : "right" === g ? -90 : "up" === g ? 180 : 0
              , m = {
                margin: 0,
                ...o(t) ? t.arrowProps.style : t.styles.arrow
            };
            m.transform && (m.transform = `${m.transform} rotate(${p}deg)`);
            const h = {
                margin: 0,
                ...o(t) ? t.style : t.styles.popper,
                ...a
            };
            return i.lw && ("left" === g ? g = "right" : "right" === g && (g = "left")),
            s.createElement(n.Z, {
                ...l,
                direction: g,
                manualPositioning: !0,
                ref: c,
                stemContainerStyle: m,
                style: h
            })
        }
        ))
    }
    ,
    33467: (e, t, a) => {
        "use strict";
        var s;
        a.d(t, {
            K: () => s
        }),
        function(e) {
            e[e.Loading = 0] = "Loading",
            e[e.Login = 1] = "Login",
            e[e.Mistakes = 2] = "Mistakes",
            e[e.FamilyPlanUpsell = 3] = "FamilyPlanUpsell",
            e[e.FeaturesLongScroll = 4] = "FeaturesLongScroll",
            e[e.FeaturesChecklist = 5] = "FeaturesChecklist",
            e[e.NewYearsPromoRecurringDiscount = 6] = "NewYearsPromoRecurringDiscount",
            e[e.NotificationReminder = 7] = "NotificationReminder",
            e[e.Packages = 8] = "Packages",
            e[e.BillingInfo = 9] = "BillingInfo",
            e[e.Welcome = 10] = "Welcome"
        }(s || (s = {}))
    }
    ,
    86155: (e, t, a) => {
        "use strict";
        a.d(t, {
            ZP: () => c,
            eG: () => l
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(17135)
          , i = a(68564)
          , o = a(18804);
        const l = s.P1(n.jv, n.iH, n.Jw, n.np, ( (e, t, a, s) => {
            const n = (0,
            r.Zo)()
              , o = s.enableMicrophone
              , l = s.enableSpeaker
              , c = e.listenDisabledUntil
              , d = a.microphonePermission
              , u = e.speakDisabledUntil
              , g = l && c < n
              , p = u >= n
              , m = o && u < n
              , h = ["ar", "ca", "cs", "cy", "da", "de", "el", "en", "eo", "es", "fi", "fr", "ga", "gd", "gn", "he", "hi", "ht", "hu", "hv", "id", "it", "ja", "la", "nl-NL", "no-BO", "nv", "pl", "pt", "ro", "ru", "sv", "sw", "tlh", "tr", "uk", "vi", "zh", "zu"].includes(t)
              , _ = ["de", "en", "es", "fr", "it", "pt", "nl-NL", "da", "sv", "tr", "no-BO", "uk", "ru"].includes(t) && "denied" !== d && i.c;
            return {
                includeListening: g && h,
                includeSpeaking: m && _,
                isListenEnabled: g,
                isListenSupported: h,
                isSpeakDisabledTemporarily: p,
                isSpeakEnabled: m,
                isSpeakSupported: _,
                microphonePermission: d
            }
        }
        ))
          , c = () => {
            const e = (0,
            o.tX)();
            return {
                ...(0,
                o.Fx)(l),
                resetListenDisabledTemporarily: () => e({
                    type: "ENABLE_LISTEN"
                }),
                resetSpeakDisabledTemporarily: () => e({
                    type: "ENABLE_SPEAK"
                })
            }
        }
    }
    ,
    47449: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => c
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(47725);
        const o = a.p + "images/china/8ac5f69a53362c09584230c85b567ef7.png";
        var l = a(80388);
        const c = ({inSplash: e}) => (0,
        l.J9)() ? r.createElement("div", {
            className: n()("_2HXBj", {
                "wjXh-": e
            })
        }, r.createElement("div", {
            className: "_1hp5D"
        }, r.createElement(i.ZP, {
            href: "http://beian.miit.gov.cn"
        }, "京ICP备14061397号-1"), r.createElement("span", null, " • "), r.createElement("img", {
            src: o
        }), r.createElement(i.ZP, {
            href: "http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010102005866"
        }, "京公网安备 11010102005866 号"))) : null
    }
    ,
    9343: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => h
        });
        var s = a(60042)
          , n = a.n(s)
          , r = a(27378)
          , i = a(80254)
          , o = a(8069)
          , l = a(47725);
        const c = "yg19_ _219j-"
          , d = "_1nZQi";
        var u = a(26886)
          , g = a(95940)
          , p = a(67116);
        const m = ["en", "es", "fr", "de", "it", "pt", "nl-NL", "ja"]
          , h = ({className: e, disabled: t, onCarouselItemClick: a, trackingScreen: s}) => {
            const h = r.useRef(null)
              , _ = r.useRef([])
              , v = r.useRef(null)
              , [f,S] = r.useState()
              , [y,E] = r.useState(0)
              , b = r.useMemo(( () => {
                var e;
                return (null !== (e = p.Jl[p.h9]) && void 0 !== e ? e : []).filter((e => !(0,
                u.It)(e, p.h9)))
            }
            ), [])
              , I = m.filter((e => b.includes(e)))
              , w = i.jj([...I, ...b])
              , k = ( () => {
                var e;
                for (let t = 0; t < w.length; t++)
                    if ((null !== (e = null == f ? void 0 : f[t - 1]) && void 0 !== e ? e : 0) >= y)
                        return t;
                return 0
            }
            )()
              , T = null == f ? void 0 : f[f.length - 1]
              , C = () => {
                var e;
                const t = null === (e = h.current) || void 0 === e ? void 0 : e.getBoundingClientRect().width;
                return void 0 === T || void 0 === t ? void 0 : Math.max(T - t, 0)
            }
              , R = e => {
                var t;
                return null !== (t = null == f ? void 0 : f[e - 1]) && void 0 !== t ? t : 0
            }
            ;
            return r.useLayoutEffect(( () => {
                var e, t;
                if (v.current) {
                    const a = v.current.getBoundingClientRect().left
                      , s = [];
                    for (let e = 1; e < _.current.length; e++) {
                        const t = _.current[e];
                        t && (s[e - 1] = t.getBoundingClientRect().left - a)
                    }
                    s[_.current.length - 1] = s[_.current.length - 2] + (null !== (t = null === (e = _.current[_.current.length - 1]) || void 0 === e ? void 0 : e.getBoundingClientRect().width) && void 0 !== t ? t : 0),
                    S(s)
                }
            }
            ), []),
            r.createElement("nav", {
                className: n()("zU2RQ", e)
            }, r.createElement("svg", {
                className: c,
                fill: "none",
                onClick: () => {
                    const e = C();
                    if (void 0 === e)
                        return;
                    const t = Math.max(R(k - 2), 0);
                    E(t < y ? t : e)
                }
                ,
                viewBox: "0 0 16 16"
            }, r.createElement("path", {
                d: "M10 2L4 8L10 14",
                stroke: "currentColor",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: "2"
            })), r.createElement("div", {
                className: "I36m9",
                ref: h
            }, r.createElement("ul", {
                className: "_399s9",
                ref: v,
                style: {
                    transform: `translateX(-${y}px)`
                }
            }, w.map(( (e, n) => {
                return r.createElement("li", {
                    key: e,
                    ref: e => _.current[n] = e
                }, (i = r.createElement(r.Fragment, null, r.createElement(o.Z, {
                    className: "_1RsYI",
                    lang: e,
                    size: 36
                }), r.createElement("span", {
                    className: "_2qfTm"
                }, (0,
                g._i)(154, {
                    language_name: (0,
                    p.vY)(e)
                }))),
                t ? r.createElement("span", {
                    className: d
                }, i) : r.createElement(l.ZP, {
                    className: d,
                    href: (0,
                    u.og)(e),
                    onClick: a,
                    trackingScreen: s,
                    trackingTarget: "flag"
                }, i)));
                var i
            }
            )))), r.createElement("svg", {
                className: c,
                fill: "none",
                onClick: () => {
                    const e = C();
                    if (void 0 === e)
                        return;
                    const t = Math.min(R(k + 2), e);
                    E(t > y ? t : 0)
                }
                ,
                viewBox: "0 0 16 16"
            }, r.createElement("path", {
                d: "M6 2L12 8L6 14",
                stroke: "currentColor",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: "2"
            })))
        }
    }
    ,
    14282: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => I
        });
        var s = a(27378)
          , n = a(47725)
          , r = a(81928);
        const i = {
            "site-map-wrap": "gd_5w",
            "site-map": "_1Nk9J",
            "column-header": "_11guX",
            column: "_3G8SN",
            spacer: "_3FzPR"
        }
          , o = {
            "width-desktop": "1080px",
            "width-tablet": "768px",
            column: "_2zjY4",
            "column-header": "_30Vi6",
            "site-map": "kWIKU"
        };
        var l = a(30033)
          , c = a(80388)
          , d = a(9677)
          , u = a(67173)
          , g = a(14263)
          , p = a(59604)
          , m = a(95940)
          , h = a(64865)
          , _ = a(88868)
          , v = a(419)
          , f = a(18804)
          , S = a(79465);
        const y = (0,
        v.Q)(window.duo.uiLanguage)
          , E = parseFloat(o["width-desktop"])
          , b = parseFloat(o["width-tablet"])
          , I = ({isRedesign: e, isSimplified: t}) => {
            const a = (0,
            f.Fx)((e => e.ui.viewportWidth))
              , v = e ? o : i
              , I = (0,
            d.l)()
              , w = (0,
            p.Z)("web_enable_b2b_page", !0)
              , k = "en" === window.duo.uiLanguage;
            s.useEffect(( () => {
                (0,
                S.track)("web_to_app_store_load", {
                    via: "site_map"
                })
            }
            ), []);
            const T = s.createElement("div", null, s.createElement("div", {
                className: v["column-header"]
            }, (0,
            m._i)(29912)), s.createElement("ul", null, s.createElement("li", null, s.createElement(n.ZP, {
                ...(0,
                l._q)(u.V.CoursesLink),
                href: "/courses"
            }, (0,
            m._i)(20631))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/info"
            }, (0,
            m._i)(17103))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/approach"
            }, (0,
            m._i)(6695))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/efficacy"
            }, (0,
            m._i)(29913))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://duolingo.com/handbook",
                isRoutableUrl: () => !1
            }, (0,
            m._i)(60710))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://research.duolingo.com"
            }, (0,
            m._i)(6746))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://careers.duolingo.com/#careers"
            }, (0,
            m._i)(5919))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://design.duolingo.com"
            }, (0,
            m._i)(29914))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://store.duolingo.com/"
            }, (0,
            m._i)(15428))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://press.duolingo.com"
            }, (0,
            m._i)(18072))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://investors.duolingo.com"
            }, (0,
            m._i)(30107))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/contact"
            }, (0,
            m._i)(23037))), "de" === window.duo.uiLanguage ? s.createElement("li", null, s.createElement(n.ZP, {
                href: "/imprint"
            }, "Impressum")) : null))
              , C = s.createElement("div", null, s.createElement("div", {
                className: v["column-header"]
            }, (0,
            m._i)(17225)), s.createElement("ul", null, s.createElement("li", null, s.createElement(n.ZP, {
                href: "/"
            }, (0,
            m._i)(23227))), (0,
            c.J9)() ? null : s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://schools.duolingo.com"
            }, (0,
            m._i)(13199))), s.createElement("li", null, s.createElement(n.ZP, {
                href: `https://englishtest.duolingo.com/${null != I ? I : ""}`
            }, "Duolingo English Test")), "en" === window.duo.uiLanguage ? s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://blog.duolingo.com/duolingo-launches-math-app"
            }, "Duolingo Math")) : null, s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://podcast.duolingo.com"
            }, (0,
            m._i)(3735))), w ? s.createElement("li", null, s.createElement(n.ZP, {
                href: "/business",
                onClick: () => (0,
                S.trackRedirection)(window.location.href, "/business", "soft")
            }, "Duolingo for Business")) : null, s.createElement("li", null, s.createElement(n.ZP, {
                href: "/super"
            }, (0,
            m._i)(36712))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/gift"
            }, (0,
            m._i)(41073))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://blog.duolingo.com/duolingo-max/"
            }, (0,
            m._i)(42060)))))
              , R = s.createElement("div", null, s.createElement("div", {
                className: v["column-header"]
            }, (0,
            m._i)(18971)), s.createElement("ul", null, s.createElement("li", null, s.createElement(n.ZP, {
                href: (0,
                h.Ir)({
                    via: "site_map"
                }),
                onClick: () => {
                    (0,
                    S.track)("web_to_app_store_tap", {
                        target: "google_or_China",
                        via: "site_map"
                    })
                }
            }, (0,
            m._i)(7946))), s.createElement("li", null, s.createElement(n.ZP, {
                href: (0,
                h.fy)({
                    via: "site_map"
                }),
                onClick: () => {
                    (0,
                    S.track)("web_to_app_store_tap", {
                        target: "apple",
                        via: "site_map"
                    })
                }
            }, (0,
            m._i)(24192)))))
              , L = s.createElement("div", null, s.createElement("div", {
                className: v["column-header"]
            }, (0,
            m._i)(29915)), s.createElement("ul", null, s.createElement("li", null, s.createElement(r.Z, {
                ...(0,
                l._q)(u.V.FaqLink)
            }, (0,
            m._i)(12338))), (0,
            c.J9)() ? null : s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://duolingoschools.zendesk.com/hc/en-us"
            }, (0,
            m._i)(6932))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://englishtest.duolingo.com/faq"
            }, (0,
            m._i)(20482, {
                test_name: "Duolingo English Test"
            }))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://status.duolingo.com/"
            }, (0,
            m._i)(12464))), "de" === window.duo.uiLanguage ? s.createElement("li", null, s.createElement(n.ZP, {
                href: g.$m
            }, (0,
            m._i)(2530))) : null))
              , P = s.createElement("div", null, s.createElement("div", {
                className: v["column-header"]
            }, (0,
            m._i)(29916)), s.createElement("ul", null, s.createElement("li", null, s.createElement(n.ZP, {
                href: "/guidelines"
            }, (0,
            m._i)(29917))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/terms"
            }, (0,
            m._i)(22838))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "/privacy"
            }, (0,
            m._i)(19704))), k ? s.createElement("li", null, s.createElement(n.ZP, {
                href: "/dnsspi"
            }, "Do Not Sell or Share My Personal Information")) : null))
              , A = s.createElement("div", null, s.createElement("div", {
                className: v["column-header"]
            }, (0,
            m._i)(16166)), s.createElement("ul", null, s.createElement("li", null, s.createElement(n.ZP, {
                href: null !== _.Ql && void 0 !== _.Ql ? _.Ql : "https://blog.duolingo.com"
            }, (0,
            m._i)(14615))), (0,
            c.J9)() ? null : s.createElement(s.Fragment, null, s.createElement("li", null, s.createElement(n.ZP, {
                href: y.instagram.link
            }, (0,
            m._i)(616))), s.createElement("li", null, s.createElement(n.ZP, {
                href: y.tiktok.link
            }, "TikTok")), s.createElement("li", null, s.createElement(n.ZP, {
                href: y.twitter.link
            }, (0,
            m._i)(5061))), s.createElement("li", null, s.createElement(n.ZP, {
                href: "https://www.youtube.com/user/duolingo"
            }, "YouTube")))));
            return e ? a >= E ? s.createElement("div", {
                className: o["site-map"]
            }, s.createElement("div", {
                className: o.column
            }, T), s.createElement("div", {
                className: o.column
            }, C), s.createElement("div", {
                className: o.column
            }, R), s.createElement("div", {
                className: o.column
            }, L), s.createElement("div", {
                className: o.column
            }, P, A)) : a >= b ? s.createElement("div", {
                className: o["site-map"]
            }, s.createElement("div", {
                className: o.column
            }, T, L), s.createElement("div", {
                className: o.column
            }, C, P), s.createElement("div", {
                className: o.column
            }, R, A)) : s.createElement("div", {
                className: o["site-map"]
            }, s.createElement("div", {
                className: o.column
            }, T, C, R, L, P, A)) : t ? s.createElement("div", {
                className: i["site-map-wrap"]
            }, s.createElement("div", {
                className: i["site-map"]
            }, s.createElement("div", {
                className: i.column
            }, T), s.createElement("div", {
                className: i.column
            }, C), s.createElement("div", {
                className: i.column
            }, R), s.createElement("div", {
                className: i.column
            }, L))) : s.createElement("div", {
                className: i["site-map-wrap"]
            }, s.createElement("div", {
                className: i["site-map"]
            }, s.createElement("div", {
                className: i.column
            }, T), s.createElement("div", {
                className: i.column
            }, C), s.createElement("div", {
                className: i.column
            }, R), s.createElement("div", {
                className: i.column
            }, L), s.createElement("div", {
                className: i.column
            }, P, s.createElement("div", {
                className: i.spacer
            }), A)))
        }
    }
    ,
    98683: (e, t, a) => {
        "use strict";
        a.d(t, {
            J: () => f,
            Q: () => S
        });
        var s = a(33467)
          , n = a(9249)
          , r = a(42659)
          , i = a(80164)
          , o = a(50548)
          , l = a(95940)
          , c = a(35160)
          , d = a(2439)
          , u = a(9832)
          , g = a(32499)
          , p = a(88868)
          , m = a(18804)
          , h = a(79465)
          , _ = a(16086)
          , v = a(20028);
        const f = () => {
            const e = (0,
            m.Fx)(i.y1)
              , t = (0,
            m.Fx)((e => "alreadyHasSuper" === (0,
            i.gb)(e)))
              , a = (0,
            m.Fx)(i.rj);
            return t ? (0,
            l._i)(34068) : e ? (0,
            l._i)(38413, {
                num: a
            }) : (0,
            l._i)(34201)
        }
          , S = ({customStartStep: e=s.K.Packages, iapContext: t, onBeforeClose: a}={}) => {
            const l = (0,
            m.Fx)(i.y1)
              , f = (0,
            u.ew)()
              , S = (0,
            o.k6)()
              , y = (0,
            m.Fx)((e => (0,
            r.Mb)(e).ipCountry))
              , E = (0,
            m.Fx)(r.Lm)
              , b = (0,
            o.TH)()
              , I = (0,
            m.Fx)(r.np)
              , w = (0,
            m.tX)()
              , k = (0,
            m.CC)();
            return (s=!1) => {
                const r = "boolean" == typeof s && s;
                if (E && !(0,
                v.pN)(I))
                    (0,
                    d.jF)({
                        customStartStep: r ? (0,
                        g.$2)(e) : e,
                        didClickFreeTrial: l,
                        onBeforeClose: a,
                        trackingProps: {
                            iap_context: null != t ? t : l ? "plus_landing_page_trial" : "plus_landing_page_no_trial"
                        },
                        ...r ? {
                            defaultSubscriptionPlanType: g._r.FamilyPlan
                        } : {}
                    }, w);
                else {
                    const t = (0,
                    _.Pc)() ? "plus_landing_page_trial_user" : "plus_landing_page_logged_out";
                    (0,
                    h.track)("premium_ad_click", {
                        iap_context: t
                    }),
                    w({
                        options: {
                            allowLanguagelessUser: !0,
                            closeModalOnLogin: !1,
                            goBack: async s => {
                                switch (await Promise.all([w(n.ke()), w(n.Hm(y, f, !1))]),
                                (0,
                                i.gb)(k.getState())) {
                                case "eligible":
                                case "eligibleFreeTrial":
                                    (0,
                                    d.qj)({
                                        customStartStep: e,
                                        didClickFreeTrial: l,
                                        onBeforeClose: a,
                                        restoreScrollPosition: !1,
                                        trackingProps: {
                                            iap_context: t
                                        }
                                    }, w);
                                    break;
                                case "alreadyHasSuper":
                                    null == s || s();
                                    break;
                                case "ineligible":
                                    null == s || s(),
                                    S.push(p.B6)
                                }
                            }
                            ,
                            isSignIn: !1,
                            limitRedirect: "ui-language-change",
                            name: c.t.SignInUp,
                            redirectPath: b.pathname || "/super",
                            via: "plus_landing_page_start_free_trial"
                        },
                        type: "TOGGLE_MODAL"
                    })
                }
            }
        }
    }
    ,
    14649: (e, t, a) => {
        "use strict";
        a.d(t, {
            _: () => o
        });
        var s = a(18867)
          , n = a(79465)
          , r = a(81621)
          , i = a(20028);
        const o = () => async (e, t) => {
            const a = t()
              , {user: o, user: {fromLanguage: l, learningLanguage: c}} = a;
            if (c)
                try {
                    const t = await s.I7.getAchievementsV3(o.id, l, c, (0,
                    i.jq)(o), (0,
                    r.VY)(o), (0,
                    i.dE)(o), o.hasPlus);
                    t.length > 0 ? e({
                        achievements: t,
                        type: "UPDATE_USER_ACHIEVEMENTS_V3"
                    }) : s.I7.migrateToV3(o.id)
                } catch (e) {
                    (0,
                    n.trackAndLogApiError)("load_v3_user_achievements_failed", "Failed to load V3 user achievements", e)
                }
        }
    }
    ,
    53278: (e, t, a) => {
        "use strict";
        a.d(t, {
            $l: () => i,
            K_: () => r,
            bf: () => n
        });
        var s = a(80254);
        const n = e => r([e])
          , r = e => t => {
            t({
                animations: e.map((e => {
                    var t;
                    return {
                        ...e,
                        id: null !== (t = e.id) && void 0 !== t ? t : s.EL()
                    }
                }
                )),
                type: "QUEUE_ANIMATIONS"
            })
        }
          , i = (e, t=[]) => a => {
            const n = s.EL()
              , r = (e, t) => {
                var a;
                return null !== (a = e.id) && void 0 !== a ? a : `${n}_${t}`
            }
            ;
            a({
                animations: e.map(( (e, a, s) => ({
                    ...e,
                    blockers: 0 === a ? t : [r(s[a - 1], a - 1)],
                    id: r(e, a)
                }))),
                type: "QUEUE_ANIMATIONS"
            })
        }
    }
    ,
    94103: (e, t, a) => {
        "use strict";
        a.d(t, {
            fh: () => c,
            pe: () => u,
            pn: () => d
        });
        var s = a(53278)
          , n = a(42659)
          , r = a(46355)
          , i = a(18867)
          , o = a(16970);
        const l = (e, t, a) => {
            var s, n, r, i, l;
            return void 0 === t || void 0 === a ? e.flatMap((e => e.groups.flatMap((e => e.characters.flat())))) : (0,
            o.yB)(t) ? null === (r = null === (n = null === (s = e.find((e => e.id === t))) || void 0 === s ? void 0 : s.groups.find((e => e.id === a))) || void 0 === n ? void 0 : n.characterGroups) || void 0 === r ? void 0 : r.flatMap((e => e.characters)).flat() : null === (l = null === (i = e.find((e => e.id === t))) || void 0 === i ? void 0 : i.groups.find((e => e.id === a))) || void 0 === l ? void 0 : l.characters.flat()
        }
          , c = e => async (t, a) => {
            const c = (0,
            n.Oz)(a())
              , d = (0,
            r.cL)(a())
              , u = null == d ? void 0 : d.activeAlphabetId
              , g = void 0 !== u && (0,
            o.HZ)(u) ? null == d ? void 0 : d.activeGroupId : void 0;
            if ((null == d ? void 0 : d.characterChart) && (null == d ? void 0 : d.learningLanguage) && (null == d ? void 0 : d.fromLanguage)) {
                const a = await i.zQ.getCharacterChart(d.learningLanguage, d.fromLanguage, c.alphabetsPathProgressKey)
                  , n = l(d.characterChart.alphabets, u, g)
                  , r = l(a.alphabets, u, g)
                  , o = void 0 === r ? [] : r.filter(( (e, t) => {
                    const a = null == n ? void 0 : n[t];
                    return null !== e && null != a && e.strength > a.strength
                }
                ))
                  , p = o[o.length - 1];
                p && e && t((0,
                s.bf)({
                    character: p.character,
                    groupId: g,
                    name: "CHARACTER_SCROLL",
                    transliteration: p.transliteration
                })),
                t({
                    changedCharacters: o,
                    fromLanguage: d.fromLanguage,
                    learningLanguage: d.learningLanguage,
                    stagedCharacterChart: a,
                    type: "characters/STAGE_CHART_UPDATE"
                })
            }
        }
          , d = () => (e, t) => {
            const a = (0,
            r.cL)(t());
            if (void 0 === a)
                return;
            const n = a.stagedCharacterChart
              , i = a.changedCharacters;
            if (n && i) {
                const t = i.map((e => ({
                    character: e.character,
                    groupId: void 0,
                    name: "CHARACTER_PROGRESS",
                    transliteration: e.transliteration
                })));
                if (e((0,
                s.K_)(t)),
                void 0 === a.fromLanguage || void 0 === a.learningLanguage)
                    return;
                e({
                    characterChart: n,
                    fromLanguage: a.fromLanguage,
                    learningLanguage: a.learningLanguage,
                    type: "characters/UPDATE_CHARACTER_CHART"
                })
            }
        }
          , u = () => async (e, t) => {
            const a = (0,
            n.Oz)(t())
              , s = void 0 !== (0,
            r.cL)(t());
            if ((0,
            o.bo)(a.learningLanguage, a.fromLanguage) && !s) {
                const t = await i.zQ.getCharacterChart(a.learningLanguage, a.fromLanguage, a.alphabetsPathProgressKey);
                e({
                    activeAlphabetId: t.alphabets[0].id,
                    characterChart: t,
                    fromLanguage: a.fromLanguage,
                    learningLanguage: a.learningLanguage,
                    type: "characters/SET_CHARACTER_CHART"
                })
            }
        }
    }
    ,
    50791: (e, t, a) => {
        "use strict";
        a.d(t, {
            i: () => r
        });
        var s = a(18867)
          , n = a(79465);
        const r = () => async e => {
            try {
                e({
                    config: await s.Vi.getConfig(),
                    type: "UPDATE_CONFIG"
                })
            } catch (e) {
                (0,
                n.trackAndLogApiError)("load_config_failed", "Failed to load config", e)
            }
        }
    }
    ,
    61544: (e, t, a) => {
        "use strict";
        a.d(t, {
            Fn: () => _,
            GG: () => u,
            HQ: () => p,
            dL: () => S,
            j1: () => g,
            oh: () => m,
            tD: () => h,
            w7: () => v,
            wf: () => f
        });
        var s = a(80254)
          , n = a(14649)
          , r = a(46644)
          , i = a(42659)
          , o = a(18867)
          , l = a(79465)
          , c = a(81621)
          , d = a(16086);
        const u = () => async (e, t) => {
            const a = (0,
            i.np)(t());
            if (!(0,
            c.VY)(a))
                return;
            const s = (0,
            i.Mb)(t())
              , [n,r,l] = await Promise.all([o.i_.getFeedV2(a.id, a.fromLanguage, s), o.i_.getKudosAssets(s), o.i_.getKudosDrawerV2(a.id, a.fromLanguage, s)]);
            e({
                feed: n,
                type: "SET_FEED"
            }),
            e({
                assets: r,
                type: "SET_KUDOS_ASSETS"
            }),
            e({
                drawer: l,
                type: "SET_KUDOS_DRAWER"
            })
        }
          , g = (e, t, a) => async s => {
            await o.tX.markFeedSeen(e, t, a),
            await s(u())
        }
          , p = (e, t, a) => async s => {
            await o.tX.sendFeedReactions(e, t, a),
            await s(u())
        }
          , m = e => async t => {
            await o.tX.deleteFeedReaction(e),
            await t(u())
        }
          , h = (e, t) => async a => {
            a({
                recommendationInfo: await o.i_.getFriendRecommendations(e, t),
                type: "SET_FOLLOW_SUGGESTIONS"
            })
        }
          , _ = (e, t) => async a => {
            const {filteredIds: s, rotatedIds: n} = await o.i_.updateFriendRecommendations(e, t);
            a({
                filteredIds: s,
                rotatedIds: n,
                type: "UPDATE_FOLLOW_SUGGESTIONS"
            })
        }
          , v = (e, t) => async a => {
            await o.i_.deleteFriendRecommendation(e, t),
            a({
                deletedId: t,
                type: "DELETE_FOLLOW_SUGGESTION"
            })
        }
          , f = () => async e => {
            try {
                const t = (0,
                d.Jb)();
                try {
                    const a = (await o.i_.getFollowing(t, 500)).users.map((e => ({
                        id: e.userId,
                        name: e.displayName,
                        picture: e.picture,
                        totalXp: e.totalXp,
                        username: e.username
                    })));
                    e({
                        subscriptions: s.ZP.indexBy(a, "id"),
                        type: "SET_SUBSCRIPTIONS"
                    })
                } catch (e) {
                    (0,
                    l.trackAndLogApiError)("load_user_subscriptions_failed", "Failed to update user subscriptions", e)
                }
            } catch {}
        }
          , S = (e, t, a, s, i, c, u) => async g => {
            try {
                t ? ((0,
                l.track)("follow", {
                    follow_suggestion_score: c,
                    followed_user_id: e,
                    suggested_reason: u
                }),
                await o.i_.follow(e, s, i, u, c),
                g(n._()),
                a && g({
                    followedUser: a,
                    type: "ADD_SUBSCRIPTION"
                })) : ((0,
                l.track)("unfollow", {}),
                await o.i_.unfollow(e),
                a && g({
                    type: "REMOVE_SUBSCRIPTION",
                    userId: e
                })),
                g(r._((0,
                d.Jb)(), !0))
            } catch (e) {
                (0,
                l.trackAndLogApiError)("user_subscription_failed", "Failed to update user subscriptions", e)
            }
        }
    }
    ,
    33: (e, t, a) => {
        "use strict";
        a.d(t, {
            AG: () => L,
            Ic: () => b,
            Up: () => E,
            b5: () => y,
            kS: () => C,
            lx: () => T,
            mE: () => I,
            pt: () => k
        });
        var s = a(80254)
          , n = a(86155)
          , r = a(9990)
          , i = a(42659)
          , o = a(73520)
          , l = a(93540)
          , c = a(18867)
          , d = a(17135)
          , u = a(64115)
          , g = a(94171)
          , p = a(41831)
          , m = a(68903)
          , h = a(795)
          , _ = a(58576)
          , v = a(16689)
          , f = a(79465)
          , S = a(55829);
        const y = () => async (e, t) => {
            var a, h, _, y, E, b, I, k, T;
            const C = t()
              , L = (0,
            i.np)(C)
              , [P,A,D] = await Promise.all([c.JV.getQuestsData(L.id), c.JV.getQuestsSchema(L.fromLanguage), c.JV.getQuestProgress({
                timezone: L.timezone,
                uiLanguage: L.fromLanguage,
                userId: L.id
            })])
              , O = null !== (a = A.goals) && void 0 !== a ? a : []
              , N = D.difficulty - 1;
            e({
                payload: O,
                type: "SET_GOALS_SCHEMA"
            }),
            e({
                payload: D.goals.progress,
                type: "SET_GOALS_PROGRESS"
            }),
            e({
                payload: N,
                type: "SET_GOALS_DIFFICULTY"
            }),
            e({
                badges: A.badges,
                type: "SET_QUEST_BADGES"
            }),
            e({
                earnedBadges: null !== (h = D.badges.details) && void 0 !== h ? h : [],
                type: "SET_EARNED_BADGES"
            });
            const x = (0,
            g.ed)(P)
              , M = (0,
            u.ky)("debugFriendsQuestState");
            if (x) {
                const t = s.HK(O, "goalId")
                  , a = x.goalId
                  , n = x.questState === S.S.ACTIVE ? D.goals.details[a] : null === (y = null === (_ = D.pastGoals) || void 0 === _ ? void 0 : _[0]) || void 0 === y ? void 0 : y.details;
                e(w({
                    details: n,
                    friendsQuestInfo: x,
                    historicalStats: D.goals.historicalStats,
                    schemaByGoalId: t
                }))
            } else
                e(M ? {
                    payload: (0,
                    g.ET)(),
                    type: "SET_FRIENDS_QUEST_DETAILS"
                } : {
                    payload: void 0,
                    type: "SET_FRIENDS_QUEST_DETAILS"
                });
            e(R(Date.now()));
            const {lastUpdated: F} = (0,
            o.oV)(C)
              , U = (0,
            n.eG)(C)
              , H = (0,
            l.HF)(C)
              , G = null !== (I = null === (b = null === (E = (0,
            i.np)(C).streakData) || void 0 === E ? void 0 : E.currentStreak) || void 0 === b ? void 0 : b.length) && void 0 !== I ? I : 0
              , V = (0,
            i.np)(C).xpSummaries
              , {includeSpeaking: z, includeListening: B} = U
              , j = {
                includeListening: B,
                includeSpeaking: z,
                learningLanguage: L.learningLanguage,
                path: H,
                streak: G,
                xpSummaries: V
            };
            if ((0,
            u.ky)("debugRefreshDailyQuests", !1) || !F || !(0,
            d.zk)((0,
            d.Gz)(F))) {
                const t = (0,
                p.Ch)({
                    assignedQuestGoalIds: [],
                    questEligibilityParams: j,
                    schema: O,
                    slotType: "DAILY"
                })
                  , a = (0,
                p.Ch)({
                    assignedQuestGoalIds: t ? [t] : [],
                    questEligibilityParams: j,
                    schema: O,
                    slotType: "CORE"
                })
                  , s = (0,
                p.Ch)({
                    assignedQuestGoalIds: [t, a].filter(m.$K),
                    questEligibilityParams: j,
                    schema: O,
                    slotType: "HARD"
                });
                e({
                    payload: {
                        coreQuest: a,
                        dailyQuest: t,
                        hardQuest: s,
                        lastUpdated: Date.now()
                    },
                    type: "SET_DAILY_QUESTS"
                }),
                [a, t, s].forEach((e => {
                    e && (0,
                    f.track)("daily_quest_assigned", {
                        daily_quest_difficulty: N,
                        daily_quest_name: e
                    })
                }
                ))
            }
            const $ = null !== (k = (0,
            u.ky)("debugChooseSpecificMonthlyChallenge")) && void 0 !== k ? k : (0,
            v.$A)(O);
            e({
                payload: {
                    updates: 0
                },
                type: "SET_MONTHLY_CHALLENGE_PROGRESS_UPDATE"
            }),
            e({
                payload: $,
                type: "SET_MONTHLY_QUEST"
            }),
            e({
                monthlyQuestTheme: null === (T = A.themes) || void 0 === T ? void 0 : T.filter((e => e.themeId === $))[0],
                type: "SET_MONTHLY_QUEST_THEME"
            }),
            e((0,
            r._P)(L.id))
        }
          , E = () => (e, t) => {
            var a, s, r;
            const c = t()
              , d = (0,
            o.D_)(c)
              , u = d.schema;
            if (u.length < 1)
                return;
            const g = (0,
            o.oV)(c)
              , h = (0,
            n.eG)(c)
              , _ = (0,
            l.HF)(c)
              , v = null !== (r = null === (s = null === (a = (0,
            i.np)(c).streakData) || void 0 === a ? void 0 : a.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== r ? r : 0
              , S = (0,
            i.np)(c).xpSummaries
              , {includeSpeaking: y, includeListening: E} = h
              , b = {
                includeListening: E,
                includeSpeaking: y,
                path: _,
                streak: v,
                xpSummaries: S
            }
              , {dailyQuest: I, coreQuest: w, hardQuest: k} = g
              , T = I && (0,
            p.n0)(I, b) ? I.goalId : (0,
            p.Ch)({
                assignedQuestGoalIds: [],
                questEligibilityParams: b,
                schema: u,
                slotType: "DAILY"
            })
              , C = w && (0,
            p.n0)(w, b) ? w.goalId : (0,
            p.Ch)({
                assignedQuestGoalIds: T ? [T] : [],
                questEligibilityParams: b,
                schema: u,
                slotType: "CORE"
            })
              , R = k && (0,
            p.n0)(k, b) ? k.goalId : (0,
            p.Ch)({
                assignedQuestGoalIds: [C, T].filter(m.$K),
                questEligibilityParams: b,
                schema: u,
                slotType: "HARD"
            });
            e({
                payload: {
                    coreQuest: C,
                    dailyQuest: T,
                    hardQuest: R,
                    lastUpdated: Date.now()
                },
                type: "SET_DAILY_QUESTS"
            }),
            [C, T, R].forEach((e => {
                e && (0,
                f.track)("daily_quest_assigned", {
                    daily_quest_difficulty: d.difficulty,
                    daily_quest_name: e
                })
            }
            ))
        }
          , b = (e, t, a) => {
            if (!a || !t || !(0,
            d.zk)((0,
            d.Gz)(a.timestamp)))
                return {
                    updatedTotalProgress: t,
                    updatedVisibleProgress: e.reduce(( (e, a) => (e[a.goalId] = t ? t[a.goalId] : 0,
                    e)), {})
                };
            const s = (0,
            h.qj)(t)
              , n = e.reduce(( (e, s) => {
                var n;
                return e[s.goalId] = Math.max(null !== (n = a.updates[s.goalId]) && void 0 !== n ? n : 0, t ? t[s.goalId] : 0),
                e
            }
            ), {});
            if (s)
                for (const e in n)
                    Object.prototype.hasOwnProperty.call(n, e) && (s[e] = n[e]);
            return {
                updatedTotalProgress: s,
                updatedVisibleProgress: n
            }
        }
          , I = e => (t, a) => {
            const s = (0,
            o.ey)(a());
            if (!s || !(0,
            g.Vz)(Date.now(), s))
                return;
            const {metric: n, ownProgress: r, threshold: i, totalProgress: l} = s
              , c = Math.max(0, i - l);
            for (const a of e.metricUpdates)
                a.metric === n && t({
                    ownProgress: r + Math.min(a.quantity, c),
                    totalProgress: l + Math.min(a.quantity, c),
                    type: "SET_FRIENDS_QUEST_PROGRESS"
                })
        }
          , w = ({details: e, friendsQuestInfo: t, historicalStats: a, schemaByGoalId: s}) => n => {
            var r;
            const i = t.goalId;
            n({
                payload: {
                    acknowledged: t.acknowledged,
                    friendProgress: e.socialProgress[0],
                    goalId: i,
                    metric: s[i].metric,
                    ownProgress: e.progressIncrements.reduce(( (e, t) => e + t), 0),
                    questId: t.questId,
                    questPoints: t.questPoints,
                    status: t.questState,
                    threshold: t.questThreshold,
                    totalProgress: null !== (r = e.progress) && void 0 !== r ? r : 0,
                    winStreak: (0,
                    g.Fy)(a)
                },
                type: "SET_FRIENDS_QUEST_DETAILS"
            })
        }
          , k = () => async (e, t) => {
            const a = t()
              , s = (0,
            i.np)(a)
              , n = (0,
            o.xm)(a);
            try {
                const [t,a] = await Promise.all([c.JV.getQuestsData(s.id), c.JV.getQuestProgress({
                    timezone: s.timezone,
                    uiLanguage: s.fromLanguage,
                    userId: s.id
                })])
                  , r = (0,
                g.ed)(t);
                if (r) {
                    const t = a.goals.details[r.goalId];
                    e(w({
                        details: t,
                        friendsQuestInfo: r,
                        historicalStats: a.goals.historicalStats,
                        schemaByGoalId: n
                    })),
                    e(R(Date.now()))
                }
            } catch (e) {
                (0,
                _.Kp)("Failed to load new friends quest data", {
                    ex: e
                })
            }
        }
          , T = e => (t, a) => {
            const s = (0,
            o.ey)(a())
              , n = (0,
            i.dY)(a());
            if (!s)
                return;
            const {friendProgress: r, metric: l, threshold: d, totalProgress: u} = s;
            c.i_.postFriendsQuestNudge({
                eventType: l,
                nudgeType: e,
                recipientId: r.userId,
                remainingEvents: Math.max(0, d - u),
                userId: n
            }),
            (0,
            f.track)("send_nudge", {
                nudge_name: c.i_.NUDGE_TRACKING_NAMES[e],
                nudge_type: g.N7.includes(e) ? "welcome" : "nudge"
            }),
            t({
                nudgeType: e,
                timestamp: Date.now(),
                type: "SET_LAST_SENT_FRIENDS_QUEST_NUDGE"
            })
        }
          , C = ({purchasingId: e, receivingId: t}) => a => {
            a({
                gems: -g.py,
                type: "UPDATE_USER_GEMS"
            }),
            a({
                timestamp: Date.now(),
                type: "SET_LAST_SENT_FRIENDS_QUEST_GIFT_TIMESTAMP"
            }),
            c.Vi.purchaseShopItemGift({
                itemName: g.xH,
                purchasingId: e,
                receivingId: t
            })
        }
          , R = e => (t, a) => {
            e >= (0,
            o.D_)(a()).lastSeenNextFriendsQuestStart && t({
                lastSeenTotalProgress: 0,
                type: "SET_LAST_SEEN_FRIENDS_QUEST_TOTAL_PROGRESS"
            })
        }
          , L = e => t => {
            c.i_.sendTriggeredKudos([g.wS], [e]),
            t({
                type: "SET_FRIENDS_QUEST_HIGH_FIVE_TIMESTAMP",
                value: Date.now()
            })
        }
    }
    ,
    9249: (e, t, a) => {
        "use strict";
        a.d(t, {
            Hm: () => l,
            ZK: () => c,
            ke: () => o,
            w4: () => u,
            xD: () => d
        });
        var s = a(14649)
          , n = a(42659)
          , r = a(18867)
          , i = a(79465);
        const o = () => async e => {
            try {
                e({
                    items: await r.Vi.getShopItems(),
                    type: "SET_SHOP_ITEMS"
                })
            } catch (e) {
                (0,
                i.trackAndLogApiError)("load_shop_items_failed", "Failed to load shop items", e)
            }
        }
          , l = (e, t, a) => async s => {
            try {
                const {currentPlan: n, subscriptionPlans: i} = await r.Vi.getSubscriptionPlans(e, t, a);
                s({
                    currentPlan: n,
                    isForMax: a,
                    subscriptionPlans: i,
                    type: "SET_AVAILABLE_SUBSCRIPTION_PLANS"
                })
            } catch (e) {
                (0,
                i.trackAndLogApiError)("load_subscription_plans_failed", "Failed to load available subscription plans", e)
            }
        }
          , c = async ({dispatch: e, fromMilestone: t=!1, fromStories: a=!1, quantity: s=1, shopItems: n}) => {
            const r = n.shop.misc.streak_freeze;
            if (r)
                try {
                    await e(d(r, "item_offer", !0, s)),
                    a || e({
                        fromMilestone: t,
                        gift: "streakFreeze",
                        quantity: s,
                        type: "RECEIVE_GIFT"
                    })
                } catch (e) {
                    (0,
                    i.trackAndLogApiError)("streak_freeze_gifting_failed", "Failed to gift the user a streak freeze", e, {
                        fromMilestone: t,
                        fromStories: a
                    })
                }
        }
          , d = (e, t, a=!1, o=1) => async (l, c) => {
            const d = (0,
            n.iH)(c())
              , u = a ? {
                isFree: !0
            } : {};
            l({
                status: "START",
                type: "PURCHASE_ITEM"
            });
            try {
                const [n] = (await Promise.all(new Array(o).fill(null).map(( () => r.Vi.purchaseUserShopItem(e.id, {
                    learningLanguage: d,
                    ...u
                }))))).map((e => e.item));
                (0,
                i.track)("purchase_item", {
                    currency_type: e.currencyType,
                    item_name: e.id,
                    num_purchased: o,
                    purchased_via: t,
                    ...a ? {
                        is_free: !0
                    } : {}
                }),
                l({
                    item: n,
                    purchaseQuantity: o,
                    status: "SUCCESS",
                    type: "PURCHASE_ITEM"
                }),
                l(s._())
            } catch (e) {
                (0,
                i.trackAndLogApiError)("purchase_failed", "Failed to purchase item", e),
                l({
                    status: "FAIL",
                    type: "PURCHASE_ITEM"
                })
            }
        }
          , u = e => async t => {
            try {
                t({
                    item: await r.Vi.getUserShopItem(e),
                    type: "REFRESH_USER_ITEM"
                })
            } catch (e) {
                (0,
                i.trackAndLogApiError)("load_user_shop_item_failed", "Failed to get user item", e)
            }
        }
    }
    ,
    9990: (e, t, a) => {
        "use strict";
        a.d(t, {
            LQ: () => n,
            MS: () => i,
            _P: () => l,
            iU: () => r,
            lc: () => o
        });
        var s = a(30839);
        const n = e => t => {
            if ((0,
            s.No)(s.Qt.REDUX_AgeRestrictedLeaderboardsIntro)) {
                const a = (0,
                s.rV)(s.Qt.REDUX_AgeRestrictedLeaderboardsIntro)[e];
                void 0 !== a && t({
                    isEligible: a,
                    type: "SET_CAN_SHOW_AGE_RESTRICTED_LEADERBOARDS_INTRO"
                })
            }
        }
          , r = e => t => {
            if ((0,
            s.No)(s.Qt.REDUX_AvatarsIntro)) {
                const a = (0,
                s.rV)(s.Qt.REDUX_AvatarsIntro)[e];
                void 0 !== a && t({
                    isEligible: a,
                    type: "SET_CAN_SHOW_AVATARS_INTRO"
                })
            }
        }
          , i = e => t => {
            if ((0,
            s.No)(s.Qt.REDUX_DailyQuests)) {
                const a = (0,
                s.rV)(s.Qt.REDUX_DailyQuests)[e];
                void 0 !== a && t({
                    payload: a,
                    type: "SET_DAILY_QUESTS"
                })
            }
        }
          , o = e => t => {
            if ((0,
            s.No)(s.Qt.REDUX_FriendsQuestNextStart)) {
                const a = (0,
                s.rV)(s.Qt.REDUX_FriendsQuestNextStart)[e];
                void 0 !== a && t({
                    lastSeenNextFriendsQuestStart: a,
                    type: "SET_LAST_SEEN_NEXT_FRIENDS_QUEST_START"
                })
            }
        }
          , l = e => t => {
            if ((0,
            s.No)(s.Qt.REDUX_LastSeenMonthlyChallengeId)) {
                const a = (0,
                s.rV)(s.Qt.REDUX_LastSeenMonthlyChallengeId)[e];
                void 0 !== a && t({
                    monthlyChallengeId: a,
                    type: "SET_LAST_SEEN_MONTHLY_CHALLENGE_ID"
                })
            }
        }
    }
    ,
    46644: (e, t, a) => {
        "use strict";
        a.d(t, {
            P: () => m,
            _: () => h
        });
        var s = a(42659)
          , n = a(18867)
          , r = a(17135)
          , i = a(43633)
          , o = a(87443)
          , l = a(87471)
          , c = a(88868)
          , d = a(79465)
          , u = a(81621)
          , g = a(16086)
          , p = a(20028);
        const m = (e, t, a=!1) => async (m, h) => {
            const _ = (0,
            s.NT)(h())
              , v = (0,
            s.np)(h())
              , f = (0,
            s.Mb)(h())
              , S = (0,
            i.h0)().get(o.RT).value;
            if (!e && !t)
                return;
            if (!a && _ && (_.id === e || _.username === t))
                return _;
            m({
                type: "RESET_PROFILE"
            });
            const y = void 0 === e ? void 0 : (0,
            l.pW)(S, e)
              , E = ( () => {
                if ("leagues" === (null == S ? void 0 : S.alias) && void 0 !== y)
                    return {
                        id: y.userId,
                        isPrivate: !0,
                        name: y.displayName,
                        picture: y.avatarUrl,
                        username: void 0
                    }
            }
            )()
              , b = await (async () => {
                var a;
                return void 0 !== e ? e : void 0 !== t ? null === (a = (await n.Vi.userIdsByUsername(t))[0]) || void 0 === a ? void 0 : a.id : void 0
            }
            )()
              , I = await (async () => {
                var e;
                if (void 0 !== b)
                    try {
                        return await n.Vi.userProfileInfo(b)
                    } catch (t) {
                        if ((0,
                        n.Hx)(t) && 404 === (null === (e = t.response) || void 0 === e ? void 0 : e.status))
                            return;
                        return void (0,
                        d.trackAndLogApiError)("fetch_user_profile_failed", `Failed to fetch user profile info for user ${b}`, t)
                    }
            }
            )();
            if (I && (I.streakData = {
                currentStreak: {
                    endDate: (0,
                    r.zK)(0),
                    length: I.streak,
                    startDate: (0,
                    r.zK)(0)
                },
                longestStreak: null,
                previousStreak: null
            }),
            !(0,
            g.Pc)() || (0,
            g.Jb)() !== (null == I ? void 0 : I.id))
                try {
                    if (void 0 === I || (0,
                    p.pN)(I) || !(0,
                    u.VY)(I) && !(0,
                    p.E4)(v) || (0,
                    p.jq)(I) && !(0,
                    p.zZ)(I) && void 0 !== y || (0,
                    g.Pc)() && v.blockerUserIds.includes(I.id) || (0,
                    l.d0)(v, f) && void 0 !== y)
                        return E ? (m({
                            type: "LOAD_PRIVATE_PROFILE_USER",
                            user: E
                        }),
                        E) : ((0,
                        d.track)("page_not_found", {}),
                        void await (0,
                        c.Zs)(c.Oy, !0))
                } catch {
                    return void await (0,
                    c.Zs)(c.Oy, !0)
                }
            m({
                type: "LOAD_PROFILE_USER",
                user: I
            });
            const w = I.id
              , k = () => {
                var e;
                return (null === (e = (0,
                s.NT)(h())) || void 0 === e ? void 0 : e.id) === w
            }
            ;
            return (0,
            g.Pc)() ? (async () => {
                if (!I.fromLanguage || !I.learningLanguage)
                    return void m({
                        achievements: {
                            v2: [],
                            v3: []
                        },
                        type: "LOAD_ACHIEVEMENTS"
                    });
                const e = await n.I7.getAchievementsV3(I.id, I.fromLanguage, I.learningLanguage, (0,
                p.jq)(v), (0,
                u.VY)(v), (0,
                p.dE)(v), I.hasPlus);
                k() && m({
                    achievements: {
                        v2: [],
                        v3: e
                    },
                    type: "LOAD_ACHIEVEMENTS"
                })
            }
            )() : m({
                achievements: {
                    v2: [],
                    v3: []
                },
                type: "LOAD_ACHIEVEMENTS"
            }),
            (async () => {
                const e = await n.Vi.getUserXPSummaries(w);
                if (!k())
                    return;
                const t = e.map(( ({date: e, gainedXp: t}) => ({
                    time: e,
                    xp: t
                })));
                m({
                    summaries: t,
                    type: "LOAD_PROFILE_XP"
                })
            }
            )(),
            (async () => {
                const e = await n.Kz.getUserBuiltAvatar(w);
                k() && m({
                    builtAvatar: e,
                    type: "LOAD_PROFILE_AVATAR"
                })
            }
            )(),
            I
        }
          , h = (e, t) => async a => {
            const s = await n.i_.getSocialProfile(e, 5);
            a(t ? {
                socialProfile: s,
                type: "LOAD_FIRST_PERSON_SOCIAL_PROFILE"
            } : {
                socialProfile: s,
                type: "LOAD_SOCIAL_PROFILE"
            })
        }
    }
    ,
    7924: (e, t, a) => {
        "use strict";
        a.d(t, {
            VE: () => l,
            nn: () => o,
            uM: () => c
        });
        var s = a(9249)
          , n = a(42659)
          , r = a(18867)
          , i = a(79465);
        const o = (e, t, a, n) => async o => {
            var l;
            try {
                const c = await r.bu.joinClassroom(e);
                (0,
                i.track)("add_observer", {
                    from_settings: t,
                    with_classroom: !0
                }),
                o({
                    classroom: c,
                    type: "JOIN_CLASSROOM"
                }),
                o(s.ke()),
                o(s.Hm(a, n, !1)),
                t || o({
                    name: "schoolsJoinedClassroom",
                    observerName: null !== (l = c.observer_name) && void 0 !== l ? l : c.observer_username,
                    type: "CREATE_HOME_MESSAGE"
                })
            } catch (e) {
                (0,
                i.trackAndLogApiError)("join_classroom_failed", "Failed to add teacher", e)
            }
        }
          , l = e => async t => {
            try {
                await r.bu.leaveClassroom(e),
                (0,
                i.track)("remove_observer", {}),
                t({
                    classroomId: e,
                    type: "LEAVE_CLASSROOM"
                })
            } catch (e) {
                (0,
                i.trackAndLogApiError)("leave_classroom_failed", "Failed to leave classroom", e)
            }
        }
          , c = (e, t) => async (a, s) => {
            const o = (0,
            n.np)(s());
            try {
                a({
                    sessionActivities: await r.bu.getSessionActivitiesByUser(o.id, e, t),
                    type: "UPDATE_SESSION_ACTIVITIES"
                })
            } catch (e) {
                (0,
                i.trackAndLogApiError)("update_session_activities_failed", "Failed to update Schools session activities", e)
            }
        }
    }
    ,
    15879: (e, t, a) => {
        "use strict";
        a.d(t, {
            SC: () => f,
            SL: () => v,
            Vw: () => S
        });
        var s = a(64184)
          , n = a(42659)
          , r = a(54174)
          , i = a(18867)
          , o = a(50498)
          , l = a(94786)
          , c = a(68903)
          , d = a(60752)
          , u = a(41364)
          , g = a(58576)
          , p = a(44637)
          , m = a(89260)
          , h = a(79465)
          , _ = a(16086);
        let v;
        const f = e => async () => {
            try {
                const t = await (0,
                d.b)()
                  , a = await t.getAllKeys("submittableRequests")
                  , s = [];
                for (const n of a) {
                    const a = await t.get("submittableRequests", n);
                    if (void 0 !== a)
                        switch (a.type) {
                        case "experiment-treatment":
                            s.push(y(n, a.request, e).catch((e => {
                                (0,
                                g.vU)("Failed to sync stored experiment treatment", {
                                    data: a.request,
                                    ex: e
                                })
                            }
                            )));
                            break;
                        case "goals-progress":
                        case "remove-heart":
                        case "reward":
                        case "session":
                        case "story":
                            break;
                        default:
                            (0,
                            c.RJ)(a)
                        }
                }
                await Promise.all(s)
            } catch (e) {
                (0,
                g.vU)("Failed to sync stored requests", {
                    ex: e
                })
            }
        }
          , S = e => (0,
        u.p)("SYNC_STORED_PROGRESS")((async (t, a) => {
            v = (async () => {
                try {
                    const t = await (0,
                    d.b)()
                      , a = await t.getAllKeys("submittableRequests");
                    for (const s of a) {
                        const a = await t.get("submittableRequests", s);
                        if (void 0 !== a)
                            switch (a.type) {
                            case "experiment-treatment":
                                break;
                            case "goals-progress":
                                await E(s, a.request, e);
                                break;
                            case "remove-heart":
                                await b(s, e);
                                break;
                            case "reward":
                                await I(s, a.rewardRequest, e);
                                break;
                            case "session":
                                await w(s, a.session, a.sessionEndTrackingProperties, e);
                                break;
                            case "story":
                                await k(s, a.session, a.sessionEndTrackingProperties, a.storyCompleteTrackingProperties, a.storyId);
                                break;
                            default:
                                (0,
                                c.RJ)(a)
                            }
                    }
                } catch (e) {
                    (0,
                    g.vU)("Failed to sync stored progress", {
                        ex: e
                    })
                }
                (0,
                n.eI)(a()) || (0,
                r.d)(a()) || await t((0,
                s.eY)())
            }
            )(),
            await v,
            v = void 0
        }
        ))
          , y = async (e, t, a) => {
            const s = await (0,
            d.b)();
            let n = !1;
            try {
                await (0,
                o.XD)(( () => i.Vi.treatUser((0,
                _.Jb)(), t.experimentName, {
                    contexts: t.contexts,
                    treated: !0
                })), {
                    retries: 1,
                    signal: a
                }),
                n = !0
            } catch (e) {
                (0,
                h.trackAndLogApiError)("treat_user_failed", "Failed to treat user for experiment", e)
            }
            !n && a.aborted || await s.delete("submittableRequests", e)
        }
          , E = async (e, t, a) => {
            const s = await (0,
            d.b)();
            let n = !1;
            try {
                await (0,
                o.XD)(( () => i.JV.sendBatchUpdate((0,
                _.Jb)(), t.batchUpdate, t.timestamp, t.timezone)), {
                    retries: 1,
                    signal: a
                }),
                n = !0
            } catch (e) {
                (0,
                h.trackAndLogApiError)("update_goals_progress_failed", "Failed to update goals progress", e)
            }
            !n && a.aborted || await s.delete("submittableRequests", e)
        }
          , b = async (e, t) => {
            const a = await (0,
            d.b)();
            let s = !1;
            try {
                await (0,
                o.XD)(( () => i.Vi.removeHeart()), {
                    retries: 1,
                    signal: t
                }),
                s = !0
            } catch (e) {
                (0,
                h.trackAndLogApiError)("remove_user_heart_failed", "Failed to remove users' hearts", e)
            }
            !s && t.aborted || await a.delete("submittableRequests", e)
        }
          , I = async (e, t, a) => {
            const s = await (0,
            d.b)();
            let n = !1;
            try {
                await (0,
                o.XD)(( () => i.Vi.consumeReward(t.userPartial, t.rewardId, t.pathLevelMetadata)), {
                    retries: 1,
                    signal: a
                }),
                n = !0
            } catch (e) {
                "path-chest" === t.source && (0,
                h.trackAndLogApiError)("consume_path_chest_reward_failed", "Failed to consume path chest reward", e)
            }
            !n && a.aborted || await s.delete("submittableRequests", e)
        }
          , w = async (e, t, a, s) => {
            const n = await (0,
            d.b)();
            let r = !1;
            try {
                (0,
                h.track)("session_end_attempt", {});
                const e = await i.Vi.sessionSubmit(t, {
                    onError: e => {
                        (0,
                        h.trackAndLogApiError)("submit_session_failed", "Failed to submit stored session", e)
                    }
                    ,
                    signal: s
                });
                r = !0,
                (0,
                h.track)("session_end", {
                    ...a,
                    ...e.trackingProperties,
                    upload_timestamp: Date.now()
                })
            } catch (e) {
                (0,
                p.gZ)(e, (0,
                m.Xd)(t.type))
            }
            !r && s.aborted || await n.delete("submittableRequests", e)
        }
          , k = async (e, t, a, s, n) => {
            const r = await (0,
            d.b)();
            try {
                const e = await i.Mw.postStoryComplete(n, t);
                (0,
                h.track)("session_end", {
                    ...a,
                    upload_timestamp: Date.now()
                }),
                (0,
                h.track)("stories_story_complete", {
                    ...s,
                    ...e.trackingProperties
                })
            } catch (e) {
                (0,
                h.trackAndLogApiError)("stories_story_complete", "Story complete request failed", e),
                (0,
                p.gZ)(e, l.Q.Stories)
            }
            await r.delete("submittableRequests", e)
        }
    }
    ,
    64184: (e, t, a) => {
        "use strict";
        a.d(t, {
            rf: () => ne,
            DG: () => ae,
            kS: () => ie,
            fN: () => oe,
            Kb: () => le,
            TS: () => ce,
            zv: () => re,
            M$: () => ue,
            J0: () => de,
            eY: () => te,
            DZ: () => se
        });
        var s = a(80254)
          , n = a(14649)
          , r = a(42659)
          , i = a(18867)
          , o = a(59604);
        var l = a(94103)
          , c = a(50791)
          , d = a(61544)
          , u = a(33)
          , g = a(9249)
          , p = a(6986)
          , m = a(20028);
        const h = e => (t, a) => {
            const s = a().user
              , n = !("username"in s) && "username"in e && (!("id"in e) || s.id === e.id);
            (0,
            p.yI)(a().config, (0,
            m.jq)(e), n) && t({
                name: "marketingOptIn",
                type: "CREATE_HOME_MESSAGE"
            })
        }
        ;
        var _ = a(9990)
          , v = a(46644)
          , f = a(7924)
          , S = a(93540)
          , y = a(93501)
          , E = a(23275)
          , b = a(79465);
        const I = ({courseId: e}) => async (t, a) => {
            var s;
            const n = a()
              , o = (0,
            r.np)(n);
            if ((0,
            y.p)(n))
                return;
            const l = (0,
            S.cb)(n)
              , c = (0,
            S.DN)(n)
              , d = null === (s = o.trackingProperties) || void 0 === s ? void 0 : s.skill_tree_id
              , u = null == l ? void 0 : l.unitIndex
              , g = void 0 !== u && c ? (0,
            E.Kq)(u, c) : void 0;
            if (d && void 0 !== u && void 0 !== g)
                try {
                    t({
                        isLoading: !0,
                        type: "SET_SCORE_INFO_LOADING"
                    });
                    const a = await i.Vi.getUserScoreStatusInfo({
                        courseId: e,
                        fields: "scores",
                        sectionIndex: g,
                        skillTreeID: d,
                        unitIndex: u
                    });
                    t({
                        courseId: e,
                        scoreStatusInfo: a,
                        type: "LOAD_USER_SCORE_INFO"
                    })
                } catch (t) {
                    (0,
                    b.trackAndLogApiError)("fetch_user_score_info_failed", `Failed to fetch user score info for course ${e}, section ${g}, unit ${u}`, t)
                } finally {
                    t({
                        isLoading: !1,
                        type: "SET_SCORE_INFO_LOADING"
                    })
                }
        }
        ;
        var w = a(15879)
          , k = a(46355)
          , T = a(73520)
          , C = a(54174)
          , R = a(83936)
          , L = a(80164)
          , P = a(3731)
          , A = a(51827)
          , D = a(70326)
          , O = a(78939)
          , N = a(54412)
          , x = a(17135)
          , M = a(64115)
          , F = a(81149)
          , U = a(35506)
          , H = a(21025)
          , G = a(15670)
          , V = a(50548)
          , z = a(60752)
          , B = a(43633)
          , j = a(33124)
          , $ = a(67116)
          , Z = a(58576)
          , W = a(36914)
          , q = a(71371)
          , Q = a(67280)
          , K = a(88787)
          , Y = a(88868)
          , J = a(30839)
          , X = a(55419)
          , ee = a(16086);
        const te = ({forNewTrialUser: e, onUserRetrieved: t, urlForStringsReload: a}={}) => async (s, p) => {
            try {
                const E = await i.Vi.userInfo((0,
                ee.Jb)(), !0 !== e)
                  , w = Date.now();
                null == t || t(E),
                (0,
                b.setDistinctId)(E.id),
                (0,
                A.N1)(E),
                s(h(E));
                const T = (0,
                N.ej)(N.Vj.RedirectToPreview);
                (0,
                m.Sk)(E) ? void 0 === T && (0,
                N.d8)(N.Vj.RedirectToPreview, "true") : "ENROLLED" === E.betaStatus ? "true" !== T && (0,
                N.d8)(N.Vj.RedirectToPreview, "true") : "true" !== T || (0,
                m.u)(E) || (0,
                N.nJ)(N.Vj.RedirectToPreview),
                $.h9 === E.fromLanguage || e || await (0,
                Y.Zs)(a),
                (0,
                m.Go)(E) && (0,
                M.R)(),
                s((0,
                _.LQ)(E.id)),
                s((0,
                _.iU)(E.id)),
                s((0,
                _.lc)(E.id)),
                s((0,
                _.MS)(E.id)),
                s({
                    type: "UPDATE_USER",
                    user: E
                }),
                F.LK(),
                s({
                    currentTimestampMs: w,
                    heartsConfig: E.health,
                    type: "UPDATE_HEARTS_STATE"
                }),
                document.hidden || "/reset_password" === window.location.pathname || (0,
                b.trackUserActive2022)({
                    activity_trigger: "user_model_update"
                }),
                s(ae()),
                s(de());
                const C = (0,
                r.Mb)(p()).ipCountry
                  , R = (0,
                Q.Ay)((0,
                r.np)(p()).plusDiscounts, Date.now());
                if (s(g.ke()).then(( () => {
                    s({
                        items: (0,
                        r.__)(p()),
                        streakData: E.streakData,
                        type: "UPDATE_STREAK_REPAIR_OFFER"
                    })
                }
                )),
                s(g.Hm(C, R, !1)),
                (0,
                m.dE)(E)) {
                    (async () => {
                        try {
                            const e = await i.bu.getUserClassrooms();
                            s({
                                classrooms: e,
                                type: "UPDATE_CLASSROOMS"
                            })
                        } catch (e) {
                            (0,
                            b.trackAndLogApiError)("load_user_classrooms_failed", "Failed to load classrooms", e)
                        }
                    }
                    )();
                    const e = Date.now()
                      , t = e - 1e3 * (0,
                    x.dz)({
                        days: 30
                    });
                    s(f.uM(t, e)),
                    i.bu.autoFollowClassmates(E.id)
                }
                if ("true" !== (0,
                N.ej)(N.Vj.Impersonate)) {
                    const e = (0,
                    x.NP)();
                    E.timezone !== e && (console.log(`Changing time zone from ${E.timezone} to ${e}`),
                    s(se({
                        timezone: e
                    })))
                }
                ["fromLanguage", "learningLanguage"].forEach((e => {
                    const t = E[e]
                      , a = `${J.Qt.LanguageTokens}.${t}`;
                    (0,
                    J.No)(a) || (async () => {
                        try {
                            (0,
                            J.LS)(a, await i._s.getLanguageTokens(t))
                        } catch (e) {
                            (0,
                            b.trackAndLogApiError)("load_user_language_tokens_failed", "Failed to load language tokens", e)
                        }
                    }
                    )()
                }
                ));
                const L = async () => {
                    try {
                        const e = await i.bG.requestGradingConfig();
                        (0,
                        O.tc)(e)
                    } catch (e) {
                        (0,
                        b.trackAndLogApiError)("load_user_grading_config_failed", "Failed to download client-side grading config.", e)
                    }
                }
                ;
                (0,
                O.gE)() && (e ? L() : await L()),
                s(c.i()),
                (0,
                B.h0)().set(j.PD),
                (0,
                B.h0)().set(U.aH.refetch, "refetch"),
                (0,
                B.h0)().set(H.kv.refetch, "refetch"),
                (0,
                B.h0)().set(X.vk.refetch, "refetch"),
                (0,
                B.h0)().set(X.vB.refetch, "refetch"),
                s(d.GG()),
                s(u.b5()),
                s(d.tD(E.id, window.duo.uiLanguage)),
                s(v._(E.id, !0)),
                s(n._()),
                s((S = E.id,
                y = E.fromLanguage,
                (e, t) => {
                    (0,
                    o.O)("web_fetch_avatars_info", void 0, (0,
                    r.Mb)(t())) || (e((e => async t => {
                        t({
                            payload: await i.Kz.getUserBuiltAvatar(e),
                            type: "SET_BUILT_AVATAR_STATE"
                        })
                    }
                    )(S)),
                    e(( (e, t) => async a => {
                        a({
                            payload: await i.Kz.getAvatarBuilderConfig(e, t),
                            type: "SET_AVATAR_BUILDER_CONFIG"
                        })
                    }
                    )(S, y)))
                }
                )),
                E.currentCourseId && s(I({
                    courseId: E.currentCourseId
                })),
                void 0 === (0,
                k.cL)(p()) && s(l.pe())
            } catch (e) {
                (0,
                b.trackAndLogApiError)("load_user_failed", "Failed to load user", e)
            }
            var S, y;
            (0,
            b.startTracking)()
        }
          , ae = () => async e => {
            try {
                const t = await i.Vi.getUserXPSummaries((0,
                ee.Jb)(), (0,
                x.zM)((0,
                x.RF)({
                    days: 365
                })));
                e({
                    type: "SET_XP_SUMMARIES",
                    xpSummaries: Object.fromEntries(t.map((e => [(0,
                    x.zK)(e.date), e])))
                })
            } catch (e) {
                (0,
                b.trackAndLogApiError)("load_xp_summaries_failed", "Failed to load xp summaries", e)
            }
        }
          , se = (e, t=!0, a=!1) => async (n, o) => {
            var l, c;
            const d = {
                trackingProperties: !0,
                ...e
            };
            delete d.currentPassword,
            "facebookToken"in e && (d.email = !0,
            d.facebookId = !0,
            d.hasFacebookId = !0,
            d.name = !0,
            delete d.facebookToken),
            "googleToken"in e && (d.email = !0,
            d.googleId = !0,
            d.hasGoogleId = !0,
            d.name = !0,
            delete d.googleToken),
            "googleIdToken"in e && (d.email = !0,
            d.googleId = !0,
            d.hasGoogleId = !0,
            d.name = !0,
            delete d.googleIdToken),
            e.learningLanguage && (d.courses = !0,
            d.currentCourse = !0),
            "password"in e && (d.name = !0,
            d.username = !0,
            delete d.password),
            "timezone"in e && (d.timezoneOffset = !0),
            "age"in e && (d.adsConfig = !0,
            d.privacySettings = !0,
            delete d.age);
            const m = a ? await G.e("SIGNUP") : null
              , _ = s.ZP.keys(d).sort()
              , v = {};
            if (e.picture instanceof File) {
                v.picture = URL.createObjectURL(e.picture);
                try {
                    await i.d0.uploadAvatar(e.picture)
                } catch {}
                delete e.picture
            }
            if (void 0 !== e.password)
                try {
                    const t = await i.Vi.checkPasswordQuality({
                        context: a ? i.Vi.PasswordContext.SIGN_UP : i.Vi.PasswordContext.CHANGE_PASSWORD,
                        password: e.password,
                        uiLanguage: window.duo.uiLanguage
                    });
                    if (!t.allowed)
                        throw new D.Wj(!1,{
                            password: t.reason
                        })
                } catch (e) {
                    if (e instanceof D.Wj)
                        throw e;
                    console.error(e)
                }
            try {
                const t = await i.Vi.userUpdate((0,
                ee.Jb)(), {
                    ...e,
                    picture: e.picture
                }, _, m);
                if (n(h(t)),
                "age"in e) {
                    const e = (0,
                    r.Mb)(o()).ipCountry
                      , t = (0,
                    Q.Ay)((0,
                    L.I9)(o()), Date.now());
                    n(g.ke()),
                    n(g.Hm(e, t, !1))
                }
                n({
                    type: "UPDATE_USER",
                    user: {
                        ...s.ZP.object(_.map((e => [e, null]))),
                        ...t,
                        ...v
                    }
                }),
                e.privacySettings && (0,
                b.track)("privacy_settings_update", {
                    public_profile: !e.privacySettings.includes("DISABLE_SOCIAL")
                });
                const a = (0,
                r.np)(o());
                if ((0,
                p.vK)(a.picture),
                a.learningLanguage) {
                    const {dailyQuest: t, coreQuest: a, hardQuest: s} = (0,
                    T.oV)(o())
                      , r = [null == t ? void 0 : t.metric, null == a ? void 0 : a.metric, null == s ? void 0 : s.metric];
                    (!1 === e.enableMicrophone && r.includes("SPEAK_CHALLENGES") || !1 === e.enableSpeaker && r.includes("LISTEN_CHALLENGES")) && n(u.Up())
                }
            } catch (e) {
                const a = t && (0,
                i.Hx)(e) ? null === (c = null === (l = e.response) || void 0 === l ? void 0 : l.data) || void 0 === c ? void 0 : c.details : void 0;
                throw t ? a ? (0,
                D.lV)(a) : {} : e
            }
        }
          , ne = e => async (t, a) => {
            const s = (0,
            r.np)(a()).blockedUserIds || [];
            s.includes(e) || (await i.i_.block(e),
            t({
                type: "UPDATE_USER",
                user: {
                    blockedUserIds: [e, ...s]
                }
            }),
            t(v._((0,
            ee.Jb)(), !0)))
        }
          , re = e => async (t, a) => {
            const s = (0,
            r.np)(a()).blockedUserIds || [];
            s.includes(e) && (await i.i_.unblock(e),
            t({
                type: "UPDATE_USER",
                user: {
                    blockedUserIds: s.filter((t => t !== e))
                }
            }))
        }
          , ie = (e="/") => async t => {
            await t(oe()),
            await (0,
            Y.Zs)(e)
        }
          , oe = () => async (e, t) => {
            await (async (e, t) => {
                const a = (0,
                C.d)(t());
                await (0,
                b.track)("sign_out", {}, !1),
                e({
                    type: "LOGOUT"
                }),
                (0,
                m.Sk)((0,
                r.np)(t())) || (0,
                J.cl)(J.Qt.LoggedOutExperiments);
                try {
                    const e = await (0,
                    z.b)();
                    await e.clear("prefetchedSessions"),
                    await e.clear("submittableRequests")
                } catch (e) {
                    (0,
                    Z.Kp)(e)
                }
                try {
                    await (0,
                    K.r1)(a)
                } catch (e) {
                    (0,
                    Z.Kp)("Failed to unsubscribe from push notifications", {
                        ex: e
                    })
                }
            }
            )(e, t),
            (0,
            C.d)(t()) || await i.d0.logout(),
            (0,
            i.ub)()
        }
          , le = (e, t) => async a => {
            try {
                if (await a(( (e, t) => async a => {
                    await (0,
                    D.pK)(e, t),
                    await a(te({
                        forNewTrialUser: !0
                    })),
                    a((async e => {
                        try {
                            e({
                                type: "UPDATE_USER",
                                user: {
                                    currentCourse: (await i.Vi.userInfoPartial((0,
                                    ee.Jb)(), ["currentCourse"])).currentCourse
                                }
                            })
                        } catch (e) {
                            (0,
                            Z.Kp)(e)
                        }
                    }
                    )),
                    (0,
                    b.track)("welcome", {})
                }
                )(e, t)),
                t && t !== $.h9) {
                    (0,
                    N.d8)(N.Vj.ShouldTrackWelcome, "true");
                    const e = W.BA.indexOf("coursePicker") + 1;
                    await (0,
                    Y.Zs)(`/welcome?${W.lE}=${W.BA[e]}`)
                } else
                    (0,
                    V.Jk)().navigate("/welcome")
            } catch {}
        }
          , ce = ({courseId: e, fromLanguage: t, learningLanguage: a, redirectToHome: s, resetScrollPosition: n}) => async (r, o) => {
            const l = window.location.pathname === Y.B6 && (0,
            R.N9)(o())({
                fromLanguageId: t,
                learningLanguageId: a
            });
            l && q.Z.start("language_switch");
            const c = {
                from_language: t,
                learning_language: a
            };
            e && (c.course_id = e),
            (0,
            b.track)("switch_language", c),
            r({
                type: "SWITCH_COURSE"
            }),
            r({
                name: "skillTreeMigration",
                type: "CAN_SHOW_HOME_MESSAGE"
            }),
            e && r(I({
                courseId: e
            })),
            s && window.location.pathname !== Y.B6 && (0,
            V.Jk)().navigate(Y.B6),
            n && P.O.scrollTo(0, 0),
            await w.SL;
            try {
                r({
                    type: "UPDATE_USER",
                    user: await i.Vi.userUpdate((0,
                    ee.Jb)(), {
                        fromLanguage: t,
                        learningLanguage: a
                    }, ["courses", "currentCourse", "fromLanguage", "learningLanguage"])
                }),
                r(u.Up()),
                l && q.Z.finish("language_switch"),
                t !== $.h9 && await (0,
                Y.Zs)()
            } catch (e) {
                (0,
                b.trackAndLogApiError)("switch_course_failed", "Failed to switch course", e)
            } finally {
                r({
                    type: "SWITCH_COURSE_END"
                })
            }
        }
          , de = () => async e => {
            try {
                const t = await i.Vi.getUserInventory();
                e({
                    inventory: s.ZP.indexBy(t, "itemName"),
                    type: "UPDATE_INVENTORY"
                })
            } catch (e) {
                (0,
                b.trackAndLogApiError)("load_user_inventory_failed", "Failed to load user inventory", e)
            }
        }
          , ue = e => async t => {
            const a = await i.Vi.updatePrivacySettings(e);
            t({
                type: "UPDATE_USER",
                user: {
                    privacySettings: a
                }
            }),
            (0,
            b.track)("privacy_settings_update", {
                public_profile: !a.includes("DISABLE_SOCIAL")
            })
        }
    }
    ,
    37993: (e, t, a) => {
        "use strict";
        a.d(t, {
            I: () => v,
            R: () => p
        });
        var s = a(80254)
          , n = a(68903)
          , r = a(795)
          , i = a(8718)
          , o = a(77042)
          , l = a(18513)
          , c = a(20662)
          , d = a(43094)
          , u = a(79465)
          , g = a(64591);
        const p = ["monthlyChallengeComplete", "streakSociety"]
          , m = {
            audio: {
                instructionId: 0,
                playState: "PAUSE",
                seekTo: 0,
                speed: 1
            },
            baseXp: 14,
            fromLanguage: void 0,
            isListenModeReadOption: !1,
            learningLanguage: void 0,
            listenModeCharacterIds: [],
            masterVersion: !1,
            mode: "READ",
            speakingDisabledLineIndex: -1,
            storyAudioLoadState: "UNDEFINED",
            trackingProperties: {}
        }
          , h = async (e, t) => (t = (0,
        g.Xh)(t),
        setTimeout(( () => (0,
        u.track)(e, t)), 0),
        Promise.resolve())
          , _ = e => {
            var t, a, s, n, r, i, o;
            const l = null === (t = e.storySession) || void 0 === t ? void 0 : t.score;
            h("stories_challenge_complete", {
                ...e.trackingProperties,
                ...null === (s = null === (a = e.storySession) || void 0 === a ? void 0 : a.challengeSession) || void 0 === s ? void 0 : s.trackingProperties,
                challenge_type: null === (r = null === (n = e.storySession) || void 0 === n ? void 0 : n.challengeSession) || void 0 === r ? void 0 : r.type,
                success: !l || !!(null === (i = e.storySession) || void 0 === i ? void 0 : i.score) && e.storySession.score > l,
                used_keyboard: null === (o = e.storySession) || void 0 === o ? void 0 : o.usedKeyboardForMatchChallenge
            })
        }
          , v = (e=(0,
        r.Dp)(m), t) => {
            var a, u, g, v, f, S, y, E, b, I, w, k, T, C, R, L, P, A, D, O, N, x, M, F, U, H, G, V, z, B, j, $, Z, W, q, Q, K, Y, J, X, ee, te, ae, se, ne, re, ie, oe, le, ce;
            switch (t.type) {
            case "stories/UNLOAD_STORY":
                return e.audio && "PLAY" === e.audio.playState && (e = (0,
                r.TS)(e, {
                    audio: (0,
                    o.EU)({
                        playState: "PAUSE"
                    })(e.audio)
                })),
                e.storyElements && (0,
                o.FG)(e.storyElements),
                (0,
                r.TS)(e, {
                    audioPrefetchState: void 0,
                    pendingAudio: void 0,
                    storyAudioLoadState: "UNDEFINED",
                    storyElements: void 0,
                    storyId: void 0,
                    storyRevision: void 0,
                    storySession: void 0,
                    trackingProperties: void 0
                });
            case "stories/SELECT_STORY":
                return (0,
                r.TS)(e, {
                    masterVersion: t.masterVersion,
                    storyId: t.storyId,
                    storySession: void 0
                });
            case "stories/SET_STORY":
                return (0,
                r.TS)(e, {
                    audioPrefetchState: t.audioPrefetchState,
                    baseXp: t.baseXp,
                    cefrLevel: t.cefrLevel,
                    conversationModeListenCharacterIds: t.conversationModeListenCharacterIds,
                    conversationModeSpeakCharacterIds: t.conversationModeSpeakCharacterIds,
                    conversationModeSpeakLineIds: t.conversationModeSpeakLineIds,
                    fallbackElements: t.fallbackElements,
                    fromLanguage: t.storyFromLanguage,
                    illustrations: t.illustrations,
                    isListenModeReadOption: t.isListenModeReadOption,
                    learningLanguage: t.storyLanguage,
                    levelData: t.levelData,
                    listenModeCharacterIds: t.listenModeCharacterIds,
                    loadTime: t.startTime,
                    mode: t.mode,
                    multiPartInfo: t.multiPartInfo,
                    showPromptsInTargetLanguage: t.showPromptsInTargetLanguage,
                    speakingDisabledLineIndex: t.speakingDisabledLineIndex,
                    storyAudioLoadState: "LOADING",
                    storyElements: t.storyElements,
                    storyFromLanguageName: t.fromLanguageName,
                    storyId: t.storyId,
                    storyRevision: t.storyRevision,
                    storySession: void 0,
                    trackingConstants: t.trackingConstants,
                    trackingProperties: t.trackingProperties
                });
            case "stories/AUDIO_FOR_ELEMENT_PREFETCHED":
                return e.audioPrefetchState ? (0,
                r.TS)(e, {
                    audioPrefetchState: (0,
                    r.TS)(e.audioPrefetchState, {
                        [t.elementIndex]: !0
                    })
                }) : e;
            case "stories/UPDATE_STORY_AUDIO_FILE_LOAD_STATE":
                return (e = (0,
                r.TS)(e, {
                    storyAudioLoadState: t.state
                })).pendingAudio && (e = (0,
                r.TS)(e, {
                    audio: e.pendingAudio,
                    pendingAudio: void 0
                })),
                e;
            case "stories/START_STORY":
                {
                    const s = {
                        elementIndex: (0,
                        i.HD)(e),
                        textIndex: 0
                    }
                      , n = {
                        completed: !1,
                        furthestPosition: s,
                        grammarCorrectionRequestStatus: "not-done",
                        hintPosition: void 0,
                        hintsUsed: [],
                        maxScore: 0,
                        onboardingStep: void 0,
                        score: 0,
                        selectedPosition: s,
                        speakCount: 0,
                        startTime: null !== (a = e.loadTime) && void 0 !== a ? a : Date.now(),
                        status: "in-progress",
                        storyCompleteRequestStatus: "ok",
                        timeline: [{
                            time: t.time / 1e3,
                            type: "line-start"
                        }],
                        viewedIntroCard: null === (u = e.storySession) || void 0 === u ? void 0 : u.viewedIntroCard
                    }
                      , l = null === (g = (e = (0,
                    r.TS)(e, {
                        storySession: n
                    })).storyElements) || void 0 === g ? void 0 : g[s.elementIndex]
                      , c = l && (0,
                    i.z_)(l);
                    if (void 0 === c)
                        throw Error("Unexpected type for first element");
                    const d = null !== (v = c.audioPrefix) && void 0 !== v ? v : c.audio
                      , p = (0,
                    o.EU)({
                        audioSyncModel: d,
                        playState: "PLAY"
                    })(e.audio)
                      , m = "LOAD_SUCCESS" === e.storyAudioLoadState;
                    return (0,
                    r.TS)(e, {
                        audio: m ? p : e.audio,
                        pendingAudio: m ? void 0 : p
                    })
                }
            case "stories/AUTO_ADVANCE_STORY_POSITION":
                {
                    const a = e.storySession
                      , s = e.storyElements
                      , n = null == s ? void 0 : s[t.position.elementIndex];
                    if ("HINT_ONBOARDING" === (null == n ? void 0 : n.type) && 0 === (null == a ? void 0 : a.hintsUsed.length) && (e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(a, {
                            onboardingStep: "newUser" === n.onboardingType ? "tap-translation-hint" : void 0
                        })
                    })),
                    (!(null == a ? void 0 : a.selectedPosition) || t.position.elementIndex > a.selectedPosition.elementIndex) && n && (0,
                    i.P3)(n)) {
                        if (void 0 === e.fromLanguage || void 0 === e.learningLanguage)
                            throw Error("From- or learning language cannot be undefined during story.");
                        const a = (0,
                        l.FE)(n, t.position.elementIndex, null !== (S = null === (f = e.storySession) || void 0 === f ? void 0 : f.hintsUsed) && void 0 !== S ? S : [], t.showLengthReducedMatchChallenge, e.fromLanguage, e.learningLanguage);
                        e = (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                challengeSession: a
                            })
                        }),
                        a && (h("stories_challenge_start", {
                            ...e.trackingProperties,
                            ...a.trackingProperties
                        }),
                        e = (0,
                        l.v5)(e))
                    }
                    return (0,
                    d.DG)(e, t.position)
                }
            case "stories/AUDIO_STOPPED":
                return (0,
                r.TS)(e, {
                    audio: {
                        ...e.audio,
                        playState: "PAUSE"
                    }
                });
            case "stories/SHOW_TRANSCRIPT_HINT":
                {
                    const a = null === (y = e.storyElements) || void 0 === y ? void 0 : y[t.position.elementIndex];
                    return h("LINE" === (null == a ? void 0 : a.type) ? "stories_story_translation_hint" : "stories_challenge_translation_hint", {
                        ...e.trackingProperties,
                        ...null == a ? void 0 : a.trackingProperties,
                        phrase: t.hint
                    }),
                    (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            hintPosition: t.position,
                            hintShownTime: t.time,
                            hintText: t.hint,
                            hintsUsed: [...null !== (b = null === (E = e.storySession) || void 0 === E ? void 0 : E.hintsUsed) && void 0 !== b ? b : [], {
                                phrase: t.text,
                                translation: t.hint
                            }]
                        })
                    })
                }
            case "stories/DISMISS_HINT":
                {
                    const a = e.storySession
                      , s = 200;
                    return (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            hintPosition: void 0,
                            hintText: void 0,
                            hintsUsed: (null == a ? void 0 : a.hintShownTime) && t.time - a.hintShownTime < s ? a.hintsUsed.slice(-1) : null == a ? void 0 : a.hintsUsed
                        })
                    })
                }
            case "stories/REPLAY_LINE_AUDIO":
                {
                    const a = e.storySession
                      , s = e.storyElements
                      , n = null == s ? void 0 : s[(0,
                    d.lo)(s, t.elementIndex, !0)];
                    if (!n || !["LINE", "HEADER", "FREEFORM_WRITING_EXAMPLE_RESPONSE", "FREEFORM_WRITING"].includes(n.type))
                        throw Error("Tried to replay an element of type other than line, header, or example response");
                    if (!(null == a ? void 0 : a.furthestPosition) || !s)
                        throw Error("No story session found when replaying audio");
                    let l = 1;
                    t.elementIndex === (null == a ? void 0 : a.previousReplayElementIndex) && (l = .6);
                    const c = ( () => {
                        var r, o;
                        switch (n.type) {
                        case "LINE":
                            return n.line.content.audioPrefix && s && (0,
                            d.O$)(s, (null == a ? void 0 : a.furthestPosition.elementIndex) || 0) === t.elementIndex + 1 && !(null === (o = null === (r = e.storySession) || void 0 === r ? void 0 : r.challengeSession) || void 0 === o ? void 0 : o.completed) ? n.line.content.audioPrefix : n.line.content.audio;
                        case "HEADER":
                            return n.learningLanguageTitleContent.audio;
                        case "FREEFORM_WRITING_EXAMPLE_RESPONSE":
                            return (0,
                            i.Au)(n);
                        case "FREEFORM_WRITING":
                            if (!a.freeformChallengeSubmittedResponseTtsUrl || !a.freeformChallengeSubmittedResponseWithHints)
                                throw Error("No TTS or hints for user's response!");
                            return (0,
                            i.Au)({
                                content: a.freeformChallengeSubmittedResponseWithHints,
                                ttsURL: a.freeformChallengeSubmittedResponseTtsUrl
                            })
                        }
                        throw Error(`No audio for "${n.type}" element`)
                    }
                    )();
                    return h("stories_audio_replay", {
                        ...e.trackingProperties,
                        ...n.trackingProperties,
                        first_replay: t.elementIndex !== a.previousReplayElementIndex,
                        furthest_line: (0,
                        d.D5)(a.furthestPosition.elementIndex, s)
                    }),
                    (0,
                    r.TS)(e, {
                        audio: (0,
                        o.EU)({
                            audioSyncModel: c,
                            playState: "PLAY",
                            speed: l
                        })(e.audio),
                        storySession: (0,
                        r.TS)(a, {
                            previousReplayElementIndex: t.elementIndex,
                            selectedPosition: {
                                elementIndex: t.elementIndex,
                                textIndex: void 0
                            }
                        })
                    })
                }
            case "stories/ADVANCE_STORY_POSITION":
                {
                    e = (0,
                    r.TS)(e, {
                        audio: (0,
                        r.TS)(e.audio, {
                            playError: !1
                        })
                    }),
                    e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            hintPosition: void 0
                        })
                    });
                    const a = (e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            timeline: [...null !== (w = null === (I = e.storySession) || void 0 === I ? void 0 : I.timeline) && void 0 !== w ? w : [], {
                                time: t.time / 1e3,
                                type: "line-start"
                            }]
                        })
                    })).storyElements;
                    if (!a)
                        throw Error("No story element list found");
                    const s = null === (k = e.storySession) || void 0 === k ? void 0 : k.furthestPosition.elementIndex
                      , n = t.position.elementIndex
                      , u = a[n]
                      , g = a[(0,
                    d.lo)(a, n, void 0 !== (null === (T = e.storySession) || void 0 === T ? void 0 : T.freeformChallengeSubmittedResponseTtsUrl))];
                    (!s || n > s) && (e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: void 0
                        })
                    }));
                    const p = "LINE" === u.type && e.storyElements && "CONVERSATION" === e.mode && -1 === e.speakingDisabledLineIndex && "SPEAK" === (0,
                    c.gu)({
                        conversationModeSpeakCharacterIds: null !== (C = e.conversationModeSpeakCharacterIds) && void 0 !== C ? C : [],
                        conversationModeSpeakLineIds: null !== (R = e.conversationModeSpeakLineIds) && void 0 !== R ? R : [],
                        line: u.line,
                        lineIndex: (0,
                        i.IG)(u),
                        listenModeCharacterIds: [],
                        mode: e.mode,
                        nextElement: a[n + 1]
                    });
                    if (u && (0,
                    i.P3)(u) || p) {
                        if (void 0 === e.fromLanguage || void 0 === e.learningLanguage)
                            throw Error("From- or learning language cannot be undefined during story.");
                        const a = (0,
                        l.FE)(u, n, null !== (P = null === (L = e.storySession) || void 0 === L ? void 0 : L.hintsUsed) && void 0 !== P ? P : [], t.showLengthReducedMatchChallenge, e.fromLanguage, e.learningLanguage);
                        e = (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                challengeSession: a
                            })
                        }),
                        a && (h("stories_challenge_start", {
                            ...e.trackingProperties,
                            ...a.trackingProperties
                        }),
                        e = (0,
                        l.v5)(e))
                    }
                    const m = "LINE" === (null == u ? void 0 : u.type) ? t.position : {
                        ...t.position,
                        textIndex: "LINE" === (null == g ? void 0 : g.type) ? g.line.content.text.length - 1 : 0
                    };
                    e = (0,
                    d.DG)(e, m);
                    const _ = a[m.elementIndex]
                      , v = (0,
                    i.z_)(_);
                    if (v) {
                        const a = null !== (A = v.audioPrefix) && void 0 !== A ? A : v.audio;
                        e = (0,
                        r.t8)(e, "audio", (0,
                        o.EU)({
                            audioSyncModel: a,
                            playState: "PLAY",
                            seekTo: (0,
                            d.SU)(a, null !== (D = m.textIndex) && void 0 !== D ? D : 0),
                            speed: t.playbackRate
                        })(e.audio))
                    }
                    return e
                }
            case "stories/SELECT_MULTIPLE_CHOICE":
                {
                    let a;
                    if (!e.storySession)
                        throw Error("No story session found");
                    const s = e.storySession.furthestPosition
                      , n = e.storySession.challengeSession;
                    if ("multiple-choice" !== (null == n ? void 0 : n.type))
                        throw Error("Unexpected challenge type");
                    const c = (0,
                    r.t8)(e.storySession, "challengeSession", (n => {
                        var i;
                        const l = [...n.selectedIndices, t.index]
                          , c = void 0 !== n.additionalCorrectAnswerIndices && n.additionalCorrectAnswerIndices.length > 0
                          , d = c ? n.additionalCorrectAnswerIndices.every((e => l.includes(e))) && l.includes(n.correctAnswerIndex) : l.includes(n.correctAnswerIndex)
                          , u = null === (i = e.storyElements) || void 0 === i ? void 0 : i[s.elementIndex - 1];
                        d && "LINE" === (null == u ? void 0 : u.type) && u.line.content.audioSuffix && (a = (0,
                        o.EU)({
                            audioSyncModel: u.line.content.audioSuffix,
                            playState: "PLAY"
                        }));
                        const g = {
                            mistakeCount: t.index === n.correctAnswerIndex || c && n.additionalCorrectAnswerIndices.includes(t.index) ? n.mistakeCount : n.mistakeCount + 1,
                            selectedIndices: l
                        };
                        return (0,
                        r.TS)(n, g)
                    }
                    )(n));
                    e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, c)
                    }),
                    a && (e = (0,
                    r.t8)(e, "audio", a(e.audio))),
                    (0,
                    i.Xq)(n.correctAnswerIndex, t.index, n.selectedIndices, n.additionalCorrectAnswerIndices) && (e = (0,
                    l.Q5)(e),
                    _(e));
                    const d = null === (O = e.storySession) || void 0 === O ? void 0 : O.challengeSession;
                    return h("stories_select_multiple_choice", {
                        ...e.trackingProperties,
                        ...n.trackingProperties,
                        select_method: t.selectMethod,
                        success: !!d && 0 === d.mistakeCount
                    }),
                    e
                }
            case "stories/SELECT_PHRASE":
                {
                    if ("select-phrases" !== (null === (x = null === (N = e.storySession) || void 0 === N ? void 0 : N.challengeSession) || void 0 === x ? void 0 : x.type))
                        throw Error("Unexpected type");
                    const a = null === (M = e.storySession) || void 0 === M ? void 0 : M.challengeSession
                      , s = t.optionIndex === a.correctAnswerIndex ? 0 : 1;
                    e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(e.storySession.challengeSession, {
                                mistakeCount: e.storySession.challengeSession.mistakeCount + s,
                                selectedIndices: [...e.storySession.challengeSession.selectedIndices, t.optionIndex]
                            })
                        })
                    }),
                    t.optionIndex === a.correctAnswerIndex && (e = (0,
                    l.Q5)(e),
                    _(e));
                    const n = null === (F = e.storySession) || void 0 === F ? void 0 : F.challengeSession;
                    return h("stories_select_multiple_choice", {
                        ...e.trackingProperties,
                        ...a.trackingProperties,
                        select_method: t.selectMethod,
                        success: !!n && 0 === n.mistakeCount
                    }),
                    e
                }
            case "stories/SELECT_MATCH_TOKEN":
                {
                    if ("match" !== (null === (H = null === (U = e.storySession) || void 0 === U ? void 0 : U.challengeSession) || void 0 === H ? void 0 : H.type))
                        throw Error("Challenge type is incorrect. It should be 'match'.");
                    const a = e.storySession.challengeSession
                      , n = s.cx(a.tokens, {
                        status: "selected"
                    })
                      , i = a.tokens[n]
                      , o = a.tokens[t.index];
                    if (t.index === n)
                        e = (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                challengeSession: (0,
                                r.TS)(a, {
                                    tokens: a.tokens.map(( (e, a) => a === t.index ? (0,
                                    r.t8)(e, "status", "initial") : e))
                                })
                            })
                        });
                    else if (i && i.language !== o.language) {
                        const s = a.dictionary[`from:${i.text}`]
                          , c = o.text === s ? "correct" : "incorrect"
                          , d = a.tokens.map(( (e, a) => a === t.index || a === n ? (0,
                        r.t8)(e, "status", c) : e))
                          , u = "correct" === c && d.every((e => "correct" === e.status));
                        e = (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                challengeSession: (0,
                                r.TS)(a, {
                                    mistakeCount: a.mistakeCount + ("incorrect" === c ? 1 : 0),
                                    tokens: d
                                })
                            })
                        }),
                        u && (e = (0,
                        l.Q5)(e),
                        _(e))
                    } else
                        e = (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                challengeSession: (0,
                                r.TS)(a, {
                                    tokens: a.tokens.map(( (e, a) => a === t.index ? (0,
                                    r.t8)(e, "status", "selected") : a === n || "incorrect" === e.status ? (0,
                                    r.t8)(e, "status", "initial") : e))
                                })
                            })
                        });
                    return e
                }
            case "stories/SELECT_ARRANGE_PHRASE":
                {
                    const a = null === (G = e.storySession) || void 0 === G ? void 0 : G.challengeSession;
                    if ("arrange" !== (null == a ? void 0 : a.type))
                        throw Error("Unexpected type");
                    const s = null === (V = e.storySession) || void 0 === V ? void 0 : V.furthestPosition
                      , n = s ? null === (z = e.storyElements) || void 0 === z ? void 0 : z[s.elementIndex] : void 0;
                    if ("ARRANGE" !== (null == n ? void 0 : n.type))
                        throw Error("Unexpected challenge type");
                    if (n.selectablePhrases[t.index] === n.selectablePhrases[n.phraseOrder[a.arrangedPhrases]]) {
                        const s = [...a.phraseOrder];
                        t.index !== n.phraseOrder[a.arrangedPhrases] && (s[a.arrangedPhrases] = t.index,
                        s[s.indexOf(t.index)] = n.phraseOrder[a.arrangedPhrases]);
                        const i = a.arrangedPhrases + 1;
                        return e = (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                challengeSession: (0,
                                r.TS)(a, {
                                    arrangedPhrases: i,
                                    phraseOrder: s,
                                    selectedIncorrectIndices: []
                                })
                            })
                        }),
                        i >= n.selectablePhrases.length && (e = (0,
                        l.Q5)(e),
                        _(e)),
                        e
                    }
                    return (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(a, {
                                mistakeCount: a.selectedIncorrectIndices.includes(t.index) ? a.mistakeCount : a.mistakeCount + 1,
                                selectedIncorrectIndices: [...a.selectedIncorrectIndices.filter((e => e !== t.index)), t.index]
                            })
                        })
                    })
                }
            case "stories/SET_STORY_COMPLETE_REQUEST_STATUS":
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        storyCompleteRequestStatus: t.status
                    })
                });
            case "stories/SET_GRAMMAR_CORRECTION_REQUEST_STATUS":
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        grammarCorrectionRequestStatus: t.status,
                        grammarCorrectionTimeTaken: t.timeTaken
                    })
                });
            case "stories/COMPLETE_STORY":
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        challengeSession: void 0,
                        nextMode: t.nextMode,
                        onboardingStep: void 0,
                        pendingStoryEndSections: (0,
                        r.Dp)(t.storyEndSections),
                        status: "story-end",
                        storyCompleteRequestStatus: "ok",
                        visibleStoryEndSections: (0,
                        r.Dp)([])
                    })
                });
            case "stories/SHOW_NEXT_STORY_END_SECTION":
                {
                    if (!(null === (B = e.storySession) || void 0 === B ? void 0 : B.furthestPosition))
                        return e;
                    if ((0,
                    d.DG)(e, e.storySession.furthestPosition),
                    !e.storySession.pendingStoryEndSections)
                        return e;
                    if (e.storySession.pendingStoryEndSections.length < t.increment)
                        return (0,
                        r.TS)(e, {
                            storySession: (0,
                            r.TS)(e.storySession, {
                                status: "completed"
                            })
                        });
                    const a = e.storySession.pendingStoryEndSections[t.increment - 1]
                      , s = e.storySession.pendingStoryEndSections.slice(t.increment);
                    (null === ($ = null === (j = e.storySession) || void 0 === j ? void 0 : j.pendingStoryEndSections) || void 0 === $ ? void 0 : $.length) && h("stories_show_end_section", {
                        end_section_position: null !== (W = null === (Z = e.storySession.visibleStoryEndSections) || void 0 === Z ? void 0 : Z.length) && void 0 !== W ? W : 0,
                        end_section_type: a.type,
                        total_end_sections: (null !== (Q = null === (q = e.storySession.visibleStoryEndSections) || void 0 === q ? void 0 : q.length) && void 0 !== Q ? Q : 0) + e.storySession.pendingStoryEndSections.length
                    });
                    const i = void 0 !== e.storySession.fullscreenStoryEndSection
                      , o = (0,
                    n.p)(p)(a.type) ? a : void 0;
                    return (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            fullscreenStoryEndSection: o,
                            pendingStoryEndSections: s,
                            status: 0 === s.length ? "completed" : "story-end",
                            useImmediateScrolling: i,
                            visibleStoryEndSections: [...null !== (K = e.storySession.visibleStoryEndSections) && void 0 !== K ? K : [], a]
                        })
                    })
                }
            case "stories/SET_EDITING_TEXT":
                return (null === (Y = e.storySession) || void 0 === Y ? void 0 : Y.challengeSession) ? (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        challengeSession: (0,
                        r.TS)(e.storySession.challengeSession, {
                            answer: t.text
                        })
                    })
                }) : e;
            case "stories/SET_CORRECTED_TEXT":
                return "freeform-writing" !== (null === (X = null === (J = e.storySession) || void 0 === J ? void 0 : J.challengeSession) || void 0 === X ? void 0 : X.type) ? e : (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        challengeSession: (0,
                        r.TS)(e.storySession.challengeSession, {
                            answer: t.correctedText,
                            fetchedCorrection: t.correctedText
                        }),
                        freeformChallengeCorrectedResponse: t.correctedText,
                        freeformChallengeCorrectionId: t.correctionId,
                        freeformChallengeCorrectionModel: t.model,
                        freeformChallengeCorrectionModelVersion: t.modelVersion,
                        freeformChallengeOriginalResponse: t.originalText
                    })
                });
            case "stories/RE_EDIT_TEXT":
                return (null === (ee = e.storySession) || void 0 === ee ? void 0 : ee.challengeSession) ? (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        challengeSession: (0,
                        r.TS)(e.storySession.challengeSession, {
                            allowEditAfterGrammarCheck: !0
                        })
                    })
                }) : e;
            case "stories/DISMISS_CORRECTION":
                {
                    const a = null === (te = e.storySession) || void 0 === te ? void 0 : te.challengeSession;
                    return "freeform-writing" !== (null == a ? void 0 : a.type) ? e : (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(a, {
                                answer: t.text,
                                numberOfCorrectionsDismissed: a.numberOfCorrectionsDismissed + 1
                            })
                        })
                    })
                }
            case "stories/START_CHALLENGE":
                {
                    const a = null === (ae = e.storySession) || void 0 === ae ? void 0 : ae.challengeSession;
                    return a && "freeform-writing" === a.type ? (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(a, {
                                startTime: t.startTime
                            })
                        })
                    }) : e
                }
            case "stories/DID_SCROLL_DURING_FREEFORM_CHALLENGE":
                {
                    const t = null === (se = e.storySession) || void 0 === se ? void 0 : se.challengeSession;
                    return t && "freeform-writing" === t.type ? (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(t, {
                                didScroll: !0
                            })
                        })
                    }) : e
                }
            case "stories/TYPE_TEXT_SUBMIT":
                return e = (0,
                l.vX)(e, t.gradingResult),
                e = (0,
                l.Q5)(e),
                _(e),
                e;
            case "stories/FREEFORM_WRITING_SUBMIT":
                return e = (0,
                l.Om)(e),
                e = (0,
                l.Q5)(e),
                _(e),
                (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        freeformChallengeSubmittedResponseWithHints: t.responseWithHints,
                        responseTtsStatus: "done"
                    })
                });
            case "stories/ONBOARDING_HINT_VIEWED":
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        onboardingStep: void 0
                    })
                });
            case "stories/ANSWER_POINT_TO_PHRASE":
                {
                    const a = null === (ne = e.storySession) || void 0 === ne ? void 0 : ne.challengeSession;
                    if ("point-to-phrase" !== (null == a ? void 0 : a.type))
                        throw Error("Unexpected type");
                    const n = a.correctAnswerIndex
                      , o = a.additionalCorrectAnswerIndices
                      , c = t.partIndex === a.correctAnswerIndex || (null == o ? void 0 : o.includes(t.partIndex));
                    return e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(a, {
                                mistakeCount: a.mistakeCount + (c ? 0 : 1),
                                selectedIndices: s.G0(a.selectedIndices, [t.partIndex])
                            })
                        })
                    }),
                    (0,
                    i.Xq)(n, t.partIndex, a.selectedIndices, o) && (e = (0,
                    l.Q5)(e),
                    _(e)),
                    e
                }
            case "stories/SET_AUDIO_ERROR":
                return (0,
                r.tP)(e, ["audio", "playError"], !0);
            case "stories/SET_LINE_AUDIO_DURATION":
                return (0,
                r.tP)(e, ["audio", "duration"], t.duration);
            case "stories/SKIP_CHALLENGE":
                {
                    const t = null === (re = e.storySession) || void 0 === re ? void 0 : re.challengeSession;
                    if ("freeform-writing" !== (null == t ? void 0 : t.type))
                        throw Error("Attempted to skip unskippable challenge");
                    return (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(t, {
                                skipped: !0
                            })
                        })
                    })
                }
            case "stories/SET_HOOTS_USER_PROPERTIES":
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        freeformUserProperties: t.properties
                    })
                });
            case "stories/FREEFORM_WRITING_SET_TTS_URL":
                if ("freeform-writing" !== (null === (oe = null === (ie = e.storySession) || void 0 === ie ? void 0 : ie.challengeSession) || void 0 === oe ? void 0 : oe.type))
                    throw Error("Unexpected challenge type");
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        freeformChallengeSubmittedResponseTtsUrl: t.url
                    })
                });
            case "stories/FREEFORM_WRITING_PREPARE_SUBMIT":
                return (0,
                r.TS)(e, {
                    storySession: (0,
                    r.TS)(e.storySession, {
                        responseTtsStatus: "in-progress"
                    })
                });
            case "stories/USED_KEYBOARD_FOR_MATCH_CHALLENGE":
                return (0,
                r.tP)(e, ["storySession", "usedKeyboardForMatchChallenge"], !0);
            case "stories/GRADE_SPEAK_LINE":
                {
                    const a = null === (le = e.storySession) || void 0 === le ? void 0 : le.challengeSession;
                    if ("speak" !== (null == a ? void 0 : a.type))
                        throw Error(`Unexpected speak challenge on ${null == a ? void 0 : a.type}`);
                    return e = (0,
                    r.TS)(e, {
                        storySession: (0,
                        r.TS)(e.storySession, {
                            challengeSession: (0,
                            r.TS)(a, {
                                mistakeCount: !0 === t.correct || !0 === t.skipped ? 0 : 1,
                                skipped: t.skipped
                            })
                        })
                    }),
                    e = (0,
                    l.Q5)(e),
                    _(e),
                    e
                }
            case "DISABLE_SPEAK":
                {
                    if (void 0 === e.storySession)
                        return e;
                    const t = e.storyElements
                      , a = null === (ce = e.storySession) || void 0 === ce ? void 0 : ce.furthestPosition.elementIndex
                      , s = t && a ? t[a] : void 0;
                    if ("LINE" !== (null == s ? void 0 : s.type))
                        throw Error(`Unexpected switch to fall back ${null == s ? void 0 : s.type}`);
                    const n = e.fallbackElements;
                    if (!n)
                        throw Error("No fallback elements");
                    if (!t)
                        throw Error("No elements");
                    const o = (0,
                    i.IG)(s)
                      , l = (0,
                    i.BT)(o, t)
                      , c = t.slice(0, l)
                      , d = (0,
                    i.BT)(o, n)
                      , u = [...c, ...n.slice(d, n.length)];
                    return (0,
                    r.TS)(e, {
                        speakingDisabledLineIndex: o,
                        storyElements: u
                    })
                }
            case "stories/VIEWED_INTRO_CARD":
                return (0,
                r.tP)(e, ["storySession", "viewedIntroCard"], !0)
            }
            return e
        }
    }
    ,
    42659: (e, t, a) => {
        "use strict";
        a.d(t, {
            $4: () => V,
            Al: () => ve,
            B8: () => G,
            Bk: () => z,
            Ch: () => T,
            Cm: () => ae,
            EQ: () => u,
            F$: () => me,
            Fp: () => Z,
            Jw: () => A,
            Lm: () => j,
            M6: () => de,
            MY: () => U,
            Mb: () => l,
            NR: () => re,
            NT: () => Q,
            Oz: () => H,
            Rg: () => _e,
            Rv: () => d,
            S1: () => ce,
            SJ: () => h,
            Sf: () => ge,
            Sg: () => g,
            Xr: () => S,
            Y2: () => ne,
            Y4: () => K,
            YW: () => _,
            Zk: () => o,
            __: () => y,
            aQ: () => X,
            bE: () => f,
            bR: () => i,
            c1: () => pe,
            cQ: () => D,
            dE: () => c,
            dY: () => ee,
            dz: () => W,
            eI: () => le,
            ep: () => v,
            ez: () => m,
            fI: () => b,
            fn: () => te,
            gl: () => ie,
            hp: () => w,
            hy: () => M,
            iH: () => I,
            iM: () => F,
            is: () => x,
            jv: () => r,
            lA: () => C,
            mk: () => p,
            nI: () => ue,
            nW: () => he,
            np: () => O,
            oe: () => L,
            r8: () => J,
            rF: () => k,
            rx: () => oe,
            tz: () => $,
            uZ: () => Y,
            vw: () => B,
            w0: () => R,
            wG: () => q,
            wW: () => P,
            yW: () => N,
            yk: () => se
        });
        var s = a(30427);
        const n = e => e.avatars
          , r = e => e.browserSettings
          , i = e => e.ui.canShowAgeRestrictedLeaderboardsIntro
          , o = e => e.characters
          , l = e => e.config
          , c = e => e.courses
          , d = e => e.user.fromLanguage
          , u = e => e.ui.homeMessagingClientState
          , g = e => void 0 !== e.ui.drawer && void 0 !== e.ui.modal
          , p = e => void 0 !== e.ui.drawer || void 0 !== e.ui.modal
          , m = e => e.ui.isInventoryFresh
          , h = e => void 0 !== e.ui.modal
          , _ = e => e.ui.online
          , v = e => void 0 !== e.ui.secondaryModal
          , f = e => e.ui.isShopItemsFresh
          , S = e => e.ui.isUserModelFresh
          , y = e => e.items
          , E = e => e.profile
          , b = e => e.uiPersisted.skippedLevelInfo
          , I = e => e.user.learningLanguage
          , w = ({}, e) => e.location
          , k = e => e.ui.modal
          , T = e => e.paymentMethods
          , C = e => e.player
          , R = e => e.animations
          , L = e => e.skills
          , P = e => e.friends.subscriptions
          , A = e => e.ui
          , D = e => e.uiPersisted
          , O = e => e.user
          , N = s.P1(A, (e => e.isAvatarUploading))
          , x = s.P1(C, (e => e.session))
          , M = s.P1(C, x, ( (e, t) => t && (e.currentIndex === t.challenges.length - 1 || e.endedEarly || "sessionHearts" === e.heartsType && t.heartsLeft <= 0)))
          , F = s.P1(x, (e => {
            var t;
            return null !== (t = null == e ? void 0 : e.challenges.filter((e => {
                var t;
                return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
            }
            ))) && void 0 !== t ? t : []
        }
        ))
          , U = s.P1(C, x, ( (e, t) => null == t ? void 0 : t.challenges[e.currentIndex]))
          , H = s.P1(c, O, ( (e, t) => {
            var a, s;
            const n = void 0 === t.currentCourseId ? void 0 : e[t.currentCourseId];
            if (void 0 !== n) {
                if ((null !== (s = null === (a = n.pathSectioned) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) > 0 && (void 0 === n.path || 0 === n.path.length)) {
                    const e = n.pathSectioned.flatMap((e => e.units));
                    return {
                        ...n,
                        path: e
                    }
                }
                return n
            }
        }
        ))
          , G = s.P1((e => e.courseHistories), H, ( (e, t) => e[t.id]))
          , V = s.P1(A, (e => e.viewportWidth >= 700))
          , z = s.P1(A, (e => e.viewportWidth < 530))
          , B = s.P1(A, (e => !!e.purchasingItem))
          , j = s.P1(O, (e => !!e.id))
          , $ = s.P1(O, (e => e.streakRepairOffer))
          , Z = s.P1(A, (e => e.popover))
          , W = s.P1(E, (e => e.privateProfile))
          , q = s.P1(E, (e => e.builtAvatar))
          , Q = s.P1(E, (e => e.user))
          , K = s.P1(E, (e => e.socialProfile))
          , Y = s.P1(E, (e => e.firstPersonSocialProfile))
          , J = s.P1(E, (e => e.achievements))
          , X = s.P1(E, (e => e.xpEvents))
          , ee = s.P1(O, (e => e.id))
          , te = s.P1(y, (e => e.inventory.premium_subscription))
          , ae = s.P1(te, (e => null == e ? void 0 : e.subscriptionInfo))
          , se = s.P1(y, (e => e.inventory.immersive_subscription))
          , ne = s.P1(y, (e => {
            var t, a;
            return null !== (a = null !== (t = e.inventory.premium_subscription) && void 0 !== t ? t : e.inventory.gold_subscription) && void 0 !== a ? a : e.inventory.immersive_subscription
        }
        ))
          , re = s.P1(y, (e => {
            var t;
            return null !== (t = e.inventory.premium_subscription) && void 0 !== t ? t : e.inventory.gold_subscription
        }
        ))
          , ie = s.P1(C, (e => {
            var t, a;
            return null !== (a = null === (t = e.sessionParams) || void 0 === t ? void 0 : t.isGrammarSkill) && void 0 !== a && a
        }
        ))
          , oe = e => e.user.gemsConfig
          , le = e => !!e.stories.storySession || !!e.player.session
          , ce = s.P1(D, (e => e.streakSocietyRewardClaimed))
          , de = s.P1(D, (e => e.streakSocietyInductionSlideShownTime))
          , ue = s.P1(y, (e => {
            var t, a, s, n;
            return (null !== (a = null === (t = e.inventory.streak_freeze) || void 0 === t ? void 0 : t.quantity) && void 0 !== a ? a : 0) + (null !== (n = null === (s = e.inventory.society_streak_freeze) || void 0 === s ? void 0 : s.quantity) && void 0 !== n ? n : 0)
        }
        ))
          , ge = s.P1(n, (e => e.builderConfig))
          , pe = (s.P1(n, (e => {
            var t;
            return null === (t = e.builderConfig) || void 0 === t ? void 0 : t.riveFileUrl
        }
        )),
        s.P1(n, (e => e.builtAvatar)))
          , me = s.P1(n, (e => e.canShowAvatarsIntro))
          , he = s.P1(A, (e => e.swrlEngagement))
          , _e = s.P1(A, (e => e.storyModeSWRLEngagement))
          , ve = s.P1((e => e.streakEarnback), (e => e.earnbackMultiSessionStats))
    }
    ,
    46355: (e, t, a) => {
        "use strict";
        a.d(t, {
            Y2: () => c,
            cL: () => o,
            tZ: () => l
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(16970)
          , i = a(34704);
        const o = s.P1(n.Zk, n.Oz, ( (e, t) => {
            const a = (0,
            i.LP)(t.learningLanguage, t.fromLanguage);
            return e.characterState[a]
        }
        ))
          , l = s.P1(o, (e => {
            var t;
            const a = null == e ? void 0 : e.activeAlphabetId;
            return null === (t = null == e ? void 0 : e.characterChart) || void 0 === t ? void 0 : t.alphabets.find((e => e.id === a))
        }
        ))
          , c = s.P1(l, (e => {
            var t;
            return (0,
            r.HZ)(null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "")
        }
        ))
    }
    ,
    73520: (e, t, a) => {
        "use strict";
        a.d(t, {
            Ap: () => I,
            B$: () => p,
            Cu: () => h,
            D_: () => o,
            EL: () => d,
            MI: () => k,
            Rc: () => y,
            TE: () => v,
            Ti: () => b,
            W1: () => S,
            ey: () => u,
            gD: () => E,
            jK: () => m,
            kK: () => _,
            oO: () => f,
            oV: () => c,
            uL: () => w,
            x2: () => g,
            xm: () => l
        });
        var s = a(30427)
          , n = a(80254)
          , r = a(41831)
          , i = a(16689);
        const o = e => e.goals
          , l = s.P1(o, (e => n.HK(e.schema, "goalId")))
          , c = s.P1(o, l, ( (e, t) => ({
            coreQuest: e.coreQuest ? t[e.coreQuest] : void 0,
            dailyQuest: e.dailyQuest ? t[e.dailyQuest] : void 0,
            difficulty: e.difficulty,
            hardQuest: e.hardQuest ? t[e.hardQuest] : void 0,
            lastUpdated: e.lastUpdated
        })))
          , d = s.P1(o, (e => e.progress))
          , u = s.P1(o, (e => e.friendsQuest.details))
          , g = s.P1(o, (e => e.friendsQuest.highFiveTimestamp))
          , p = s.P1(o, (e => e.friendsQuest.lastSentGiftTimestamp))
          , m = s.P1(o, (e => e.friendsQuest.lastSentNudge))
          , h = s.P1(u, (e => null == e ? void 0 : e.winStreak))
          , _ = s.P1(o, (e => e.lastSeenNextFriendsQuestStart))
          , v = s.P1(o, (e => e.monthlyQuestTheme))
          , f = s.P1(o, (e => n.HK(e.badges, "badgeId")))
          , S = s.P1(o, (e => e.monthlyQuest))
          , y = s.P1(o, f, ( (e, t) => n.MR(e.earnedBadges, "earnedTimestamp").reverse().map((e => ({
            ...t[e.badgeId],
            ...e
        }))).filter((t => void 0 !== e.schema.find((e => e.badgeId === t.badgeId))))))
          , E = s.P1(o, (e => {
            var t;
            const a = e.schema
              , s = e.monthlyQuest;
            return null === (t = a.find((e => e.goalId === s))) || void 0 === t ? void 0 : t.badgeId
        }
        ))
          , b = s.P1(o, d, l, ( (e, t, a) => [e.coreQuest, e.dailyQuest, e.hardQuest].filter((s => {
            if (s && t) {
                const n = a[s];
                return t[s] >= (0,
                r.ng)(e.difficulty, n)
            }
            return !1
        }
        )).length))
          , I = s.P1(o, l, ( (e, t) => {
            var a;
            return e.monthlyQuest ? null === (a = t[e.monthlyQuest]) || void 0 === a ? void 0 : a.threshold : 30
        }
        ))
          , w = s.P1(o, d, I, ( (e, t, a) => !(!e.monthlyQuest || !t) && t[e.monthlyQuest] >= a))
          , k = s.P1(f, E, ( (e, t) => t ? (0,
        i.br)(e[t]) : void 0))
    }
    ,
    74462: (e, t, a) => {
        "use strict";
        a.d(t, {
            LG: () => d,
            MQ: () => c,
            q0: () => i,
            sJ: () => l,
            su: () => o
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(1);
        const i = e => e.heartsState
          , o = s.P1([n.np, i, n.Y2, n.Oz], ( (e, t, a, s) => (0,
        r.Ef)(e, t, a, s)))
          , l = s.P1([o, i], ( (e, t) => r.$E.includes(e) && t.unlimitedHeartsShieldIsOff))
          , c = s.P1([o, l], ( (e, t) => "schools" === e || t))
          , d = s.P1([i, c], ( (e, t) => t && (0,
        r.is)(e)))
    }
    ,
    54174: (e, t, a) => {
        "use strict";
        a.d(t, {
            d: () => r
        });
        var s = a(30427)
          , n = a(64115);
        const r = s.P1((e => e.zombieMode.status), (e => (0,
        n.gQ)("debugZombieMode") || "enabled" === e))
    }
    ,
    4060: (e, t, a) => {
        "use strict";
        a.d(t, {
            Kh: () => P,
            oG: () => D,
            av: () => O,
            fx: () => A,
            WB: () => N
        });
        var s = a(30427)
          , n = a(80254)
          , r = a(42659)
          , i = a(54174)
          , o = a(93540)
          , l = a(15307)
          , c = a(80164)
          , d = a(35160)
          , u = a(64115)
          , g = a(20041)
          , p = a(16970)
          , m = a(54412)
          , h = a(17135)
          , _ = a(57593)
          , v = a(37825)
          , f = a(64865)
          , S = a(25447)
          , y = a(23275)
          , E = a(67280)
          , b = a(88787)
          , I = a(88868)
          , w = a(51551)
          , k = a(81621)
          , T = a(20028);
        const C = {
            charactersTabCallout: ({user: e}) => (0,
            p.S9)(e.learningLanguage, e.fromLanguage) && !("ja" === e.learningLanguage && "en" === e.fromLanguage),
            dogfoodingPreview: e => ( ({homeMessagingClientState: e}) => e.dogfoodingPreview)(e) && (0,
            T.u)(e.user) && window.location.host !== I.Vb && window.location.host !== I.a_ && void 0 === (0,
            m.ej)(m.Vj.RedirectToPreview),
            dynamic: () => !0,
            emailVerified: ({isDesktop: e, user: t}) => t.persistentNotifications.includes(g.Qd.emailVerified) && e && !(0,
            T.pN)(t),
            friendsStreakLoss: ({friendStreakData: e, user: t}) => (0,
            _.m7)(t) && void 0 !== e.optimisticUpdated.matchInfo && (0,
            _.sE)(e.optimisticUpdated.matchInfo.endedConfirmedMatches).length > 0,
            friendsStreakOffer: ({homeMessagingClientState: e, friendStreakData: t, user: a}) => (0,
            _.m7)(a) && !0 === e.friendsStreakOffer && void 0 !== t.matchInfo && t.matchInfo.emptySlots > 0 && (0,
            _.N0)(t).length > 0,
            guidebookCallout: ({path: e, user: t}) => {
                var a;
                if (!e)
                    return !1;
                const {unitIndex: s} = null !== (a = (0,
                y.Bm)(e)) && void 0 !== a ? a : {};
                return void 0 !== s && !!e[s].guidebook && t.sessionCount >= 3
            }
            ,
            immersivePlusPromo: ({homeMessagingClientState: e, isDesktop: t, user: a}) => e.immersivePlusPromo && t && !(0,
            T.pN)(a),
            kudosOffer: ({kudosDrawer: e, kudosAssets: t}) => !!e && "OFFER" === e.notificationType && void 0 !== t[e.kudosIcon] && void 0 !== t[e.actionIcon],
            kudosReceive: ({kudosDrawer: e, kudosAssets: t}) => !!e && "RECEIVE" === e.notificationType && void 0 !== t[e.actionIcon],
            leaderboardsIntro: ({sessionsToUnlockLeagues: e, user: t}) => t.persistentNotifications.includes(g.Qd.leaderboardsIntro) && 0 === e,
            legendaryRebrandGoldColor: ({path: e}) => (0,
            v.lZ)(e),
            maintenanceBreak: () => !1,
            marketingOptIn: ({homeMessagingClientState: e}) => e.marketingOptIn,
            mobileWebToAppConversion: ({isDesktop: e, homeMessagingClientState: t}) => t.mobileWebToAppConversion && (0,
            f.WV)(e),
            mobileWebToAppConversionAggressive: ({isDesktop: e}) => (0,
            f.WV)(e),
            newYearsDiscount: ({homeMessagingClientStatePersisted: e, user: t}) => {
                var a;
                const s = Date.now()
                  , n = (0,
                k.yS)(t)
                  , r = (0,
                E.p4)(t.plusDiscounts, s);
                return r && void 0 === (null === (a = e.newYearsDiscount) || void 0 === a ? void 0 : a.lastShown) && (n || r.expirationTime - s <= 2 * h.Mb)
            }
            ,
            pathChange: ({currentCourse: e, homeMessagingClientState: t, path: a}) => {
                var s;
                return !!a && t.pathChange && (null === (s = e.pathDetails) || void 0 === s ? void 0 : s.clientNotifications.some((e => "pathChange" === (0,
                S.c)(e).id)))
            }
            ,
            pathMigration: ({currentCourse: e, homeMessagingClientState: t, path: a}) => {
                var s;
                return !!a && t.pathMigration && (null === (s = e.pathDetails) || void 0 === s ? void 0 : s.clientNotifications.some((e => "pathMigration" === (0,
                S.c)(e).id)))
            }
            ,
            pathSectionsCallout: ({path: e}) => !!e,
            pathSkipping: ({homeMessagingClientStatePersisted: e}) => e.pathSkipping,
            plusBadge: ({homeMessagingClientState: e, user: t}) => t.hasPlus && e.plusBadge,
            plusBadgeFamily: ({homeMessagingClientState: e, user: t}) => t.hasPlus && e.plusBadgeFamily,
            plusBadgeMigration: ({homeMessagingClientStatePersisted: e, user: t}) => t.hasPlus && e.plusBadgeMigration,
            schoolsJoinedClassroom: ({homeMessagingClientState: e}) => !!e.schoolsJoinedClassroom,
            shakeToReportAlert: ({user: e}) => (0,
            T.ms)(e),
            skillTreeMigration: ({user: e}) => e.persistentNotifications.includes(g.Qd.skillTreeMigration),
            streakFreezeRecurringOffer: ({homeMessagingClientState: e, items: t, user: a}) => {
                var s, n;
                const r = (null !== (n = null === (s = a.streakData.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== n ? n : 0) >= 3
                  , i = a.gemsConfig.gems >= w.Fk
                  , o = t.shop.misc.streak_freeze
                  , l = o && o.id in t.inventory;
                return e.streakFreezeRecurringOffer && r && i && !l
            }
            ,
            streakFreezeUsed: ({items: e, user: t}) => {
                var a, s, n, r;
                if (!t.persistentNotifications.includes(g.Qd.streakFreezeUsed))
                    return !1;
                const i = (null !== (s = null === (a = t.streakData.currentStreak) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) > 1
                  , o = t.gemsConfig.gems >= w.Fk
                  , l = e.shop.misc.streak_freeze
                  , c = null !== (r = null === (n = e.inventory.streak_freeze) || void 0 === n ? void 0 : n.quantity) && void 0 !== r ? r : 0;
                return i && o && l && c < 2
            }
            ,
            streakRepairOffer: ({homeMessagingClientStatePersisted: e, user: t}) => {
                var a;
                return void 0 !== t.streakRepairOffer && void 0 === (null === (a = e.streakRepairOffer) || void 0 === a ? void 0 : a.lastClosed)
            }
            ,
            superFamilyPlanInvite: ({user: e}) => {
                var t, a;
                return "PENDING" === (null === (a = null === (t = e.familyPlanInviteReceived) || void 0 === t ? void 0 : t.invite) || void 0 === a ? void 0 : a.status) && !(0,
                T.pN)(e)
            }
            ,
            superPreviewEndingCallout: ({homeMessagingClientState: {superPreviewEndingCallout: e}}) => !!e,
            turningNotificationsOn: e => ( ({homeMessagingClientState: e}) => e.turningNotificationsOn)(e) && (0,
            b.Hd)() && "default" === Notification.permission,
            webToAppConversion: ({homeMessagingClientState: e, isDesktop: t, user: a}) => !(0,
            T.pN)(a) && e.webToAppConversion && t,
            webToAppConversionAggressive: e => void 0 !== (0,
            f.TI)() && ( ({homeMessagingClientState: e, isDesktop: t, user: a}) => !(0,
            T.pN)(a) && e.webToAppConversionAggressive && t)(e)
        }
          , R = C
          , L = s.zB({
            config: r.Mb,
            currentCourse: r.Oz,
            homeMessagingClientState: r.EQ,
            homeMessagingClientStatePersisted: e => e.uiPersisted.homeMessagingClientState,
            isDesktop: r.$4,
            isShopItemsFresh: r.bE,
            isUserModelFresh: r.Xr,
            isZombieMode: i.d,
            items: r.__,
            kudosAssets: e => e.friends.assets,
            kudosDrawer: e => e.friends.drawer,
            path: o.HF,
            shouldOfferSuperDuolingo: c.tE,
            student: l.Bs,
            user: r.np
        })
          , P = s.P1(L, ( (e, t) => t), ( ({isUserModelFresh: e, isZombieMode: t, path: a, shouldOfferSuperDuolingo: s, user: n, ...r}, i) => {
            return n.id && e && !t && void 0 !== a && void 0 !== s ? [(o = {
                isUserModelFresh: e,
                path: a,
                shouldOfferSuperDuolingo: s,
                user: n,
                ...r,
                ...i
            },
            g.Iu.filter((e => (0,
            u.ky)("debugHomeMessage") === e || R[e](o)))), !0] : [[], !1];
            var o
        }
        ), {
            memoizeOptions: {
                resultEqualityCheck: n.Xy
            }
        })
          , A = s.P1(r.w0, r.Jw, ( (e, t) => e.some((e => e.blocksHomeMessages)) && (void 0 === t.toast || !t.toastIsUhmManaged) || void 0 !== t.drawer && !t.drawerIsUhmManaged || void 0 !== t.modal && !t.modalIsUhmManaged || void 0 !== t.toast && !t.toastIsUhmManaged ? void 0 : t.homeMessage))
          , D = s.P1(A, r.Jw, ( (e, t) => void 0 === e ? void 0 : t.homeMessageData))
          , O = s.P1(r.Jw, (e => {
            var t;
            return (null === (t = e.modal) || void 0 === t ? void 0 : t.name) === d.t.HomeMessage ? e.modal.homeMessage : void 0
        }
        ))
          , N = s.P1(r.Jw, (e => e.modalIsUhmManaged || e.drawerIsUhmManaged || e.toastIsUhmManaged))
    }
    ,
    93540: (e, t, a) => {
        "use strict";
        a.d(t, {
            DN: () => L,
            F8: () => F,
            HF: () => w,
            Iw: () => P,
            MK: () => A,
            T4: () => U,
            YM: () => M,
            Zw: () => N,
            _j: () => H,
            cb: () => O,
            db: () => G,
            iv: () => D,
            r6: () => x
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(54174)
          , i = a(93718)
          , o = a(64115)
          , l = a(59604)
          , c = a(99644)
          , d = a(23275);
        const u = e => {
            const t = (0,
            d.Bm)(e);
            if ("alphabet_gate" === (null == t ? void 0 : t.level.type)) {
                const {updatedPath: a} = (0,
                c.yY)(e, !1, t);
                e = a
            }
            return e.map((e => ({
                ...e,
                levels: e.levels.filter((e => "alphabet_gate" !== e.type))
            })))
        }
          , g = (e, t) => {
            const a = (0,
            d.Bm)(e);
            if ("alphabet_gate" === (null == a ? void 0 : a.level.type)) {
                const {gateId: s} = a.level.pathLevelClientData;
                if (t.includes(s)) {
                    const {updatedPath: t} = (0,
                    c.yY)(e, !1, a);
                    return t
                }
            }
            return e
        }
          , p = (e, t) => {
            const a = (0,
            d.Bm)(e);
            if (a && a.level.id === t.levelId) {
                const {updatedPath: t} = (0,
                c.yY)(e, !1, a, !0);
                return t
            }
            return e
        }
          , m = e => {
            const t = (0,
            d.Bm)(e);
            if ("chest" === (null == t ? void 0 : t.level.type)) {
                const {updatedPath: a} = (0,
                c.yY)(e, !1, t);
                e = a
            }
            return e.map((e => ({
                ...e,
                levels: e.levels.filter((e => "chest" !== e.type))
            })))
        }
          , h = s.P1(n.Oz, (e => void 0 !== (null == e ? void 0 : e.pathSectioned) && e.pathSectioned.length > 0 ? e.pathSectioned.flatMap((e => e.units)) : null == e ? void 0 : e.path))
          , _ = s.P1(n.Oz, (e => null == e ? void 0 : e.pathSectioned))
          , v = s.P1(n.Mb, (e => !0 === (0,
        l.O)("web_hide_alphabet_gates", void 0, e) && !(0,
        o.gQ)("debugAlphabetGates")))
          , f = s.P1(n.Mb, i.N, ( (e, t) => !0 === (0,
        l.O)("web_hide_path_rewards", void 0, e) || !t))
          , S = s.P1(n.Zk, n.Oz, ( (e, t) => {
            var a;
            return void 0 === t ? [] : null !== (a = e.skippedAlphabetGateIds[t.id]) && void 0 !== a ? a : []
        }
        ))
          , y = s.P1(h, v, ( (e, t) => t && e ? u(e) : e))
          , E = s.P1(y, f, ( (e, t) => t && e ? m(e) : e))
          , b = s.P1(E, S, ( (e, t) => void 0 === e ? e : g(e, t)))
          , I = s.P1(b, n.fI, ( (e, t) => void 0 === e || void 0 === t ? e : p(e, t)))
          , w = s.P1(I, (e => e))
          , k = s.P1(_, v, ( (e, t) => t && e ? e.map((e => ({
            ...e,
            units: u(e.units)
        }))) : e))
          , T = s.P1(k, f, ( (e, t) => t && e ? e.map((e => ({
            ...e,
            units: m(e.units)
        }))) : e))
          , C = s.P1(T, S, ( (e, t) => void 0 === e ? e : e.map((e => ({
            ...e,
            units: g(e.units, t)
        })))))
          , R = s.P1(C, n.fI, ( (e, t) => void 0 === e || void 0 === t ? e : e.map((e => ({
            ...e,
            units: p(e.units, t)
        })))))
          , L = s.P1(R, (e => e))
          , P = s.P1(L, (e => {
            var t, a;
            return null !== (a = null !== (t = null == e ? void 0 : e.find((e => "active" === e.status))) && void 0 !== t ? t : null == e ? void 0 : e[e.length - 1]) && void 0 !== a ? a : void 0
        }
        ))
          , A = s.P1(L, P, (e => e.ui.selectedPathSectionType), ( (e, t, a) => {
            var s, n;
            return null !== (n = null !== (s = null == e ? void 0 : e.find((e => e.type === a))) && void 0 !== s ? s : t) && void 0 !== n ? n : void 0
        }
        ))
          , D = (s.P1(L, (e => void 0 === e ? {} : Object.fromEntries(e.flatMap((e => e.units.map((t => [t.unitIndex, e]))))))),
        s.P1((e => e.ui.shouldReturnToSections), (e => e)))
          , O = s.P1(w, (e => e ? (0,
        d.Bm)(e) : void 0))
          , N = (s.P1(w, (e => e ? (0,
        d.d$)(e) : void 0)),
        s.P1(L, (e => e ? Object.fromEntries(e.map((e => [e.index, e.units[0].levels.find((e => "unit_test" === e.state))]))) : {})))
          , x = s.P1(w, (e => !!e && e.every((e => e.levels.every((e => (0,
        d.Wc)(e.state) || void 0 !== e.dailyRefreshInfo))))))
          , M = s.P1(r.d, w, ( (e, t) => !e && t && t[0].levels[0].finishedSessions > 0))
          , F = s.P1(w, (e => void 0 === e ? {} : Object.fromEntries(e.map((e => [e.unitIndex, e.unitNumber])))))
          , U = s.P1(O, w, A, (e => e.ui.visibleUnitIndex), ( (e, t, a, s) => {
            var n;
            if (!t)
                return;
            const r = (null !== (n = null == e ? void 0 : e.unitNumber) && void 0 !== n ? n : 1) - 1;
            return a && a.units.length > 0 ? a.units[null != s ? s : r] : t[null != s ? s : r]
        }
        ))
          , H = s.P1(n.cQ, (e => e.courseDailyRefreshShown))
          , G = s.P1(w, (e => {
            var t, a;
            return e ? null === (a = null === (t = (0,
            d.Bm)(e)) || void 0 === t ? void 0 : t.level) || void 0 === a ? void 0 : a.levelScoreInfo : void 0
        }
        ))
    }
    ,
    93718: (e, t, a) => {
        "use strict";
        a.d(t, {
            N: () => i
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(90110);
        const i = s.P1(n.Lm, n.np, ( (e, t) => {
            var a;
            if (!e)
                return;
            const s = (0,
            r.Zp)(t, "PATH_CHEST");
            return null === (a = null == s ? void 0 : s.rewards) || void 0 === a ? void 0 : a.find((e => !e.consumed))
        }
        ))
    }
    ,
    93501: (e, t, a) => {
        "use strict";
        a.d(t, {
            C: () => r,
            p: () => i
        });
        var s = a(30427);
        const n = e => e.score
          , r = (0,
        s.P1)(n, (e => e.user.currentCourseId), ( (e, t) => {
            var a;
            if (t)
                return null !== (a = e.scoreStatusInfoByCourse[t]) && void 0 !== a ? a : void 0
        }
        ))
          , i = (0,
        s.P1)(n, (e => e.isLoading))
    }
    ,
    83936: (e, t, a) => {
        "use strict";
        a.d(t, {
            N9: () => g,
            Rq: () => m,
            WM: () => p,
            Y_: () => u
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(40387)
          , i = a(95332)
          , o = a(16970)
          , l = a(64115)
          , c = a(37971)
          , d = a(44637);
        const u = s.P1(n.jv, n.MY, n.$4, n.gl, n.iH, n.is, ( (e, t, a, s, n, r) => t && r ? (0,
        i.eK)({
            browserSettings: e,
            challenge: t,
            isDesktop: a,
            isGrammar: s,
            learningLanguage: n,
            session: r
        }) : {
            canToggleTyping: !1,
            isToggledToTyping: !1
        }))
          , g = s.P1(n.np, n.dE, ( (e, t) => {
            const a = (e.courses || []).map((e => t[e])).map((e => `${e.learningLanguage}_${e.fromLanguage}`));
            return e => a.includes(`${e.learningLanguageId}_${e.fromLanguageId}`)
        }
        ))
          , p = s.P1(n.Mb, (e => e.clientExperiments))
          , m = s.P1(n.lA, n.hy, ( (e, t) => {
            var a, s;
            if (!e.session)
                return;
            if (e.sessionParams.isFinalLevel) {
                const [t,n] = (0,
                d.Dk)(e);
                return ![c.c.PartialXpDuo, c.c.PartialXpDuoSliding].includes(e.status) && void 0 !== t && t < e.challengeIdSections.length - 1 && n === (null !== (s = null === (a = e.challengeIdSections[t]) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) - 1 ? "partialXpDuo" : void 0
            }
            const n = [c.c.CoachDuo, c.c.CoachDuoSliding, c.c.SmartTip, c.c.SmartTipBlaming, c.c.SmartTipSliding, c.c.HardModeDuo, c.c.HardModeDuoSliding];
            let i = n.indexOf(e.status) < n.indexOf(c.c.CoachDuo) && e.coachDuo.model && !t;
            const u = n.indexOf(e.status) < n.indexOf(c.c.SmartTip) && e.smartTipToShow && !t
              , g = n.indexOf(e.status) < n.indexOf(c.c.HardModeDuo) && ((0,
            l.gQ)("hardModeDuo") || (0,
            r.IF)(e) || (0,
            o.Yt)(e));
            return i && !u && g && (i = !1),
            i ? "coachDuo" : u ? "smartTip" : g ? "hardModeDuo" : void 0
        }
        ))
    }
    ,
    27429: (e, t, a) => {
        "use strict";
        a.d(t, {
            XL: () => d,
            eE: () => p,
            ek: () => u,
            ix: () => g
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(74462)
          , i = a(93540)
          , o = a(16970)
          , l = a(23275)
          , c = a(89260);
        const d = s.P1(i.DN, i.HF, i.cb, n.hp, ( (e, t, a, s) => {
            var n;
            if (!s)
                return;
            const {pathType: r, scopeType: i, unitOrSectionNumber: o, lessonType: d, levelNumber: u} = (0,
            c.mi)(s.pathname);
            if ("lesson" !== r)
                return;
            void 0 !== e && e.length > 0 && (t = e.flatMap((e => e.units)));
            const g = e => {
                var a, s;
                return (null === (a = null == t ? void 0 : t[e.unitIndex]) || void 0 === a ? void 0 : a.levels[e.levelIndex]) ? {
                    ...e,
                    level: null === (s = t[e.unitIndex]) || void 0 === s ? void 0 : s.levels[e.levelIndex],
                    unitNumber: t[e.unitIndex].unitNumber
                } : void 0
            }
              , p = o ? parseInt(o, 10) - 1 : void 0;
            if ("section" === i && e && t) {
                if (void 0 === p)
                    return;
                const a = (0,
                l.E0)(e[p].units[0])
                  , s = e[p].units[0].unitIndex;
                if (-1 === a)
                    return;
                return {
                    level: null === (n = t[s]) || void 0 === n ? void 0 : n.levels[a],
                    levelIndex: a,
                    unitIndex: s,
                    unitNumber: t[s].unitNumber
                }
            }
            const m = u ? parseInt(u, 10) - 1 : void 0;
            if ("lesson" === r && void 0 !== t)
                switch (d) {
                case "legendary":
                    if (void 0 === p)
                        return;
                    if (void 0 === m)
                        return;
                    return g({
                        levelIndex: m,
                        unitIndex: p
                    });
                case "level":
                    if (void 0 === p || void 0 === m)
                        return;
                    return g({
                        levelIndex: m,
                        unitIndex: p
                    });
                case "test":
                    if (void 0 === p)
                        return;
                    return g({
                        levelIndex: (0,
                        l.E0)(t[p]),
                        unitIndex: p
                    });
                default:
                    return a
                }
        }
        ))
          , u = s.P1(i.cb, d, ( (e, t) => void 0 !== t && void 0 !== e && e.unitIndex === t.unitIndex && e.levelIndex === t.levelIndex))
          , g = s.P1(n.lA, (e => {
            var t, a, s, n, r;
            const i = null === (t = e.levelData) || void 0 === t ? void 0 : t.level
              , c = "path-level" === (null === (a = e.sessionRouteParams) || void 0 === a ? void 0 : a.type) && e.sessionRouteParams.isEarnbackSession;
            return "alphabets" === (null === (s = e.sessionRouteParams) || void 0 === s ? void 0 : s.type) && (0,
            o.Rv)(null === (n = e.sessionParams) || void 0 === n ? void 0 : n.learningLanguage) || !!i && !c && !("placement" === (null === (r = e.sessionRouteParams) || void 0 === r ? void 0 : r.type)) && !(0,
            l.qM)(i)
        }
        ))
          , p = s.P1(g, r.MQ, ( (e, t) => e && t))
    }
    ,
    21791: (e, t, a) => {
        "use strict";
        a.d(t, {
            L: () => v,
            Q: () => _
        });
        var s = a(30427)
          , n = a(22772)
          , r = a(42659)
          , i = a(54174)
          , o = a(93540)
          , l = a(95351)
          , c = a(89260)
          , d = a(80820)
          , u = a(11811);
        const g = r.$4
          , p = e => e.sessionCache.keys
          , m = (e, t, a, s, n, r) => i => {
            if (!a && !s)
                return !0;
            if ("chest" === i.level.type)
                return !0;
            const o = (0,
            l.K)({
                currentCourseHistory: e,
                levelData: i,
                sessionType: u.FF.LevelReview
            });
            let g = !1;
            if ("skill" === i.level.type) {
                const {skillId: e} = i.level.pathLevelClientData;
                g = (0,
                c.Uj)(r, e)
            }
            const p = ( () => {
                if ("story" !== i.level.type)
                    return;
                const e = i.level.pathLevelClientData.mode;
                return "read" === e ? "READ" : "listen" === e ? "LISTEN" : void 0
            }
            )()
              , m = (0,
            d.gL)({
                currentStoryMode: p,
                generatorIdsOfRecentMistakes: null == o ? void 0 : o.map((e => e.generatorId)),
                includeSmartTips: t && "story" !== i.level.type,
                isExplanationSeen: g,
                pathLevel: i.level
            });
            return n.includes(m)
        }
          , h = s.P1(r.B8, g, i.d, p, r.np, ( (e, t, a, s, n) => m(e, t, a, !0, s, n)))
          , _ = s.P1(r.B8, g, i.d, p, r.np, ( (e, t, a, s, n) => m(e, t, a, !1, s, n)))
          , v = s.P1(o.cb, o.HF, h, ( (e, t, a) => {
            if (void 0 === t)
                return 0;
            let s = 0;
            for (const r of (0,
            n.getRemainingSessions)(t, e)) {
                if (!a(r))
                    break;
                s++
            }
            return s
        }
        ))
    }
    ,
    15307: (e, t, a) => {
        "use strict";
        a.d(t, {
            Bs: () => u,
            FF: () => h,
            GP: () => v,
            Yk: () => m,
            jG: () => y,
            pA: () => S,
            x0: () => g
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(93540)
          , i = a(18867)
          , o = a(68903)
          , l = a(795)
          , c = a(23275)
          , d = a(12125);
        const u = e => e.student
          , g = s.P1(n.Oz, (e => {
            var t;
            return null === (t = null == e ? void 0 : e.assignments) || void 0 === t ? void 0 : t.filter((t => {
                const a = t.fromLanguageId === e.fromLanguage && t.learningLanguageId === e.learningLanguage
                  , s = t.type === i.bu.AssignmentType.SKILL && null !== t.skillId && null !== t.crownLevel
                  , n = t.type !== i.bu.AssignmentType.SKILL;
                return a && (s || n)
            }
            ))
        }
        ))
          , p = s.P1(r.HF, (e => {
            if (void 0 === e)
                return;
            const t = {}
              , a = {};
            return e.forEach((e => {
                const {levels: s, unitIndex: n, unitNumber: r} = e;
                s.forEach(( (e, s) => {
                    const i = {
                        level: e,
                        levelIndex: s,
                        unitIndex: n,
                        unitNumber: r
                    };
                    switch (e.type) {
                    case "skill":
                        {
                            const {skillId: a} = e.pathLevelClientData;
                            void 0 === t[a] && (t[a] = []),
                            t[a].push(i);
                            break
                        }
                    case "story":
                        {
                            const {storyId: t} = e.pathLevelClientData;
                            a[t] = i;
                            break
                        }
                    }
                }
                ))
            }
            )),
            {
                skill: t,
                story: a
            }
        }
        ))
          , m = s.P1(g, p, ( (e, t) => {
            if (void 0 === e || void 0 === t)
                return;
            const a = {};
            return e.forEach((e => {
                const {assignmentId: s, type: n} = e;
                switch (n) {
                case i.bu.AssignmentType.SKILL:
                    {
                        const {crownLevel: n, skillId: r} = e;
                        null !== n && null !== r && r in t.skill && (a[s] = t.skill[r][n]);
                        break
                    }
                case i.bu.AssignmentType.STORY:
                    e.storyId in t.story && (a[s] = t.story[e.storyId]);
                    break;
                case i.bu.AssignmentType.XP:
                case i.bu.AssignmentType.UNIT:
                    break;
                default:
                    throw (0,
                    o.RJ)(n),
                    Error(`Unexpected assignment type: ${n}`)
                }
            }
            )),
            a
        }
        ))
          , h = s.P1(m, g, ( (e, t) => {
            if (void 0 === e || void 0 === t)
                return;
            const a = t.filter((e => (0,
            d.R0)(e.status)));
            return (0,
            l.qj)(a).sort(( (t, a) => {
                if (t.status === a.status) {
                    if (t.dueDateTs === a.dueDateTs) {
                        if (i.bu.CONTENT_SPECIFIC_ASSIGNMENT_TYPES.includes(t.type) && i.bu.CONTENT_SPECIFIC_ASSIGNMENT_TYPES.includes(a.type)) {
                            const s = e[t.assignmentId]
                              , n = e[a.assignmentId];
                            return (0,
                            c.Nk)(s, n)
                        }
                        return t.openDateTs - a.openDateTs
                    }
                    return "missed" === t.status && "missed" === a.status ? a.dueDateTs - t.dueDateTs : t.dueDateTs - a.dueDateTs
                }
                return "missed" === t.status && "active" === a.status ? 1 : -1
            }
            ))
        }
        ))
          , _ = s.P1(h, (e => {
            if (void 0 === e)
                return;
            const t = e.filter((e => [i.bu.AssignmentType.SKILL, i.bu.AssignmentType.STORY].includes(e.type)));
            return 0 !== t.length ? 0 === t.length ? void 0 : t : void 0
        }
        ))
          , v = s.P1(_, (e => {
            if (void 0 !== e)
                return e[0]
        }
        ))
          , f = s.P1(r.MK, _, m, ( (e, t, a) => {
            if (void 0 === e || void 0 === a || void 0 === t)
                return;
            const s = [e.units[0].unitIndex, e.units[e.units.length - 1].unitIndex];
            return t.find((e => {
                const t = a[e.assignmentId].unitIndex;
                return t >= s[0] && t <= s[1]
            }
            ))
        }
        ))
          , S = s.P1(m, v, ( (e, t) => void 0 === e || void 0 === t ? void 0 : e[t.assignmentId]))
          , y = s.P1(m, f, ( (e, t) => void 0 === e || void 0 === t ? void 0 : e[t.assignmentId]))
    }
    ,
    80164: (e, t, a) => {
        "use strict";
        a.d(t, {
            DL: () => E,
            G8: () => p,
            Go: () => P,
            I3: () => f,
            I9: () => T,
            M8: () => v,
            Oi: () => h,
            QK: () => w,
            Qb: () => R,
            SS: () => S,
            W: () => L,
            WD: () => m,
            dT: () => _,
            gb: () => C,
            jD: () => b,
            rj: () => y,
            tE: () => I,
            y1: () => k
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(51827)
          , i = a(64115)
          , o = a(68903)
          , l = a(25062)
          , c = a(74541)
          , d = a(32499)
          , u = a(16086)
          , g = a(20028);
        const p = s.P1(n.__, (e => {
            var t;
            return !0 === (null === (t = e.maxSubscriptions) || void 0 === t ? void 0 : t.isLoaded)
        }
        ))
          , m = s.P1(n.__, (e => {
            var t;
            return null === (t = e.maxSubscriptions) || void 0 === t ? void 0 : t.subscriptionPlans
        }
        ))
          , h = s.P1(n.__, (e => {
            var t;
            return !0 === (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded)
        }
        ))
          , _ = s.P1(n.__, (e => {
            var t;
            return null === (t = e.subscriptions) || void 0 === t ? void 0 : t.subscriptionPlans
        }
        ))
          , v = s.P1(n.__, (e => {
            var t;
            return (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded) ? e.subscriptions.currentPlan : void 0
        }
        ))
          , f = s.P1(_, (e => null == e ? void 0 : e.find((e => e.isFamilyPlan))))
          , S = s.P1(_, (e => null == e ? void 0 : e.find((e => e.planType === d._r.TwelveMonth))))
          , y = s.P1(S, (e => void 0 === (null == e ? void 0 : e.trialPeriodInDays) ? d.Jc : Math.round(e.trialPeriodInDays / 7)))
          , E = s.P1(S, (e => void 0 === (null == e ? void 0 : e.trialPeriodInDays) ? d.fE : e.trialPeriodInDays))
          , b = (s.P1(S, n.Mb, (e => e ? e.formattedMonthlyPrice : void 0)),
        s.P1(f, n.Mb, (e => e ? e.formattedMonthlyPrice : void 0)),
        s.P1(n.__, n.np, d.Wt))
          , I = s.P1(n.__, n.np, d.X0)
          , w = s.P1(n.__, I, ( (e, t=!1) => {
            var a, s, n, r;
            return (0,
            i.gQ)("mockFreeTrialEligible") ? "eligible" === (null === (a = (0,
            i.ky)("mockFreeTrialEligible")) || void 0 === a ? void 0 : a.toLowerCase()) : (null === (s = e.subscriptions) || void 0 === s ? void 0 : s.isLoaded) ? (t || e.inventory.immersive_subscription) && (null === (r = null === (n = e.subscriptions) || void 0 === n ? void 0 : n.subscriptionPlans) || void 0 === r ? void 0 : r.some((e => e.isFreeTrial))) : void 0
        }
        ))
          , k = (s.P1(n.__, (e => (0,
        r._H)(e))),
        s.P1(n.Mb, n.__, ( (e, t) => (0,
        u.Pc)() ? (0,
        r.BY)(t) : e.ipCountry ? (0,
        l.kk)(e.ipCountry) : void 0)),
        s.P1(w, (e => !1 !== e)))
          , T = s.P1(n.np, (e => e.plusDiscounts))
          , C = s.P1(n.np, n.Lm, I, w, n.Y2, b, ( (e, t, a, s, n, r) => {
            if (!t || (0,
            g.pN)(e))
                return "eligibleFreeTrial";
            if ("immersive_subscription" === (null == n ? void 0 : n.itemName))
                return s ? "eligibleFreeTrial" : "eligible";
            const i = (0,
            c.l1)(n, "alreadyHasSuper", "alreadyHasMax");
            if (i)
                return i;
            switch (a) {
            case !0:
                return s ? "eligibleFreeTrial" : "eligible";
            case !1:
                return r ? "eligibleToRedeem" : "ineligible";
            case void 0:
                return;
            default:
                return void (0,
                o.RJ)(a)
            }
        }
        ))
          , R = s.P1(n.Y2, (e => (0,
        c.KX)(e)))
          , L = s.P1(_, (e => {
            var t;
            const a = null == e ? void 0 : e.find((e => e.planType === d._r.TwelveMonth && !e.isFamilyPlan && e.isNewYears));
            return null !== (t = null == a ? void 0 : a.productId.includes("us_usd")) && void 0 !== t && t
        }
        ))
          , P = s.P1(v, _, ( (e, t) => (0,
        d.XZ)(e, t)))
    }
    ,
    50888: (e, t, a) => {
        "use strict";
        a.d(t, {
            J6: () => l,
            KD: () => i,
            mu: () => c
        });
        var s = a(30427)
          , n = a(42659)
          , r = a(97106);
        const i = e => (0,
        r.h0)(e.items.inventory)
          , o = s.P1([i, n.__], ( (e, t) => {
            var a;
            return e ? null === (a = t.inventory[e]) || void 0 === a ? void 0 : a.purchaseDate : void 0
        }
        ))
          , l = s.P1([i, o], ( (e, t) => void 0 !== t && void 0 !== e && void 0 !== r.$Z[e] ? 1e3 * t + r.$Z[e] : void 0))
          , c = s.P1([l, (e, t) => t], ( (e, t) => void 0 !== e && e >= t))
    }
    ,
    54110: (e, t, a) => {
        "use strict";
        a(69098);
        var s = a(58729)
          , n = a(58576);
        window.duo.enableSentry && (0,
        n.D_)(),
        (0,
        s.JE)(),
        console.log(`On commit https://github.com/duolingo/duolingo-web/commit/${window.duo.version}`);
        var r = a(67899)
          , i = a(74971)
          , o = (a(91575),
        a(27378))
          , l = a(31542)
          , c = a(37634)
          , d = a(92883)
          , u = a(80715)
          , g = a(65783)
          , p = a(5188)
          , m = a(80254)
          , h = a(84389)
          , _ = a(795)
          , v = a(34704)
          , f = a(64591);
        const S = (0,
        _.Dp)({
            completeReverseTranslationTypingEnabled: !1,
            listenDisabledUntil: 0,
            speakDisabledUntil: 0,
            transliterationsSettings: {
                "ja<en": {
                    ...v.lL.romaji,
                    enabled: !0
                },
                "zh<en": {
                    ...v.lL.pinyin_all,
                    enabled: !0
                }
            },
            typingEnabled: !1
        });
        var y = a(16970);
        const E = {
            characterState: {},
            skippedAlphabetGateIds: {}
        }
          , b = JSON.parse('{"ageRestrictionLimit":13,"clientExperiments":{},"courses":{"ar":["en","fr","de","sv"],"cs":["en"],"de":["en","es","fr"],"el":["en"],"en":["es","fr","de","it","pt","nl-NL","ga","da","sv","tr","eo","no-BO","uk","ru","pl","cy"],"es":["en","fr","pt","de","it","ca"],"fr":["de","en","es","it"],"hi":["en"],"hu":["en"],"id":["en"],"it":["fr","en"],"ja":["en"],"ko":["en"],"nl-NL":["en"],"pl":["en"],"pt":["de","en","es","fr"],"ro":["en"],"ru":["en","de","fr","es"],"tr":["en","de"],"uk":["en"],"vi":["en"],"zh":["en"]},"dictionaryHost":"d2.duolingo.com","featureFlags":{},"speechHost":"speech.duolingo.com"}');
        var I = a(64115)
          , w = a(17135)
          , k = a(68903);
        const T = ({history: e, updateTimestamp: t, values: a}) => e.filter((e => t < e.expirationTimestamp)).filter((e => !(0,
        k.cY)(a, e.value)))
          , C = (0,
        w.dz)({
            days: 28
        })
          , R = ({challenges: e, history: t, levelId: a, updateTimestamp: s}) => {
            const n = e.filter((e => void 0 !== e.challengeGeneratorIdentifier)).map((e => ({
                generatorIdentifier: e.challengeGeneratorIdentifier
            })));
            return ( ({additionalData: e, history: t, ttl: a, unique: s, updateTimestamp: n, values: r}) => {
                let i = [...t, ...r.map(( (t, s) => ({
                    ...(null == e ? void 0 : e[s]) ? {
                        additionalData: null == e ? void 0 : e[s]
                    } : {},
                    expirationTimestamp: n + a,
                    value: t
                })))].filter((e => n < e.expirationTimestamp));
                if (s) {
                    const e = [];
                    i.sort(( (e, t) => t.expirationTimestamp - e.expirationTimestamp)).forEach((t => {
                        (0,
                        k.cY)(e.map((e => e.value)), t.value) || e.push(t)
                    }
                    )),
                    i = e
                }
                return i.sort(( (e, t) => e.expirationTimestamp - t.expirationTimestamp))
            }
            )({
                additionalData: a ? n.map(( () => ({
                    levelId: a
                }))) : void 0,
                history: t,
                ttl: C,
                unique: !0,
                updateTimestamp: s,
                values: n
            })
        }
          , L = ({challenges: e, history: t, updateTimestamp: a}) => {
            const s = e.filter((e => void 0 !== e.challengeGeneratorIdentifier)).map((e => ({
                generatorIdentifier: e.challengeGeneratorIdentifier
            })));
            return T({
                history: t,
                updateTimestamp: a,
                values: s
            })
        }
        ;
        var P = a(11811);
        const A = (e=(0,
        _.Dp)({
            globalPracticeSessionEnds: 0,
            globalPracticeSessionStarts: 0,
            mistakeHistory: [],
            numSessionsWithMistakes: 0
        }), t) => {
            var a;
            switch (t.type) {
            case "QUIT_SESSION":
                {
                    const {isZombieMode: a, levelId: s, sessionParams: {generatorIdentifiersOfRecentMistakes: n}, session: r, session: {challenges: i, startTime: o}} = t;
                    return r.type !== P.FF.Lesson && r.type !== P.FF.LexemePractice || a || (e = (0,
                    _.t8)(e, "mistakeHistory", R({
                        challenges: i.filter((e => {
                            var t;
                            return !1 === (null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct)
                        }
                        )),
                        history: e.mistakeHistory,
                        levelId: s,
                        updateTimestamp: o
                    }))),
                    n && !a && (e = (0,
                    _.t8)(e, "mistakeHistory", L({
                        challenges: i.filter((e => {
                            var t;
                            return !0 === (null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct)
                        }
                        )),
                        history: e.mistakeHistory,
                        updateTimestamp: o
                    }))),
                    e
                }
            case "START_SESSION":
                {
                    const {sessionParams: {generatorIdentifiersOfRecentMistakes: a}, session: s, startTime: n} = t;
                    return s.type === P.FF.GlobalPractice && (e = (0,
                    _.t8)(e, "globalPracticeSessionStarts", e.globalPracticeSessionStarts + 1)),
                    a && (e = (0,
                    _.t8)(e, "mistakeHistory", ( ({challenges: e, generatorIdentifiers: t, history: a, updateTimestamp: s}) => {
                        const n = e.filter((e => void 0 !== e.challengeGeneratorIdentifier)).map((e => e.challengeGeneratorIdentifier))
                          , r = t.filter((e => !(0,
                        k.cY)(n, e))).map((e => ({
                            generatorIdentifier: e
                        })));
                        return T({
                            history: a,
                            updateTimestamp: s,
                            values: r
                        })
                    }
                    )({
                        challenges: s.challenges,
                        generatorIdentifiers: a,
                        history: e.mistakeHistory,
                        updateTimestamp: n
                    }))),
                    e
                }
            case "RECORDED_SESSION":
                {
                    const {levelId: s, requestSession: n, requestSession: {challenges: r, endTime: i}, sessionParams: {generatorIdentifiersOfRecentMistakes: o}} = t;
                    if (n.type === P.FF.GlobalPractice && (e = (0,
                    _.t8)(e, "globalPracticeSessionEnds", e.globalPracticeSessionEnds + 1)),
                    n.type === P.FF.Lesson) {
                        const n = r.filter((e => !1 === e.correct));
                        n.length > 0 && (e = (0,
                        _.t8)(e, "numSessionsWithMistakes", (null !== (a = e.numSessionsWithMistakes) && void 0 !== a ? a : 0) + 1)),
                        t.isZombieMode || (e = (0,
                        _.t8)(e, "mistakeHistory", R({
                            challenges: n,
                            history: e.mistakeHistory,
                            levelId: s,
                            updateTimestamp: i
                        })))
                    }
                    return o && !t.isZombieMode && (e = (0,
                    _.t8)(e, "mistakeHistory", L({
                        challenges: r.filter((e => void 0 !== e.correct)),
                        history: e.mistakeHistory,
                        updateTimestamp: i
                    }))),
                    e
                }
            default:
                return e
            }
        }
        ;
        var D = a(89065);
        const O = (e, t, a) => {
            const s = e.filter((e => !t.includes(e.userId)))
              , n = s.filter((e => a.includes(e.userId)));
            return s.filter((e => !a.includes(e.userId))).concat(n)
        }
          , N = ["health_refill_partial_1", "health_refill_partial_2", "health_refill_partial_3", "health_refill_partial_4", "health_refill", "health_refill_reactive", "health_refill_discounted", "health_segment"]
          , x = (e, t) => e ? 1e3 * e + t : void 0;
        var M = a(51551)
          , F = a(37971)
          , U = a(70732)
          , H = a(56043)
          , G = a(95332)
          , V = a(7113);
        const z = [P.FF.Lesson, P.FF.LevelReview, P.FF.GlobalPractice, P.FF.LexemePractice, P.FF.LexemeSkillLevelPractice]
          , B = (e, t) => {
            const a = (0,
            V.w)(e.prompt).map(( (e, a) => ({
                isBlank: a >= t.blankStartIndex && a < t.blankEndIndex,
                text: e
            })));
            return {
                challengeGeneratorIdentifier: e.challengeGeneratorIdentifier,
                challengeResponseTrackingProperties: {},
                character: e.character,
                explanation: e.explanation,
                id: e.id,
                indicatorType: P.A.PastMistake,
                metadata: e.metadata,
                newWords: void 0,
                solutionTranslation: e.solutionTranslation,
                trackingProperties: {},
                type: P.Sm.PartialListen,
                displayTokens: a,
                grader: e.grader,
                prompt: e.prompt,
                slowTts: e.slowTts,
                tts: e.tts,
                type: P.Sm.PartialListen
            }
        }
          , j = (e, t, a) => {
            const s = e.map(( (e, t) => ({
                isBlank: t === a.blankIndex,
                text: e
            })));
            return {
                challengeGeneratorIdentifier: t.challengeGeneratorIdentifier,
                challengeResponseTrackingProperties: {},
                character: t.character,
                explanation: t.explanation,
                id: t.id,
                indicatorType: P.A.PastMistake,
                metadata: t.metadata,
                newWords: void 0,
                solutionTranslation: t.solutionTranslation,
                trackingProperties: {},
                type: P.Sm.PartialReverseTranslate,
                grader: t.grader,
                displayTokens: s,
                prompt: t.prompt,
                slowTts: t.slowTts,
                tts: t.tts,
                type: P.Sm.ListenComplete
            }
        }
          , $ = (e, t, a) => {
            const s = e.map(( (e, t) => ({
                isBlank: t === a.blankIndex,
                text: e
            })));
            return {
                challengeGeneratorIdentifier: t.challengeGeneratorIdentifier,
                challengeResponseTrackingProperties: {},
                character: t.character,
                explanation: t.explanation,
                id: t.id,
                indicatorType: P.A.PastMistake,
                metadata: t.metadata,
                newWords: void 0,
                solutionTranslation: t.solutionTranslation,
                trackingProperties: {},
                type: P.Sm.PartialReverseTranslate,
                grader: t.grader,
                displayTokens: s,
                prompt: t.prompt,
                tokens: t.tokens,
                type: P.Sm.CompleteReverseTranslation
            }
        }
          , Z = (e, t) => {
            const a = (0,
            V.w)(e.correctSolutions[0]).map(( (e, a) => ({
                isBlank: a >= t.blankStartIndex && a < t.blankEndIndex,
                text: e
            })));
            return {
                challengeGeneratorIdentifier: e.challengeGeneratorIdentifier,
                challengeResponseTrackingProperties: {},
                character: e.character,
                explanation: void 0,
                id: e.id,
                indicatorType: P.A.PastMistake,
                metadata: e.metadata,
                newWords: void 0,
                solutionTranslation: e.solutionTranslation,
                trackingProperties: {},
                type: P.Sm.PartialReverseTranslate,
                displayTokens: a,
                grader: e.grader,
                prompt: e.prompt,
                tokens: e.tokens,
                type: P.Sm.PartialReverseTranslate
            }
        }
        ;
        var W = a(23275)
          , q = a(44637)
          , Q = a(84401)
          , K = a(89260)
          , Y = a(97106);
        const J = (0,
        _.Dp)({
            canShowHintsOnHover: !1,
            challengeIdSections: [],
            challengeStates: [],
            coachDuo: {
                allCharacters: [],
                allShowReasons: [],
                currentCorrectStreak: 0,
                currentIncorrectStreak: 0
            },
            completedWithHeartsRemaining: !1,
            currentInLessonStreak: 0,
            currentIndex: 0,
            enableBonusPoints: !1,
            endedEarly: !1,
            hasShownEasierLessonNudge: !1,
            heartsType: "unlimitedHearts",
            inLessonTipResources: {},
            inLessonTipShowing: !1,
            isFinalLevel: !1,
            key: 0,
            maxHearts: 0,
            maxInLessonStreak: 0,
            mistakesReplacementChallengeIndex: 0,
            numChallengesAnswered: 0,
            numChallengesCorrect: 0,
            numChallengesSkipped: 0,
            numChallengesTotal: 0,
            numInLessonTipOpens: 0,
            numTimesTransliterationToggled: 0,
            receivedGifts: {
                fromMilestone: !1,
                quantity: 0,
                streakFreeze: !1
            },
            recycledMistakeIndexToOriginalMistakeIndex: {},
            session: void 0,
            sessionParams: void 0,
            sessionPrefetchedTimestamp: void 0,
            sessionRouteParams: void 0,
            sessionSubmitError: void 0,
            sessionSubmitted: !1,
            sessionSubmitting: !1,
            sessionTime: 0,
            shownSmartTipIds: [],
            slideData: [],
            status: void 0,
            strength: 0
        });
        var X = a(16086);
        const ee = (0,
        _.Dp)({
            keys: []
        })
          , te = (e, t) => void 0 === e.time[e.time.length - 1][1] ? (0,
        _.tP)(e, ["time", e.time.length - 1, 1], t) : e;
        var ae = a(37993)
          , se = a(39837)
          , ne = a(35160);
        const re = (0,
        _.Dp)({
            availableModals: [],
            b2bPricingData: void 0,
            canShowAgeRestrictedLeaderboardsIntro: !0,
            canShowHomeMessage: !0,
            didChangeSetting: !1,
            drawer: void 0,
            drawerIsUhmManaged: !1,
            engagementOverride: void 0,
            homeMessage: void 0,
            homeMessageData: void 0,
            homeMessagingClientState: {
                dogfoodingPreview: !0,
                maintenanceBreak: !0,
                turningNotificationsOn: !0
            },
            isAvatarUploading: !1,
            isDimmedOverlayOpen: !1,
            isInventoryFresh: !1,
            isLoggingOut: !1,
            isModalReallyOpen: !1,
            isRequestingNotificationPermission: !1,
            isShopItemsFresh: !1,
            isSwitchingCourse: !1,
            isUserModelFresh: !1,
            microphonePermission: void 0,
            modal: void 0,
            modalIsUhmManaged: !1,
            modalShouldWaitForOverlay: !1,
            online: !0,
            purchasingItem: !1,
            secondaryModal: void 0,
            settingsOpenedAt: void 0,
            settingsSubmitting: [],
            shouldUnmount: !1,
            spotlightType: void 0,
            swrlEngagement: void 0,
            toast: void 0,
            toastIsUhmManaged: !1,
            viewportHeight: window.innerHeight,
            viewportWidth: window.innerWidth,
            visibleUnitIndex: void 0
        });
        var ie = a(6947);
        const oe = (0,
        k.p)(["pathSkipping", "plusBadgeMigration"]);
        var le = a(20041)
          , ce = a(59096);
        const de = e => ({
            discountType: e.discountType,
            expirationTime: e.secondsUntilExpiration > 0 ? (0,
            w.HR)(e.secondsUntilExpiration) : 0,
            isActivated: e.isActivated
        })
          , ue = e => !(0,
        k.gB)(e, ["adsConfig", "experiments", "referralInfo", "trackingProperties"])
          , ge = (0,
        _.Dp)({
            status: "disabled"
        });
        var pe = a(18804);
        const me = (e => {
            const t = m.XP(e);
            return (0,
            p.Uy)(( (a, s) => {
                for (const n of t)
                    a[n] = e[n](a[n], s)
            }
            ), {})
        }
        )({
            achievementsV3: (e=(0,
            _.Dp)({}), t) => {
                switch (t.type) {
                case "PLAYER_INIT":
                    e = (0,
                    _.t8)(e, "sessionStartAchievements", e.achievements);
                    break;
                case "UPDATE_USER_ACHIEVEMENTS_V3":
                    {
                        const a = (0,
                        h.H2)(t.achievements);
                        e = (0,
                        _.t8)(e, "achievements", a);
                        break
                    }
                }
                return e
            }
            ,
            animations: (e=(0,
            _.Dp)([]), t) => {
                switch (t.type) {
                case "QUEUE_ANIMATIONS":
                    e = e.concat(t.animations);
                    break;
                case "DEQUEUE_ANIMATION":
                    e = e.filter((e => e.id !== t.id))
                }
                return e
            }
            ,
            avatars: (e=(0,
            _.Dp)({
                builderConfig: void 0,
                canShowAvatarsIntro: !0
            }), t) => {
                switch (t.type) {
                case "SET_AVATAR_BUILDER_CONFIG":
                    e = (0,
                    _.t8)(e, "builderConfig", t.payload);
                    break;
                case "SET_BUILT_AVATAR_STATE":
                    e = (0,
                    _.t8)(e, "builtAvatar", t.payload);
                    break;
                case "SET_CAN_SHOW_AVATARS_INTRO":
                    e = (0,
                    _.t8)(e, "canShowAvatarsIntro", t.isEligible)
                }
                return e
            }
            ,
            browserSettings: (e=S, t) => {
                switch (t.type) {
                case "DISABLE_LISTEN":
                    e = (0,
                    _.t8)(e, "listenDisabledUntil", t.listenDisabledUntil);
                    break;
                case "DISABLE_SPEAK":
                    e = (0,
                    _.t8)(e, "speakDisabledUntil", t.speakDisabledUntil);
                    break;
                case "ENABLE_LISTEN":
                    e = (0,
                    _.t8)(e, "listenDisabledUntil", 0);
                    break;
                case "ENABLE_SPEAK":
                    e = (0,
                    _.t8)(e, "speakDisabledUntil", 0);
                    break;
                case "TOGGLE_COMPLETE_REVERSE_TRANSLATION":
                    e = (0,
                    _.t8)(e, "completeReverseTranslationTypingEnabled", !e.completeReverseTranslationTypingEnabled);
                    break;
                case "TOGGLE_TAP":
                    e = (0,
                    _.t8)(e, "typingEnabled", !e.typingEnabled);
                    break;
                case "SET_TRANSLITERATIONS_SETTINGS":
                    e = (0,
                    f.FL)(e, ["transliterationsSettings", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage)], t.setting)
                }
                return e
            }
            ,
            characters: (e=(0,
            _.Dp)(E), t) => {
                var a;
                switch (t.type) {
                case "characters/UPDATE_CHARACTER_CHART":
                    return (0,
                    _.tP)(e, ["characterState", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage), "characterChart"], t.characterChart);
                case "characters/SET_CHARACTER_CHART":
                    {
                        const a = (0,
                        v.LP)(t.learningLanguage, t.fromLanguage)
                          , s = {}
                          , n = t.characterChart.alphabets.some((e => (0,
                        y.HZ)(e.id)));
                        return n && t.characterChart.alphabets.map((e => {
                            (0,
                            y.HZ)(e.id) && (s[e.id] = {},
                            e.groups.forEach((t => {
                                s[e.id][t.id] = !0
                            }
                            )))
                        }
                        )),
                        (0,
                        f.$f)(e, ["characterState", a], {
                            activeAlphabetId: t.activeAlphabetId,
                            characterChart: t.characterChart,
                            fromLanguage: t.fromLanguage,
                            learningLanguage: t.learningLanguage,
                            openGroups: n ? s : void 0,
                            scrollOffsets: {}
                        })
                    }
                case "characters/SET_ACTIVE_TAB":
                    return (0,
                    _.tP)(e, ["characterState", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage), "activeAlphabetId"], t.activeAlphabetId);
                case "characters/STAGE_CHART_UPDATE":
                    return (0,
                    f.$f)(e, ["characterState", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage)], {
                        changedCharacters: t.changedCharacters,
                        stagedCharacterChart: t.stagedCharacterChart
                    });
                case "characters/EXPAND_COLLAPSE_GROUP":
                    return (0,
                    _.tP)(e, ["characterState", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage), "openGroups", t.activeAlphabetId, t.groupId], t.isOpen);
                case "characters/SKIP_ALPHABET_GATE":
                    {
                        const s = null !== (a = e.skippedAlphabetGateIds[t.courseId]) && void 0 !== a ? a : [];
                        return (0,
                        _.tP)(e, ["skippedAlphabetGateIds", t.courseId], [...s, t.gateId])
                    }
                case "characters/SCROLL":
                    return (0,
                    _.tP)(e, ["characterState", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage), "scrollOffsets", t.activeAlphabetId], t.scrollOffset);
                case "characters/SET_ACTIVE_GROUP":
                    return (0,
                    _.tP)(e, ["characterState", (0,
                    v.LP)(t.learningLanguage, t.fromLanguage), "activeGroupId"], t.groupId)
                }
                return e
            }
            ,
            config: (e=(0,
            _.Dp)(b), t) => ("UPDATE_CONFIG" === t.type && (e = (0,
            I.gQ)("debugIpCountry") ? {
                ...t.config,
                ipCountry: (0,
                I.ky)("debugIpCountry")
            } : t.config),
            e),
            courseHistories: (e=(0,
            _.Dp)({}), t) => {
                switch (t.type) {
                case "QUIT_SESSION":
                case "START_SESSION":
                case "RECORDED_SESSION":
                    {
                        const {courseId: a} = t;
                        return (0,
                        _.t8)(e, a, A(e[a], t))
                    }
                case "UPDATE_USER":
                    {
                        const {user: a} = t;
                        return a.courses && (e = m.Ry(a.courses.map((a => [a.id, A(e[a.id], t)])))),
                        e
                    }
                default:
                    return e
                }
            }
            ,
            courses: (e=(0,
            _.Dp)({}), t) => {
                switch (t.type) {
                case "UPDATE_USER":
                    {
                        const {currentCourse: s, courses: n} = t.user;
                        if (n && (e = (0,
                        _.Dp)(m.Ry(n.map((e => [e.id, e]))))),
                        s) {
                            let t = 0;
                            e = (0,
                            _.t8)(e, s.id, {
                                ...s,
                                path: s.path.map((e => ({
                                    ...e,
                                    unitNumber: e.unitIndex + 1
                                }))),
                                pathSectioned: s.pathSectioned.map((e => {
                                    const a = {
                                        ...e,
                                        status: (0,
                                        D.df)(e),
                                        type: (0,
                                        D.U_)(e),
                                        units: e.units.map((e => ({
                                            ...e,
                                            unitNumber: e.unitIndex - t + 1
                                        })))
                                    };
                                    return t += e.units.length,
                                    a
                                }
                                )),
                                skills: (a = s.skills,
                                a.reduce(( (e, t) => (e.push(t.map((e => e.id))),
                                e)), []))
                            })
                        }
                        break
                    }
                }
                var a;
                return e
            }
            ,
            debug: (e=(0,
            _.Dp)({
                warnings: []
            }), t) => {
                switch (t.type) {
                case "debug/ADD_UNIQUE_DEBUG_WARNING":
                    e.warnings.some((e => e.type === t.warning.type)) || (e = (0,
                    _.Vx)(e, "warnings", (e => e.concat([t.warning]))));
                    break;
                case "debug/PAGE_LOAD":
                    e = (0,
                    _.t8)(e, "pageLoadTime", t.timestamp)
                }
                return e
            }
            ,
            friends: (e=(0,
            _.Dp)({
                assets: {},
                drawer: null,
                feed: null,
                recommendationInfo: null,
                subscriptions: {}
            }), t) => {
                switch (t.type) {
                case "ADD_SUBSCRIPTION":
                    e = (0,
                    _.tP)(e, ["subscriptions", `${t.followedUser.id}`], t.followedUser);
                    break;
                case "REMOVE_SUBSCRIPTION":
                    {
                        const a = m.ZP.keys(e.subscriptions).filter((e => e !== `${t.userId}`)).map((t => e[t]));
                        e = (0,
                        _.t8)(e, "subscriptions", m.ZP.indexBy(a, "id"));
                        break
                    }
                case "SET_FEED":
                    e = (0,
                    _.t8)(e, "feed", t.feed);
                    break;
                case "SET_FOLLOW_SUGGESTIONS":
                    e = (0,
                    _.t8)(e, "recommendationInfo", t.recommendationInfo);
                    break;
                case "SET_KUDOS_ASSETS":
                    e = (0,
                    _.t8)(e, "assets", t.assets);
                    break;
                case "SET_KUDOS_DRAWER":
                    e = (0,
                    _.t8)(e, "drawer", t.drawer);
                    break;
                case "SET_SUBSCRIPTIONS":
                    e = (0,
                    _.t8)(e, "subscriptions", t.subscriptions);
                    break;
                case "UPDATE_FOLLOW_SUGGESTIONS":
                    {
                        if (null === e.recommendationInfo)
                            break;
                        const a = {
                            ...e.recommendationInfo,
                            recommendations: O(e.recommendationInfo.recommendations, t.filteredIds, t.rotatedIds)
                        };
                        e = (0,
                        _.t8)(e, "recommendationInfo", a);
                        break
                    }
                case "DELETE_FOLLOW_SUGGESTION":
                    {
                        if (null === e.recommendationInfo)
                            break;
                        const a = {
                            ...e.recommendationInfo,
                            recommendations: e.recommendationInfo.recommendations.filter((e => e.userId !== t.deletedId))
                        };
                        e = (0,
                        _.t8)(e, "recommendationInfo", a);
                        break
                    }
                }
                return e
            }
            ,
            goals: (e=(0,
            _.Dp)({
                badges: [],
                coreQuest: void 0,
                dailyQuest: void 0,
                difficulty: 0,
                earnedBadges: [],
                friendsQuest: {
                    details: void 0,
                    lastSeenTotalProgress: 0
                },
                hardQuest: void 0,
                lastSeenMonthlyChallengeId: "",
                lastSeenNextFriendsQuestStart: 0,
                lastUpdated: void 0,
                monthlyChallengeProgressUpdate: 0,
                monthlyQuest: void 0,
                monthlyQuestTheme: void 0,
                pendingRewards: [],
                progress: void 0,
                progressUpdate: void 0,
                schema: []
            }), t) => {
                switch (t.type) {
                case "ACKNOWLEDGE_FRIENDS_QUEST_COMPLETE":
                    e = (0,
                    _.tP)(e, ["friendsQuest", "details", "acknowledged"], !0);
                    break;
                case "SET_FRIENDS_QUEST_DETAILS":
                    e = (0,
                    _.tP)(e, ["friendsQuest", "details"], t.payload);
                    break;
                case "SET_FRIENDS_QUEST_HIGH_FIVE_TIMESTAMP":
                    e = (0,
                    _.tP)(e, ["friendsQuest", "highFiveTimestamp"], t.value);
                    break;
                case "SET_FRIENDS_QUEST_PROGRESS":
                    e = (0,
                    _.tP)(e, ["friendsQuest", "details", "ownProgress"], t.ownProgress),
                    e = (0,
                    _.tP)(e, ["friendsQuest", "details", "totalProgress"], t.totalProgress);
                    break;
                case "SET_GOALS_SCHEMA":
                    e = (0,
                    _.t8)(e, "schema", t.payload);
                    break;
                case "SET_GOALS_DIFFICULTY":
                    e = (0,
                    _.t8)(e, "difficulty", t.payload);
                    break;
                case "SET_GOALS_PROGRESS":
                    e = (0,
                    _.t8)(e, "progress", t.payload);
                    break;
                case "SET_GOALS_PROGRESS_UPDATE":
                    e = (0,
                    _.t8)(e, "progressUpdate", t.payload);
                    break;
                case "SET_MONTHLY_CHALLENGE_PROGRESS_UPDATE":
                    e = (0,
                    _.t8)(e, "monthlyChallengeProgressUpdate", t.payload.updates);
                    break;
                case "SET_LAST_SEEN_FRIENDS_QUEST_TOTAL_PROGRESS":
                    e.friendsQuest && (e = (0,
                    _.tP)(e, ["friendsQuest", "lastSeenTotalProgress"], t.lastSeenTotalProgress));
                    break;
                case "SET_LAST_SENT_FRIENDS_QUEST_GIFT_TIMESTAMP":
                    e.friendsQuest && (e = (0,
                    _.tP)(e, ["friendsQuest", "lastSentGiftTimestamp"], t.timestamp));
                    break;
                case "SET_LAST_SENT_FRIENDS_QUEST_NUDGE":
                    e.friendsQuest && (e = (0,
                    _.tP)(e, ["friendsQuest", "lastSentNudge"], {
                        nudgeType: t.nudgeType,
                        timestamp: t.timestamp
                    }));
                    break;
                case "SET_LAST_SEEN_NEXT_FRIENDS_QUEST_START":
                    e = (0,
                    _.t8)(e, "lastSeenNextFriendsQuestStart", t.lastSeenNextFriendsQuestStart);
                    break;
                case "SET_LAST_SEEN_MONTHLY_CHALLENGE_ID":
                    e = (0,
                    _.t8)(e, "lastSeenMonthlyChallengeId", t.monthlyChallengeId);
                    break;
                case "SET_PENDING_DAILY_QUEST_REWARDS":
                    e = (0,
                    _.t8)(e, "pendingRewards", t.dailyQuestRewards);
                    break;
                case "SET_DAILY_QUESTS":
                    e = (0,
                    _.t8)(e, "coreQuest", t.payload.coreQuest),
                    e = (0,
                    _.t8)(e, "dailyQuest", t.payload.dailyQuest),
                    e = (0,
                    _.t8)(e, "hardQuest", t.payload.hardQuest),
                    e = (0,
                    _.t8)(e, "lastUpdated", t.payload.lastUpdated);
                    break;
                case "SET_MONTHLY_QUEST":
                    e = (0,
                    _.t8)(e, "monthlyQuest", t.payload);
                    break;
                case "SET_MONTHLY_QUEST_THEME":
                    e = (0,
                    _.t8)(e, "monthlyQuestTheme", t.monthlyQuestTheme);
                    break;
                case "SET_QUEST_BADGES":
                    e = (0,
                    _.t8)(e, "badges", t.badges);
                    break;
                case "SET_EARNED_BADGES":
                    e = (0,
                    _.t8)(e, "earnedBadges", t.earnedBadges)
                }
                return e
            }
            ,
            heartsState: (e=(0,
            _.Dp)({
                eligibleForFreeRefill: !1,
                healthEnabled: !1,
                hearts: 5,
                maxHearts: 5,
                nextHeartRefillTimestampMs: void 0,
                secondsPerHeartSegment: 18e3,
                unlimitedHeartsAvailable: !1,
                unlimitedHeartsShieldIsOff: !1
            }), t) => {
                switch (t.type) {
                case "UPDATE_HEARTS_STATE":
                    {
                        const a = t.heartsConfig.secondsUntilNextHeartSegment
                          , s = {
                            ...t.heartsConfig,
                            nextHeartRefillTimestampMs: x(a, t.currentTimestampMs),
                            unlimitedHeartsShieldIsOff: e.unlimitedHeartsShieldIsOff
                        };
                        e = (0,
                        _.TS)(e, s);
                        break
                    }
                case "INCREMENT_HEARTS":
                    {
                        const a = Math.min(e.hearts + t.amount, e.maxHearts)
                          , s = a === e.maxHearts ? void 0 : e.secondsUntilNextHeartSegment
                          , n = void 0 === s ? void 0 : e.nextHeartRefillTimestampMs;
                        e = (0,
                        _.TS)(e, {
                            hearts: a,
                            nextHeartRefillTimestampMs: n,
                            secondsUntilNextHeartSegment: s
                        });
                        break
                    }
                case "DECREMENT_ONE_HEART":
                    {
                        const a = e.hearts === e.maxHearts
                          , s = Math.max(0, e.hearts - 1);
                        e = (0,
                        _.t8)(e, "hearts", s),
                        a && (e = (0,
                        _.TS)(e, {
                            nextHeartRefillTimestampMs: x(e.secondsPerHeartSegment, t.currentTimestampMs),
                            secondsUntilNextHeartSegment: e.secondsPerHeartSegment
                        }));
                        break
                    }
                case "HEARTS_REFILL":
                    e = (0,
                    _.TS)(e, {
                        hearts: e.maxHearts,
                        nextHeartRefillTimestampMs: void 0,
                        secondsUntilNextHeartSegment: void 0
                    });
                    break;
                case "PURCHASE_ITEM":
                    {
                        if ("SUCCESS" !== t.status)
                            break;
                        let a = 0;
                        switch (t.item.itemName) {
                        case "health_refill_reactive":
                        case "health_refill_discounted":
                        case "health_refill":
                            a = e.maxHearts;
                            break;
                        case "health_refill_partial_1":
                            a = 1;
                            break;
                        case "health_refill_partial_2":
                            a = 2;
                            break;
                        case "health_refill_partial_3":
                            a = 3;
                            break;
                        case "health_refill_partial_4":
                            a = 4
                        }
                        if (a > 0) {
                            const t = Math.min(e.maxHearts, e.hearts + a);
                            e = (0,
                            _.TS)(e, {
                                hearts: t,
                                nextHeartRefillTimestampMs: t === e.maxHearts ? void 0 : e.nextHeartRefillTimestampMs,
                                secondsUntilNextHeartSegment: t === e.maxHearts ? void 0 : e.secondsUntilNextHeartSegment
                            })
                        }
                        break
                    }
                case "SET_UNLIMITED_HEARTS_SHIELD":
                    e = (0,
                    _.TS)(e, {
                        unlimitedHeartsShieldIsOff: "off" === t.status
                    })
                }
                return e
            }
            ,
            items: (e=(0,
            _.Dp)({
                inventory: {},
                maxSubscriptions: {
                    currentPlan: void 0,
                    isLoaded: !1,
                    subscriptionPlans: void 0
                },
                shop: {
                    in_app_purchase: [],
                    isLoaded: !1,
                    misc: {}
                },
                subscriptions: {
                    currentPlan: void 0,
                    isLoaded: !1,
                    subscriptionPlans: void 0
                }
            }), t) => {
                var a, s;
                switch (t.type) {
                case "PURCHASE_ITEM":
                    {
                        if ("SUCCESS" !== t.status)
                            break;
                        const {item: a} = t;
                        if (N.some((e => e === a.itemName)))
                            break;
                        const s = e.inventory[a.itemName];
                        e = "streak_freeze" === a.itemName && void 0 !== s ? (0,
                        _.JH)(e, ["inventory", a.itemName, "quantity"], (e => e + t.purchaseQuantity)) : (0,
                        _.tP)(e, ["inventory", a.itemName], a);
                        break
                    }
                case "REFILL_SOCIETY_STREAK_FREEZES":
                    if (void 0 === e.inventory.society_streak_freeze_refill) {
                        (0,
                        n.Kp)("Tried to refill society streak freezes without the required item in inventory.", {
                            data: e.inventory
                        });
                        break
                    }
                    e = void 0 === (e = void 0 === e.inventory.society_streak_freeze ? (0,
                    _.TS)(e, {
                        inventory: {
                            ...e.inventory,
                            society_streak_freeze: {
                                itemName: "society_streak_freeze",
                                purchaseDate: Date.now(),
                                purchaseId: "",
                                purchasePrice: 0,
                                quantity: t.maxQuantity
                            },
                            society_streak_freeze_refill: void 0
                        }
                    }) : (0,
                    _.tP)(e, ["inventory", "society_streak_freeze", "quantity"], t.maxQuantity)).inventory.streak_freeze ? (0,
                    _.TS)(e, {
                        inventory: {
                            ...e.inventory,
                            streak_freeze: {
                                itemName: "streak_freeze",
                                purchaseDate: Date.now(),
                                purchaseId: "",
                                purchasePrice: 0,
                                quantity: M.SG
                            }
                        }
                    }) : (0,
                    _.tP)(e, ["inventory", "streak_freeze", "quantity"], M.SG);
                    break;
                case "REFRESH_USER_ITEM":
                    {
                        const a = t.item;
                        e = (0,
                        _.t8)(e, "inventory", {
                            ...e.inventory,
                            [a.itemName]: a
                        });
                        break
                    }
                case "SET_AVAILABLE_SUBSCRIPTION_PLANS":
                    e = (0,
                    _.t8)(e, t.isForMax ? "maxSubscriptions" : "subscriptions", {
                        currentPlan: t.currentPlan,
                        isLoaded: !0,
                        subscriptionPlans: t.subscriptionPlans
                    });
                    break;
                case "SET_SHOP_ITEMS":
                    {
                        const a = {
                            in_app_purchase: [],
                            isLoaded: !1,
                            misc: {}
                        };
                        t.items.forEach((e => {
                            switch (e.type) {
                            case "misc":
                                a[e.type][e.id] = e;
                                break;
                            case "in_app_purchase":
                                a[e.type].push(e);
                                break;
                            default:
                                (0,
                                k.RJ)(e)
                            }
                        }
                        )),
                        a.isLoaded = !0,
                        e = (0,
                        _.t8)(e, "shop", a);
                        break
                    }
                case "UPDATE_INVENTORY":
                    e = (0,
                    _.t8)(e, "inventory", t.inventory);
                    break;
                case "REMOVE_AN_AVAILABLE_SUBSCRIPTION_PLAN":
                    {
                        const n = null === (s = null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) || void 0 === s ? void 0 : s.filter((e => e.productId !== t.planProductId));
                        e = (0,
                        _.tP)(e, ["subscriptions", "subscriptionPlans"], n);
                        break
                    }
                }
                return e
            }
            ,
            paymentMethods: (e=(0,
            _.Dp)([]), t) => ("REFRESH_USER_PAYMENT_METHODS" === t.type && (e = t.paymentMethods),
            e),
            player: (e=J, t) => {
                var a, s, r, i;
                switch (e = ( (e, t) => {
                    switch (t.type) {
                    case "SET_SMART_TIP_TO_SHOW":
                        e = (0,
                        _.t8)(e, "shownSmartTipIds", [t.smartTipResource.identifier, ...e.shownSmartTipIds]),
                        e = (0,
                        _.t8)(e, "smartTipToShow", t.smartTipResource);
                        break;
                    case "UPDATE_GRADED_SMART_TIP":
                        e = (0,
                        _.t8)(e, "status", F.c.SmartTipBlaming),
                        e = (0,
                        _.tP)(e, ["smartTipToShow", "gradingResult"], {
                            correct: t.correct
                        })
                    }
                    return e
                }
                )(e, t),
                t.type) {
                case "PLAYER_INIT":
                    e = (0,
                    _.t8)(e, "via", t.via);
                    break;
                case "PLAYER_REMOUNT":
                    e = (0,
                    _.t8)(e, "key", e.key + 1);
                    break;
                case "PLAYER_RESET":
                    e = J;
                    break;
                case "RECEIVE_GIFT":
                    e = (0,
                    _.tP)(e, ["receivedGifts", t.gift], !0),
                    e = (0,
                    _.tP)(e, ["receivedGifts", "quantity"], e.receivedGifts.quantity + t.quantity),
                    e = (0,
                    _.tP)(e, ["receivedGifts", "fromMilestone"], t.fromMilestone);
                    break;
                case "CLEAR_IN_LESSON_TIP":
                    return (0,
                    _.TS)(e, {
                        inLessonTip: void 0,
                        inLessonTipShowing: !1
                    });
                case "CREATE_SESSION":
                    {
                        const {challengeIdSections: s, levelData: n, session: r, sessionParams: i, sessionPrefetchedTimestamp: o, sessionRouteParams: l, speakIneligibleReasons: c} = t
                          , d = !i.isFinalLevel && r.beginner ? 4 : i.type === P.FF.UnitTest ? 5 : 3
                          , u = r.type
                          , g = ("practice" === (null == l ? void 0 : l.type) || "path-level" === (null == l ? void 0 : l.type)) && !0 === (null == l ? void 0 : l.isEarnbackSession)
                          , p = ("placement" === (null == l ? void 0 : l.type) || "path-level" === (null == l ? void 0 : l.type)) && !0 === (null == l ? void 0 : l.isEasierLesson)
                          , m = (0,
                        K.LJ)(u)
                          , h = m ? "sessionHearts" : t.hasUserHearts ? "userHearts" : "unlimitedHearts"
                          , v = r.challenges[e.currentIndex]
                          , f = (0,
                        U.BY)({
                            challenge: v,
                            isDesktop: t.isDesktop
                        })
                          , S = null !== (a = ( () => {
                            var e, t, a, s, o, l, c;
                            switch (i.type) {
                            case P.FF.GlobalPractice:
                                return g ? F.c.EarnbackSplash : void 0;
                            case P.FF.AlphabetLesson:
                            case P.FF.AlphabetPractice:
                                return i.showAlphabetTipSplash ? F.c.AlphabetTipSplash : void 0;
                            case P.FF.Lesson:
                                return i.showGrammarSkillSplash ? F.c.GrammarSkillSplash : p ? F.c.EasierPlacementSplash : void 0;
                            case P.FF.Legendary:
                            case P.FF.LegendaryLevel:
                            case P.FF.LegendaryLexemePractice:
                                return F.c.LegendaryDuo;
                            case P.FF.LevelReview:
                                return F.c.CapstoneReviewSplash;
                            case P.FF.LexemePractice:
                                {
                                    if (g)
                                        return F.c.EarnbackSplash;
                                    const i = "lexeme" === (null === (e = r.sessionContext) || void 0 === e ? void 0 : e.contextType) && (null === (a = null === (t = r.sessionContext) || void 0 === t ? void 0 : t.focusedLexemes) || void 0 === a ? void 0 : a.length) > 0 && n && !(0,
                                    W.Wc)((0,
                                    W.xV)(n.level))
                                      , d = "grammar" === (null === (s = r.sessionContext) || void 0 === s ? void 0 : s.contextType) && (null === (l = null === (o = r.sessionContext) || void 0 === o ? void 0 : o.exampleSentences) || void 0 === l ? void 0 : l.length) > 0 && void 0 !== (null === (c = r.sessionContext) || void 0 === c ? void 0 : c.grammarDescription) && n && !(0,
                                    W.Wc)((0,
                                    W.xV)(n.level));
                                    return !0 === i || d ? F.c.VisiblePersonalizationSplash : n && (0,
                                    W.$)(n.level) ? F.c.CapstoneReviewSplash : void 0
                                }
                            case P.FF.LexemeSkillLevelPractice:
                                return g ? F.c.EarnbackSplash : void 0;
                            case P.FF.ListeningPractice:
                            case P.FF.SpeakingPractice:
                            case P.FF.SpecifiedMatchPractice:
                            case P.FF.TargetPractice:
                            case P.FF.UnitRewind:
                                return F.c.PracticeHubDuo;
                            case P.FF.MistakesReview:
                                return F.c.MistakesReviewDuo;
                            case P.FF.Placement:
                                return p ? F.c.EasierPlacementSplash : void 0;
                            case P.FF.SectionTest:
                                return F.c.SectionTestSplash;
                            case P.FF.UnitReview:
                                return void 0 === (null == n ? void 0 : n.level.dailyRefreshInfo) ? F.c.UnitReviewSplash : void 0;
                            case P.FF.UnitTest:
                                return F.c.UnitTestSplash;
                            default:
                                return
                            }
                        }
                        )()) && void 0 !== a ? a : (0,
                        q.ct)(v, f);
                        e = (0,
                        _.TS)(e, {
                            challengeIdSections: s,
                            challengeStates: [f],
                            heartsType: h,
                            levelData: n,
                            maxHearts: d,
                            session: {
                                ...r,
                                heartsLeft: m ? d : 0
                            },
                            sessionParams: i,
                            sessionPrefetchedTimestamp: o,
                            sessionRouteParams: l,
                            speakIneligibleReasons: c,
                            status: S
                        });
                        break
                    }
                case "DISABLE_HINTS_ON_HOVER":
                    e = (0,
                    _.t8)(e, "canShowHintsOnHover", !1);
                    break;
                case "EASIER_LESSON_NUDGE_SHOWN":
                    e = (0,
                    _.t8)(e, "hasShownEasierLessonNudge", !0);
                    break;
                case "CHALLENGE_GUESS_CHANGE":
                    e = e.status === F.c.SmartTip ? (0,
                    _.tP)(e, ["smartTipToShow", "guess"], t.value) : (0,
                    _.tP)(e, ["challengeStates", e.currentIndex, "guess"], t.value);
                    break;
                case "CHALLENGE_HAS_BROKEN_TTS":
                    e = (0,
                    _.tP)(e, ["challengeStates", e.currentIndex, "hasBrokenTts"], !0);
                    break;
                case "CHALLENGE_STARTED":
                    e = (e = (0,
                    _.t8)(e, "canShowHintsOnHover", !0)).status === F.c.SmartTip ? (0,
                    _.tP)(e, ["smartTipToShow", "startTime"], t.timestamp) : (0,
                    _.tP)(e, ["session", "challenges", e.currentIndex, "startTime"], t.timestamp);
                    break;
                case "CHALLENGE_WORLD_CHARACTER_SHOWN":
                    e = (0,
                    _.tP)(e, ["session", "challenges", e.currentIndex, "worldCharacterShown"], t.wasShown);
                    break;
                case "COACH_DUO_SHOWN":
                    e = (0,
                    _.JH)(e, ["coachDuo", "allCharacters"], (e => [...e, t.model.template.character])),
                    e = (0,
                    _.JH)(e, ["coachDuo", "allShowReasons"], (e => [...e, t.model.showReason]));
                    break;
                case "CONTINUE_CURRENT_CHALLENGE":
                    {
                        const t = e.session.challenges[e.currentIndex]
                          , a = e.challengeStates[e.currentIndex]
                          , s = (0,
                        U.uu)({
                            challenge: t,
                            challengeState: a
                        });
                        e = (0,
                        _.tP)(e, ["challengeStates", e.currentIndex], s),
                        e = (0,
                        _.t8)(e, "status", (0,
                        U.j4)({
                            challenge: t,
                            challengeState: s
                        }) ? F.c.Guessing : F.c.Showing);
                        break
                    }
                case "REPLACE_WITH_ADAPTIVE_CHALLENGES":
                    {
                        const a = (0,
                        _.qj)(e.challengeIdSections, {
                            deep: !0
                        })
                          , s = (0,
                        _.qj)(e.session.challenges);
                        let n = 0
                          , r = 0;
                        s.forEach(( (i, o) => {
                            const l = o - e.currentIndex - 1;
                            if (l >= 0 && l < t.challenges.length) {
                                const i = t.challenges[o - e.currentIndex - 1];
                                s[o] = i,
                                a[n][r] = i.id
                            }
                            r < e.challengeIdSections[n].length ? r++ : (n++,
                            r = 0)
                        }
                        )),
                        e = (0,
                        _.tP)(e, ["session", "challenges"], s),
                        e = (0,
                        _.t8)(e, "challengeIdSections", a);
                        break
                    }
                case "ADVANCE_SESSION":
                    {
                        const a = e.currentIndex + 1;
                        e = (0,
                        _.tP)(e, ["challengeStates", a], (0,
                        U.BY)({
                            challenge: e.session.challenges[a],
                            isDesktop: t.isDesktop
                        })),
                        e = (0,
                        _.tP)(e, ["coachDuo", "model"], void 0),
                        e = (0,
                        _.t8)(e, "currentIndex", a),
                        e = (0,
                        _.t8)(e, "smartTipToShow", void 0),
                        e = (0,
                        _.t8)(e, "status", F.c.Sliding);
                        break
                    }
                case "DISABLE_LISTEN":
                case "DISABLE_SPEAK":
                    {
                        if (void 0 === e.session)
                            return e;
                        const a = "DISABLE_LISTEN" === t.type ? (0,
                        K.tq)() : (0,
                        K.bc)();
                        e = (0,
                        _.tP)(e, ["session", "adaptiveChallenges"], null === (s = e.session.adaptiveChallenges) || void 0 === s ? void 0 : s.filter((e => !a.includes(e.type))));
                        const n = []
                          , r = []
                          , i = [];
                        (0,
                        q.L1)(e, ( ({challenge: t, challengeIndex: s, sectionIndex: o}) => {
                            var l, c, d;
                            const u = null !== (c = null === (l = e.session.adaptiveInterleavedChallenges) || void 0 === l ? void 0 : l.speakOrListenReplacementIndices[s]) && void 0 !== c ? c : null;
                            if ((s <= e.currentIndex || !a.includes(t.type)) && (n.push(t),
                            r[o] = r[o] || [],
                            r[o].push(t.id),
                            i.push(null != u ? u : null)),
                            s >= e.currentIndex && null !== u && a.includes(t.type)) {
                                const t = null === (d = e.session.adaptiveInterleavedChallenges) || void 0 === d ? void 0 : d.challenges[u];
                                t && (n.push(t),
                                r[o] = r[o] || [],
                                r[o].push(t.id),
                                i.push(u))
                            }
                            return !1
                        }
                        )),
                        e = (0,
                        _.tP)(e, ["session", "challenges"], n),
                        (e = (0,
                        _.t8)(e, "challengeIdSections", r)).session.adaptiveInterleavedChallenges && (e = (0,
                        _.tP)(e, ["session", "adaptiveInterleavedChallenges", "speakOrListenReplacementIndices"], i));
                        break
                    }
                case "ENABLE_BONUS_POINTS":
                    e = (0,
                    _.t8)(e, "enableBonusPoints", !0);
                    break;
                case "END_SESSION":
                    {
                        const {enableBonusPoints: a, endedEarly: s, maxInLessonStreak: n, session: {heartsLeft: r}, sessionParams: {isFinalLevel: i}} = e
                          , o = "sessionHearts" === e.heartsType && r <= 0
                          , l = !s && !o;
                        e = (0,
                        _.t8)(e, "completedWithHeartsRemaining", l);
                        const c = {
                            enableBonusPoints: a,
                            endTime: t.timestamp,
                            failed: !e.partialXpGiven && o,
                            maxInLessonStreak: n,
                            shouldLearnThings: !i || l,
                            xpPromised: (0,
                            Y.xc)(e, t.user, t.hasXpBoost)
                        };
                        e = (0,
                        f.$f)(e, ["session"], c);
                        break
                    }
                case "END_SESSION_EARLY":
                    e = (0,
                    _.t8)(e, "endedEarly", !0);
                    break;
                case "LOAD_IN_LESSON_TIP_RESOURCE":
                    return (0,
                    _.tP)(e, ["inLessonTipResources", t.url], t.explanationResource);
                case "UPDATE_DUO_RADIO_SESSION":
                    {
                        const {session: a} = t;
                        e = (0,
                        _.TS)(e, {
                            session: {
                                ...a,
                                duoRadioChallengeStats: t.duoRadioChallengeStats,
                                maxInLessonStreak: t.maxInLessonCorrectStreak
                            }
                        });
                        break
                    }
                case "QUIT_SESSION":
                    e = (0,
                    _.t8)(e, "numTimesTransliterationToggled", 0);
                    break;
                case "SESSION_END_SLIDES":
                    e = (0,
                    _.t8)(e, "nativeAd", t.nativeAd),
                    e = (0,
                    _.t8)(e, "sessionSubmitted", !0),
                    e = (0,
                    _.t8)(e, "slideData", t.slideData);
                    break;
                case "SESSION_SUBMIT_END":
                    e = (0,
                    _.t8)(e, "sessionSubmitting", !1);
                    break;
                case "SESSION_SUBMIT_FAILED":
                    e = (0,
                    _.t8)(e, "sessionSubmitError", t.error);
                    break;
                case "SESSION_SUBMIT_START":
                    e = (0,
                    _.t8)(e, "sessionSubmitting", !0);
                    break;
                case "SESSION_SUBMITTED":
                    e = (0,
                    _.t8)(e, "sessionSubmitted", !0);
                    break;
                case "SET_COACH_DUO_MODEL":
                    e = (0,
                    _.tP)(e, ["coachDuo", "model"], t.model);
                    break;
                case "SET_IN_LESSON_TIP":
                    return (0,
                    _.t8)(e, "inLessonTip", t.explanationResource);
                case "SET_PARTIAL_XP_GIVEN":
                    e = (0,
                    _.t8)(e, "partialXpGiven", t.xpGiven);
                    break;
                case "SET_PLAYER_STATUS":
                    e = (0,
                    _.t8)(e, "status", t.status);
                    break;
                case "SET_SELECTED_STREAK_GOAL":
                    {
                        const a = e.slideData[t.slideIndex];
                        "earlyStreakMilestonePrompt" === a.type && (e = (0,
                        _.tP)(e, ["slideData", t.slideIndex], {
                            ...a,
                            nextButtonEnabled: !0
                        }));
                        break
                    }
                case "SET_SESSION_TIME":
                    e = (0,
                    _.t8)(e, "sessionTime", t.sessionTime);
                    break;
                case "SET_TRANSLITERATIONS_SETTINGS":
                    e = (0,
                    _.t8)(e, "numTimesTransliterationToggled", e.numTimesTransliterationToggled + 1);
                    break;
                case "SHOW_HINT":
                    {
                        if (void 0 === e.challengeStates[e.currentIndex])
                            break;
                        const a = e.challengeStates[e.currentIndex].hintsShown;
                        e = (0,
                        _.tP)(e, ["challengeStates", e.currentIndex, "hintsShown"], void 0 === a ? [t.token] : [...a, t.token]);
                        break
                    }
                case "SPEECH_RECOGNIZER_FAILED":
                    e = (0,
                    _.tP)(e, ["challengeStates", e.currentIndex, "recognizerFailed"], !0);
                    break;
                case "START_SESSION":
                    {
                        const {startTime: a} = t
                          , {challengeStates: s, currentIndex: r, session: i, sessionParams: o, status: l} = e
                          , c = i.challenges[r];
                        (0,
                        Q.rK)(i.type) && i.challenges.length < 10 && (0,
                        n.vU)("Practice hub session has fewer than 10 exercises", {
                            data: {
                                session: i,
                                sessionParams: o
                            },
                            sample: .01
                        }),
                        e = (0,
                        _.tP)(e, ["coachDuo", "model"], void 0),
                        e = (0,
                        _.tP)(e, ["session", "startTime"], a),
                        e = (0,
                        _.t8)(e, "status", l === F.c.CoachDuoSplash ? F.c.Sliding : (0,
                        q.ct)(c, s[r]));
                        break
                    }
                case "RECORDED_SESSION":
                    e = (0,
                    f.FL)(e, ["session"], t.responseSession);
                    break;
                case "TOGGLE_IN_LESSON_TIP":
                    return (0,
                    _.TS)(e, {
                        inLessonTipShowing: t.shouldShow,
                        numInLessonTipOpens: e.numInLessonTipOpens + (t.shouldShow ? 1 : 0)
                    });
                case "UPDATE_GRADED_CHALLENGE":
                    {
                        if (e.status === F.c.Grading) {
                            const a = null !== (r = t.gradingResult.numRetriesLeft) && void 0 !== r ? r : 0
                              , s = null !== (i = t.gradingResult.numStrokesLeft) && void 0 !== i ? i : 0;
                            e = (0,
                            K.bc)().includes(e.session.challenges[e.currentIndex].type) && a > 0 ? (0,
                            _.t8)(e, "status", F.c.SpeakRetryBlaming) : e.session.challenges[e.currentIndex].type === P.Sm.CharacterWrite && s > 0 && !t.skipped ? (0,
                            _.t8)(e, "status", F.c.CharacterWriteRetryBlaming) : (0,
                            _.t8)(e, "status", F.c.Blaming)
                        }
                        e = (0,
                        _.tP)(e, ["session", "challenges", e.currentIndex, "gradingResult"], t.gradingResult),
                        e = (0,
                        _.tP)(e, ["session", "challenges", e.currentIndex, "skipped"], t.skipped),
                        e = (0,
                        _.tP)(e, ["session", "challenges", e.currentIndex, "timeTaken"], t.timeTaken);
                        const a = t.gradingResult.correct
                          , s = t.skipped
                          , o = () => {
                            s || (a ? (e = (0,
                            _.tP)(e, ["coachDuo", "currentCorrectStreak"], e.coachDuo.currentCorrectStreak + 1),
                            e = (0,
                            _.tP)(e, ["coachDuo", "currentIncorrectStreak"], 0)) : (e = (0,
                            _.tP)(e, ["coachDuo", "currentCorrectStreak"], 0),
                            e = (0,
                            _.tP)(e, ["coachDuo", "currentIncorrectStreak"], e.coachDuo.currentIncorrectStreak + 1)))
                        }
                          , l = () => {
                            s ? e = (0,
                            _.t8)(e, "numChallengesSkipped", e.numChallengesSkipped + 1) : (a && (e = (0,
                            _.t8)(e, "numChallengesCorrect", e.numChallengesCorrect + 1)),
                            e = (0,
                            _.t8)(e, "numChallengesAnswered", e.numChallengesAnswered + 1)),
                            e = (0,
                            _.t8)(e, "numChallengesTotal", e.numChallengesTotal + 1)
                        }
                        ;
                        if ("sessionHearts" !== e.heartsType || a || (e = (0,
                        _.tP)(e, ["session", "heartsLeft"], e.session.heartsLeft - 1)),
                        e.session.type === P.FF.SectionTest || e.session.type === P.FF.UnitTest || e.status === F.c.SpeakRetryBlaming)
                            o(),
                            l();
                        else if (!(0,
                        K.LJ)(e.session.type)) {
                            const t = e.session.challenges[e.currentIndex]
                              , r = e.challengeStates[e.currentIndex]
                              , [i,c] = (0,
                            q.Dk)(e);
                            if (void 0 === i || void 0 === c)
                                throw Error("Could not find current challenge in challengeIdSections; this is a bug.");
                            if (!a && !r.hasBrokenTts) {
                                const a = e.challengeIdSections[i].length
                                  , {challengeIndex: s} = (0,
                                q.L1)(e, ( ({sectionChallengeIndex: e, sectionIndex: t}) => t === i && e === a - 1));
                                if (void 0 === s)
                                    throw Error("This should never happen.");
                                const r = ( () => {
                                    if ((0,
                                    K.HI)(e.session.type) && "unlimitedHearts" === e.heartsType && void 0 !== e.session.mistakesReplacementChallenges) {
                                        const a = e.session.mistakesReplacementChallenges[e.mistakesReplacementChallengeIndex];
                                        return e = (0,
                                        _.tP)(e, ["session", "mistakesReplacementChallenges", e.session.mistakesReplacementChallenges.length], t),
                                        e = (0,
                                        _.t8)(e, "mistakesReplacementChallengeIndex", e.mistakesReplacementChallengeIndex + 1),
                                        a
                                    }
                                    return (0,
                                    K.HI)(e.session.type) && "unlimitedHearts" === e.heartsType && void 0 === e.session.mistakesReplacementChallenges && (0,
                                    n.Kp)("Legendary session with unlimited hearts has no mistakesReplacementChallenges"),
                                    z.includes(e.session.type) ? ( (e, t) => {
                                        const a = ( () => {
                                            switch (e.type) {
                                            case P.Sm.Listen:
                                                return (e => {
                                                    var t;
                                                    const a = (0,
                                                    H.TK)(e.prompt, null === (t = e.gradingResult) || void 0 === t ? void 0 : t.guess, .6);
                                                    if ("all" === a.rangeType)
                                                        return e;
                                                    if ("one" === a.rangeType) {
                                                        const t = (0,
                                                        V.w)(e.prompt);
                                                        return j(t, e, a)
                                                    }
                                                    return B(e, a)
                                                }
                                                )(e);
                                            case P.Sm.PartialReverseTranslate:
                                                return (e => {
                                                    const t = e.displayTokens.map((e => e.text)).join("")
                                                      , a = (0,
                                                    V.w)(t)
                                                      , s = (e => {
                                                        var t, a;
                                                        const s = e.displayTokens
                                                          , n = null !== (a = null === (t = e.gradingResult) || void 0 === t ? void 0 : t.guess) && void 0 !== a ? a : ""
                                                          , r = s[1].isBlank
                                                          , i = s[0].isBlank
                                                          , o = e.displayTokens.filter(( (t, a) => !t.isBlank && a > 0 && a < e.displayTokens.length - 1)).map((e => e.text)).join("")
                                                          , l = r ? `${n}${o}` : `${o}${n}`;
                                                        return `${i ? "" : s[0].text}${l}${s[s.length - 1].text}`
                                                    }
                                                    )(e)
                                                      , n = (0,
                                                    H.TK)(t, s, .6);
                                                    return "one" === n.rangeType ? $(a, e, n) : e
                                                }
                                                )(e);
                                            case P.Sm.Translate:
                                                return (0,
                                                G.Dw)(e, t) && !(0,
                                                G.vv)(e) ? (e => {
                                                    var t;
                                                    const a = (0,
                                                    H.TK)(e.correctSolutions[0], null === (t = e.gradingResult) || void 0 === t ? void 0 : t.guess, .6);
                                                    if ("all" === a.rangeType)
                                                        return e;
                                                    if ("one" === a.rangeType) {
                                                        const t = (0,
                                                        V.w)(e.correctSolutions[0]);
                                                        return $(t, e, a)
                                                    }
                                                    return Z(e, a)
                                                }
                                                )(e) : e;
                                            default:
                                                return e
                                            }
                                        }
                                        )()
                                          , s = m.CE((0,
                                        f.Xh)(a), "gradingResult", "skipped");
                                        return s.indicatorType = P.A.PastMistake,
                                        s
                                    }
                                    )(t, e.sessionParams.learningLanguage) : t
                                }
                                )()
                                  , o = m.CE(r, "gradingResult", "skipped")
                                  , l = (0,
                                _.qj)(e.session.challenges);
                                l.splice(s + 1, 0, o),
                                e = (0,
                                _.tP)(e, ["recycledMistakeIndexToOriginalMistakeIndex", s + 1], e.currentIndex),
                                e = (0,
                                _.tP)(e, ["session", "challenges"], l),
                                e = (0,
                                _.tP)(e, ["challengeIdSections", i, e.challengeIdSections[i].length], t.id)
                            }
                            const d = e.challengeIdSections.length
                              , u = a ? 1 : 1 === d ? .25 : 2 === d ? 0 : -.5
                              , g = e.challengeIdSections[i].length
                              , p = i + (c === g - 1 ? 1 : 0);
                            let h = e.strength;
                            const v = u * ((i + 1) / d - h) / (g - c);
                            h = Math.max(p / d, e.strength + v),
                            h = Math.min(h, 1),
                            e = (0,
                            _.t8)(e, "strength", h),
                            o(),
                            l();
                            const S = s ? 0 : 1;
                            e = (0,
                            _.t8)(e, "currentInLessonStreak", a ? e.currentInLessonStreak + S : 0),
                            e = (0,
                            _.t8)(e, "maxInLessonStreak", Math.max(e.currentInLessonStreak, e.maxInLessonStreak))
                        }
                        break
                    }
                }
                return e
            }
            ,
            profile: (e=(0,
            _.Dp)({}), t) => {
                var a;
                switch (t.type) {
                case "RESET_PROFILE":
                    e = {
                        firstPersonSocialProfile: e.firstPersonSocialProfile
                    };
                    break;
                case "LOAD_ACHIEVEMENTS":
                    {
                        const {v2: a, v3: s} = t.achievements;
                        e = (0,
                        _.t8)(e, "achievements", {
                            v2: a,
                            v3: (0,
                            h.H2)(s)
                        });
                        break
                    }
                case "LOAD_PROFILE_AVATAR":
                    e = (0,
                    _.t8)(e, "builtAvatar", t.builtAvatar);
                    break;
                case "LOAD_PRIVATE_PROFILE_USER":
                    e = (0,
                    _.t8)(e, "privateProfile", t.user);
                    break;
                case "LOAD_PROFILE_USER":
                    e = (0,
                    _.t8)(e, "user", t.user);
                    break;
                case "LOAD_PROFILE_XP":
                    e = (0,
                    _.t8)(e, "xpEvents", t.summaries);
                    break;
                case "LOAD_SOCIAL_PROFILE":
                    e = (0,
                    _.t8)(e, "socialProfile", t.socialProfile);
                    break;
                case "LOAD_FIRST_PERSON_SOCIAL_PROFILE":
                    e = (0,
                    _.t8)(e, "firstPersonSocialProfile", t.socialProfile);
                    break;
                case "UPDATE_USER":
                    try {
                        if ((0,
                        X.Jb)() === (null === (a = e.user) || void 0 === a ? void 0 : a.id)) {
                            const a = (0,
                            _.TS)(e.user, t.user, {
                                deep: !0
                            });
                            e = (0,
                            _.t8)(e, "user", a)
                        }
                    } catch {}
                }
                return e
            }
            ,
            score: (e={
                isLoading: !1,
                scoreStatusInfoByCourse: {}
            }, t) => {
                switch (t.type) {
                case "LOAD_USER_SCORE_INFO":
                    return {
                        ...e,
                        isLoading: !1,
                        scoreStatusInfoByCourse: {
                            ...e.scoreStatusInfoByCourse,
                            [t.courseId]: t.scoreStatusInfo
                        }
                    };
                case "SET_SCORE_INFO_LOADING":
                    return {
                        ...e,
                        isLoading: t.isLoading
                    };
                default:
                    return e
                }
            }
            ,
            scoreSocialSync: (e, t) => {
                switch (t.type) {
                case "LOAD_SCORE_SOCIAL_SYNC_INFO":
                    return {
                        ...e,
                        data: t.data,
                        isLoading: !1,
                        target: t.target
                    };
                case "SET_SCORE_SOCIAL_SYNC_INFO_LOADING":
                    return {
                        ...e,
                        isLoading: t.isLoading,
                        target: t.target
                    };
                case "SET_SCORE_SOCIAL_SYNC_UPDATING":
                    return {
                        ...e,
                        isUpdating: t.isUpdating,
                        updateRequest: t.request,
                        updateResult: null
                    };
                case "SET_SCORE_SOCIAL_SYNC_RESULT":
                    return {
                        ...e,
                        isUpdating: !1,
                        updateRequest: null,
                        updateResult: t.result
                    };
                default:
                    return e
                }
            }
            ,
            sessionCache: (e=ee, t) => {
                switch (t.type) {
                case "sessionCache/INITIALIZE":
                    e = (0,
                    _.t8)(e, "keys", t.keys);
                    break;
                case "sessionCache/ADD":
                    e = (0,
                    _.t8)(e, "keys", e.keys.concat(t.key));
                    break;
                case "sessionCache/REMOVE":
                    e = (0,
                    _.t8)(e, "keys", e.keys.filter((e => e !== t.key)))
                }
                return e
            }
            ,
            sessionEnd: (e=(0,
            _.Dp)({
                slides: []
            }), t) => {
                var a, s, n;
                const r = e.slides.length - 1;
                switch (t.type) {
                case "sessionEnd/CTA_CLICK":
                    r > -1 && (e = (0,
                    _.tP)(e, ["slides", r, "action"], "cta"));
                    break;
                case "sessionEnd/DISMISSED":
                    r > -1 && (e = (0,
                    _.tP)(e, ["slides", r, "action"], null !== (a = e.slides[r].action) && void 0 !== a ? a : "dismiss"));
                    break;
                case "sessionEnd/READY":
                    e.nativeAd && (e = (0,
                    _.tP)(e, ["nativeAd", "status"], "can-track")),
                    e.nativeAd && (e = (0,
                    _.t8)(e, "nativeAd", te(e.nativeAd, t.timestamp))),
                    r > -1 && (e = (0,
                    _.tP)(e, ["slides", r, "status"], "can-track"),
                    e = (0,
                    _.tP)(e, ["slides", r], te(e.slides[r], t.timestamp)));
                    break;
                case "sessionEnd/RESET":
                    e = (0,
                    _.t8)(e, "nativeAd", void 0),
                    e = (0,
                    _.t8)(e, "slides", []);
                    break;
                case "sessionEnd/SLIDE_HIDDEN":
                    "nativeAd" === t.slide.type && e.nativeAd && (e = (0,
                    _.t8)(e, "nativeAd", te(e.nativeAd, t.timestamp)));
                    break;
                case "sessionEnd/SLIDE_SHOWN":
                    "nativeAd" === t.slide.type ? e = (0,
                    _.t8)(e, "nativeAd", {
                        slide: t.slide,
                        status: "pending",
                        time: [...null !== (n = null === (s = e.nativeAd) || void 0 === s ? void 0 : s.time) && void 0 !== n ? n : [], [t.timestamp]],
                        tracking: t.tracking
                    }) : (r > -1 && (e = (0,
                    _.tP)(e, ["slides", r, "status"], "can-track"),
                    e = (0,
                    _.tP)(e, ["slides", r], te(e.slides[r], t.timestamp))),
                    e = (0,
                    _.t8)(e, "slides", [...e.slides, {
                        slide: t.slide,
                        status: "pending",
                        time: [[t.timestamp]],
                        tracking: t.tracking
                    }]));
                    break;
                case "sessionEnd/TRACKED":
                    e.nativeAd && t.slides.some((e => "nativeAd" === e.type)) && (e = (0,
                    _.tP)(e, ["nativeAd", "status"], "tracked")),
                    e.slides.forEach(( (a, s) => {
                        const n = (0,
                        p.Js)(a.slide);
                        void 0 !== n && t.slides.includes(n) && (e = (0,
                        _.tP)(e, ["slides", s, "status"], "tracked"))
                    }
                    ))
                }
                return e
            }
            ,
            skills: (e=(0,
            _.Dp)({}), t) => {
                switch (t.type) {
                case "UPDATE_USER":
                    {
                        const {currentCourse: a} = t.user;
                        if (a) {
                            const {fromLanguage: t, learningLanguage: s, skills: n} = a
                              , r = n;
                            e = m.Ry(r.map(( (e, a) => e.map((e => [e.id, {
                                accessible: !1,
                                decayed: !1,
                                finishedLessons: 0,
                                finishedLevels: 0,
                                indicatingNewContent: !1,
                                levels: 0,
                                strength: 0,
                                ...e,
                                fromLanguage: t,
                                learningLanguage: s,
                                row: a,
                                urlName: encodeURIComponent(e.urlName)
                            }])))).flat())
                        }
                        break
                    }
                }
                return e
            }
            ,
            stories: ae.I,
            streakEarnback: (e=(0,
            _.Dp)({
                earnbackMultiSessionStats: void 0
            }), t) => {
                switch (t.type) {
                case "CREATE_SESSION":
                    {
                        const a = t.sessionRouteParams
                          , s = t.user
                          , r = ("practice" === (null == a ? void 0 : a.type) || "path-level" === (null == a ? void 0 : a.type)) && !0 === (null == a ? void 0 : a.isEarnbackSession)
                          , i = ( () => {
                            if (r) {
                                if (s.streakRepairOffer)
                                    return void 0 !== e.earnbackMultiSessionStats && (0,
                                    se.SZ)(e.earnbackMultiSessionStats) ? e.earnbackMultiSessionStats : {
                                        numChallengesCorrect: 0,
                                        sessionsCompleted: 0,
                                        totalChallenges: 0,
                                        totalSessions: (0,
                                        se.TT)(s.streakRepairOffer.length),
                                        totalXp: 0
                                    };
                                (0,
                                n.vU)("Attempting earnback session without repairable streak", {
                                    once: !0
                                })
                            }
                        }
                        )();
                        e = (0,
                        _.t8)(e, "earnbackMultiSessionStats", i);
                        break
                    }
                case "SET_EARNBACK_MULTI_SESSION_STATS":
                    e = (0,
                    _.t8)(e, "earnbackMultiSessionStats", t.stats)
                }
                return e
            }
            ,
            student: (e=(0,
            _.Dp)({
                classrooms: [],
                sessionActivities: []
            }), t) => {
                switch (t.type) {
                case "JOIN_CLASSROOM":
                    if (e.classrooms.some((e => e.classroom_id === t.classroom.classroom_id)))
                        break;
                    e = (0,
                    _.t8)(e, "classrooms", [...e.classrooms, t.classroom]);
                    break;
                case "LEAVE_CLASSROOM":
                    e = (0,
                    _.t8)(e, "classrooms", e.classrooms.filter((e => e.classroom_id !== t.classroomId)));
                    break;
                case "UPDATE_CLASSROOMS":
                    e = (0,
                    _.t8)(e, "classrooms", t.classrooms);
                    break;
                case "UPDATE_SESSION_ACTIVITIES":
                    e = (0,
                    _.t8)(e, "sessionActivities", t.sessionActivities)
                }
                return e
            }
            ,
            ui: (e=re, t) => {
                var a;
                switch (t.type) {
                case "APP_OFFSET":
                    e = (0,
                    _.t8)(e, "appOffset", t.value);
                    break;
                case "CAN_SHOW_HOME_MESSAGE":
                    if (t.name && (!0 === e.canShowHomeMessage || Array.isArray(e.canShowHomeMessage) && e.canShowHomeMessage.includes(t.name)))
                        break;
                    e = (0,
                    _.t8)(e, "canShowHomeMessage", !t.name || (Array.isArray(e.canShowHomeMessage) ? [...e.canShowHomeMessage, t.name] : [t.name]));
                    break;
                case "COME_ONLINE":
                    e = (0,
                    _.t8)(e, "online", !0);
                    break;
                case "CREATE_HOME_MESSAGE":
                    switch (t.name) {
                    case "marketingOptIn":
                    case "plusBadge":
                    case "plusBadgeFamily":
                        e = (0,
                        _.tP)(e, ["homeMessagingClientState", t.name], !0);
                        break;
                    case "schoolsJoinedClassroom":
                        e = (0,
                        _.tP)(e, ["homeMessagingClientState", t.name], {
                            observerName: t.observerName
                        })
                    }
                    break;
                case "DIMMED_OVERLAY_CLOSED":
                    e = (0,
                    _.t8)(e, "isDimmedOverlayOpen", !1);
                    break;
                case "DIMMED_OVERLAY_OPENED":
                    e = (0,
                    _.t8)(e, "isDimmedOverlayOpen", !0);
                    break;
                case "DISABLE_HOME_MESSAGE":
                case "DISMISS_HOME_MESSAGE":
                    "DISMISS_HOME_MESSAGE" === t.type && ("dogfoodingPreview" !== t.name && (e = (0,
                    _.t8)(e, "canShowHomeMessage", !1)),
                    e = (0,
                    _.t8)(e, "homeMessage", void 0),
                    e = (0,
                    _.t8)(e, "homeMessageData", void 0)),
                    e = (0,
                    _.tP)(e, ["homeMessagingClientState", t.name], void 0);
                    break;
                case "ENGAGEMENT_OVERRIDE":
                    e = (0,
                    _.t8)(e, "engagementOverride", t.value);
                    break;
                case "SET_SWRL_ENGAGEMENT":
                    e = (0,
                    _.t8)(e, "swrlEngagement", t.value),
                    t.storyModeSWRLEngagement && (e = (0,
                    _.t8)(e, "storyModeSWRLEngagement", t.storyModeSWRLEngagement));
                    break;
                case "GO_OFFLINE":
                    e = (0,
                    _.t8)(e, "online", !1);
                    break;
                case "LOGOUT":
                    e = (0,
                    _.t8)(e, "isLoggingOut", !0);
                    break;
                case "MICROPHONE_PERMISSION":
                    e = (0,
                    _.t8)(e, "microphonePermission", t.value);
                    break;
                case "MODAL_CLOSED":
                    e = (0,
                    _.t8)(e, "isModalReallyOpen", !1);
                    break;
                case "MODAL_MOUNTED":
                    e = (0,
                    _.t8)(e, "availableModals", [...e.availableModals, t.name]);
                    break;
                case "MODAL_OPENED":
                    e = (0,
                    _.t8)(e, "isModalReallyOpen", !0);
                    break;
                case "MODAL_UNMOUNTED":
                    (null === (a = (e = (0,
                    _.t8)(e, "availableModals", e.availableModals.filter((e => e !== t.name)))).modal) || void 0 === a ? void 0 : a.name) === t.name && (e = (0,
                    _.t8)(e, "modal", void 0),
                    e = (0,
                    _.t8)(e, "modalIsUhmManaged", !1),
                    e = (0,
                    _.t8)(e, "isModalReallyOpen", !1));
                    break;
                case "HOME_MESSAGE_MEETS_TIME_CRITERION":
                    e = (0,
                    _.tP)(e, ["homeMessagingClientState", t.name], !0);
                    break;
                case "PURCHASE_ITEM":
                    switch (t.status) {
                    case "FAIL":
                    case "SUCCESS":
                        e = (0,
                        _.t8)(e, "purchasingItem", !1);
                        break;
                    case "START":
                        e = (0,
                        _.t8)(e, "purchasingItem", !0)
                    }
                    break;
                case "RESIZE_WINDOW":
                    e = (0,
                    _.TS)(e, {
                        viewportHeight: t.height,
                        viewportWidth: t.width
                    });
                    break;
                case "SET_CAN_SHOW_AGE_RESTRICTED_LEADERBOARDS_INTRO":
                    e = (0,
                    _.t8)(e, "canShowAgeRestrictedLeaderboardsIntro", t.isEligible);
                    break;
                case "SET_HOME_MESSAGE":
                    e = (0,
                    _.t8)(e, "homeMessage", t.name),
                    e = (0,
                    _.t8)(e, "homeMessageData", t.data);
                    break;
                case "SET_IS_AVATAR_UPLOADING":
                    e = (0,
                    _.t8)(e, "isAvatarUploading", t.isUploading);
                    break;
                case "SET_POPOVER":
                    e = (0,
                    _.TS)(e, {
                        popover: {
                            popoverId: t.id,
                            wordGroupId: t.wordGroupId
                        }
                    });
                    break;
                case "SET_HOME_PAGE_POPOVER":
                    e = (0,
                    _.TS)(e, {
                        homePagePopoverId: void 0 !== t.id && void 0 !== t.section ? `${t.section}/${t.id}` : void 0
                    });
                    break;
                case "SET_SELECTED_PATH_SECTION":
                    e = (0,
                    _.t8)(e, "selectedPathSectionType", t.selectedPathSectionType);
                    break;
                case "SET_SHOULD_RETURN_TO_SECTIONS":
                    e = (0,
                    _.t8)(e, "shouldReturnToSections", t.shouldReturnToSections);
                    break;
                case "SET_SPOTLIGHT_FOR_MODAL":
                    e = (0,
                    _.t8)(e, "spotlightType", t.spotlightType);
                    break;
                case "SET_VISIBLE_UNIT_INDEX":
                    e = (0,
                    _.t8)(e, "visibleUnitIndex", t.index);
                    break;
                case "SETTING_SUBMIT_END":
                    e = (0,
                    _.t8)(e, "settingsSubmitting", e.settingsSubmitting.filter((e => e !== t.key)));
                    break;
                case "SETTING_SUBMIT_START":
                    e = (0,
                    _.t8)(e, "didChangeSetting", !0),
                    e = (0,
                    _.tP)(e, ["settingsSubmitting", e.settingsSubmitting.length], t.key);
                    break;
                case "SETTINGS_OPENED":
                    e = (0,
                    _.t8)(e, "didChangeSetting", !1),
                    e = (0,
                    _.t8)(e, "settingsOpenedAt", t.timestamp);
                    break;
                case "SWITCH_COURSE":
                    e = (0,
                    _.t8)(e, "isSwitchingCourse", !0);
                    break;
                case "SWITCH_COURSE_END":
                    e = (0,
                    _.t8)(e, "isSwitchingCourse", !1);
                    break;
                case "TOGGLE_DRAWER":
                    t.options ? (e = (0,
                    _.TS)(e, {
                        drawer: t.options,
                        drawerIsUhmManaged: !0 === t.isUhmManaged,
                        secondaryModal: void 0,
                        spotlightType: t.options.spotlightType,
                        toast: void 0,
                        toastIsUhmManaged: !1
                    }),
                    t.keepFullscreenModal || (e = (0,
                    _.TS)(e, {
                        modal: void 0,
                        modalIsUhmManaged: !1
                    }))) : e = (0,
                    _.TS)(e, {
                        drawer: void 0,
                        drawerIsUhmManaged: !1,
                        spotlightType: void 0
                    });
                    break;
                case "TOGGLE_MODAL":
                    if (t.options) {
                        if (!e.availableModals.includes(t.options.name) && t.options.name !== ne.t.HomeMessage)
                            break;
                        if (!1 === t.replaceExisting && e.modal)
                            break;
                        e = (0,
                        _.TS)(e, {
                            drawer: void 0,
                            drawerIsUhmManaged: !1,
                            modal: t.options,
                            modalIsUhmManaged: !0 === t.isUhmManaged,
                            modalShouldWaitForOverlay: !e.isDimmedOverlayOpen,
                            secondaryModal: void 0,
                            spotlightType: t.options.spotlightType,
                            toast: void 0,
                            toastIsUhmManaged: !1
                        })
                    } else
                        e = (0,
                        _.TS)(e, {
                            modal: void 0,
                            modalIsUhmManaged: !1,
                            secondaryModal: void 0,
                            spotlightType: void 0
                        });
                    break;
                case "TOGGLE_SECONDARY_MODAL":
                    if (void 0 === t.options) {
                        e = (0,
                        _.TS)(e, {
                            secondaryModal: void 0
                        });
                        break
                    }
                    if (!e.availableModals.includes(t.options.name))
                        break;
                    e = (0,
                    _.TS)(e, {
                        secondaryModal: t.options
                    }),
                    !0 !== t.allowOverDrawer && (e = (0,
                    _.TS)(e, {
                        drawer: void 0,
                        drawerIsUhmManaged: !1,
                        isDimmedOverlayOpen: !1
                    }));
                    break;
                case "TOGGLE_REQUEST_NOTIFICATION_PERMISSION":
                    e = (0,
                    _.t8)(e, "isRequestingNotificationPermission", t.isVisible);
                    break;
                case "TOGGLE_TOAST":
                    e = t.options ? (0,
                    _.TS)(e, {
                        drawer: void 0,
                        drawerIsUhmManaged: !1,
                        modal: void 0,
                        modalIsUhmManaged: !1,
                        toast: t.options,
                        toastIsUhmManaged: !0 === t.isUhmManaged
                    }) : (0,
                    _.TS)(e, {
                        toast: void 0,
                        toastIsUhmManaged: !1
                    });
                    break;
                case "SET_SHOP_ITEMS":
                    e = (0,
                    _.t8)(e, "isShopItemsFresh", !0);
                    break;
                case "UNMOUNT":
                    e = (0,
                    _.t8)(e, "shouldUnmount", !0);
                    break;
                case "UPDATE_B2B_PRICING_DATA":
                    e = (0,
                    _.t8)(e, "b2bPricingData", t.b2bPricingData);
                    break;
                case "UPDATE_INVENTORY":
                    e = (0,
                    _.t8)(e, "isInventoryFresh", !0);
                    break;
                case "UPDATE_USER":
                    e = (0,
                    _.t8)(e, "isUserModelFresh", !0)
                }
                return e
            }
            ,
            uiPersisted: (e=(0,
            _.Dp)({
                courseDailyRefreshShown: {},
                homeMessagingClientState: {},
                plusBannerShown: {
                    count: 0
                },
                reportedProfileUserIds: [],
                sessionEndPlusAdShown: {
                    count: 0
                },
                streakExtendedTimesLastSevenDays: []
            }), t) => {
                var a, s, n, r, i, o, l, c, d, u, g, p, m, h, v, f, S, y, E;
                switch (t.type) {
                case "CREATE_HOME_MESSAGE":
                    oe(t.name) && (e = (0,
                    _.tP)(e, ["homeMessagingClientState", t.name], !0));
                    break;
                case "DAILY_REFRESH_SHOWN":
                    e = (0,
                    _.tP)(e, ["courseDailyRefreshShown", t.course], t.timestamp);
                    break;
                case "DISMISS_HOME_MESSAGE":
                    if (oe(t.name))
                        e = (0,
                        _.tP)(e, ["homeMessagingClientState", t.name], !1);
                    else
                        switch (t.name) {
                        case "streakRepairOffer":
                            e = (0,
                            _.tP)(e, ["homeMessagingClientState", t.name, "lastClosed"], t.timestamp);
                            break;
                        case "newYearsDiscount":
                            e = (0,
                            _.tP)(e, ["homeMessagingClientState", "newYearsDiscount"], {
                                lastShown: t.timestamp
                            })
                        }
                    break;
                case "HOME_MESSAGE_SHOWN":
                    switch (t.name) {
                    case "friendsStreakOffer":
                    case "mobileWebToAppConversion":
                    case "pathChange":
                    case "pathMigration":
                        e = (0,
                        _.tP)(e, ["homeMessagingClientState", t.name, "lastShown"], t.timestamp);
                        break;
                    case "streakFreezeRecurringOffer":
                    case "webToAppConversion":
                    case "webToAppConversionAggressive":
                        {
                            const a = "webToAppConversionAggressive" === t.name ? "webToAppConversion" : t.name;
                            e = (0,
                            _.tP)(e, ["homeMessagingClientState", a, "lastShown"], t.timestamp),
                            e = (0,
                            _.JH)(e, ["homeMessagingClientState", a, "shows"], (e => (null != e ? e : 0) + 1));
                            break
                        }
                    }
                    break;
                case "PURCHASE_ITEM":
                    "SUCCESS" === t.status && "streak_freeze" === t.item.itemName && (e = (0,
                    _.tP)(e, ["homeMessagingClientState", "streakFreezeRecurringOffer"], {
                        shows: 0
                    }));
                    break;
                case "UPDATE_USER":
                    (null === (a = t.user.streakData) || void 0 === a ? void 0 : a.currentStreak) && t.user.streakData.currentStreak.length < 3 && (e = (0,
                    _.tP)(e, ["homeMessagingClientState", "streakFreezeRecurringOffer"], {
                        shows: 0
                    }));
                    break;
                case "USED_TYPE_TO_SELECT_TOKEN":
                    e = (0,
                    _.tP)(e, ["typeToSelect", "used"], !0);
                    break;
                case "SET_LEADERBOARD_POSITION_STATE":
                    e = (0,
                    _.t8)(e, "leaderboardPositionState", t.leaderboardPositionState);
                    break;
                case "PLUS_BANNER_SHOWN":
                    e = (0,
                    _.t8)(e, "plusBannerShown", {
                        count: (null !== (n = null === (s = e.plusBannerShown) || void 0 === s ? void 0 : s.count) && void 0 !== n ? n : 0) + 1,
                        lastShown: t.timestamp
                    });
                    break;
                case "SAVE_REPORTED_PROFILE_USER_ID":
                    {
                        const a = null !== (r = e.reportedProfileUserIds) && void 0 !== r ? r : [];
                        e = (0,
                        _.t8)(e, "reportedProfileUserIds", [t.profileUserId, ...a.slice(0, 32)]);
                        break
                    }
                case "SESSION_END_PLUS_AD_SHOWN":
                    e = (0,
                    _.t8)(e, "sessionEndPlusAdShown", {
                        count: (null !== (o = null === (i = e.sessionEndPlusAdShown) || void 0 === i ? void 0 : i.count) && void 0 !== o ? o : 0) + 1,
                        lastShown: t.timestamp
                    });
                    break;
                case "SET_STREAK_PANEL_LAST_STREAK_MESSAGE_SHOWN":
                    e = (0,
                    _.t8)(e, "streakPanelLastStreakMessageShown", {
                        messageId: t.messageId,
                        utcIsoDateString: t.utcIsoDateString
                    });
                    break;
                case "SET_STREAK_SOCIETY_REWARD_CLAIMED":
                    e = (0,
                    _.t8)(e, "streakSocietyRewardClaimed", {
                        reward: t.reward,
                        timestamp: t.timestamp
                    });
                    break;
                case "STREAK_NUDGE_SHOWN":
                    e = (0,
                    _.t8)(e, "streakNudgeShown", {
                        count: t.resurrectionTimestamp === (null === (l = e.streakNudgeShown) || void 0 === l ? void 0 : l.resurrectionTimestamp) ? (null !== (d = null === (c = e.streakNudgeShown) || void 0 === c ? void 0 : c.count) && void 0 !== d ? d : 0) + 1 : 1,
                        lastShown: t.timestamp,
                        resurrectionTimestamp: t.resurrectionTimestamp
                    });
                    break;
                case "STREAK_SOCIETY_INDUCTION_SLIDE_SHOWN":
                    e = (0,
                    _.t8)(e, "streakSocietyInductionSlideShownTime", t.timestamp);
                    break;
                case "STREAK_SOCIETY_PROGRESS_SHOWN":
                    e = (0,
                    _.t8)(e, "streakSocietyProgressShown", {
                        lastShownStartDate: t.lastShownStartDate,
                        lastStreak: t.lastStreakLength
                    });
                    break;
                case "SET_SKIPPED_LEVEL":
                    e = t.levelId || (null === (u = e.skippedLevelInfo) || void 0 === u ? void 0 : u.levelId) ? (0,
                    _.t8)(e, "skippedLevelInfo", {
                        levelId: null !== (m = null !== (g = t.levelId) && void 0 !== g ? g : null === (p = e.skippedLevelInfo) || void 0 === p ? void 0 : p.levelId) && void 0 !== m ? m : ""
                    }) : (0,
                    _.t8)(e, "skippedLevelInfo", void 0);
                    break;
                case "SUPER_PREVIEW_ENDING_CALLOUT_SHOWN":
                    e = (0,
                    _.tP)(e, ["homeMessagingClientState", "superPreviewEndingCallout"], {
                        lastShown: t.shownTimestampInMs,
                        lastShownPurchaseId: t.superPreviewPurchaseId
                    });
                    break;
                case "SUPER_VIDEO_PROMO_SHOWN":
                    e = (0,
                    _.t8)(e, "superVideoPromoShown", {
                        count: (null !== (v = null === (h = e.superVideoPromoShown) || void 0 === h ? void 0 : h.count) && void 0 !== v ? v : 0) + 1,
                        hasSeenFamilyPlan: null !== (S = t.isFamilyPlan || (null === (f = e.superVideoPromoShown) || void 0 === f ? void 0 : f.hasSeenFamilyPlan)) && void 0 !== S && S,
                        hasSeenNewYears: null !== (E = t.isNewYears || (null === (y = e.superVideoPromoShown) || void 0 === y ? void 0 : y.hasSeenNewYears)) && void 0 !== E && E,
                        lastShownTimestamp: t.timestamp
                    });
                    break;
                case "UPDATE_STREAKS_EXTENDED_TIMES":
                    {
                        const a = [...e.streakExtendedTimesLastSevenDays, t.streakExtension]
                          , s = (0,
                        ie.kD)(t.streakExtension, w.ee, a);
                        e = (0,
                        _.t8)(e, "streakExtendedTimesLastSevenDays", s)
                    }
                }
                return e
            }
            ,
            user: (e=(0,
            _.Dp)({
                coachRecords: {},
                explanationsSeen: {},
                gemsConfig: {
                    gems: 0,
                    gemsPerSkill: 0
                },
                recentlySeenSmartTips: {},
                sessionsCompleted: 0,
                streakData: {
                    currentStreak: null,
                    longestStreak: null,
                    previousStreak: null
                }
            }), t) => {
                var a, s, n, r, i, o, l, c, d, u, g, p, h;
                switch (t.type) {
                case "DISABLE_HOME_MESSAGE":
                case "DISMISS_HOME_MESSAGE":
                    le.Qd[t.name] ? e = (0,
                    _.t8)(e, "persistentNotifications", m.zu(e.persistentNotifications, le.Qd[t.name])) : ("DISABLE_HOME_MESSAGE" === t.type && "streakRepairOffer" === t.name && (e = (0,
                    _.t8)(e, "streakRepairOffer", void 0)),
                    "DISMISS_HOME_MESSAGE" === t.type && "immersivePlusPromo" === t.name && (e = (0,
                    _.t8)(e, "premiumExpirationTimestampSeconds", void 0)));
                    break;
                case "ACTIVATE_SUPER":
                    e = (0,
                    _.t8)(e, "premiumExpirationTimestampSeconds", t.premiumExpirationTimestampSeconds);
                    break;
                case "ADD_SUPER_DISCOUNT":
                    e = (0,
                    _.tP)(e, ["plusDiscounts"], [de(t.apiDiscount), ...e.plusDiscounts]);
                    break;
                case "ACTIVATE_SUPER_DISCOUNT":
                    {
                        const a = [...e.plusDiscounts].map((e => e.discountType === t.apiDiscount.discountType ? {
                            ...e,
                            isActivated: !0
                        } : e));
                        e = (0,
                        _.tP)(e, ["plusDiscounts"], a);
                        break
                    }
                case "REMOVE_SUPER_DISCOUNT":
                    e = (0,
                    _.tP)(e, ["plusDiscounts"], e.plusDiscounts.filter((e => e.discountType !== t.discountType)));
                    break;
                case "EXPLANATION_SHOWN":
                    e = (0,
                    _.tP)(e, ["explanationsSeen", t.explanationSkillId], t.timestamp);
                    break;
                case "PURCHASE_ITEM":
                    if ("SUCCESS" !== t.status)
                        break;
                    e = (0,
                    _.tP)(e, ["gemsConfig", "gems"], e.gemsConfig.gems - t.item.purchasePrice * (null !== (a = t.purchaseQuantity) && void 0 !== a ? a : 1));
                    break;
                case "SET_STREAK_GOAL":
                    e = (0,
                    _.t8)(e, "selectedStreakGoal", t.streakGoal);
                    break;
                case "UPDATE_EXPERIMENT_RECORD":
                    {
                        const a = e.experiments[t.name];
                        a && (e = (0,
                        f.$f)(e, ["experiments", t.name], {
                            condition: null !== (s = t.condition) && void 0 !== s ? s : a.condition,
                            contexts: t.context && !a.contexts.includes(t.context) ? [...a.contexts, t.context].sort() : a.contexts,
                            treated: t.treated
                        }));
                        break
                    }
                case "REFRESH_PRACTICE_HUB":
                    e = (0,
                    f.$f)(e, ["practiceHubInfo", t.courseId], t.practiceHubCourseInfo);
                    break;
                case "COMPLETE_PRACTICE_HUB_FEATURED_STORY":
                    e = (0,
                    _.tP)(e, ["practiceHubInfo", t.courseId, "featuredStory", "completed"], !0);
                    break;
                case "COMPLETE_PRACTICE_HUB_SESSION":
                    if (void 0 === (null === (n = e.practiceHubInfo) || void 0 === n ? void 0 : n[t.courseId]))
                        throw Error("Tried to update practice hub session completion status in redux without practice hub data.");
                    e = (0,
                    _.tP)(e, ["practiceHubInfo", t.courseId, "sessions", t.sessionName, "completed"], !0);
                    break;
                case "SET_PARENTAL_CONSENT_STATUS_FOR_SOCIAL":
                    e = (0,
                    _.t8)(e, "hasRequestedParentalConsentForSocial", t.hasRequestedParentalConsent);
                    break;
                case "MISTAKES_VISITED":
                    if (void 0 === (null === (r = e.practiceHubInfo) || void 0 === r ? void 0 : r[t.courseId]))
                        throw Error("Tried to update mistakes visited timestamp in redux without practice hub course info.");
                    e = (0,
                    _.tP)(e, ["practiceHubInfo", t.courseId, "timestampMistakesLastVisited"], t.timestamp);
                    break;
                case "PRACTICE_HUB_VISITED":
                    if (void 0 === (null === (i = e.practiceHubInfo) || void 0 === i ? void 0 : i[t.courseId]))
                        throw Error("Tried to update practice hub tab visited timestamp in redux without practice hub course info.");
                    e = (0,
                    _.tP)(e, ["practiceHubInfo", t.courseId, "timestampTabLastVisited"], t.timestamp);
                    break;
                case "WORDS_LIST_VISITED":
                    {
                        const a = null === (o = e.practiceHubInfo) || void 0 === o ? void 0 : o[t.courseId];
                        (null == a ? void 0 : a.wordsList) && (e = (0,
                        _.tP)(e, ["practiceHubInfo", t.courseId, "wordsList", "practiceHub" === t.location ? "lastVisitLexemeCountOnPracticeHub" : "lastVisitLexemeCountOnWordsList"], a.wordsList.currentLexemeCount));
                        break
                    }
                case "WORDS_LIST_UPDATE_CURRENT_COUNT":
                    (null === (l = e.practiceHubInfo) || void 0 === l ? void 0 : l[t.courseId]) && (e = (0,
                    _.tP)(e, ["practiceHubInfo", t.courseId, "wordsList", "currentLexemeCount"], t.lexemeCount));
                    break;
                case "WORDS_LIST_UPDATE_SESSION_LEXEMES":
                    (null === (c = e.practiceHubInfo) || void 0 === c ? void 0 : c[t.courseId]) && (e = (0,
                    _.tP)(e, ["practiceHubInfo", t.courseId, "wordsList", "sessionLexemePairs"], t.sessionLexemePairs));
                    break;
                case "WORDS_LIST_COMPLETE_PRACTICE_SESSION":
                    e = (0,
                    _.t8)(e, "wordsListSessionCompleteTimeStampMs", t.sessionCompleteTimeStampMs);
                    break;
                case "WORDS_LIST_UPDATE_SUPPORTED_COURSES":
                    e = (0,
                    _.t8)(e, "wordsListSupportedCourses", t.supportedCoursesData);
                    break;
                case "RECORDED_SESSION":
                    e = (0,
                    _.t8)(e, "lastSessionFinished", t.timestamp / 1e3),
                    e = (0,
                    _.t8)(e, "sessionCount", e.sessionCount + 1),
                    e = (0,
                    _.t8)(e, "sessionsCompleted", e.sessionsCompleted + 1);
                    break;
                case "UPDATE_USER_GEMS":
                    e = (0,
                    _.tP)(e, ["gemsConfig", "gems"], e.gemsConfig.gems + t.gems);
                    break;
                case "CONSUME_DAILY_GOAL_REWARD":
                    {
                        const t = (0,
                        _.qj)(e.rewardBundles).map((e => "DAILY_GOAL_DOUBLE" === e.rewardBundleType ? (0,
                        _.JH)(e, ["rewards", 0, "consumed"], ( () => !0)) : e));
                        e = (0,
                        _.t8)(e, "rewardBundles", t);
                        break
                    }
                case "CONSUME_DAILY_QUEST_REWARD":
                    {
                        const a = e.rewardBundles.map((e => {
                            const a = e.rewards.map((e => e.id === t.rewardId ? {
                                ...e,
                                consumed: !0
                            } : e));
                            return {
                                ...e,
                                rewards: a
                            }
                        }
                        ));
                        e = (0,
                        _.t8)(e, "rewardBundles", a);
                        break
                    }
                case "CONSUME_FRIENDS_QUEST_GEMS":
                    {
                        const t = (0,
                        _.qj)(e.rewardBundles).map((e => "FRIENDS_QUEST_GEMS" === e.rewardBundleType ? (0,
                        _.tP)(e, ["rewards", 0, "consumed"], !0) : e));
                        e = (0,
                        _.t8)(e, "rewardBundles", t);
                        break
                    }
                case "CONSUME_FRIENDS_QUEST_XP_BOOST":
                    {
                        const t = (0,
                        _.qj)(e.rewardBundles).map((e => "FRIENDS_QUEST_XP_BOOST" === e.rewardBundleType ? (0,
                        _.tP)(e, ["rewards", 0, "consumed"], !0) : e));
                        e = (0,
                        _.t8)(e, "rewardBundles", t);
                        break
                    }
                case "COACH_DUO_SHOWN":
                    {
                        const a = t.model.showReason
                          , s = null === (d = e.coachRecords) || void 0 === d ? void 0 : d[a]
                          , n = void 0 === s ? 0 : (0,
                        w.zk)((0,
                        w.zM)(s.lastShown)) ? s.timesShownToday : 0
                          , r = {
                            lastShown: t.timestamp / 1e3,
                            timesShownToday: n + 1
                        };
                        e = (0,
                        _.tP)(e, ["coachRecords", a], r);
                        break
                    }
                case "RESET_COACH":
                    e = (0,
                    _.t8)(e, "coachRecords", {});
                    break;
                case "SET_MISTAKE_COUNT":
                    (void 0 === e.mistakeCountInfo || void 0 === t.mistakeCountInfo || t.mistakeCountInfo.expirationTime > e.mistakeCountInfo.expirationTime) && (e = (0,
                    _.t8)(e, "mistakeCountInfo", t.mistakeCountInfo));
                    break;
                case "SET_SMART_TIP_TO_SHOW":
                    {
                        const a = {
                            ...e.recentlySeenSmartTips
                        };
                        m.XP(a).forEach((e => {
                            a[e] < t.timestamp && delete a[e]
                        }
                        )),
                        e = (0,
                        _.t8)(e, "recentlySeenSmartTips", a);
                        const s = t.smartTipResource
                          , n = (0,
                        ce.r8)(s)
                          , r = t.timestamp + (null !== (u = s.policy.minimumTimeBetweenShows) && void 0 !== u ? u : ce.U);
                        e = (0,
                        _.tP)(e, ["recentlySeenSmartTips", n], r);
                        break
                    }
                case "SET_SHOULD_TRACK_FIRST_PATH":
                    e = (0,
                    _.t8)(e, "shouldTrackSeeFirstPath", !0);
                    break;
                case "RESET_SHOULD_TRACK_FIRST_PATH":
                    e = (0,
                    _.t8)(e, "shouldTrackSeeFirstPath", void 0);
                    break;
                case "LEAVE_CLASSROOM":
                    e = (0,
                    _.t8)(e, "classroomLeaderboardsEnabled", !1);
                    break;
                case "SET_XP_SUMMARIES":
                    e = (0,
                    _.t8)(e, "xpSummaries", t.xpSummaries);
                    break;
                case "SET_FAMILY_PLAN_INVITE":
                    e = (0,
                    _.t8)(e, "familyPlanInviteReceived", t.familyPlanInviteInfo);
                    break;
                case "UPDATE_STREAK_REPAIR_OFFER":
                    {
                        const a = null === (g = t.streakData) || void 0 === g ? void 0 : g.previousStreak;
                        if (!a) {
                            e = (0,
                            _.t8)(e, "streakRepairOffer", void 0);
                            break
                        }
                        const s = void 0 !== (0,
                        Y.W0)(2 * w.ee, e.xpSummaries).find((e => e.repaired && !e.streakExtended))
                          , n = (0,
                        se.zg)(t.items) && a.length >= se.xY && !s;
                        n && !(null == e ? void 0 : e.streakRepairOffer) ? e = (0,
                        _.t8)(e, "streakRepairOffer", {
                            expirationTime: Date.parse(a.endDate) - (0,
                            w.Rw)(e.timezoneOffset) * w.zq + 4 * w.Mb,
                            length: a.length
                        }) : n || (e = (0,
                        _.t8)(e, "streakRepairOffer", void 0));
                        break
                    }
                case "UPDATE_USER":
                    {
                        const {currentCourse: a, courses: s, health: n, plusDiscounts: r, ...i} = t.user
                          , o = (0,
                        f.Xh)(i);
                        if (s && (o.courses = s.map((e => e.id))),
                        a && (o.currentCourseId = a.id),
                        r) {
                            const t = Date.now();
                            o.plusDiscounts = [...null !== (h = null === (p = e.plusDiscounts) || void 0 === p ? void 0 : p.filter((e => e.expirationTime > t && (0,
                            k.gB)(e.discountType, P.y1)))) && void 0 !== h ? h : [], ...r.map((e => de(e)))]
                        }
                        e = ( (e, t) => {
                            for (const [a,s] of Object.entries(t)) {
                                const t = "object" == typeof s && null != s && !Array.isArray(s) && void 0 !== e[a] && ue(a) ? (0,
                                _.TS)(e[a], s, {
                                    deep: !0
                                }) : s;
                                e = (0,
                                _.t8)(e, a, t)
                            }
                            return e
                        }
                        )(e, o),
                        o.adsConfig && (e = (0,
                        _.t8)(e, "adsConfig", o.adsConfig));
                        break
                    }
                }
                return e
            }
            ,
            zombieMode: (e=ge, t) => {
                switch (t.type) {
                case "zombie/DISABLED":
                    e = (0,
                    _.t8)(e, "resetAt", void 0),
                    e = (0,
                    _.t8)(e, "status", "disabled");
                    break;
                case "zombie/ENABLED":
                    e = (0,
                    _.t8)(e, "resetAt", t.resetAt),
                    e = (0,
                    _.t8)(e, "status", "enabled");
                    break;
                case "zombie/IGNORED":
                    e = (0,
                    _.t8)(e, "ignoreUntil", t.ignoreUntil),
                    e = (0,
                    _.t8)(e, "resetAt", void 0),
                    e = (0,
                    _.t8)(e, "status", "disabled")
                }
                return e
            }
        })
          , he = (e=(0,
        pe.Gl)(), t) => ("RESET_STATE" === t.type && (e = (0,
        pe.Gl)()),
        me(e, t));
        var _e = a(73555)
          , ve = a(54412)
          , fe = a(80388);
        var Se = a(50548)
          , ye = a(53229)
          , Ee = a(43633)
          , be = a(28818)
          , Ie = a(89803)
          , we = a(71371)
          , ke = a(2064)
          , Te = a(88868)
          , Ce = a(79465)
          , Re = a(3800)
          , Le = a(20028);
        let Pe;
        Re.h && console.log("Showing only plain info"),
        document.documentElement.lang = window.duo.uiLanguage,
        "true" !== (0,
        ve.ej)(ve.Vj.RedirectToPreview) || window.location.host === Te.Vb || window.location.host === Te.a_ || I.NY() || (0,
        Te.Zs)((0,
        Te.gg)(window.location.href), !0),
        ["join.duolingo.com", "www-internal.duolingo.com"].includes(window.location.host) && (0,
        Te.Zs)(window.location.href.replace(window.location.host, Te.Z2));
        try {
            Pe = (0,
            X.Jb)()
        } catch {}
        (async () => {
            await ke.q.initialize(( () => ({
                jotai: {},
                redux: (0,
                pe.Gl)()
            })), (e => void 0 === Pe ? "No user credentials found" : e.redux.user.id !== Pe ? "User credentials mismatch" : void 0));
            const e = (0,
            pe.xC)({
                persister: ke.q.bindSubstate("redux"),
                rootReducer: he
            });
            (0,
            Ee.gh)({
                persister: ke.q.bindSubstate("jotai"),
                reduxStore: e
            }),
            (0,
            Le.Go)(e.getState().user) && I.R();
            const t = (0,
            g.aj)([{
                element: o.createElement(_e.xq, null),
                path: "*"
            }]);
            t.subscribe(( () => (0,
            i.wQ)())),
            (0,
            Se.cN)(t),
            ( () => {
                const e = (0,
                ve.ej)(ve.Vj.JWT);
                e && ((0,
                ve.nJ)(ve.Vj.JWT),
                (0,
                ve.d8)(ve.Vj.JWT, e, !0, !(0,
                fe.J9)()))
            }
            )(),
            (0,
            Ie.vi)();
            const a = ["/", "/learn"].includes(window.location.pathname);
            if (Pe)
                console.log("User is logged in"),
                a && we.Z.start("splash_to_home", {
                    startTime: window.duo.timeOrigin
                });
            else {
                console.log("User is not logged in"),
                a && we.Z.start("splash_to_intro", {
                    startTime: window.duo.timeOrigin
                });
                const e = (0,
                ve.ej)(ve.Vj.LoggedOutUUID);
                e && Ce.setDistinctId(e),
                (0,
                r.dl)()
            }
            const s = (0,
            ye.Lm)();
            Ce.canSetCampaignInfo(s) && Ce.setCampaignInfo(s),
            Ce.track("app_open", {}),
            Ce.trackUserActive2022({
                activity_trigger: "app_foregrounded"
            }),
            (0,
            ve.ej)(ve.Vj.ShouldTrackWelcome) && (Ce.track("welcome", {}),
            (0,
            ve.nJ)(ve.Vj.ShouldTrackWelcome));
            const n = o.createElement(u.zt, {
                store: e
            }, o.createElement(be.wq, null, o.createElement(d.B6, null, o.createElement(g.pG, {
                router: t
            }))));
            window.duo.useCreateRoot ? (0,
            c.s)(document.querySelector("#root")).render(n) : (0,
            l.render)(n, document.querySelector("#root"))
        }
        )()
    }
    ,
    69098: () => {
        "use strict";
        window.duo.timeOrigin = window.performance.now()
    }
    ,
    73555: (e, t, a) => {
        "use strict";
        a.d(t, {
            xq: () => Kr,
            vH: () => Cr,
            HL: () => Gs,
            dr: () => Tr
        });
        var s = a(27378)
          , n = a(14935)
          , r = a(40412)
          , i = a(59815)
          , o = a(58576)
          , l = a(30839)
          , c = a(18804)
          , d = a(79465);
        class u extends s.Component {
            constructor() {
                super(...arguments),
                this.state = {
                    hasError: !1
                }
            }
            static getDerivedStateFromError() {
                return {
                    hasError: !0
                }
            }
            async componentDidCatch(e, t) {
                if (console.warn("RedirectingErrorBoundary caught an error"),
                !(0,
                i.Wp)(e)) {
                    const a = (0,
                    o.vU)(e, {
                        data: {
                            ...t,
                            isFromRedirectingErrorBoundary: !0
                        }
                    });
                    await (0,
                    d.track)("app_crash", {
                        crash_message: e.message,
                        crash_type: e.name,
                        sentry_event_id: a
                    }, !1)
                }
                (0,
                i.Wp)(e) || ((0,
                l.cl)(l.Qt.State),
                this.props.dispatch({
                    type: "UNMOUNT"
                }))
            }
            render() {
                return this.state.hasError ? null : this.props.children
            }
        }
        const g = e => {
            const t = (0,
            c.tX)();
            return s.createElement(u, {
                dispatch: t,
                ...e
            })
        }
        ;
        var p = a(80254)
          , m = a(91374)
          , h = a(36099)
          , _ = a(27272)
          , v = a(56945)
          , f = a(36011);
        const S = e => {
            switch (e) {
            case "heartsInSession":
                return 25;
            case "gemsInHomepage":
                return 30;
            default:
                return 0
            }
        }
          , y = ({spotlightType: e}) => {
            const t = s.useContext(f.Mk)
              , [a,n] = s.useState()
              , r = s.useCallback(( () => {
                const a = ( () => {
                    var a, s, n, r;
                    switch (e) {
                    case "heartsInSession":
                        return null === (s = null === (a = null == t ? void 0 : t.getHeartsStatInLessonRef) || void 0 === a ? void 0 : a.call(t)) || void 0 === s ? void 0 : s.getBoundingClientRect();
                    case "gemsInHomepage":
                        return null === (r = null === (n = null == t ? void 0 : t.getGemsHomepageRef) || void 0 === n ? void 0 : n.call(t)) || void 0 === r ? void 0 : r.getBoundingClientRect();
                    default:
                        return
                    }
                }
                )();
                if (a)
                    return {
                        cx: a.x + a.width / 2,
                        cy: a.y + a.height / 2,
                        height: window.innerHeight,
                        r: Math.max(a.width, a.height) / 2 + S(e),
                        width: window.innerWidth
                    }
            }
            ), [e, t])
              , i = s.useCallback(( () => {
                n(r())
            }
            ), [n, r]);
            return s.useLayoutEffect(( () => {
                n(r())
            }
            ), []),
            s.useEffect(( () => (null == t || t.addCallback(e, r),
            () => {
                null == t || t.removeCallback(e, r)
            }
            )), [r, t, e]),
            s.useEffect(( () => (window.addEventListener("resize", i),
            () => window.removeEventListener("resize", i))), [i]),
            a ? s.createElement(v.Z, {
                direction: "down",
                isVisible: !0,
                zIndex: 300,
                ...a
            }) : null
        }
        ;
        var E = a(23831);
        const b = ({children: e, style: t, theme: a}) => (s.useInsertionEffect(( () => (document.documentElement.dataset.duoTheme = a,
        Object.entries(t).forEach(( ([e,t]) => document.documentElement.style.setProperty(e, t))),
        () => {
            delete document.documentElement.dataset.duoTheme,
            Object.keys(t).forEach((e => document.documentElement.style.removeProperty(e)))
        }
        )), [t, a]),
        s.createElement(s.Fragment, null, e));
        var I = a(53173)
          , w = a(64115)
          , k = a(28818)
          , T = a(56366);
        const C = ({children: e}) => {
            const t = (0,
            k.Dv)(T.H_)
              , a = ( () => {
                const e = (0,
                w.ky)("darkMode");
                if (void 0 !== e)
                    return "on" === e || "system" === e ? e : "off"
            }
            )()
              , n = null != a ? a : t;
            return s.createElement(I.Z, {
                theme: "on" === n ? "dark" : "off" === n ? "light" : void 0
            }, (t => s.createElement(b, {
                ...t
            }, e)))
        }
        ;
        var R = a(3731)
          , L = a(50548)
          , P = a(88868);
        const A = () => {
            const e = (0,
            L.TH)()
              , t = (0,
            n.ur)()
              , a = s.useRef()
              , r = [P.B6, "/leaderboard", "/shop", "/characters"].includes(e.pathname) ? "manual" : "auto";
            return s.useLayoutEffect(( () => {
                window.history.scrollRestoration = r
            }
            ), [r]),
            s.useLayoutEffect(( () => {
                e.pathname !== a.current && ([P.B6, "/leaderboard"].includes(e.pathname) || "POP" === t || R.O.scrollTo(0, 0)),
                a.current = e.pathname
            }
            )),
            null
        }
        ;
        var D = a(44451)
          , O = a(42659)
          , N = a(35160);
        var x = a(58034)
          , M = a(15746)
          , F = a(54174)
          , U = a(88787);
        var H = a(27429);
        let G = Date.now();
        var V = a(17135)
          , z = a(16086);
        const B = 3e5
          , j = ["mousedown", "keydown", "touchstart"];
        var $ = a(50791)
          , Z = a(15879)
          , W = a(64184)
          , q = a(80388);
        const Q = ({disabled: e}) => {
            const t = (0,
            c.tX)()
              , a = (0,
            c.CC)();
            s.useEffect(( () => {
                if (!e) {
                    const e = (0,
                    q.nC)(( () => {
                        try {
                            (0,
                            z.Jb)()
                        } catch {
                            return void clearInterval(e)
                        }
                        const s = a.getState();
                        (0,
                        O.eI)(s) || void 0 !== Z.SL || (t((0,
                        W.eY)()),
                        t((0,
                        $.i)()))
                    }
                    ), 36e5);
                    return () => clearInterval(e)
                }
            }
            ), [e])
        }
        ;
        var K = a(18867);
        var Y = a(36666)
          , J = a(31809);
        var X = a(95940);
        const ee = () => s.createElement(J.Z, {
            className: "_2qzZD",
            closeStyle: "hidden",
            customStyle: N.W.Custom,
            modalName: N.t.ChangeUiLanguage
        }, ( ({onDismiss: e, modalOptions: {languageName: t, onSwitchLanguage: a}}) => s.createElement(s.Fragment, null, s.createElement("div", {
            className: "opacv"
        }, (0,
        X._i)(18428, {
            language_name: t
        })), s.createElement("div", {
            className: "_118N9"
        }, (0,
        X._i)(21141, {
            language_name: t
        })), s.createElement(Y.Z, {
            className: "ctsS0",
            color: "macaw",
            onClick: () => {
                e(),
                a()
            }
            ,
            variant: "solid"
        }, (0,
        X._i)(30820, {
            language_name: t
        })), s.createElement(Y.Z, {
            className: "QCwEC",
            color: "macaw",
            onClick: e,
            variant: "text"
        }, (0,
        X._i)(23427)))));
        var te = a(64502)
          , ae = a(47725)
          , se = a(11899)
          , ne = a(60042)
          , re = a.n(ne)
          , ie = a(89046);
        var oe = a(30033);
        const le = ({[oe.m5]: e, autoComplete: t, autoFocus: a, disabled: n, error: r, linkComponent: i, onBlur: o, onChange: l, onResetError: c, placeholder: u, suggestedUsernames: g, tooltip: p, type: m, value: h}) => {
            const _ = s.useRef(null)
              , v = r ? (null == g ? void 0 : g.length) ? s.createElement("span", null, r, g.map((e => s.createElement("span", {
                key: e
            }, " ", s.createElement(Y.Z, {
                className: "_7nkQ6",
                onClick: () => {
                    l(e),
                    null == c || c()
                }
                ,
                type: "button"
            }, e))))) : r : s.createElement("span", {
                className: "_6uMOe"
            }, p);
            return s.useEffect(( () => {
                var e;
                a && (null === (e = _.current) || void 0 === e || e.focus())
            }
            ), []),
            s.createElement(ie.Z, {
                ...(0,
                oe._q)(e),
                autoComplete: t,
                className: re()("_-_ei", d.FULL_STORY_EXCLUDE),
                hasError: void 0 !== r,
                helperText: v,
                linkComponent: i,
                onBlur: o,
                onChange: e => l(e.target.value),
                placeholder: u,
                ref: _,
                state: n ? "disabled" : "enabled",
                type: m,
                value: h
            })
        }
        ;
        var ce = a(67173);
        const de = ({children: e}) => e ? s.createElement("div", {
            ...(0,
            oe._q)(ce.V.InvalidFormField),
            className: "_3_sm4 y2XzX"
        }, e) : null
          , ue = ({children: e}) => {
            const t = s.Children.toArray(e).filter((e => !!e)).map(( (e, t) => s.createElement(de, {
                key: t
            }, e)));
            return t.length ? s.createElement("div", {
                className: "_3ETIn y2XzX"
            }, t) : null
        }
        ;
        var ge = a(27147)
          , pe = a(14649);
        const me = a.p + "images/ded9ca9461387f30221b67f627227388.svg";
        var he = a(90778)
          , _e = a(45437)
          , ve = a(20750)
          , fe = a(9115)
          , Se = a(13567);
        const ye = {
            "modal-wrapper": "_3shDK",
            "right-controls": "_3MPka",
            modal: "_2zDup",
            table: "_2dCRU",
            "link-container": "_7Cej2",
            "link-container-stacked": "_2eFEB _7Cej2",
            "account-icon": "_1f5DO",
            button: "_1QN-w",
            header: "_1txIz",
            title: "_3U467",
            "signin-error-message": "m-9SI",
            "last-login-name": "VvkZl",
            "blue-link": "Dd4kg _1WLlV _1KSsU _2Rt1l",
            "blue-link-body": "_3fKH5 _1WLlV _1KSsU _2Rt1l",
            "created-with-social-title": "_2FwN2 _3U467",
            "created-with-social-body": "LFQTx",
            google: "_1bbxJ _3xNUg",
            facebook: "_2RcAK _3yIBb",
            "require-google-button": "oqqD3 _3xNUg",
            footer: "_1zS0t",
            "terms-and-privacy": "_8Lfek",
            "no-account": "_2t5Dr",
            "no-account-link": "_319hG",
            hr: "_2Iy6P",
            "hr-bar": "_2GfD7",
            "hr-text": "_3-wlz _2Rt1l",
            "google-sign-in-up-header": "_24S8P",
            "google-sign-in-up-title": "_3BLqs",
            "sign-in-up-subtitle": "_2z0oh"
        };
        var Ee = a(42985)
          , be = a(70326)
          , Ie = a(41679)
          , we = a(8649)
          , ke = a(67574)
          , Te = a(67899)
          , Ce = a(33124)
          , Re = a(71371)
          , Le = a(6986)
          , Pe = a(81621)
          , Ae = a(20028);
        const De = ({dispatch: e, errors: t, focusPasswordField: a=!1, identifier: n, onIdentifierChange: r, onPasswordChange: i, password: o, showEmailField: l, submitting: c, via: u}) => s.createElement("div", {
            className: ye.table
        }, l ? s.createElement(le, {
            autoComplete: "email",
            disabled: !!c,
            error: t.identifier,
            onChange: r,
            placeholder: (0,
            X.H8)(14299),
            type: "text",
            value: n,
            ...(0,
            oe._q)(ce.V.EmailInput)
        }) : null, s.createElement(le, {
            autoComplete: "current-password",
            autoFocus: a,
            disabled: !!c,
            error: t.password,
            linkComponent: s.createElement(ae.ZP, {
                ...(0,
                oe._q)(ce.V.ForgotPassword),
                href: "/forgot_password",
                onClick: () => {
                    (0,
                    d.track)("sign_in_tap", {
                        target: "forgot_password",
                        via: u
                    }),
                    e({
                        options: void 0,
                        type: "TOGGLE_MODAL"
                    })
                }
                ,
                tabIndex: -1
            }, (0,
            X._i)(18857)),
            onChange: i,
            placeholder: (0,
            X.H8)(18716),
            type: "password",
            value: o,
            ...(0,
            oe._q)(ce.V.PasswordInput)
        }))
          , Oe = ({age: e, ageRestricted: t, email: a, errors: n, hideAge: r, hideEmail: i=!1, hideName: o=!1, hidePassword: l=!1, hideUsername: c=!1, isUGCDisabled: d, name: u, onAgeBlur: g, onAgeChange: p, onEmailChange: m, onNameChange: h, onPasswordChange: _, onResetError: v, onUsernameBlur: f, onUsernameChange: S, password: y, submitting: E, username: b}) => s.createElement("div", {
            className: ye.table
        }, r ? null : s.createElement(le, {
            disabled: !!E,
            error: n.age,
            onBlur: g,
            onChange: p,
            placeholder: (0,
            X.H8)(15038),
            tooltip: (0,
            X._i)(19089),
            type: "text",
            value: e,
            ...(0,
            oe._q)(ce.V.AgeInput)
        }), d || c ? null : t ? s.createElement(le, {
            autoComplete: "username",
            disabled: !!E,
            error: n.username,
            onBlur: f,
            onChange: S,
            onResetError: v,
            placeholder: (0,
            X.H8)(17475),
            suggestedUsernames: n.suggestedUsernames,
            type: "text",
            value: b,
            ...(0,
            oe._q)(ce.V.UsernameInput)
        }) : o ? null : s.createElement(le, {
            autoComplete: "name",
            disabled: !!E,
            error: n.name,
            onChange: h,
            placeholder: (0,
            X.H8)(6101),
            type: "text",
            value: u,
            ...(0,
            oe._q)(ce.V.FullNameInput)
        }), i ? null : s.createElement(le, {
            autoComplete: "email",
            disabled: !!E,
            error: n.email,
            onChange: m,
            placeholder: t ? (0,
            X.H8)(24103) : (0,
            X.H8)(2928),
            type: "email",
            value: a,
            ...(0,
            oe._q)(ce.V.EmailInput)
        }), l ? null : s.createElement(le, {
            autoComplete: "new-password",
            disabled: !!E,
            error: n.password,
            onChange: _,
            placeholder: (0,
            X.H8)(18716),
            type: "password",
            value: y,
            ...(0,
            oe._q)(ce.V.PasswordInput)
        }))
          , Ne = ({onClick: e, platform: t, submitting: a}) => s.createElement(Y.Z, {
            className: ye[t],
            disabled: !1 !== a && a !== t,
            onClick: "google" === t ? void 0 : e,
            submitting: a === t,
            type: "button",
            unstyledDisabled: !0,
            variant: "stroke",
            ..."facebook" === t ? (0,
            oe._q)(ce.V.LoginWithFacebook) : (0,
            oe._q)(ce.V.LoginWithGoogle)
        }, s.createElement("img", {
            className: ye["account-icon"],
            src: "facebook" === t ? me : ve
        }), (0,
        X._i)("facebook" === t ? 17511 : 11701), "google" === t ? s.createElement(ge.Z, {
            onClick: e
        }) : null)
          , xe = ({errors: e, header: t, lastLoginType: a, name: n="", onFacebookClick: r, onGoogleClick: i, onUseAnotherAccount: o, picture: l=Pe.tU, registerButton: c, signInErrors: d, submitting: u, title: g, via: p, ...m}) => s.createElement("div", null, s.createElement("div", null, t ? s.createElement("div", {
            className: ye.header
        }, t) : null, s.createElement("h1", {
            className: ye.title
        }, g), s.createElement(se.Z, {
            size: "medium",
            user: {
                id: 0,
                name: n,
                picture: l
            }
        }), s.createElement("div", {
            className: ye["last-login-name"]
        }, n), s.createElement("div", {
            ...(0,
            oe._q)(ce.V.UseAnotherAccount),
            className: ye["blue-link"],
            onClick: o
        }, s.createElement("span", null, (0,
        X._i)(2745)))), "email" === a ? s.createElement("div", null, s.createElement(De, {
            errors: d ? {} : e,
            showEmailField: !1,
            submitting: u,
            via: p,
            ...m
        }), d, c) : "social" === a ? s.createElement("p", {
            className: ye["link-container-stacked"]
        }, s.createElement(Ne, {
            onClick: i,
            platform: "google",
            submitting: u
        }), s.createElement(Ne, {
            onClick: r,
            platform: "facebook",
            submitting: u
        })) : null)
          , Me = ({isSignIn: e, onGoogleClick: t, renderHeader: a, renderSubtitle: n, renderTitle: r, submitting: i}) => {
            var o;
            return s.createElement("div", null, s.createElement("div", {
                className: ye["google-sign-in-up-header"]
            }, void 0 === a ? null : s.createElement("div", {
                className: ye["google-sign-in-up-header"]
            }, a(e)), s.createElement("h1", {
                className: ye["google-sign-in-up-title"]
            }, null !== (o = null == r ? void 0 : r(e)) && void 0 !== o ? o : (0,
            X._i)(43395)), n ? s.createElement("p", {
                className: ye["sign-in-up-subtitle"]
            }, n(e)) : null), s.createElement(Y.Z, {
                className: ye["require-google-button"],
                submitting: "google" === i,
                type: "button",
                variant: "stroke"
            }, s.createElement("img", {
                className: Ee.Z["account-icon"],
                src: ve
            }), s.createElement("span", {
                className: Ee.Z["account-text"]
            }, (0,
            X._i)(1327)), s.createElement(ge.Z, {
                onClick: t
            })))
        }
          , Fe = ({name: e, picture: t, platform: a, onFacebookClick: n, onGoogleClick: r, onUseAnotherAccount: i, submitting: o}) => {
            const l = "dark" === (0,
            te.Fg)();
            return s.createElement("div", null, s.createElement("div", null, s.createElement("h1", {
                className: ye["created-with-social-title"]
            }, (0,
            X._i)("facebook" === a ? 23083 : 693)), s.createElement(se.Z, {
                size: "large",
                user: {
                    id: 0,
                    name: e,
                    picture: t
                }
            }), s.createElement("div", {
                className: ye["last-login-name"]
            }, e)), s.createElement("div", {
                className: ye["created-with-social-body"]
            }, s.createElement(Y.Z, {
                ..."facebook" === a ? (0,
                oe._q)(ce.V.ContinueWithFacebook) : (0,
                oe._q)(ce.V.ContinueWithGoogle),
                className: Ee.Z[`${a}-solid`],
                onClick: "facebook" === a ? n : void 0,
                submitting: o === a,
                type: "button",
                variant: "solid"
            }, s.createElement("img", {
                className: Ee.Z["account-icon"],
                src: "facebook" === a ? l ? he : _e : l ? fe : Se
            }), s.createElement("span", {
                className: Ee.Z["account-text"]
            }, (0,
            X._i)("facebook" === a ? 15620 : 1327)), "google" === a ? s.createElement(ge.Z, {
                onClick: r
            }) : null), s.createElement("div", {
                className: ye["blue-link-body"],
                onClick: i
            }, s.createElement("span", null, (0,
            X._i)(2745)))))
        }
          , Ue = ({config: e, fields: t, isFamilyPlan: a, isSignIn: n, onFacebookClick: r, onGoogleClick: i, onNextFromAgeStep: o, registerButton: l, renderHeader: c, renderSubtitle: d, renderTitle: u, signInErrors: g, signupStep: p, submitting: m, ...h}) => {
            var _;
            if (!n) {
                const a = (0,
                X.KJ)(null !== (_ = e.ipCountry) && void 0 !== _ ? _ : "")
                  , n = parseInt(t.age, 10)
                  , c = null != p ? p : "age"
                  , d = !a || "profile" === c && n >= e.ageRestrictionLimit;
                return "age" === c ? s.createElement(Be, {
                    fields: t,
                    onFacebookClick: r,
                    onGoogleClick: i,
                    onNextFromAgeStep: o,
                    showSocial: d,
                    submitting: m,
                    ...h
                }) : s.createElement(je, {
                    fields: t,
                    onFacebookClick: r,
                    onGoogleClick: i,
                    registerButton: l,
                    showSocial: d,
                    signInErrors: g,
                    submitting: m,
                    ...h
                })
            }
            return s.createElement(ze, {
                dispatch: h.dispatch,
                errors: h.errors,
                focusPasswordField: h.focusPasswordField,
                identifier: h.identifier,
                isSignIn: n,
                onFacebookClick: r,
                onGoogleClick: i,
                onIdentifierChange: h.onIdentifierChange,
                onPasswordChange: h.onPasswordChange,
                password: h.password,
                registerButton: l,
                renderHeader: c,
                renderSubtitle: d,
                renderTitle: u,
                showEmailField: h.showEmailField,
                signInErrors: g,
                submitting: m,
                via: h.via
            })
        }
        ;
        class He extends s.Component {
            constructor() {
                super(...arguments),
                this.state = {
                    ageRestricted: !1,
                    alternateView: null,
                    errors: {},
                    fields: {
                        age: "",
                        email: "",
                        identifier: "",
                        name: "",
                        password: "",
                        username: ""
                    },
                    isUsernameVerified: !1,
                    loginAttempts: {
                        count: 0,
                        emailSent: !1,
                        lastEmailUsed: "",
                        showEmailSentNotification: !1
                    },
                    submitting: !1,
                    useImprovedErrorMessages: !1
                },
                this.memoizeUsernameValidate = p.HP(be.rV),
                this.mounted = !1,
                this.emailSignup = async (e, t) => {
                    const {dispatch: a, modalOptions: {allowLanguagelessUser: s}} = this.props
                      , {ageRestricted: n} = this.state
                      , r = {};
                    if (e.email.trim() || (r.email = (0,
                    X.H8)(11696)),
                    e.password.trim() || (r.password = (0,
                    X.H8)(5030)),
                    t || e.age.trim() || (r.age = (0,
                    X.H8)(15012)),
                    !p.xb(r))
                        return Promise.reject(new be.Wj(!1,r));
                    const i = {
                        ...e,
                        age: e.age,
                        name: n ? null : e.name,
                        username: n ? e.username : null
                    };
                    if ((0,
                    z.Pc)())
                        try {
                            await a((0,
                            W.DZ)(i, !1, !0)),
                            this.trackSuccessfulSignUp()
                        } catch (e) {
                            this.handleSignUpFail(e)
                        }
                    else {
                        s || (0,
                        o.Kp)("Forced to create languageless user account despite being asked not to.");
                        try {
                            await (0,
                            be.$C)(i),
                            await a((0,
                            W.eY)()),
                            this.trackSuccessfulSignUp()
                        } catch (e) {
                            this.handleSignUpFail(e)
                        }
                    }
                }
                ,
                this.trackSuccessfulSignUp = () => {
                    const {dispatch: e, dispatchAtom: t, modalOptions: {limitRedirect: a, via: s}} = this.props;
                    (0,
                    d.track)("register", {
                        successful: !0,
                        through: "email",
                        via: s
                    }),
                    (0,
                    Te.SX)({
                        event: "sign_up"
                    }),
                    this.handleGeneralSuccess(!1, a),
                    (async () => {
                        await e(pe._()),
                        t(Ce.PD)
                    }
                    )()
                }
                ,
                this.handleUseAnotherAccount = () => {
                    const {modalOptions: {via: e}} = this.props;
                    (0,
                    d.track)("sign_in_tap", {
                        target: "use_another_account",
                        via: e
                    }),
                    this.clearAlternateView()
                }
                ,
                this.handleSignUpFail = e => {
                    var t, a;
                    const {modalOptions: {via: s}} = this.props;
                    if ((0,
                    d.track)("register", {
                        successful: !1,
                        through: "email",
                        via: s
                    }),
                    e instanceof be.Wj)
                        throw e;
                    const n = (0,
                    K.Hx)(e) && (null === (a = null === (t = e.response) || void 0 === t ? void 0 : t.data) || void 0 === a ? void 0 : a.details);
                    throw n ? (0,
                    be.lV)(n) : new be.Wj(!1,{})
                }
                ,
                this.getParsedAge = () => {
                    const e = parseInt(this.state.fields.age, 10);
                    return isNaN(e) ? void 0 : e
                }
                ,
                this.facebookSignup = async () => {
                    const {dispatch: e, history: t, modalOptions: {allowLanguagelessUser: a, isSignIn: s, limitRedirect: n, redirectPath: r=P.B6, trackingProps: i, via: o}} = this.props;
                    this.setState({
                        errors: {},
                        submitting: "facebook"
                    });
                    try {
                        (0,
                        d.track)(s ? "sign_in_tap" : "registration_tap", {
                            target: "facebook",
                            via: o,
                            ...i
                        });
                        const l = await (0,
                        Ie.k3)({
                            age: this.getParsedAge(),
                            allowLanguagelessUser: a,
                            dispatch: e,
                            history: t,
                            onLoginSuccess: this.handleLoginSuccess,
                            redirectPath: r,
                            via: o
                        });
                        this.handleGeneralSuccess(l, n)
                    } catch {
                        this.setState({
                            submitting: !1
                        }),
                        s || this.handleRegisterFailure("facebook")
                    }
                }
                ,
                this.clearAlternateView = () => {
                    this.setState({
                        alternateView: null
                    }),
                    (0,
                    Le.ub)()
                }
                ,
                this.isCoppaRequired = () => {
                    const e = this.props.config.ipCountry;
                    return void 0 === e || (0,
                    X.KJ)(e)
                }
                ,
                this.googleSignup = async () => {
                    var e, t;
                    const {dispatch: a, modalOptions: {allowLanguagelessUser: s, isSignIn: n, limitRedirect: r, redirectPath: i=P.B6, trackingProps: o, via: l}, history: c} = this.props;
                    this.setState({
                        errors: {},
                        submitting: !1
                    });
                    try {
                        (0,
                        d.track)(n ? "sign_in_tap" : "registration_tap", {
                            target: "google",
                            via: l,
                            ...o
                        });
                        const e = await (0,
                        ke.F)({
                            age: this.getParsedAge(),
                            allowLanguagelessUser: s,
                            disallowAutomaticRegister: n && this.isCoppaRequired(),
                            dispatch: a,
                            history: c,
                            onLoginSuccess: this.handleLoginSuccess,
                            redirectPath: i,
                            setSubmitting: () => this.setState({
                                submitting: "google"
                            }),
                            via: l
                        });
                        this.handleGeneralSuccess(e, r)
                    } catch (a) {
                        this.setState({
                            errors: {
                                social: !(0,
                                K.Hx)(a) || 401 !== (null === (e = a.response) || void 0 === e ? void 0 : e.status) && 403 !== (null === (t = a.response) || void 0 === t ? void 0 : t.status) ? (0,
                                X.H8)(19737) : (0,
                                X.H8)(24701)
                            },
                            submitting: !1,
                            useImprovedErrorMessages: !0
                        }),
                        n || this.handleRegisterFailure("google")
                    }
                }
                ,
                this.handleAgeChange = () => {
                    this.setState({
                        ageRestricted: parseInt(this.state.fields.age, 10) < this.props.config.ageRestrictionLimit
                    })
                }
                ,
                this.validateUsername = async () => {
                    if (!this.state.fields.username || !this.state.ageRestricted)
                        return !0;
                    const e = this.state.fields.username;
                    try {
                        if (await this.memoizeUsernameValidate(e),
                        this.mounted)
                            return this.setState((t => {
                                if (e === t.fields.username) {
                                    const {errors: {username: e, ...a}} = t;
                                    return {
                                        errors: a,
                                        isUsernameVerified: !0
                                    }
                                }
                                return null
                            }
                            )),
                            !0
                    } catch (t) {
                        if (t instanceof be.Wj)
                            return this.mounted && this.setState((a => e === a.fields.username ? {
                                errors: t.errorFields,
                                useImprovedErrorMessages: t.useImprovedErrorMessages
                            } : null)),
                            !1;
                        throw t
                    }
                }
                ,
                this.handleResetUsernameError = () => {
                    this.setState((e => {
                        const {errors: {username: t, ...a}} = e;
                        return {
                            errors: a,
                            isUsernameVerified: !0
                        }
                    }
                    ))
                }
                ,
                this.handleFieldChange = (e, t) => {
                    this.setState((a => ({
                        fields: {
                            ...a.fields,
                            [e]: t
                        },
                        isUsernameVerified: "username" !== e && a.isUsernameVerified
                    })))
                }
                ,
                this.handleGeneralSuccess = (e, t) => {
                    const {history: a, modalOptions: {closeModalOnLogin: s=!0, goBack: n, isSignIn: r}} = this.props;
                    r || (0,
                    d.track)("registration_tap", {}),
                    this.mounted && !r && s && this.finishSignInOrSignUp(),
                    r && (e || t || a.push("/welcome")),
                    (!e || "no-redirects" !== t && "no-update" !== t) && (null == n || n(s ? void 0 : () => this.finishSignInOrSignUp()))
                }
                ,
                this.finishSignInOrSignUp = () => {
                    const {dispatch: e} = this.props;
                    e({
                        options: void 0,
                        type: "TOGGLE_MODAL"
                    })
                }
                ,
                this.handleLogin = async e => {
                    const {dispatch: t, history: a, isOnline: s, modalOptions: {closeModalOnLogin: n=!0, goBack: r, redirectPath: i=P.B6, trackingProps: o, via: l, limitRedirect: c}} = this.props
                      , {alternateView: u} = this.state
                      , g = u && "welcomeBack" === u.type && this.prefilledLoginData && this.prefilledLoginData.email ? {
                        identifier: this.prefilledLoginData.email,
                        password: e.password
                    } : e;
                    this.setState({
                        loginAttempts: {
                            ...this.state.loginAttempts,
                            showEmailSentNotification: !1
                        }
                    }),
                    await (0,
                    d.track)("sign_in_tap", {
                        target: "sign_in",
                        via: l,
                        ...o
                    });
                    try {
                        await (0,
                        be.IS)(g, s),
                        await t((0,
                        W.eY)({
                            onUserRetrieved: e => {
                                (0,
                                Le.oV)("email", e)
                            }
                        })),
                        n && t({
                            options: void 0,
                            type: "TOGGLE_MODAL"
                        }),
                        c || (0,
                        P.KE)(window.location.pathname) || a.push(i),
                        null == r || r(n ? void 0 : () => {
                            t({
                                options: void 0,
                                type: "TOGGLE_MODAL"
                            })
                        }
                        )
                    } catch (e) {
                        if (s && g.identifier.trim()) {
                            const e = await (0,
                            Le.gT)(g.identifier);
                            if (e && (e.hasFacebook || e.hasGoogle)) {
                                const t = e.hasGoogle ? "google" : "facebook";
                                return (0,
                                d.track)("sign_in_load", {
                                    screen: `sign_in_with_${t}`,
                                    via: l,
                                    ...o
                                }),
                                void this.setState({
                                    alternateView: {
                                        name: e.name,
                                        picture: e.picture,
                                        platform: t,
                                        type: "createdWithSocial"
                                    },
                                    submitting: !1
                                })
                            }
                        }
                        throw e
                    }
                }
                ,
                this.handleLoginSuccess = () => {
                    const {dispatch: e, history: t, modalOptions: {closeModalOnLogin: a=!0, limitRedirect: s, redirectPath: n=P.B6}} = this.props;
                    a && e({
                        options: void 0,
                        type: "TOGGLE_MODAL"
                    }),
                    s || (0,
                    P.KE)(window.location.pathname) || t.push(n)
                }
                ,
                this.handleRegisterFailure = e => {
                    const {modalOptions: {via: t}} = this.props;
                    (0,
                    d.track)("registration_tap", {
                        target: "create_account"
                    }),
                    (0,
                    d.track)("register", {
                        successful: !1,
                        through: e,
                        via: t
                    })
                }
                ,
                this.handleSubmit = async e => {
                    const {modalOptions: {hideAge: t, isSignIn: a}} = this.props;
                    if (e.preventDefault(),
                    !this.state.ageRestricted || this.state.isUsernameVerified || await this.validateUsername()) {
                        this.setState({
                            errors: {},
                            submitting: "email"
                        });
                        try {
                            a ? (Re.Z.start("login_success_or_fail"),
                            await this.handleLogin(this.state.fields)) : (Re.Z.start("registration_success_or_fail"),
                            (0,
                            d.track)("registration_tap", {
                                target: "create_account"
                            }),
                            await this.emailSignup(this.state.fields, !0 === t))
                        } catch (e) {
                            if (this.setState({
                                submitting: !1
                            }),
                            !(e instanceof be.Wj))
                                throw e;
                            this.setState({
                                errors: e.errorFields,
                                useImprovedErrorMessages: e.useImprovedErrorMessages
                            })
                        } finally {
                            a ? Re.Z.finish("login_success_or_fail") : Re.Z.finish("registration_success_or_fail")
                        }
                    }
                }
                ,
                this.handleProceedToProfileStep = () => {
                    (0,
                    d.track)("registration_tap", {
                        target: "age_continue"
                    });
                    const {fields: e} = this.state
                      , {config: t} = this.props
                      , a = parseInt(e.age, 10);
                    !e.age || isNaN(a) || a <= 0 ? this.setState({
                        errors: {
                            age: (0,
                            X.H8)(15012)
                        }
                    }) : (this.setState({
                        ageRestricted: a < t.ageRestrictionLimit,
                        errors: {}
                    }),
                    this.props.onNextFromAgeStep())
                }
            }
            componentDidMount() {
                (0,
                Ie.L8)();
                const {modalOptions: {disableWelcomeBack: e, isFamilyPlan: t, isSignIn: a, trackingProps: s, via: n}} = this.props;
                if (this.mounted = !0,
                a) {
                    this.prefilledLoginData = (0,
                    Le.MG)();
                    const r = !e && a && !t && !!this.prefilledLoginData;
                    if (r) {
                        if ("email" === this.prefilledLoginData.type)
                            (0,
                            d.track)("sign_in_load", {
                                screen: "email_prefilled",
                                via: n,
                                ...s
                            });
                        else if ("social" === this.prefilledLoginData.type) {
                            const e = this.prefilledLoginData.hasGoogle && this.prefilledLoginData.hasFacebook ? "google_and_facebook" : this.prefilledLoginData.hasGoogle ? "google" : "facebook";
                            (0,
                            d.track)("sign_in_load", {
                                screen: `sign_in_with_${e}`,
                                via: n,
                                ...s
                            })
                        }
                    } else
                        (0,
                        d.track)("sign_in_load", {
                            screen: "sign_in_modal",
                            via: n,
                            ...s
                        });
                    this.setState({
                        alternateView: r ? {
                            title: (0,
                            X.H8)(1086),
                            type: "welcomeBack"
                        } : null
                    })
                } else
                    (0,
                    d.track)("registration_load", {
                        screen: "sign_in_modal"
                    })
            }
            componentWillUnmount() {
                this.mounted = !1;
                const {modalOptions: {isSignIn: e, onBeforeClose: t, via: a}} = this.props;
                e ? (0,
                d.track)("sign_in_tap", {
                    target: "dismiss",
                    via: a
                }) : (0,
                d.track)("registration_tap", {
                    target: "dismiss"
                }),
                null == t || t()
            }
            render() {
                const {dispatch: e, isDesktop: t, modalOptions: {hideAge: a=!1, isFamilyPlan: n, isSignIn: r, removeSignUp: i, renderHeader: o, renderSubtitle: l, renderTitle: c, requireGoogle: d, via: u}} = this.props
                  , {ageRestricted: g, alternateView: p, errors: m, fields: h, submitting: _, useImprovedErrorMessages: v} = this.state
                  , f = (0,
                Pe.P_)(this.props.config)
                  , S = r && null !== p && "welcomeBack" === p.type
                  , y = S ? p.title : ""
                  , E = r && p && "createdWithSocial" === p.type
                  , b = E && p
                  , I = S ? 1032 : r ? 35497 : 11927
                  , w = s.createElement(Y.Z, {
                    ...(0,
                    oe._q)(ce.V.RegisterButton),
                    className: ye.button,
                    disabled: S ? void 0 : !1 !== _ && "email" !== _,
                    key: I,
                    submitting: "email" === _,
                    type: "submit",
                    unstyledDisabled: !S,
                    variant: "solid"
                }, (0,
                X._i)(I))
                  , k = r && v && (m.password || m.identifier || m.connectivity || m.social) ? s.createElement(ue, null, m.identifier, m.password, m.connectivity, m.social) : null
                  , T = ( () => d ? s.createElement(Me, {
                    isSignIn: r,
                    onGoogleClick: this.googleSignup,
                    renderHeader: o,
                    renderSubtitle: l,
                    renderTitle: c,
                    submitting: _
                }) : S && this.prefilledLoginData ? s.createElement(xe, {
                    dispatch: e,
                    errors: m,
                    header: null == o ? void 0 : o(!0),
                    identifier: h.identifier,
                    lastLoginType: this.prefilledLoginData.type,
                    name: this.prefilledLoginData.name,
                    onFacebookClick: this.facebookSignup,
                    onGoogleClick: this.googleSignup,
                    onIdentifierChange: e => this.handleFieldChange("identifier", e),
                    onPasswordChange: e => this.handleFieldChange("password", e),
                    onUseAnotherAccount: this.handleUseAnotherAccount,
                    password: h.password,
                    picture: this.prefilledLoginData.picture,
                    registerButton: w,
                    signInErrors: k,
                    submitting: _,
                    title: y,
                    via: u
                }) : E ? s.createElement(Fe, {
                    name: b.name,
                    onFacebookClick: this.facebookSignup,
                    onGoogleClick: this.googleSignup,
                    onUseAnotherAccount: this.handleUseAnotherAccount,
                    picture: b.picture,
                    platform: b.platform,
                    submitting: _
                }) : s.createElement(Ue, {
                    age: h.age,
                    ageRestricted: g,
                    config: this.props.config,
                    dispatch: e,
                    email: h.email,
                    errors: m,
                    fields: h,
                    focusPasswordField: !1,
                    hideAge: a,
                    identifier: h.identifier,
                    isFamilyPlan: n,
                    isSignIn: r,
                    isUGCDisabled: f,
                    name: h.name,
                    onAgeBlur: this.handleAgeChange,
                    onAgeChange: e => this.handleFieldChange("age", e),
                    onEmailChange: e => this.handleFieldChange("email", e),
                    onFacebookClick: this.facebookSignup,
                    onGoogleClick: this.googleSignup,
                    onIdentifierChange: e => this.handleFieldChange("identifier", e),
                    onNameChange: e => this.handleFieldChange("name", e),
                    onNextFromAgeStep: this.handleProceedToProfileStep,
                    onPasswordChange: e => this.handleFieldChange("password", e),
                    onResetError: this.handleResetUsernameError,
                    onUsernameBlur: this.validateUsername,
                    onUsernameChange: e => this.handleFieldChange("username", e),
                    password: h.password,
                    registerButton: w,
                    renderHeader: o,
                    renderSubtitle: l,
                    renderTitle: c,
                    showEmailField: !0,
                    signInErrors: k,
                    signupStep: this.props.currentStep,
                    submitting: _,
                    username: h.username,
                    via: u
                }))()
                  , C = r ? (0,
                X._i)(19234) : (0,
                X._i)(9109);
                return s.createElement(s.Fragment, null, t ? s.createElement("div", {
                    className: ye["right-controls"]
                }, i ? null : s.createElement(Y.Z, {
                    ...(0,
                    oe._q)(ce.V.SignUpButton),
                    color: "macaw",
                    onClick: this.props.onToggleForm,
                    variant: "stroke"
                }, C)) : null, s.createElement("form", {
                    className: ye.modal,
                    method: "POST",
                    noValidate: !0,
                    onSubmit: this.handleSubmit
                }, T, s.createElement("div", {
                    className: ye.footer
                }, s.createElement("div", {
                    className: ye["terms-and-privacy"]
                }, (0,
                X._i)(18519)), s.createElement("div", {
                    className: ye["terms-and-privacy"]
                }, (0,
                X._i)(42488)), t ? null : r ? s.createElement("div", {
                    className: ye["no-account"]
                }, (0,
                X._i)(11114), s.createElement("span", {
                    ...(0,
                    oe._q)(ce.V.SignUpLink),
                    className: ye["no-account-link"],
                    onClick: this.props.onToggleForm
                }, (0,
                X._i)(19234))) : s.createElement("div", {
                    className: ye["no-account"]
                }, (0,
                X._i)(6220), s.createElement("span", {
                    className: ye["no-account-link"],
                    onClick: this.props.onToggleForm
                }, (0,
                X._i)(3830))))))
            }
        }
        const Ge = ({defaultTitle: e, isSignIn: t, renderHeader: a, renderSubtitle: n, renderTitle: r}) => {
            let i = e;
            const o = null == r ? void 0 : r(t);
            return "string" == typeof o && (i = o),
            s.createElement(s.Fragment, null, void 0 === a ? null : s.createElement("div", {
                className: ye.header
            }, a(t)), s.createElement("h1", {
                className: ye.title
            }, i), n ? s.createElement("p", {
                className: ye["sign-in-up-subtitle"]
            }, n(t)) : null)
        }
          , Ve = ({children: e, defaultTitle: t, isSignIn: a, onFacebookClick: n, onGoogleClick: r, renderHeader: i, renderSubtitle: o, renderTitle: l, showSocial: c=!1, submitting: d=!1}) => s.createElement("div", null, s.createElement(Ge, {
            defaultTitle: t,
            isSignIn: a,
            renderHeader: i,
            renderSubtitle: o,
            renderTitle: l
        }), e, c ? s.createElement(s.Fragment, null, s.createElement("div", {
            className: ye.hr
        }, s.createElement("div", {
            className: ye["hr-bar"]
        }), s.createElement("div", {
            className: ye["hr-text"]
        }, (0,
        X._i)(18747)), s.createElement("div", {
            className: ye["hr-bar"]
        })), s.createElement("p", {
            className: ye["link-container"]
        }, s.createElement(Ne, {
            onClick: r,
            platform: "google",
            submitting: d
        }), s.createElement(Ne, {
            onClick: n,
            platform: "facebook",
            submitting: d
        }))) : null)
          , ze = ({dispatch: e, errors: t, focusPasswordField: a, identifier: n, isSignIn: r, onFacebookClick: i, onGoogleClick: o, onIdentifierChange: l, onPasswordChange: c, password: d, registerButton: u, renderHeader: g, renderSubtitle: p, renderTitle: m, showEmailField: h, signInErrors: _, submitting: v, via: f}) => s.createElement(Ve, {
            defaultTitle: (0,
            X.H8)(43395),
            isSignIn: r,
            onFacebookClick: i,
            onGoogleClick: o,
            renderHeader: g,
            renderSubtitle: p,
            renderTitle: m,
            showSocial: !0,
            submitting: v
        }, s.createElement(De, {
            dispatch: e,
            errors: _ ? {} : t,
            focusPasswordField: a,
            identifier: n,
            onIdentifierChange: l,
            onPasswordChange: c,
            password: d,
            showEmailField: h,
            submitting: v,
            via: f
        }), _, u)
          , Be = ({errors: e, fields: t, onAgeBlur: a, onAgeChange: n, onFacebookClick: r, onGoogleClick: i, onNextFromAgeStep: o, showSocial: l, submitting: c, ...d}) => s.createElement(Ve, {
            defaultTitle: (0,
            X.H8)(5751),
            isSignIn: !1,
            onFacebookClick: r,
            onGoogleClick: i,
            showSocial: l,
            submitting: c
        }, s.createElement(Oe, {
            age: t.age,
            ageRestricted: !1,
            email: "",
            errors: e,
            hideAge: !1,
            hideEmail: !0,
            hideName: !0,
            hidePassword: !0,
            hideUsername: !0,
            isUGCDisabled: !0,
            name: "",
            onAgeBlur: a,
            onAgeChange: n,
            onEmailChange: d.onEmailChange,
            onNameChange: d.onNameChange,
            onPasswordChange: d.onPasswordChange,
            onResetError: d.onResetError,
            onUsernameBlur: d.onUsernameBlur,
            onUsernameChange: d.onUsernameChange,
            password: "",
            submitting: c,
            username: ""
        }), s.createElement(Y.Z, {
            ...(0,
            oe._q)(ce.V.ContinueButton),
            className: ye.button,
            disabled: !t.age || isNaN(parseInt(t.age, 10)),
            onClick: e => {
                e.preventDefault(),
                o()
            }
            ,
            type: "submit",
            variant: "solid"
        }, (0,
        X._i)(11383)))
          , je = ({ageRestricted: e, errors: t, fields: a, onFacebookClick: n, onGoogleClick: r, registerButton: i, showSocial: o, submitting: l, signInErrors: c, ...d}) => s.createElement(Ve, {
            defaultTitle: (0,
            X.H8)(14145),
            isSignIn: !1,
            onFacebookClick: n,
            onGoogleClick: r,
            showSocial: o,
            submitting: l
        }, s.createElement(Oe, {
            age: a.age,
            ageRestricted: e,
            email: a.email,
            errors: t,
            hideAge: !0,
            isUGCDisabled: d.isUGCDisabled,
            name: a.name,
            onAgeBlur: d.onAgeBlur,
            onAgeChange: d.onAgeChange,
            onEmailChange: d.onEmailChange,
            onNameChange: d.onNameChange,
            onPasswordChange: d.onPasswordChange,
            onResetError: d.onResetError,
            onUsernameBlur: d.onUsernameBlur,
            onUsernameChange: d.onUsernameChange,
            password: a.password,
            submitting: l,
            username: a.username
        }), c, i)
          , $e = () => {
            const e = (0,
            c.Fx)(O.Mb)
              , t = (0,
            c.Fx)(O.$4)
              , a = (0,
            c.Fx)(O.YW)
              , n = (0,
            c.Fx)(O.np)
              , r = (0,
            c.tX)()
              , i = (0,
            k.YV)()
              , o = (0,
            L.k6)()
              , [l,u] = s.useState("age");
            s.useEffect(( () => {
                (0,
                z.Pc)() && !(0,
                Ae.pN)(n) || (0,
                we.dH)()
            }
            ), [n]);
            const g = () => {
                u("profile")
            }
            ;
            return s.createElement(J.Z, {
                className: ye["modal-wrapper"],
                closeStyle: "profile" === l ? "back" : void 0,
                isFullscreen: !0,
                modalName: N.t.SignInUp,
                onDismiss: "profile" === l ? () => {
                    u("age")
                }
                : ({modalOptions: e}) => {
                    var t;
                    null === (t = e.onCloseButtonClick) || void 0 === t || t.call(e),
                    r({
                        options: void 0,
                        type: "TOGGLE_MODAL"
                    })
                }
            }, ( ({modalOptions: n, onDismiss: c}) => s.createElement(He, {
                config: e,
                currentStep: l,
                dispatch: r,
                dispatchAtom: i,
                history: o,
                isDesktop: t,
                isOnline: a,
                modalOptions: n,
                onDismiss: c,
                onNextFromAgeStep: g,
                onToggleForm: () => (e => {
                    const {isSignIn: t, trackingProps: a, via: s} = e;
                    t ? (0,
                    d.track)("sign_in_tap", {
                        target: "sign_up",
                        via: s,
                        ...a
                    }) : (0,
                    d.track)("registration_tap", {
                        target: "sign_in"
                    }),
                    u("age"),
                    r({
                        options: {
                            ...e,
                            isSignIn: !t
                        },
                        type: "TOGGLE_MODAL"
                    })
                }
                )(n)
            })))
        }
        ;
        var Ze = a(98071)
          , We = a(9979)
          , qe = a(68903)
          , Qe = a(1398);
        const Ke = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(3361)]).then(a.bind(a, 30512))))
          , Ye = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(9969)]).then(a.bind(a, 19071))))
          , Je = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(1876)]).then(a.bind(a, 36204))))
          , Xe = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(9006)]).then(a.bind(a, 88964))))
          , et = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(8405)]).then(a.bind(a, 51526))))
          , tt = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(3207)]).then(a.bind(a, 91295))))
          , at = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(1686)]).then(a.bind(a, 17709))))
          , st = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(7200)]).then(a.bind(a, 92463))))
          , nt = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(7631)]).then(a.bind(a, 39555))))
          , rt = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(5571)]).then(a.bind(a, 22095))))
          , it = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(2479)]).then(a.bind(a, 95414))))
          , ot = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(8123)]).then(a.bind(a, 96867))))
          , lt = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(5944)]).then(a.bind(a, 62379))))
          , ct = (0,
        Qe.ZP)(( () => Promise.all([a.e(1475), a.e(2513)]).then(a.bind(a, 48497))))
          , dt = ({modal: e}) => {
            const [,t] = s.useState(0)
              , a = s.useRef()
              , n = (e => {
                switch (e) {
                case "friendsStreakLoss":
                    return Ye;
                case "friendsStreakOffer":
                    return Je;
                case "kudosOffer":
                case "kudosReceive":
                    return it;
                case "legendaryRebrandGoldColor":
                    return Xe;
                case "marketingOptIn":
                    return tt;
                case "pathChange":
                    return et;
                case "streakFreezeRecurringOffer":
                    return st;
                case "streakFreezeUsed":
                    return nt;
                case "streakRepairOffer":
                    return rt;
                case "turningNotificationsOn":
                    return at;
                case "webToAppConversion":
                    return ot;
                case "webToAppConversionAggressive":
                    return lt;
                case "newYearsDiscount":
                    return ct;
                case "superFamilyPlanInvite":
                    return Ke;
                case void 0:
                    return;
                default:
                    throw (0,
                    qe.RJ)(e),
                    Error()
                }
            }
            )(null != e ? e : a.current);
            return s.useEffect(( () => {
                if (void 0 === e && void 0 !== a.current) {
                    const e = setTimeout(( () => {
                        a.current = void 0,
                        t((e => e + 1))
                    }
                    ), We.nN);
                    return () => clearTimeout(e)
                }
                void 0 !== e && (a.current = e)
            }
            ), [e]),
            n ? s.createElement(Ze.Z, null, s.createElement(n, {
                isModal: !0
            })) : null
        }
        ;
        var ut = a(18201);
        const gt = ({drawer: e}) => {
            const [t,a] = s.useState(0)
              , n = s.useRef()
              , r = s.useRef()
              , i = (0,
            ut.Z)(null != e ? e : n.current);
            return s.useEffect(( () => {
                void 0 !== e && e === n.current && void 0 === r.current && a((e => e + 1)),
                n.current = null != e ? e : n.current,
                r.current = e
            }
            )),
            i ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(i, {
                key: t
            })) : null
        }
          , pt = (0,
        Qe.ZP)(( () => a.e(1798).then(a.bind(a, 29169))))
          , mt = ({toast: e}) => {
            const [t,a] = s.useState(0)
              , n = s.useRef()
              , r = s.useRef()
              , i = (e => {
                switch (e) {
                case "emailVerified":
                    return pt;
                case void 0:
                    return;
                default:
                    throw (0,
                    qe.RJ)(e),
                    Error()
                }
            }
            )(null != e ? e : n.current);
            return s.useEffect(( () => {
                void 0 !== e && e === n.current && void 0 === r.current && a((e => e + 1)),
                n.current = null != e ? e : n.current,
                r.current = e
            }
            )),
            i ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(i, {
                isToast: !0,
                key: t
            })) : null
        }
        ;
        var ht = a(77888)
          , _t = a(93890)
          , vt = a(4060)
          , ft = a(95304)
          , St = a(81149)
          , yt = a(57593)
          , Et = a(43633)
          , bt = a(89803);
        const It = (0,
        Qe.ZP)(( () => a.e(8988).then(a.bind(a, 73906))))
          , wt = {
            getConditionAndTreat: St.j6
        }
          , kt = ({children: e}) => {
            const t = (0,
            c.tX)()
              , a = (0,
            c.Fx)((e => e.ui.appOffset))
              , n = (0,
            c.Fx)((e => e.ui.drawer))
              , r = (0,
            c.Fx)(F.d)
              , i = (0,
            c.Fx)(vt.av)
              , o = (0,
            c.Fx)((e => e.ui.spotlightType))
              , u = (0,
            c.Fx)((e => e.ui.toast))
              , g = (0,
            c.Fx)(O.np)
              , v = (0,
            c.Fx)(O.Lm)
              , S = (0,
            c.Fx)((e => e.ui.viewportHeight))
              , b = (0,
            c.Fx)((e => (0,
            O.Sg)(e)))
              , I = (0,
            c.Fx)((e => (0,
            O.ep)(e)))
              , k = (0,
            c.Fx)((e => e.ui.isModalReallyOpen && (b || I)))
              , T = (0,
            c.Fx)((e => void 0 !== e.ui.drawer || void 0 !== e.ui.modal && e.ui.isModalReallyOpen || e.ui.isRequestingNotificationPermission))
              , R = (0,
            ht.Z)()
              , W = (0,
            M.Z)();
            (0,
            D.Z)(),
            ( () => {
                const e = (0,
                c.Fx)(O.rF)
                  , t = (0,
                L.k6)()
                  , a = (0,
                L.TH)()
                  , n = (null == e ? void 0 : e.name) === N.t.SignInUp;
                s.useEffect(( () => {
                    const e = (0,
                    L.Jk)().state.location
                      , a = new URLSearchParams(e.search);
                    n && !a.has("isLoggingIn") ? (a.set("isLoggingIn", "true"),
                    t.replace({
                        pathname: e.pathname,
                        search: a.toString()
                    })) : !n && a.has("isLoggingIn") && (a.delete("isLoggingIn"),
                    t.replace({
                        pathname: e.pathname,
                        search: a.toString()
                    }))
                }
                ), [n, a])
            }
            )(),
            (0,
            x.Z)(),
            ( () => {
                const e = (0,
                c.Fx)(F.d)
                  , [t] = s.useState(( () => new AbortController));
                s.useEffect(( () => {
                    let e = !1;
                    return "serviceWorker"in navigator && (async () => {
                        if (await navigator.serviceWorker.register("/gcm-service-worker.js"),
                        !e && !t.signal.aborted)
                            try {
                                await U.S1(t.signal)
                            } catch (e) {
                                console.warn(e)
                            }
                    }
                    )(),
                    () => {
                        e = !0
                    }
                }
                ), []),
                s.useEffect(( () => {
                    e && t.abort("Zombie mode activated")
                }
                ), [e])
            }
            )(),
            ( ({disabled: e}) => {
                const t = s.useRef()
                  , a = s.useRef()
                  , n = (0,
                L.TH)()
                  , r = (0,
                c.Fx)((e => e.ui.engagementOverride))
                  , i = (0,
                c.Fx)(O.nW)
                  , o = (0,
                c.Fx)((e => (0,
                H.ek)(e, {
                    location: n
                })));
                s.useEffect(( () => {
                    const s = () => {
                        var s, n;
                        if (!e) {
                            const e = Date.now()
                              , r = e - G;
                            G = e,
                            d.accumulateTime(r, t.current, o),
                            (null !== (s = t.current) && void 0 !== s ? s : "learning" === (0,
                            d.getEngagementType)()) && (null === (n = a.current) || void 0 === n || n.forEach((e => d.accumulateTime(r, e, o))))
                        }
                    }
                      , n = p.P2(s, 1e3, {
                        trailing: !0
                    });
                    return r !== t.current && (s(),
                    t.current = r),
                    i !== a.current && (s(),
                    a.current = i),
                    document.addEventListener("mousedown", n),
                    document.addEventListener("keydown", n),
                    document.addEventListener("touchstart", n),
                    () => {
                        document.removeEventListener("mousedown", n),
                        document.removeEventListener("keydown", n),
                        document.removeEventListener("touchstart", n)
                    }
                }
                ), [e, r, o, i]),
                s.useEffect(( () => {
                    const t = p.P2(( () => {
                        if (!e) {
                            const e = {};
                            let t = 0;
                            Object.entries(d.totalTimes).forEach(( ([a,s]) => {
                                "deepest_node_learning" !== a && (t += s),
                                e[`engagement_type_${a}`] = Math.floor(s / 1e3)
                            }
                            )),
                            e.total_time_spent = Math.floor(t / 1e3),
                            d.track("time_spent", e),
                            d.resetTime()
                        }
                    }
                    ), 6e4, {
                        trailing: !0
                    });
                    return document.addEventListener("mousedown", t),
                    document.addEventListener("keydown", t),
                    document.addEventListener("touchstart", t),
                    () => {
                        document.removeEventListener("mousedown", t),
                        document.removeEventListener("keydown", t),
                        document.removeEventListener("touchstart", t)
                    }
                }
                ), [e])
            }
            )({
                disabled: r && !v
            }),
            ( () => {
                const e = s.useRef((0,
                V.Ml)())
                  , t = s.useRef((0,
                V.Ml)())
                  , [a,n] = s.useState((0,
                z.Pc)())
                  , [r,i] = s.useState((0,
                z.Pc)());
                s.useEffect(( () => {
                    const t = () => {
                        setTimeout(( () => {
                            d.trackUserActive2022({
                                activity_trigger: "user_interaction"
                            }) && (e.current = (0,
                            V.Ml)())
                        }
                        ), 500)
                    }
                      , s = p.P2(t, B, {
                        trailing: !1
                    })
                      , r = () => {
                        (0,
                        V.Ml)() !== e.current && t()
                    }
                      , i = () => {
                        a !== (0,
                        z.Pc)() && (n((0,
                        z.Pc)()),
                        t())
                    }
                    ;
                    return j.forEach((e => {
                        document.addEventListener(e, s),
                        document.addEventListener(e, r),
                        document.addEventListener(e, i)
                    }
                    )),
                    () => {
                        j.forEach((e => {
                            document.removeEventListener(e, s),
                            document.removeEventListener(e, r),
                            document.removeEventListener(e, i)
                        }
                        ))
                    }
                }
                ), [a]),
                s.useEffect(( () => {
                    const e = () => {
                        setTimeout(( () => {
                            d.trackUserActive2022({
                                activity_trigger: "app_foregrounded"
                            }) && (t.current = (0,
                            V.Ml)())
                        }
                        ), 500)
                    }
                      , a = p.P2(e, B, {
                        trailing: !1
                    })
                      , s = () => {
                        (0,
                        V.Ml)() !== t.current && e()
                    }
                      , n = () => {
                        r !== (0,
                        z.Pc)() && (i((0,
                        z.Pc)()),
                        s())
                    }
                    ;
                    return document.addEventListener("visibilitychange", s),
                    document.addEventListener("visibilitychange", a),
                    document.addEventListener("visibilitychange", n),
                    () => {
                        document.removeEventListener("visibilitychange", s),
                        document.removeEventListener("visibilitychange", a),
                        document.removeEventListener("visibilitychange", n)
                    }
                }
                ), [r])
            }
            )(),
            Q({
                disabled: r
            }),
            ( () => {
                const e = (0,
                c.tX)()
                  , t = (0,
                c.Fx)((e => e.zombieMode.ignoreUntil))
                  , a = (0,
                c.Fx)((e => e.zombieMode.resetAt))
                  , n = (0,
                c.Fx)((e => e.zombieMode.status))
                  , r = s.useRef()
                  , i = s.useRef(n);
                r.current = async s => {
                    if (void 0 !== t && Date.now() < t)
                        return;
                    if ("enabled" === n && "visible" !== document.visibilityState)
                        return;
                    const r = (0,
                    q.J9)() || (0,
                    l.rV)(l.Qt.DisableZombieMode) ? "disabled" : await K.bG.getZombieStatus();
                    s.aborted || (n !== r ? "enabled" === r ? (console.warn("Enabling Zombie mode."),
                    e({
                        resetAt: Date.now() + 1e3 * (0,
                        V.dz)({
                            hours: 5,
                            minutes: p.MX(0, 5)
                        }),
                        type: "zombie/ENABLED"
                    })) : (console.warn("Disabling Zombie mode."),
                    e({
                        type: "zombie/DISABLED"
                    })) : void 0 !== a && Date.now() >= a && (console.warn("Disabling Zombie mode automatically after 5 hours."),
                    e({
                        ignoreUntil: Date.now() + 1e3 * (0,
                        V.dz)({
                            hours: 12
                        }),
                        type: "zombie/IGNORED"
                    })))
                }
                ,
                i.current = n,
                s.useEffect(( () => {
                    const e = new AbortController
                      , t = e.signal
                      , a = async () => {
                        var e;
                        t.aborted || (await (null === (e = r.current) || void 0 === e ? void 0 : e.call(r, t)),
                        setTimeout(a, 1e3 * p.MX(30, "enabled" === i.current ? 300 : 60)))
                    }
                    ;
                    return a(),
                    () => e.abort()
                }
                ), [])
            }
            )();
            const [Y,J] = s.useState(r && !v)
              , X = s.useRef(null)
              , te = s.useRef(null);
            (0,
            m.Z)({
                animateOnMount: T,
                isVisible: T,
                ref: X
            }),
            (0,
            m.Z)({
                animateOnMount: k,
                isVisible: k,
                ref: te
            }),
            s.useLayoutEffect(( () => {
                if (void 0 !== a)
                    return document.documentElement.style.setProperty("--app-offset", `${a}px`),
                    () => {
                        document.documentElement.style.removeProperty("--app-offset")
                    }
            }
            ), [a]),
            s.useLayoutEffect(( () => {
                if (W)
                    return document.documentElement.setAttribute("reduced-motion", ""),
                    () => document.documentElement.removeAttribute("reduced-motion")
            }
            ), [W]),
            s.useLayoutEffect(( () => {
                if (void 0 !== S && !CSS.supports("(width: 1dvh)"))
                    return document.documentElement.style.setProperty("--viewport-height", `${S}px`),
                    () => {
                        document.documentElement.style.removeProperty("--viewport-height")
                    }
            }
            ), [S]),
            s.useEffect(( () => {
                if ((0,
                z.Pc)() && !r) {
                    const e = new AbortController;
                    return t((0,
                    Z.SC)(e.signal)),
                    t((0,
                    Z.Vw)(e.signal)),
                    () => {
                        e.abort("Zombie mode activated")
                    }
                }
                (0,
                d.startTracking)()
            }
            ), [r]),
            s.useEffect(( () => {
                r || t((0,
                $.i)())
            }
            ), [r]),
            s.useEffect(( () => {
                r && v && t(( (e, t) => {
                    const a = (0,
                    O.__)(t())
                      , s = (0,
                    O.np)(t())
                      , n = (0,
                    V.Zo)()
                      , r = (0,
                    _t.zK)(n, a, s)
                      , i = (0,
                    _t.KA)(n, r, s)
                      , o = (0,
                    _t.ul)(r, a, s);
                    e({
                        type: "UPDATE_USER",
                        user: {
                            streakData: i.streakData
                        }
                    }),
                    e({
                        type: "SET_XP_SUMMARIES",
                        xpSummaries: i.xpSummaries
                    });
                    for (const t of o)
                        e({
                            item: t,
                            type: "REFRESH_USER_ITEM"
                        })
                }
                ))
            }
            ), []),
            s.useEffect(( () => {
                (0,
                d.track)("web_supported_features", {
                    web_features: window.duo.supportedFeatures
                })
            }
            ), []),
            s.useEffect(( () => {
                if (r && !v)
                    return J(!0),
                    () => {
                        (0,
                        P.Zs)()
                    }
            }
            ), [r, v]),
            s.useEffect(( () => {
                r && (0,
                d.track)("zombie_mode_activated", {
                    num_offline_lessons_available: R
                })
            }
            ), [r]),
            s.useEffect(( () => {
                if (T)
                    return t({
                        type: "DIMMED_OVERLAY_OPENED"
                    }),
                    () => {
                        t({
                            type: "DIMMED_OVERLAY_CLOSED"
                        })
                    }
            }
            ), [T]),
            s.useEffect(( () => {
                const e = () => t({
                    type: "GO_OFFLINE"
                })
                  , a = () => t({
                    type: "COME_ONLINE"
                });
                return window.addEventListener("offline", e),
                window.addEventListener("online", a),
                () => {
                    window.removeEventListener("offline", e),
                    window.removeEventListener("online", a)
                }
            }
            ), []),
            s.useEffect(( () => {
                const e = p.Ds(( () => t({
                    height: window.innerHeight,
                    type: "RESIZE_WINDOW",
                    width: window.innerWidth
                })), 250);
                return window.addEventListener("resize", e),
                () => window.removeEventListener("resize", e)
            }
            ), []),
            s.useEffect(( () => (window.addEventListener("beforeunload", bt.u6),
            window.addEventListener("unload", bt.u6),
            () => {
                window.removeEventListener("beforeunload", bt.u6),
                window.removeEventListener("unload", bt.u6)
            }
            )), []);
            const ae = (0,
            yt.m7)(g);
            return s.useEffect(( () => {
                const e = (0,
                Et.h0)()
                  , t = (0,
                ft.Q)(v, ae).map((t => t.mount(e)));
                return () => {
                    t.forEach((e => null == e ? void 0 : e()))
                }
            }
            ), [v, ae]),
            s.useEffect(( () => {
                Re.Z.track("pre_init", window.duo.timeOrigin),
                Y || Re.Z.track("first_render", window.performance.now() - window.duo.timeOrigin)
            }
            ), []),
            Y ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(It, null)) : s.createElement(s.Fragment, null, s.createElement(w.vU, null), s.createElement(h.Z.Provider, {
                value: wt
            }, s.createElement(_.Z.Provider, {
                value: W
            }, s.createElement(C, null, s.createElement(f.ZP, null, s.createElement(A, null), e, void 0 === o ? s.createElement(E.Z, {
                disablePointerEvents: !T,
                ref: X,
                ...(0,
                oe._q)(ce.V.DrawerBackdrop)
            }) : s.createElement(y, {
                spotlightType: o
            }), s.createElement(E.Z, {
                disablePointerEvents: !k,
                portalToOverlays: !0,
                ref: te,
                secondaryOverlayType: b ? "drawer" : "modal"
            }), s.createElement(ee, null), s.createElement($e, null), s.createElement(gt, {
                drawer: null == n ? void 0 : n.name
            }), s.createElement(dt, {
                modal: i
            }), s.createElement(mt, {
                toast: u
            }))))))
        }
        ;
        var Tt = a(36914);
        var Ct = a(61429)
          , Rt = a(92883)
          , Lt = a(85846)
          , Pt = a(12529)
          , At = a(22498)
          , Dt = a(75025);
        const Ot = "_3yPGy _1PXqH _39lPs";
        var Nt = a(64865);
        const xt = () => {
            const [e,t] = s.useState(!0);
            return s.useEffect(( () => {
                e && ((0,
                d.track)("android_banner_load", {}),
                (0,
                d.track)("web_to_app_store_load", {
                    via: "Android_banner"
                }))
            }
            ), [e]),
            e ? s.createElement("div", {
                className: "_3CwWq"
            }, s.createElement("div", {
                className: "_2dgxN _23rWI _1QHN7 _219j-"
            }), s.createElement("div", {
                className: "zKVv4"
            }, s.createElement("div", null, s.createElement("div", {
                className: "_2Ln8R"
            }, (0,
            X._i)(20861)), s.createElement("span", {
                className: "_2PsOB"
            }, "4.5"), s.createElement("span", {
                className: Ot
            }), s.createElement("span", {
                className: Ot
            }), s.createElement("span", {
                className: Ot
            }), s.createElement("span", {
                className: Ot
            }), s.createElement("span", {
                className: "_2L5q4 _1PXqH _39lPs"
            }, s.createElement("span", {
                className: "_3dC8A _3yPGy _1PXqH _39lPs",
                style: {
                    width: "50%"
                }
            })), s.createElement("span", {
                className: "_2j2iy"
            }, "15,300,000+")), s.createElement("div", {
                className: "_3mp0T"
            }, s.createElement("span", {
                className: "AHzpP _39lPs"
            }), s.createElement(ae.ZP, {
                className: "_4FsVb",
                href: (0,
                Nt.A)({
                    isAndroidBanner: !0,
                    utmCampaign: "splash_mobile_banner",
                    utmContent: "mobile_banner"
                }),
                onClick: () => {
                    (0,
                    d.track)("click", {
                        which: "mobile banner android"
                    }),
                    (0,
                    d.track)("android_banner_tap", {
                        target: "install"
                    }),
                    (0,
                    d.track)("web_to_app_store_tap", {
                        target: "google_or_China",
                        via: "Android_banner"
                    })
                }
                ,
                target: "_blank"
            }, (0,
            X._i)(4441))), s.createElement("button", {
                className: "_38iBE bafGS _2LoNU VzbUl _1saKQ _1AgKJ _39lPs",
                onClick: () => {
                    (0,
                    d.track)("android_banner_tap", {
                        target: "dismiss"
                    }),
                    t(!1)
                }
            }))) : null
        }
          , Mt = ({data: e}) => (e["@context"] = e["@context"] || "http://schema.org",
        s.createElement("script", {
            type: "application/ld+json"
        }, JSON.stringify(e, null, "\t")))
          , Ft = ({crumbs: e}) => {
            const t = {
                "@type": "BreadcrumbList",
                itemListElement: e.map(( (e, t) => ({
                    "@type": "ListItem",
                    item: {
                        "@id": e.url.toString(),
                        name: e.label
                    },
                    position: t + 1
                })))
            };
            return s.createElement(Mt, {
                data: t
            })
        }
        ;
        var Ut = a(42158);
        var Ht = a(53229)
          , Gt = a(74597);
        const Vt = () => {
            const e = (0,
            Ht.vl)().via;
            return s.useEffect(( () => {
                (0,
                d.track)("china_apk_banner_load", {})
            }
            ), []),
            s.createElement("div", {
                className: "_3yEI4"
            }, s.createElement("img", {
                className: "_2iTYM",
                src: Ut
            }), s.createElement("div", null, s.createElement("div", {
                className: "_21pJL"
            }, "下载多邻国 APP 开始免费学习")), s.createElement("div", {
                className: "_6GPYQ",
                onClick: () => {
                    Gt.Z.android ? (0,
                    Nt.ci)(`splash-banner-${e}`) : (0,
                    P.Zs)(`${Nt.JN}?adjust_label=${e}`, !0)
                }
            }, "去下载"))
        }
          , zt = ({logo: e, name: t, sameAs: a, url: n}) => {
            const r = {
                "@type": "Organization",
                logo: e,
                name: t,
                sameAs: a,
                url: n
            };
            return s.createElement(Mt, {
                data: r
            })
        }
          , Bt = a.p + "images/f2a2e608c854822ad2563a09595e7827.png"
          , jt = ({sameAs: e}) => s.createElement(zt, {
            logo: Bt,
            name: "Duolingo",
            sameAs: e,
            url: "https://www.duolingo.com/"
        });
        var $t = a(83544);
        var Zt = a(18728);
        const Wt = s.createContext(void 0)
          , qt = s.createContext(( () => {}
        ))
          , Qt = ({children: e}) => {
            const [t,a] = s.useState({})
              , n = s.useCallback(( (e, t) => a((a => ({
                ...a,
                [e]: t
            })))), [])
              , r = ( () => {
                let e, a;
                for (const [s,n] of Object.entries(t))
                    (void 0 === e || n <= e) && (e = n,
                    a = s);
                return a
            }
            )();
            return s.createElement(qt.Provider, {
                value: n
            }, s.createElement(Wt.Provider, {
                value: r
            }, e))
        }
          , Kt = a.p + "images/splash/lottie/23ab11cb1e1a9aff54facdf57833373d.svg"
          , Yt = a.p + "images/splash/lottie/08ec8d0260c55c054e1b97bcbc96ea0f.svg"
          , Jt = a.p + "images/splash/lottie/833a22b2834050d139f266a29899bb00.svg"
          , Xt = a.p + "images/splash/lottie/9d3c2c99dd19996319a372f79b2ed3c1.svg"
          , ea = a.p + "lottie/splash/aea5aff1143a9410b81448245ad7c839.json"
          , ta = a.p + "lottie/splash/71b01cd301b53ec9879f2d06eb85f5db.json"
          , aa = a.p + "lottie/splash/82f26795696242931a7b905b4918eb1e.json"
          , sa = a.p + "lottie/splash/e97b1cde32a58c629a0193eea36ddaab.json"
          , na = "_127Ia _219j-"
          , ra = () => {
            const e = s.useRef(null)
              , [t,a] = s.useState(!1)
              , n = s.useCallback(( () => {
                var s;
                t || (null === (s = e.current) || void 0 === s || s.style.setProperty("visibility", "hidden"),
                a(!0))
            }
            ), []);
            return {
                hidePlaceholder: t,
                onEnterFrame: n,
                ref: e
            }
        }
        ;
        var ia = a(31801);
        const oa = e => {
            const [t,a] = s.useState(e);
            return e && !t && a(!0),
            t
        }
          , la = (e, {onCleanup: t, onInvisible: a}={}) => {
            const n = s.useRef()
              , r = s.useRef(null)
              , [i,o] = (0,
            ia.Z)();
            return s.useLayoutEffect(( () => {
                n.current = e
            }
            )),
            s.useLayoutEffect(( () => {
                if (!i)
                    return;
                const e = () => {
                    var e, t;
                    const a = null === (e = r.current) || void 0 === e ? void 0 : e.getBoundingClientRect();
                    if (a) {
                        const e = new DOMRect(0,0,window.innerWidth,window.innerHeight);
                        null === (t = n.current) || void 0 === t || t.call(n, {
                            rootBounds: e,
                            targetRect: a
                        })
                    }
                }
                ;
                return e(),
                R.O.addEventListener("scroll", e),
                () => {
                    R.O.removeEventListener("scroll", e),
                    null == t || t()
                }
            }
            ), [i]),
            s.useLayoutEffect(( () => {
                !1 === i && (null == a || a())
            }
            ), [i]),
            s.useCallback((e => {
                r.current = e,
                o(e)
            }
            ), [])
        }
          , ca = (e, t=!0) => {
            const a = s.useContext(Wt)
              , n = s.useContext(qt)
              , [r,i] = (0,
            ia.Z)()
              , o = la((t => {
                const a = t.rootBounds.height / 2
                  , s = t.targetRect.top < a && t.targetRect.bottom > a ? 0 : Math.min(Math.abs(t.targetRect.top - a), Math.abs(t.targetRect.bottom - a));
                n(e, s)
            }
            ))
              , l = s.useCallback((e => {
                o(e),
                i(e)
            }
            ), [])
              , c = a === e && !0 === r && t;
            return {
                isPlaying: c,
                ref: l,
                shouldRender: oa(c)
            }
        }
          , da = ({animation: e, cta: t, flip: a, loopSegment: n, placeholder: r, text: i, title: o}) => {
            const l = (0,
            M.Z)()
              , {hidePlaceholder: c, onEnterFrame: d, ref: u} = ra()
              , g = (0,
            Ct.Z)(void 0, ( () => l ? Promise.resolve(void 0) : K.bG.getLottieAnimation(e)), [e, l])
              , {isPlaying: p, ref: m, shouldRender: h} = ca(e);
            return s.createElement("section", {
                className: a ? "_36L7f _3k9io" : "_3k9io"
            }, s.createElement("div", {
                className: "_2Yq-n"
            }, s.createElement("h2", {
                className: "_3X-2C"
            }, o), s.createElement("p", {
                className: "KsAV5"
            }, i), t), s.createElement("div", {
                className: "_1RIBh",
                ref: m
            }, s.createElement("img", {
                alt: "",
                className: na,
                ref: u,
                src: r,
                style: {
                    visibility: c ? "hidden" : "visible"
                }
            }), g && h ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: g,
                className: na,
                isPlaying: p,
                loop: !0,
                loopSegment: n,
                onEnterFrame: d,
                renderSubframes: !1
            })) : null))
        }
          , ua = () => s.createElement("section", {
            className: "uU0-M"
        }, s.createElement(da, {
            animation: ea,
            loopSegment: [291, 450],
            placeholder: Kt,
            text: (0,
            X._i)(43079, {
                url: "/efficacy"
            }, {
                preprocess: e => (0,
                X.to)(e, "_1F7oE")
            }),
            title: (0,
            X._i)(43080)
        }), s.createElement(da, {
            animation: ta,
            flip: !0,
            loopSegment: [190, 532],
            placeholder: Yt,
            text: (0,
            X._i)(43082),
            title: (0,
            X._i)(43081)
        }), s.createElement(da, {
            animation: aa,
            loopSegment: [200, 300],
            placeholder: Jt,
            text: (0,
            X._i)(43087),
            title: (0,
            X._i)(43086)
        }), s.createElement(da, {
            animation: sa,
            flip: !0,
            loopSegment: [188, 376],
            placeholder: Xt,
            text: (0,
            X._i)(43085),
            title: (0,
            X._i)(43084)
        }));
        var ga = a(71814);
        const pa = ({children: e, className: t}) => s.createElement("span", {
            className: re()("_2NRlK", t)
        }, e)
          , ma = a.p + "images/splash/lottie/41a326f8a1a43ee68ef5ea35988fd87b.svg"
          , ha = a.p + "images/splash/lottie/9f63957bf97d10730813cbb715a0baa0.svg"
          , _a = a.p + "images/splash/lottie/268877aef1bcca8a53f24b746483346c.svg"
          , va = a.p + "images/splash/lottie/1dacb3e2a288440001755c6a30e5ec60.svg"
          , fa = a.p + "lottie/splash/44a604a8b57fe256f299aee33fa976a1.json"
          , Sa = a.p + "lottie/splash/d69c05e332d40f318009fefd85bfcd43.json"
          , ya = a.p + "lottie/splash/76f61a943cfc8aa61dd79aea33db7a62.json"
          , Ea = a.p + "lottie/splash/6ffec1cd2fa38b8106598e250d1b990b.json";
        var ba = a(9677);
        const Ia = ({children: e, ...t}) => s.createElement(ae.ZP, {
            className: re()((0,
            ga.yO)({
                variant: "stroke"
            }), "_1L3MW _2Ccfj"),
            ...t
        }, s.createElement(pa, null, e))
          , wa = () => {
            const e = (0,
            ba.l)();
            return s.createElement("section", {
                className: "_3dG3I"
            }, s.createElement(da, {
                animation: fa,
                cta: s.createElement(Ia, {
                    href: `https://englishtest.duolingo.com/${null != e ? e : ""}`,
                    onClick: () => (0,
                    d.track)("click", {
                        which: "web splash det"
                    }),
                    trackingScreen: "splash",
                    trackingTarget: "det"
                }, (0,
                X._i)(43090)),
                loopSegment: [0, 115],
                placeholder: ma,
                text: (0,
                X._i)(43091),
                title: (0,
                X._i)(43092)
            }), s.createElement(da, {
                animation: Sa,
                cta: s.createElement(Ia, {
                    href: "https://schools.duolingo.com",
                    onClick: () => (0,
                    d.track)("click", {
                        which: "web splash schools"
                    }),
                    trackingScreen: "splash",
                    trackingTarget: "schools"
                }, (0,
                X._i)(43097)),
                flip: !0,
                loopSegment: [0, 308],
                placeholder: ha,
                text: (0,
                X._i)(43098),
                title: (0,
                X._i)(43099)
            }), s.createElement(da, {
                animation: ya,
                cta: s.createElement(Ia, {
                    href: "/abc",
                    onClick: () => (0,
                    d.track)("click", {
                        which: "web splash abc"
                    }),
                    trackingScreen: "splash",
                    trackingTarget: "abc"
                }, (0,
                X._i)(43093)),
                loopSegment: [240, 480],
                placeholder: _a,
                text: (0,
                X._i)(43094),
                title: (0,
                X._i)(43095)
            }), s.createElement(da, {
                animation: Ea,
                cta: s.createElement(Ia, {
                    href: "https://blog.duolingo.com/duolingo-launches-math-app",
                    onClick: () => (0,
                    d.track)("click", {
                        which: "web splash math"
                    }),
                    trackingScreen: "splash",
                    trackingTarget: "math"
                }, (0,
                X._i)(43101)),
                flip: !0,
                loopSegment: [0, 360],
                placeholder: va,
                text: (0,
                X._i)(43102),
                title: (0,
                X._i)(43103)
            }))
        }
          , ka = a.p + "images/splash/lottie/890eb76de9a395b182c1c28322721405.svg"
          , Ta = a.p + "lottie/splash/9b9c41cb3a201cad24a2f18f90f4d564.json"
          , Ca = a.p + "lottie/splash/98fa4e2fa26d365936333da24aba7e36.json"
          , Ra = "_3Wy9F _3u1lX"
          , La = "_3zmWG"
          , Pa = "_1JR3d"
          , Aa = ({course: e, isHoveringGetStarted: t, isRegistering: a, onRegisterClick: n}) => {
            const r = s.useRef(null)
              , [i,o] = s.useState(0)
              , [l,c] = s.useState(!1)
              , [d,u] = s.useState(!1)
              , g = s.useContext(Wt)
              , p = s.useContext(qt)
              , m = (0,
            M.Z)()
              , h = oa(g === Ca)
              , {hidePlaceholder: _, onEnterFrame: v, ref: f} = ra()
              , S = (0,
            Ct.Z)(void 0, ( () => K.bG.getLottieAnimation(Ca)), [])
              , y = (0,
            Ct.Z)(void 0, ( () => m ? Promise.resolve(void 0) : K.bG.getLottieAnimation(Ta)), [m])
              , E = la((e => {
                const t = (0,
                Pt.b)(e.targetRect.top, e.rootBounds.bottom, e.rootBounds.bottom - e.targetRect.height, 0, 45, !0);
                b.isAnimating() ? b.update(t) : b.start(i, t),
                p(Ca, e.targetRect.top > e.rootBounds.bottom ? 1 / 0 : -1)
            }
            ), {
                onCleanup: () => p(Ca, 1 / 0)
            })
              , b = (0,
            Lt.Z)({
                clamp: !0,
                onChange: e => o(e.done ? e.target : e.current)
            });
            return s.useEffect(( () => {
                if ((l || t) && !m) {
                    const e = setTimeout(( () => u(!0)), 100);
                    return () => {
                        clearTimeout(e),
                        u(!1)
                    }
                }
            }
            ), [l, t, m]),
            s.createElement("section", {
                className: "F71XF"
            }, s.createElement("div", {
                className: La
            }), s.createElement("div", {
                className: "_1fSpL"
            }, s.createElement("div", {
                className: "_3qFL2"
            }, s.createElement("h1", {
                className: "_1FmL9"
            }, e ? (0,
            X._i)(52800, {
                language_name: e.learningLanguageName
            }) : (0,
            X._i)(43100)), e ? s.createElement(Y.Z, {
                className: Ra,
                onClick: n,
                onMouseEnter: () => c(!0),
                onMouseLeave: () => c(!1),
                ref: r,
                submitting: a,
                variant: "solid"
            }, s.createElement(pa, null, (0,
            X._i)(18550))) : s.createElement(ae.ZP, {
                className: re()((0,
                ga.yO)({
                    variant: "solid"
                }), Ra),
                href: "/register",
                onClick: n,
                onMouseEnter: () => c(!0),
                onMouseLeave: () => c(!1),
                ref: r
            }, s.createElement(pa, null, (0,
            X._i)(18550)))), s.createElement("div", {
                className: "dPoY0"
            }, s.createElement("span", {
                className: Pa,
                ref: f,
                style: {
                    visibility: _ ? "hidden" : "visible"
                }
            }, s.createElement("img", {
                alt: "",
                className: "_19iXk",
                src: ka
            })), y && h ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: y,
                className: Pa,
                isPlaying: g === Ca,
                loop: !0,
                onEnterFrame: v,
                renderSubframes: !1
            })) : null, S ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: S,
                className: Pa,
                isPlaying: !0,
                loop: d,
                mainSegment: d ? [46, 62] : [i, i + 1],
                renderSubframes: !1
            })) : null, s.createElement("div", {
                className: "_1IFT9"
            }), s.createElement("div", {
                className: "dVgS_",
                ref: E
            }))), s.createElement("div", {
                className: La
            }))
        }
        ;
        var Da = a(47449);
        var Oa = a(67116);
        const Na = p.ZP.keys(Oa.Jl)
          , xa = () => s.createElement("div", {
            className: "-Dahb"
        }, s.createElement("div", {
            className: "_1LLyK"
        }, (0,
        X._i)(18889)), s.createElement("ul", {
            className: "_3PydS"
        }, Na.map((e => s.createElement("li", {
            className: "yu122",
            key: e
        }, s.createElement(ae.ZP, {
            className: "FXHbm",
            href: `//${(0,
            Oa.D3)(e)}.duolingo.com`
        }, (0,
        Oa.lx)(e)))))));
        var Ma = a(14282);
        const Fa = () => s.createElement("footer", {
            className: "_1nNuk"
        }, s.createElement(Ma.Z, {
            isRedesign: !0
        }), s.createElement("hr", {
            className: "c-sxz"
        }), s.createElement(xa, null), (0,
        q.J9)() ? s.createElement(Da.Z, {
            inSplash: !0
        }) : null);
        var Ua = a(8069)
          , Ha = a(40635)
          , Ga = a(69755)
          , Va = a(9343);
        const za = a.p + "images/china/apkDownload/5ef61d69c243695da18ce19c73f94070.svg"
          , Ba = a.p + "images/china/21b33a54c8c2740c65ee912c85192032.png"
          , ja = a.p + "images/china/9848d6e63324acbd351ada20dc172d48.png"
          , $a = a.p + "images/china/af0b5b34d654273593e11499dc7bc3fa.png"
          , Za = a.p + "images/splash/f92d5f2f7d56636846861c458c0d0b6c.svg"
          , Wa = a.p + "images/splash/lottie/a774fe14d71e450d59a9bc4ed5d210c9.png"
          , qa = a.p + "images/splash/lottie/ded26f174e26ad19d0a35cad7747c28c.png"
          , Qa = a.p + "images/splash/lottie/a02afa2792b8778d69101554fa0fbadd.png"
          , Ka = a.p + "images/splash/lottie/56afa7d9803ab5e57d99b4e4e0cd8932.png"
          , Ya = a.p + "lottie/splash/50bda50231c0bce1584e982cebfe8f33.json"
          , Ja = "_2skPy _3u1lX"
          , Xa = "_1Bvko _2mBtL _219j-"
          , es = "768px"
          , ts = s.forwardRef(( ({className: e, style: t}, a) => s.createElement("svg", {
            className: e,
            ref: a,
            style: t,
            viewBox: "0 0 1080 1080",
            xmlns: "http://www.w3.org/2000/svg",
            xmlnsXlink: "http://www.w3.org/1999/xlink"
        }, s.createElement("defs", null, s.createElement("mask", {
            id: "splash/HeroImage_cn",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_a"
        })), s.createElement("mask", {
            id: "splash/HeroImage_cl",
            "mask-type": "alpha"
        }, s.createElement("g", {
            filter: "url(#splash/HeroImage_b)"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_c"
        }))), s.createElement("mask", {
            id: "splash/HeroImage_ck",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_d"
        })), s.createElement("mask", {
            id: "splash/HeroImage_cj",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_e"
        })), s.createElement("mask", {
            id: "splash/HeroImage_ch",
            "mask-type": "alpha"
        }, s.createElement("g", {
            filter: "url(#splash/HeroImage_f)"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_g"
        }))), s.createElement("mask", {
            id: "splash/HeroImage_cf",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_h"
        })), s.createElement("mask", {
            id: "splash/HeroImage_cd",
            "mask-type": "alpha"
        }, s.createElement("g", {
            filter: "url(#splash/HeroImage_i)"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_j"
        }))), s.createElement("mask", {
            id: "splash/HeroImage_cc",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_k"
        })), s.createElement("mask", {
            id: "splash/HeroImage_cb",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_l"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bZ",
            "mask-type": "alpha"
        }, s.createElement("g", {
            filter: "url(#splash/HeroImage_m)"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_n"
        }))), s.createElement("mask", {
            id: "splash/HeroImage_bX",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_o"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bV",
            "mask-type": "alpha"
        }, s.createElement("g", {
            filter: "url(#splash/HeroImage_p)"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_q"
        }))), s.createElement("mask", {
            id: "splash/HeroImage_bU",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_r"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bT",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_s"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bR",
            "mask-type": "alpha"
        }, s.createElement("g", {
            filter: "url(#splash/HeroImage_t)"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_u"
        }))), s.createElement("mask", {
            id: "splash/HeroImage_bH",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_v"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bG",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_w"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bE",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_x"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bD",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_y"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bB",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_z"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bA",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_A"
        })), s.createElement("mask", {
            id: "splash/HeroImage_by",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_B"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bx",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_C"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bu",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_D"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bv",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_E"
        })), s.createElement("mask", {
            id: "splash/HeroImage_br",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_F"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bs",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_G"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bo",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_H"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bp",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_I"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bl",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_J"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bm",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_K"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bh",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_L"
        })), s.createElement("mask", {
            id: "splash/HeroImage_bd",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_M"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aZ",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_N"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aX",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_O"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aW",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_P"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aV",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_Q"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aT",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_R"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aS",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_S"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aR",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_T"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aP",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_U"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aO",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_V"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aN",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_W"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aL",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_X"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aK",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_Y"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aJ",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_Z"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aG",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_aa"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aF",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ab"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aE",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ac"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aC",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ad"
        })), s.createElement("mask", {
            id: "splash/HeroImage_az",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ae"
        })), s.createElement("mask", {
            id: "splash/HeroImage_ay",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_af"
        })), s.createElement("mask", {
            id: "splash/HeroImage_ax",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ag"
        })), s.createElement("mask", {
            id: "splash/HeroImage_av",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ah"
        })), s.createElement("mask", {
            id: "splash/HeroImage_as",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ai"
        })), s.createElement("mask", {
            id: "splash/HeroImage_ar",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_aj"
        })), s.createElement("mask", {
            id: "splash/HeroImage_aq",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_ak"
        })), s.createElement("mask", {
            id: "splash/HeroImage_ao",
            "mask-type": "alpha"
        }, s.createElement("use", {
            xlinkHref: "#splash/HeroImage_al"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_am"
        }, s.createElement("path", {
            d: "M0 0h1080v1080H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_cg"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_cm"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_ci"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bY"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_ce"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_ca"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bQ"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bW"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bS"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bP"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bO"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bN"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bM"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bL"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bK"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bJ"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bI"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bF"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bC"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bz"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bw"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bt"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bq"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bn"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bk"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bg"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bi"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_bc"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_be"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aY"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_ba"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aU"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aQ"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aM"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aI"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aB"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aH"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aD"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_au"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aA"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_aw"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_an"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_at"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("clipPath", {
            id: "splash/HeroImage_ap"
        }, s.createElement("path", {
            d: "M0 0h1920v1079H0z"
        })), s.createElement("path", {
            fill: "#FFF",
            d: "M417.282-239.018c9.82 103.73 232.12-521.78 246.127-392.97 2.29 21.056-1.03 35.089-25.598 34.308C579.475-599.534-474.306-352.811-542.757-356c-19.992-.931-32.638-5.554-41.553-20.711-57.369-97.54 273.023 350.483 372.968 190.244 6.619-10.613 112.579-70.911 115.818-79.402 5.292-13.87 22.173-23.063 48.437-23.234 104.499-.682 314.125-10.343 409.022-13.477 30.279-1 52.529 33.796 55.347 63.562z",
            transform: "matrix(-.5494 -.086 .086 -.5494 1622.22 780.829)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_q"
        }), s.createElement("path", {
            fill: "#DB8D74",
            d: "M431.079 338.492c3.758 36.37-5.144 49.227-17.954 80.525-12.513 30.467-2.174 59.613 23.296 67.222 31.828 9.736 59.328-3.404 73.764-46.726 13.09-38.962 18.125-69.661 11.792-114.595-11.209-78.484-96.913-44.208-90.898 13.574z",
            transform: "rotate(22.5 -131.847 3549.945)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_o"
        }), s.createElement("path", {
            fill: "#FFCBA3",
            d: "M214.911-406.123c-15.719-8.703-43.885-4.032-56.858 18.506-12.413 21.56-5.358 48.218 16.487 61.532 3.993 2.525 9.48 5.777 14.104 8.034 10.375-14.704 50.055-68.302 41.022-79.374-3.887-2.632-14.755-8.698-14.755-8.698z",
            transform: "rotate(11.503 -2472.413 5637.844) scale(1.08627)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_B"
        }), s.createElement("path", {
            fill: "#B23232",
            d: "m193.505-387.295.753 1.713c1.624 3.285.26 7.256-3.048 8.869-3.307 1.613-7.306.258-8.93-3.027l-.753-1.714c-1.624-3.285-.259-7.255 3.048-8.869 3.308-1.613 7.305-.257 8.93 3.028z",
            transform: "rotate(11.503 -2556.067 5682.86) scale(1.08627)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_C"
        }), s.createElement("path", {
            fill: "#50C800",
            d: "M-33.852-109.247H99.656c34.191 0 59.6 37.853 53.498 65.49-7.182 32.531-25.38 89.14-34.27 121.621-9.079 33.172-29.752 47.586-59.572 47.586-29.82 0-103.203-.074-132.006-.074-48.143 0-64.347-41.105-54.652-78.558 8.428-32.56 21.554-73.657 30.392-103.537 8.412-28.439 33.749-52.528 63.102-52.528z",
            transform: "rotate(-1 33645.183 -81234.865) scale(1.08)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_J"
        }), s.createElement("path", {
            fill: "#FFC7B8",
            d: "M663.878-74.736c-15.712-9.442-22.917-13.352-38.271-16.411-38.11-7.593-88.912 7.908-135.03 34.11-14.809 8.414-17.146 16.657-16.116 28.315 1.835 20.775 2.533 25.712 4.202 47.463.713 9.292 10.388 17.692 21.305 27.403 17.895 15.918 49.393 36.287 71.847 49.786 14.447 8.685 24.747-7.705 35.576-16.302 11.976-9.507 23.382-23.529 44.664-28.959 6.523-1.664 13.248-.917 18.267-5.161 21.003-17.763 36.226-38.226 45.549-58.626 5.74-12.561.103-23.389-10.439-31.393-21.023-15.962-32.09-24.538-41.554-30.225z",
            transform: "rotate(-44.75 1759.676 -945.154) scale(.77853)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_N"
        }), s.createElement("path", {
            fill: "#CC348D",
            d: "M745.232-224.137c-.304-28.44 22.505-51.741 50.945-52.045 28.44-.304 51.741 22.506 52.045 50.946.304 28.44-22.505 51.74-50.945 52.044-28.44.304-51.741-22.505-52.045-50.945z",
            transform: "rotate(-155 1413.888 80.768) scale(1.2)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_X"
        }), s.createElement("path", {
            fill: "#0084C2",
            d: "M732.862-124.382c4.759-25.473 29.266-42.264 54.739-37.505s42.265 29.265 37.506 54.738-29.266 42.265-54.739 37.506-42.265-29.266-37.506-54.739z",
            transform: "matrix(1.15 0 0 1.15 829.652 633.365)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_Y"
        }), s.createElement("path", {
            fill: "#FFF",
            d: "M412.599 78.212c-6.132 3.04-7.257 9.111-7.45 10.036l-2.078 9.955c-.804 3.852 1.678 7.626 5.543 8.43l7.348 1.528c7.924 1.648 15.683-3.417 17.331-11.313.495-2.371 3.308-16.424 3.308-16.424s-16.193-6.083-24.002-2.212zm-14.702-3.734c3.902 5.915 3.593 9.268 3.279 11.761-.411 3.262-1.961 10.655-1.961 10.655-.863 4.124-4.939 6.767-9.102 5.904l-7.271-1.508c-8.179-1.696-13.434-9.638-11.738-17.74.661-3.158 3.897-16.189 3.897-16.189s19.186 1.492 22.896 7.117z",
            transform: "matrix(0 0 -.03402 .6491 1636.956 664.083)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_aj"
        }), s.createElement("path", {
            fill: "#FFF",
            d: "M412.599 78.212c-6.132 3.04-7.257 9.111-7.45 10.036l-2.078 9.955c-.804 3.852 1.678 7.626 5.543 8.43l7.348 1.528c7.924 1.648 15.683-3.417 17.331-11.313.495-2.371 3.308-16.424 3.308-16.424s-16.193-6.083-24.002-2.212zm-14.702-3.734c3.902 5.915 3.593 9.268 3.279 11.761-.411 3.262-1.961 10.655-1.961 10.655-.863 4.124-4.939 6.767-9.102 5.904l-7.271-1.508c-8.179-1.696-13.434-9.638-11.738-17.74.661-3.158 3.897-16.189 3.897-16.189s19.186 1.492 22.896 7.117z",
            transform: "matrix(0 0 -.03402 .6491 1636.956 664.083)",
            style: {
                display: "block"
            },
            id: "splash/HeroImage_ak"
        }), s.createElement("filter", {
            id: "splash/HeroImage_b",
            filterUnits: "objectBoundingBox",
            x: "0%",
            y: "0%",
            width: "100%",
            height: "100%"
        }, s.createElement("feComponentTransfer", {
            in: "SourceGraphic"
        }, s.createElement("feFuncA", {
            type: "table",
            tableValues: "1.0 0.0"
        }))), s.createElement("filter", {
            id: "splash/HeroImage_f",
            filterUnits: "objectBoundingBox",
            x: "0%",
            y: "0%",
            width: "100%",
            height: "100%"
        }, s.createElement("feComponentTransfer", {
            in: "SourceGraphic"
        }, s.createElement("feFuncA", {
            type: "table",
            tableValues: "1.0 0.0"
        }))), s.createElement("filter", {
            id: "splash/HeroImage_i",
            filterUnits: "objectBoundingBox",
            x: "0%",
            y: "0%",
            width: "100%",
            height: "100%"
        }, s.createElement("feComponentTransfer", {
            in: "SourceGraphic"
        }, s.createElement("feFuncA", {
            type: "table",
            tableValues: "1.0 0.0"
        }))), s.createElement("filter", {
            id: "splash/HeroImage_m",
            filterUnits: "objectBoundingBox",
            x: "0%",
            y: "0%",
            width: "100%",
            height: "100%"
        }, s.createElement("feComponentTransfer", {
            in: "SourceGraphic"
        }, s.createElement("feFuncA", {
            type: "table",
            tableValues: "1.0 0.0"
        }))), s.createElement("filter", {
            id: "splash/HeroImage_p",
            filterUnits: "objectBoundingBox",
            x: "0%",
            y: "0%",
            width: "100%",
            height: "100%"
        }, s.createElement("feComponentTransfer", {
            in: "SourceGraphic"
        }, s.createElement("feFuncA", {
            type: "table",
            tableValues: "1.0 0.0"
        }))), s.createElement("filter", {
            id: "splash/HeroImage_t",
            filterUnits: "objectBoundingBox",
            x: "0%",
            y: "0%",
            width: "100%",
            height: "100%"
        }, s.createElement("feComponentTransfer", {
            in: "SourceGraphic"
        }, s.createElement("feFuncA", {
            type: "table",
            tableValues: "1.0 0.0"
        }))), s.createElement("linearGradient", {
            id: "splash/HeroImage_bj",
            spreadMethod: "pad",
            gradientUnits: "userSpaceOnUse"
        }, s.createElement("stop", null), s.createElement("stop", null), s.createElement("stop", null)), s.createElement("linearGradient", {
            id: "splash/HeroImage_bf",
            spreadMethod: "pad",
            gradientUnits: "userSpaceOnUse"
        }, s.createElement("stop", null), s.createElement("stop", null), s.createElement("stop", null)), s.createElement("linearGradient", {
            id: "splash/HeroImage_bb",
            spreadMethod: "pad",
            gradientUnits: "userSpaceOnUse",
            x1: "542.181",
            y1: "38.77",
            x2: "594.279",
            y2: "167.238"
        }, s.createElement("stop", {
            offset: "0%",
            stopColor: "#FFA75F"
        }), s.createElement("stop", {
            offset: "50%",
            stopColor: "#FFB78B"
        }), s.createElement("stop", {
            offset: "100%",
            stopColor: "#FFC7B8"
        }))), s.createElement("g", {
            clipPath: "url(#splash/HeroImage_am)"
        }, s.createElement("g", {
            clipPath: "url(#splash/HeroImage_an)",
            transform: "matrix(-1 0 0 1 1916 -23.5)",
            style: {
                display: "block"
            }
        }, s.createElement("g", {
            style: {
                display: "block"
            }
        }, s.createElement("path", {
            fill: "#58CC02",
            d: "M1681.457 320.208c-12.538 54.456-106.878 481.498-125.468 564.221-1.022 4.548-2.148 9.037-3.462 13.395-3.404 11.291-8.068 21.697-15.445 29.926-9.958 11.108-24.858 18.25-48.274 18.25-36.776 0-292.497-6.849-327.725-6.849-12.383 0-22.016-6.309-27.946-16.038-.378-.621-21.615-38.648-21.921-39.316-4.748-10.373-6.57-22.86-2.947-37.253 24.84-98.693 119.597-486.725 137.44-565.604 1.885-8.335 4.816-16.412 8.7-23.828 4.404-8.409 10.033-15.969 16.751-22.095 10.802-9.849 24.42-15.99 40.293-15.99h287.02c14.334 0 25.578 5.972 33.13 15.054.879 1.057 41.935 44.299 42.713 45.436 7.746 11.319 10.439 26.367 7.141 40.691z"
        }), s.createElement("path", {
            stroke: "#58CC02",
            strokeWidth: 13,
            d: "M1681.457 320.208c-12.538 54.456-106.878 481.498-125.468 564.221-1.022 4.548-2.148 9.037-3.462 13.395-3.404 11.291-8.068 21.697-15.445 29.926-9.958 11.108-24.858 18.25-48.274 18.25-36.776 0-292.497-6.849-327.725-6.849-12.383 0-22.016-6.309-27.946-16.038-.378-.621-21.615-38.648-21.921-39.316-4.748-10.373-6.57-22.86-2.947-37.253 24.84-98.693 119.597-486.725 137.44-565.604 1.885-8.335 4.816-16.412 8.7-23.828 4.404-8.409 10.033-15.969 16.751-22.095 10.802-9.849 24.42-15.99 40.293-15.99h287.02c14.334 0 25.578 5.972 33.13 15.054.879 1.057 41.935 44.299 42.713 45.436 7.746 11.319 10.439 26.367 7.141 40.691z",
            fill: "none"
        }), s.createElement("path", {
            fill: "#FFF",
            d: "M1641.23 278.067c-12.538 54.456-110.709 481.142-129.299 563.865-7.243 32.232-19.721 61.572-67.181 61.572-36.776 0-268.552.149-303.78.149-26.121 0-40.009-28.074-32.701-57.109 24.84-98.693 119.597-486.725 137.44-565.604 7.46-32.977 31.29-61.913 65.744-61.913h287.02c32.614 0 49.232 30.916 42.757 59.04z"
        }), s.createElement("path", {
            stroke: "#9DEEC7",
            strokeWidth: 13,
            d: "M1641.23 278.067c-12.538 54.456-110.709 481.142-129.299 563.865-7.243 32.232-19.721 61.572-67.181 61.572-36.776 0-268.552.149-303.78.149-26.121 0-40.009-28.074-32.701-57.109 24.84-98.693 119.597-486.725 137.44-565.604 7.46-32.977 31.29-61.913 65.744-61.913h287.02c32.614 0 49.232 30.916 42.757 59.04z",
            fill: "none"
        }))), s.createElement("g", {
            clipPath: "url(#splash/HeroImage_bk)",
            transform: "matrix(-1 0 0 1 1976 -43.5)",
            style: {
                display: "block"
            }
        }, s.createElement("g", {
            mask: "url(#splash/HeroImage_bl)",
            style: {
                display: "block"
            }
        }, s.createElement("path", {
            fill: "#50C800",
            d: "m1384.254 457.488 144.166-2.516c36.921-.645 65.072 39.751 59.004 69.71-7.142 35.263-25.726 96.735-34.714 131.976-9.178 35.992-31.23 51.946-63.43 52.508-32.201.562-111.444 1.865-142.547 2.408-51.986.908-70.259-43.173-60.496-83.8 8.487-35.318 21.887-79.943 30.867-112.375 8.548-30.868 35.453-57.358 67.15-57.911z"
        }), s.createElement("path", {
            fill: "#8EE000",
            d: "M1561.288 610.003c5.14-18.424 9.149-32.246 12.886-49.66 3.568-16.632-8.951-34.893-14.28-40.087 2.625-9.372 5.548-28.175-2.12-30.679-7.667-2.503-19.31 12.632-19.36 12.608 6.479-26.997-4.97-29.835-14.024-22.352-11.258 9.304-31.789 30.28-50.203 45.6-18.414 15.319-44.513 9.774-56.255-3.465-12.569-14.171-21.69-33.818-30.832-44.844-9.141-11.025-22.11 12.33-22.073 26.459-.074.026-2.176-2.997-6.706-8.786-6.639-8.486-17.043-2.969-20.442 18.304-22.656 11.602-30.359 28.738-33.886 39.968 0 0-9.316 26.5-10.08 52.761-.697 23.909 23.058 47.663 49.675 47.198 25.124-.438 51.666-11.467 60.284-31.583 8.62-.2 34.442-.72 39.136-.802 2.71 17.3 23.039 35.96 53.251 35.433 42.027-.733 60.884-31.21 65.029-46.073z"
        }), s.createElement("path", {
            fill: "#FFF",
            d: "M1372.718 525.2c25.155-.44 36.313 18.16 32.401 40.82-1.734 10.045-3.06 16.729-5.032 24.966-5.905 24.68-27.477 41.984-50.74 42.39-22.946.4-38.26-18.48-33.444-40.92 1.942-9.048 4.616-20.095 6.057-25.906 5.61-22.632 25.603-40.911 50.758-41.35zm148.365 3.654c25.205-.44 36.386 18.197 32.466 40.901-1.738 10.066-3.067 16.764-5.043 25.017-5.917 24.73-27.53 42.067-50.84 42.474-22.991.401-38.337-18.516-33.511-41.001 1.946-9.066 4.626-20.134 6.07-25.958 5.622-22.676 25.652-40.993 50.858-41.433z"
        }), s.createElement("path", {
            fill: "#4B4B4B",
            d: "M1501.191 552.847c-9.21-3.833-19.202.694-21.317 11.598-2.336 12.036-4.934 21.96-5.068 27.345-.182 7.335 2.82 20.21 16.097 20.09 11.704-.106 17.471-5.756 19.785-13.142 2.508-8.011 4.222-19.361 4.774-22.707-6.088.219-11.338-1.782-14.592-6.448-3.87-5.55-1.08-12.408.321-16.736zm-122.218-5.06c-9.273-3.672-18.7 1.455-21.175 12.386-2.423 10.702-2.986 15.003-4.032 20.338-2.1 10.716-2.713 21.548 10.482 26.06 11.126 3.803 22.15-3.99 24.507-12.703 2.213-8.18 4.573-19.732 5.078-23.116-5.015.842-11.4-.346-15.448-5.795-4.044-5.445-2.76-13.456.588-17.17z"
        }), s.createElement("path", {
            fill: "#8EE000",
            d: "M1374.367 518.17c-46.003.302-51.565 25.403-51.565 25.403s.191-.262.57-.73c3.306-4.086 20.945-23.892 51.038-22.174 33.54 1.915 38.932 24.324 67.462 25.827 28.531 1.502 56.552-23.993 79.113-22.884 24.801 1.219 36.595 19.378 39.95 25.665.709 1.326 1.041 2.124 1.041 2.124s-5.55-31.408-42.043-30.771c-36.495.637-40.12 22.203-77.623 22.357-37.503.155-21.941-25.12-67.943-24.818zm50.085 93.108c28.684-.5 39.004 35.908 67.64 37.825 29.993 2.008 50.2-6.908 51.193-22.537-7.9 5.811-13.687 19.882-45.727 16.957-32.04-2.926-46.163-32.112-73.13-33.483-29.699-1.51-43.898 32.04-77.925 31.666-27.488-.304-35.18-18.03-35.18-18.03s-1.428 23.779 33.582 23.168c36.698-.64 50.865-35.065 79.547-35.566z"
        }), s.createElement("path", {
            fill: "#F48000",
            d: "M1446.278 622.454c-2.659 15.765-12.302 23.187-25.182 23.412-11.825.207-20.343-10.41-18.023-22.273.367-1.877.88-3.494 1.523-4.89 3.474-7.533 10.76-8.598 19.511-9.183 9.31-.622 22.015-3.035 22.504 8.439.055 1.309-.047 2.8-.333 4.495z"
        }), s.createElement("path", {
            fill: "#B16900",
            d: "M1444.562 608.13c-2.334 12.411-10.725 18.268-21.918 18.464-10.277.18-17.664-8.165-15.631-17.505.322-1.478-.033 1.388.528.29 3.03-5.936 9.364-6.785 16.97-7.258 8.09-.503 19.136-2.418 19.544 6.611.046 1.031.758-1.937.507-.603z"
        }), s.createElement("path", {
            fill: "#FFB8D1",
            d: "M1444.562 608.13c-2.334 12.411-10.725 18.268-21.918 18.464-5.961.104-10.949-2.659-13.69-6.82-1.987-3.014 35.859-12.979 35.608-11.645z"
        }), s.createElement("path", {
            fill: "#FFC200",
            d: "M1396.101 618.567c3.998-15.708 15.795-21.4 31.136-21.668 13.956-.244 27.466 7.88 27.52 22.206a2.72 2.72 0 0 1-1.98 2.635c-1.153.318-29.522 6.193-29.522 6.193s-24.016-6.636-25.272-6.825c-1.257-.188-2.414-.451-1.882-2.54z"
        }), s.createElement("path", {
            fill: "#FFE747",
            d: "M1421.383 599.647c4.944-1.021 10.276-.84 14.98.377 3.205.83 4.884 3.374 3.977 5.511-.862 2.028-3.51 3.386-6.361 2.373-4.062-1.445-9.936-1.342-13.753-.596-3.006.587-4.986-1.652-4.767-3.381.362-2.847 3.47-3.776 5.924-4.284z"
        })))))))
          , as = [130, 290]
          , ss = `(min-width: ${es})`
          , ns = ({animateTopbar: e, course: t, hideTopbar: a, isGetStartedVisible: n, isTopbarScrolled: r, onGetStartedMouseEnter: i, onGetStartedMouseLeave: o, onLogInClick: l, onRegisterClick: c}) => s.createElement("div", {
            className: re()("_3L2FE", {
                _1JEFf: e,
                _2t_Vq: a,
                _1R8d1: r
            })
        }, s.createElement("nav", {
            className: n ? "lZqWH" : "_3xnN3 lZqWH"
        }, s.createElement(ae.ZP, {
            href: "/"
        }, s.createElement("img", {
            alt: "Duolingo",
            className: "_1KFhV",
            src: Za
        })), n ? s.createElement(Ha.Z, {
            className: "_1-AxT",
            style: "hare-always-light",
            trackingScreen: "splash"
        }) : s.createElement("div", {
            className: "_2DfvG"
        }, s.createElement(ae.ZP, {
            className: re()((0,
            ga.yO)({
                variant: "solid"
            }), "_2DV0M _3u1lX _42WO0"),
            href: "/register",
            onClick: () => c("topbar"),
            onMouseEnter: i,
            onMouseLeave: o
        }, s.createElement(pa, null, (0,
        X._i)(18550))), t ? s.createElement(Y.Z, {
            className: "_1Qeg3 _2Ccfj _42WO0",
            onClick: () => l("topbar"),
            variant: "stroke"
        }, s.createElement(pa, null, (0,
        X._i)(9109))) : null)))
          , rs = ({animateTopbar: e, canShowAndroidBanner: t, course: a, hideTopbar: n, isRegistering: r, onGetStartedMouseEnter: i, onGetStartedMouseLeave: o, onLogInClick: l, onRegisterClick: u}) => {
            const g = (0,
            c.Fx)(O.$4)
              , p = (0,
            Ga.Z)()
              , m = (0,
            M.Z)()
              , h = (0,
            Ct.Z)(void 0, ( () => m ? Promise.resolve(void 0) : K.bG.getLottieAnimation(Ya)), [m])
              , {hidePlaceholder: _, onEnterFrame: v, ref: f} = ra()
              , {isPlaying: S, ref: y, shouldRender: E} = ca(Ya, g)
              , [b,I] = (0,
            ia.Z)({
                rootMargin: "-72px 0px 0px 0px"
            })
              , w = (0,
            Ht.vl)().via
              , k = "WeChat" === w ? ja : "DET" === w ? Ba : $a;
            return s.createElement("header", {
                className: re()("_39290", {
                    _3N2g2: t
                })
            }, s.createElement(ns, {
                animateTopbar: e,
                course: a,
                hideTopbar: n,
                isGetStartedVisible: b,
                isTopbarScrolled: p,
                onGetStartedMouseEnter: i,
                onGetStartedMouseLeave: o,
                onLogInClick: l,
                onRegisterClick: u
            }), s.createElement("div", {
                className: "_15kfC"
            }, s.createElement("div", {
                className: "_1ybpv",
                ref: y
            }, g && !m ? s.createElement(ts, {
                className: Xa,
                ref: f,
                style: {
                    visibility: _ ? "hidden" : "visible"
                }
            }) : s.createElement("picture", {
                className: Xa,
                ref: f,
                style: {
                    visibility: _ ? "hidden" : "visible"
                }
            }, s.createElement("source", {
                media: ss,
                srcSet: `${Qa}, ${Ka} 2x`
            }), s.createElement("source", {
                srcSet: `${Wa}, ${qa} 2x`
            }), s.createElement("img", {
                alt: "",
                src: Wa
            })), h && E ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: h,
                className: "ILWe4 _2mBtL _219j-",
                isPlaying: S,
                loop: !0,
                loopSegment: as,
                onEnterFrame: v,
                renderSubframes: !1,
                renderer: "svg"
            })) : null), s.createElement("div", {
                className: "_28m3G"
            }, s.createElement("h1", {
                className: "L93Ok"
            }, a ? (0,
            X._i)(18929, {
                learning_language_name: a.learningLanguageName
            }) : (0,
            X._i)(29896)), s.createElement("div", {
                className: "_1-0oK"
            }, a ? s.createElement(Y.Z, {
                className: Ja,
                onClick: () => u("top"),
                onMouseEnter: i,
                onMouseLeave: o,
                ref: I,
                submitting: r,
                variant: "solid"
            }, s.createElement(pa, null, (0,
            X._i)(18550))) : s.createElement(ae.ZP, {
                ...(0,
                oe._q)(ce.V.GetStartedTop),
                className: re()((0,
                ga.yO)({
                    variant: "solid"
                }), Ja),
                href: "/register",
                onClick: () => u("top"),
                onMouseEnter: i,
                onMouseLeave: o,
                ref: I
            }, s.createElement(pa, null, (0,
            X._i)(18550))), s.createElement(Y.Z, {
                ...(0,
                oe._q)(ce.V.HaveAccount),
                className: "-TeUZ _2Ccfj",
                onClick: () => l("top"),
                variant: "stroke"
            }, s.createElement(pa, null, (0,
            X._i)(20690)))), ["zh", "zh-CN"].includes(window.duo.uiLanguage) && Gt.Z.desktop && (0,
            q.J9)() ? s.createElement("div", {
                className: "LCY-S"
            }, s.createElement("img", {
                className: "inyZH",
                src: k
            }), s.createElement(Y.Z, {
                className: "_1A2gx",
                onClick: () => (0,
                Nt.ci)("splash-page")
            }, s.createElement("span", {
                className: "_1xLl1"
            }, s.createElement("span", {
                className: "_3U62n"
            }, "扫一扫下载 APP"), s.createElement("img", {
                src: za
            })))) : null)), s.createElement("div", {
                className: "_3XjUp"
            }, a ? s.createElement("div", {
                className: "RkWjh"
            }, s.createElement(Ua.Z, {
                lang: a.learningLanguageId,
                size: 64
            }), s.createElement("h3", {
                className: "_1o8Df"
            }, (0,
            X._i)(3721, {
                learning_language_name: a.learningLanguageName
            }))) : s.createElement(Va.Z, {
                className: "_3isJn",
                onCarouselItemClick: () => (0,
                d.track)("click", {
                    which: "splash page flag"
                }),
                trackingScreen: "splash"
            })))
        }
        ;
        var is = a(56252);
        const os = a.p + "images/splash/lottie/229d5f88cc9df2eb0b68f39466500911.svg"
          , ls = a.p + "lottie/splash/c16e90b93e35750c893be4b58720cef2.json"
          , cs = a.p + "lottie/splash/c02b5f75d9ec48815e6a964f641a9fe2.json"
          , ds = "_2coJk"
          , us = s.forwardRef(( ({}, e) => {
            const t = s.useRef()
              , a = s.useRef(null)
              , n = s.useContext(Wt)
              , r = s.useContext(qt)
              , i = (0,
            M.Z)()
              , o = oa(n === ls)
              , {hidePlaceholder: l, onEnterFrame: c, ref: u} = ra()
              , g = (0,
            Ct.Z)(void 0, ( () => K.bG.getLottieAnimation(ls)), [])
              , p = (0,
            Ct.Z)(void 0, ( () => i ? Promise.resolve(void 0) : K.bG.getLottieAnimation(cs)), [i])
              , m = la((e => {
                var a;
                let s = (0,
                Pt.b)(e.targetRect.top, e.rootBounds.bottom, -e.targetRect.height, 0, 450);
                r(ls, s >= 0 && s <= 450 ? -1 : 1 / 0),
                s = Math.min(Math.max(s, 0), 450),
                h.isAnimating() ? h.update(s) : h.start(null !== (a = t.current) && void 0 !== a ? a : s, s)
            }
            ), {
                onCleanup: () => r(ls, 1 / 0)
            })
              , h = (0,
            Lt.Z)({
                clamp: !0,
                onChange: e => {
                    var s;
                    const n = e.done ? e.target : e.current;
                    t.current = n,
                    (null === (s = a.current) || void 0 === s ? void 0 : s.animation) && a.current.animation.goToAndStop(n, !0)
                }
            });
            return s.createElement("section", {
                className: "Gijhh",
                ref: e
            }, s.createElement("div", {
                className: "_3pwPw"
            }, s.createElement("div", {
                className: "_16Yyp"
            }, s.createElement("h1", {
                className: "QO0Sm"
            }, (0,
            X._i)(43096)), s.createElement("div", {
                className: "_1CMLi"
            }, s.createElement(is.Z, {
                href: Gt.Z.desktop ? (0,
                X.H8)(22504, void 0, {
                    addRightToLeftMark: !1
                }) : (0,
                Nt.fy)({
                    via: "splash_page"
                }),
                onClick: () => {
                    (0,
                    d.track)("click", {
                        screen: "splash",
                        target: "mobile_download_ios"
                    }),
                    (0,
                    d.track)("click", {
                        which: "mobile download ios"
                    }),
                    (0,
                    d.track)("web_to_app_store_tap", {
                        target: "apple",
                        via: "splash_page"
                    })
                }
                ,
                size: "medium",
                style: "snow-always-light",
                type: "apple",
                via: "splash_page"
            }), s.createElement(is.Z, {
                href: Gt.Z.desktop ? (0,
                Nt.A)({
                    utmCampaign: "splash",
                    utmContent: "download_button"
                }) : (0,
                Nt.Ir)({
                    via: "splash_page"
                }),
                onClick: () => {
                    (0,
                    d.track)("click", {
                        screen: "splash",
                        target: "mobile_download_android"
                    }),
                    (0,
                    d.track)("click", {
                        which: "mobile download android"
                    }),
                    (0,
                    d.track)("web_to_app_store_tap", {
                        target: "google_or_China",
                        via: "splash_page"
                    })
                }
                ,
                size: "medium",
                style: "snow-always-light",
                type: (0,
                q.J9)() ? "china" : "google"
            }))), s.createElement("div", {
                className: "_3IKl2"
            }, s.createElement("img", {
                alt: "",
                className: ds,
                ref: u,
                src: os,
                style: {
                    visibility: l ? "hidden" : "visible"
                }
            }), p && o ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: p,
                className: ds,
                isPlaying: n === ls,
                loop: !0,
                onEnterFrame: c,
                renderSubframes: !1
            })) : null, g ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: g,
                className: ds,
                isPlaying: !1,
                ref: a,
                renderSubframes: !1
            })) : null, s.createElement("div", {
                className: "Hlz_a",
                ref: m
            }))))
        }
        ));
        var gs = a(98683)
          , ps = a(80164);
        const ms = a.p + "images/splash/3a733db6d6873e1a915f70cf72554ce3.svg"
          , hs = a.p + "images/splash/dd7453522d3192d4df06d4652508b8bc.svg"
          , _s = a.p + "images/splash/lottie/22fce01f6df43e0472d7585afad9a43a.svg"
          , vs = a.p + "images/splash/lottie/43ea369cfa70f093c3edad4d75ea6009.svg"
          , fs = a.p + "lottie/splash/904f242fe2ab5477e3b97928d3e1cb89.json"
          , Ss = "_2KG9p _219j-"
          , ys = [35, 156]
          , Es = `(min-width: ${es})`
          , bs = s.forwardRef(( ({}, e) => {
            const t = (0,
            M.Z)()
              , a = (0,
            c.Fx)(ps.rj)
              , n = (0,
            Ct.Z)(void 0, ( () => t ? Promise.resolve(void 0) : K.bG.getLottieAnimation(fs)), [t])
              , {hidePlaceholder: r, onEnterFrame: i, ref: o} = ra()
              , {isPlaying: l, ref: d, shouldRender: u} = ca(fs)
              , g = (0,
            gs.Q)({
                iapContext: "splash"
            });
            return s.createElement("section", {
                className: "LlPOq",
                ref: e
            }, s.createElement("div", {
                className: "_35MAo"
            }, s.createElement("div", {
                className: "_2VZpU",
                ref: d
            }, s.createElement("img", {
                alt: "",
                className: Ss,
                ref: o,
                src: t ? vs : _s,
                style: {
                    visibility: r ? "hidden" : "visible"
                }
            }), n && u ? s.createElement(s.Suspense, {
                fallback: null
            }, s.createElement(At.Z, {
                animationData: n,
                className: Ss,
                isPlaying: l,
                loop: !0,
                loopSegment: ys,
                onEnterFrame: i,
                renderSubframes: !1
            })) : null), s.createElement("div", {
                className: "A6fCq"
            }, s.createElement("picture", null, s.createElement("source", {
                height: 91,
                media: Es,
                srcSet: ms,
                width: 605
            }), s.createElement("img", {
                alt: (0,
                X.H8)(36712),
                className: "_26IYs",
                height: 55,
                src: hs,
                width: 339
            })), s.createElement(Y.Z, {
                className: "_1aASh _19taU",
                onClick: g,
                variant: "solid"
            }, s.createElement(pa, null, (0,
            X._i)(25428, {
                weeks: a
            }))))))
        }
        ))
          , Is = ({course: e}) => {
            const t = (0,
            c.tX)()
              , a = (0,
            L.TH)()
              , n = s.useRef()
              , r = s.useRef(null)
              , i = s.useRef(null)
              , o = s.useRef(null)
              , [l,u] = s.useState(!1)
              , [g,p] = s.useState(!1)
              , [m,h] = s.useState(!1)
              , [_,v] = s.useState(!1)
              , [f,S] = s.useState(!1);
            (0,
            D.Z)("SplashPageRedesign"),
            (0,
            Zt.lQ)($t.t, void 0 === e ? "" : void 0);
            const y = !Gt.Z.silk && (0,
            q.J9)() && !e
              , E = Gt.Z.android && !y && !e
              , b = "/" === a.pathname
              , [I,w] = s.useMemo(( () => e ? [`${(0,
            X.H8)(3053, {
                learning_language_name: e.learningLanguageName
            })} - ${(0,
            X.H8)(23227)}`, (0,
            X.H8)(6807, {
                learning_language_name: e.learningLanguageName
            })] : "/log-in" === a.pathname ? [`${(0,
            X.H8)(18855)} - ${(0,
            X.H8)(23227)}`, (0,
            X.H8)(28228)] : [`${(0,
            X.H8)(23227)} - ${(0,
            X.H8)(10751)}`, (0,
            X.H8)(19956)]), [e, a.pathname])
              , k = (0,
            Lt.Z)({
                clamp: !0,
                onChange: e => {
                    const t = e.done ? e.target : e.current;
                    if (n.current = t,
                    r.current) {
                        const e = (0,
                        Pt.b)(t, 0, 100, 0, 1, !0);
                        r.current.style.setProperty("opacity", `${e}`)
                    }
                }
            })
              , T = la((e => {
                var t, a;
                const s = null === (t = i.current) || void 0 === t ? void 0 : t.getBoundingClientRect();
                if (!s)
                    return;
                (e => {
                    var t;
                    k.isAnimating() ? k.update(e) : k.start(null !== (t = n.current) && void 0 !== t ? t : e, e)
                }
                )((0,
                Pt.b)(s.top, e.rootBounds.bottom, e.rootBounds.top, 0, 100, !0));
                const r = null === (a = o.current) || void 0 === a ? void 0 : a.getBoundingClientRect();
                r && (p(s.top - 96 < e.rootBounds.top && r.bottom > e.rootBounds.top),
                S(!0))
            }
            ), {
                onInvisible: () => S(!0)
            })
              , C = async a => {
                e ? (Re.Z.start("trial_user_creation"),
                v(!0),
                await Promise.all([(0,
                d.track)("click", "topbar" === a ? {
                    which: "course splash page get started topbar"
                } : {
                    screen: "course_splash",
                    target: "get_started"
                }), (0,
                d.track)("course_splash_tap", {
                    target: "get_started"
                })]),
                await t((0,
                W.Kb)(e.learningLanguageId, e.fromLanguageId))) : ((0,
                d.track)("click", {
                    screen: "splash",
                    target: "get_started"
                }),
                (0,
                d.track)("splash_tap", {
                    target: "get_started"
                }),
                (0,
                d.track)("click", {
                    which: `splash page get started ${a}`
                }))
            }
            ;
            return s.useEffect(( () => {
                f && u(!0)
            }
            )),
            s.useEffect(( () => {
                At.Z.preload()
            }
            ), []),
            s.useEffect(( () => {
                Re.Z.finishOptional("splash_to_intro")
            }
            ), []),
            s.useEffect(( () => {
                e ? (0,
                d.track)("course splash", {
                    course_id: `${e.learningLanguageId}<-${e.fromLanguageId}`,
                    logged_in: !1
                }) : ((0,
                d.track)("screen_load", {
                    screen: "splash"
                }),
                b && (0,
                bt.Bf)(a, "splash"))
            }
            ), [e, b]),
            s.useEffect(( () => {
                window.location.host.startsWith("join") && t({
                    options: {
                        goBack: () => (0,
                        P.Zs)(void 0, !0),
                        isSignIn: !0,
                        name: N.t.SignInUp,
                        via: "onboarding"
                    },
                    type: "TOGGLE_MODAL"
                })
            }
            ), []),
            s.useEffect(( () => {
                "/log-in" === a.pathname && ((0,
                d.track)("sign_in_load", {
                    screen: "splash_login_page",
                    via: "onboarding"
                }),
                t({
                    options: {
                        allowLanguagelessUser: !0,
                        isSignIn: !0,
                        name: N.t.SignInUp,
                        via: "onboarding"
                    },
                    type: "TOGGLE_MODAL"
                }))
            }
            ), [a.pathname]),
            s.createElement("div", {
                className: "qO_UG",
                ref: T
            }, s.createElement(Dt.Z, {
                content: w
            }), s.createElement(Rt.ql, null, s.createElement("title", null, I)), e ? s.createElement(Ft, {
                crumbs: [{
                    label: (0,
                    X.H8)(23227),
                    url: new URL(`${window.location.protocol}//${window.location.host}`)
                }, {
                    label: (0,
                    X.H8)(20631),
                    url: new URL(`${window.location.protocol}//${window.location.host}/courses`)
                }]
            }) : s.createElement(jt, {
                sameAs: ["https://www.youtube.com/duolingo", "https://twitter.com/duolingo", "https://www.facebook.com/duolingo", "https://www.linkedin.com/company/duolingo/", "https://www.instagram.com/duolingo/", "https://www.twitch.tv/Duolingo"]
            }), s.createElement(Rt.ql, null, s.createElement("body", {
                className: "_2j8ko"
            })), s.createElement(Qt, null, s.createElement(rs, {
                animateTopbar: l,
                canShowAndroidBanner: E,
                course: e,
                hideTopbar: g,
                isRegistering: _,
                onGetStartedMouseEnter: () => h(!0),
                onGetStartedMouseLeave: () => h(!1),
                onLogInClick: () => {
                    (0,
                    d.track)("click", {
                        screen: e ? "unknown" : "splash",
                        target: "has_account"
                    }),
                    (0,
                    d.track)("splash_tap", {
                        target: "has_account"
                    }),
                    t({
                        options: {
                            allowLanguagelessUser: !0,
                            isSignIn: !0,
                            name: N.t.SignInUp,
                            via: e ? "course_splash" : "onboarding"
                        },
                        type: "TOGGLE_MODAL"
                    })
                }
                ,
                onRegisterClick: C
            }), e ? s.createElement("main", null, s.createElement(ua, null), s.createElement(Aa, {
                course: e,
                isHoveringGetStarted: m,
                isRegistering: _,
                onRegisterClick: () => C("bottom")
            })) : s.createElement("main", null, s.createElement("div", {
                className: "_2huhH"
            }, s.createElement("div", {
                className: "_1NJUB _1Txiq",
                ref: r
            }), s.createElement(ua, null), s.createElement(us, {
                ref: i
            })), s.createElement(bs, {
                ref: o
            }), s.createElement(wa, null), s.createElement(Aa, {
                isHoveringGetStarted: m,
                isRegistering: _,
                onRegisterClick: () => C("bottom")
            })), s.createElement(Fa, null)), y ? s.createElement(Vt, null) : E ? s.createElement(xt, null) : null)
        }
        ;
        var ws = a(26886);
        const ks = () => {
            const e = (0,
            L.TH)()
              , {fromLanguageId: t=Oa.h9, learningLanguageId: a} = (0,
            L.UO)()
              , r = (0,
            Ct.Z)(void 0, ( () => K._s.courseShow(a, t)), [t, a]);
            s.useEffect(( () => {
                (0,
                bt.Bf)(e, "course_splash")
            }
            ), []);
            const i = (0,
            ws.og)(a, t);
            return e.pathname !== i ? s.createElement(n.Fg, {
                replace: !0,
                to: {
                    pathname: i,
                    search: e.search
                }
            }) : r ? s.createElement(Is, {
                course: r
            }) : null
        }
        ;
        var Ts = a(71327)
          , Cs = a(80715)
          , Rs = a(99961);
        const Ls = a.p + "images/borderlessFlags/425faf06f82ca39d0e6b61b747910528.svg";
        var Ps = a(90028);
        const As = {
            wrap: "_1x7fC",
            "language-chooser-header": "_3P7Od",
            "from-language-chooser-list": "_2LRin",
            "from-language-item": "_3DrtT",
            "from-language-flag": "_27Vth",
            "white-stroke-transparent": "_34mAO _3QH1l _29LnD _2sNVM _2LoNU VzbUl _1AgKJ _1w2Ut _3wPHf _2Rt1l _1saKQ _1Lt8-",
            "loading-container": "rbh8g"
        }
          , Ds = {
            de: 4,
            es: 0,
            fr: 3,
            pt: 1,
            ru: 2
        }
          , Os = ({availableCourses: e, isNavigating: t, isSelectingFromLanguage: a, onFromLanguageClick: n, onSelectCourse: r, selectedLearningLanguage: i, uiLanguageId: o}) => {
            let l = !1;
            const d = e.filter((e => {
                const {fromLanguageId: t, learningLanguageId: a} = e;
                return t !== a && (t === o || "en" === o && "en" === a && !l && (l = !0,
                !0))
            }
            )).map((e => {
                const {learningLanguageId: t} = e;
                return "en" === o && "en" === t ? {
                    ...e,
                    numLearners: 479e4,
                    numLearnersString: `${4.79.toPrecision(3)}M`
                } : e
            }
            ))
              , u = (0,
            c.Fx)((e => (0,
            O.Mb)(e).ipCountry));
            return s.createElement("div", {
                className: As.wrap
            }, s.createElement("h1", {
                className: As["language-chooser-header"]
            }, a ? i ? "What language do you speak?" : (0,
            X._i)(16916) : (0,
            X._i)(13091)), t ? s.createElement(I.Z, {
                theme: "light"
            }, ( ({style: e}) => s.createElement("div", {
                className: As["loading-container"],
                style: e
            }, s.createElement(Ts.Z, {
                type: "screen-white"
            })))) : s.createElement(s.Fragment, null, a ? s.createElement("ul", {
                className: As["from-language-chooser-list"]
            }, p.MR(e.filter(( ({learningLanguage: e}) => !i || e === i)), (e => u && u in X.WQ && e.fromLanguage === X.WQ[u] ? -1 : e.fromLanguage in Ds ? Ds[e.fromLanguage] : 1 / 0)).map(( ({fromLanguageId: e}) => s.createElement("li", {
                className: As["from-language-item"],
                key: e,
                onClick: t => n(t, e)
            }, s.createElement(Ua.Z, {
                className: As["from-language-flag"],
                lang: e,
                size: 40
            }), (0,
            Oa.lx)(e)))), s.createElement("li", {
                className: As["from-language-item"],
                key: "en",
                onClick: e => n(e, "en")
            }, s.createElement("img", {
                className: As["from-language-flag"],
                src: Ls,
                width: 40
            }), "I can't find my language")) : s.createElement("ul", {
                className: Ps.Z["course-card-container"]
            }, p.MR(d, (e => -e.numLearners)).map((e => {
                const t = "en" === o && "en" === e.learningLanguageId;
                return s.createElement(Rs.Z, {
                    className: As["choose-language"],
                    course: e,
                    "data-language": (0,
                    Oa.D3)(e.learningLanguageId),
                    headingTag: "h2",
                    key: "en" === o && "en" === e.learningLanguageId ? "english-placeholder" : e.learningLanguageId,
                    onSelectCourse: a => {
                        r(e, t, a)
                    }
                    ,
                    selectedFromLanguageId: e.fromLanguageId,
                    style: "snow-always-light"
                })
            }
            )))))
        }
        ;
        class Ns extends s.Component {
            constructor() {
                super(...arguments),
                this.state = {
                    isNavigating: !1,
                    isSelectingFromLanguage: !1
                },
                this.onFromLanguageClick = async ({}, e) => {
                    const {dispatch: t, location: a} = this.props
                      , s = window.performance.now();
                    if (this.state.selectedLearningLanguage)
                        (0,
                        d.track)("course_picker_tap", {
                            from_language: (0,
                            Oa.D3)(e),
                            learning_language: "en",
                            target: "course",
                            via: "onboarding"
                        }),
                        R.O.scrollTo(0, 0),
                        this.setState({
                            isNavigating: !0
                        }),
                        (0,
                        Ht.vl)(a.search).short ? await (0,
                        P.Zs)(`//${e}.duolingo.com/welcome/${this.state.selectedLearningLanguage}?short=1`) : (Re.Z.start("trial_user_creation", {
                            startTime: s
                        }),
                        t((0,
                        W.Kb)(this.state.selectedLearningLanguage, e)));
                    else {
                        await (0,
                        d.track)("ui_picker_screen_tap", {});
                        const t = `//${"zh" === e ? "zh-CN" : e}.duolingo.com/register`;
                        await (0,
                        P.Zs)(t)
                    }
                }
                ,
                this.onSelectCourse = (e, t) => {
                    const {dispatch: a, history: s, location: n, trackingScreen: r} = this.props
                      , i = window.performance.now();
                    (0,
                    d.track)("click", {
                        screen: r,
                        target: "flag"
                    }),
                    (0,
                    d.track)("course_selected", {
                        learning_language: (0,
                        Oa.D3)(e.learningLanguageId),
                        ui_language: (0,
                        Oa.D3)(Oa.h9)
                    }),
                    a({
                        type: "SET_SHOULD_TRACK_FIRST_PATH"
                    }),
                    (0,
                    d.track)("course_picker_tap", {
                        from_language: (0,
                        Oa.D3)(Oa.h9),
                        learning_language: (0,
                        Oa.D3)(e.learningLanguageId),
                        target: "course",
                        via: "onboarding"
                    }),
                    t ? this.setState({
                        isSelectingFromLanguage: !0,
                        selectedLearningLanguage: e.learningLanguageId
                    }) : (R.O.scrollTo(0, 0),
                    this.setState({
                        isNavigating: !0,
                        selectedLearningLanguage: e.learningLanguageId
                    }),
                    (0,
                    Ht.vl)(n.search).short ? s.push(`/welcome/${e.learningLanguageId}?short=1`) : (Re.Z.start("trial_user_creation", {
                        startTime: i
                    }),
                    this.props.dispatch((0,
                    W.Kb)(e.learningLanguageId))))
                }
            }
            componentDidMount() {
                (0,
                d.track)("course_picker_load", {
                    ui_language: Oa.h9,
                    via: "onboarding"
                })
            }
            render() {
                const {availableCourses: e} = this.props
                  , {isNavigating: t, isSelectingFromLanguage: a, selectedLearningLanguage: n} = this.state;
                return s.createElement(Os, {
                    availableCourses: e,
                    isNavigating: t,
                    isSelectingFromLanguage: a,
                    onFromLanguageClick: this.onFromLanguageClick,
                    onSelectCourse: this.onSelectCourse,
                    selectedLearningLanguage: n,
                    uiLanguageId: Oa.h9
                })
            }
        }
        const xs = (0,
        Cs.$j)()(Ns)
          , Ms = () => {
            var e;
            const t = (0,
            L.k6)()
              , a = (0,
            L.TH)()
              , n = (0,
            c.Fx)(O.Mb)
              , r = null !== (e = (0,
            Zt.lQ)($t.t, "")) && void 0 !== e ? e : []
              , i = s.useMemo(( () => (0,
            ws.j7)(r, n)), [r, n]);
            s.useEffect(( () => {
                (0,
                d.track)("screen_load", {
                    screen: "course_picker"
                })
            }
            ), []);
            const o = (0,
            Ga.Z)();
            return s.createElement("div", null, s.createElement("div", {
                className: "_2ez3E"
            }, s.createElement(Dt.Z, {
                content: (0,
                X.H8)(1100)
            }), s.createElement(Rt.ql, null, s.createElement("title", null, `${(0,
            X.H8)(15785)} - ${(0,
            X.H8)(23227)}`), s.createElement("body", {
                className: "_3nMY4"
            })), s.createElement(ns, {
                animateTopbar: !1,
                hideTopbar: !1,
                isGetStartedVisible: !0,
                isTopbarScrolled: o,
                onGetStartedMouseEnter: () => {}
                ,
                onGetStartedMouseLeave: () => {}
                ,
                onLogInClick: () => {}
                ,
                onRegisterClick: () => {}
            }), s.createElement("div", {
                className: "_6FUIZ _3txgr"
            }, s.createElement("div", {
                className: "_3lUx6"
            }, s.createElement(xs, {
                availableCourses: i,
                history: t,
                location: a,
                trackingScreen: "course_picker"
            })))))
        }
          , Fs = () => {
            const e = (0,
            c.tX)()
              , t = (0,
            L.k6)()
              , a = (0,
            L.TH)()
              , r = (0,
            c.Fx)(O.Mb)
              , i = (0,
            z.Pc)();
            s.useEffect(( () => {
                const e = (0,
                Ht.vl)(a.search);
                if ("/referred" === a.pathname)
                    if (i) {
                        const a = e.inviter_id;
                        a ? t.replace(`/u/${a}?via=referral`) : t.replace(P.B6)
                    } else {
                        (0,
                        d.track)("referral click", {});
                        const t = e.user_invite;
                        t && (async () => {
                            await K.xr.trackSplashLoad(t),
                            (0,
                            l.LS)(l.Qt.InviteCode, t)
                        }
                        )()
                    }
                else
                    i && ((0,
                    d.trackRedirection)(window.location.href, "/welcome", "soft"),
                    t.replace({
                        pathname: "/welcome",
                        search: a.search
                    }))
            }
            ), [i]);
            const o = (0,
            n.bS)("/register/:languageId")
              , u = !i && null !== o;
            return s.useEffect(( () => {
                if (u) {
                    const {params: {languageId: a}} = o;
                    (0,
                    Oa.jO)(a) && (0,
                    ws.Gh)(r, a, Oa.h9) ? e((0,
                    W.Kb)(a)) : t.replace("/")
                }
            }
            ), [u]),
            i ? null : u ? s.createElement(Ts.Z, {
                type: "screen-white"
            }) : s.createElement(Ms, null)
        }
        ;
        var Us = a(46403);
        const Hs = e => "string" == typeof e ? e : [e.pathname, e.search, e.hash].join("")
          , Gs = ({to: e}) => {
            const t = (0,
            L.TH)()
              , a = (0,
            L.UO)();
            return s.useEffect(( () => {
                (0,
                d.trackRedirection)(Hs(t), Hs((0,
                Us.i3)(e, t.pathname)), "soft")
            }
            ), []),
            s.createElement(n.Fg, {
                replace: !0,
                to: "string" == typeof e ? (0,
                Us.Gn)(e, a) : e
            })
        }
          , Vs = (...e) => e
          , zs = ({children: e}) => {
            const t = (0,
            L.TH)()
              , a = (0,
            L.UO)();
            return (0,
            z.Pc)() ? s.createElement(Gs, {
                to: {
                    pathname: (n = ["/enroll", a.learningLanguageId, a.fromLanguageId, a.slug],
                    n.reduceRight(( (e, t) => t ? e ? `${t}/${e}` : t : ""), "")),
                    search: t.search
                }
            }) : s.createElement(s.Fragment, null, e);
            var n
        }
          , Bs = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(5931), a.e(2209), a.e(7204), a.e(5314), a.e(5410), a.e(4265), a.e(938), a.e(7495), a.e(973), a.e(4048), a.e(5644), a.e(6056), a.e(8238), a.e(5747), a.e(1282), a.e(9122)]).then(a.bind(a, 82264))))
          , js = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(2209), a.e(7581), a.e(5314), a.e(5410), a.e(5148), a.e(4249), a.e(12), a.e(4048), a.e(6628), a.e(2980), a.e(2039), a.e(5644), a.e(7981), a.e(9031), a.e(2100), a.e(8238), a.e(7208), a.e(7507)]).then(a.bind(a, 4293))))
          , $s = (0,
        Qe.ZP)(( () => a.e(1436).then(a.bind(a, 61436))))
          , Zs = (0,
        Qe.ZP)(( () => a.e(1032).then(a.bind(a, 51032))))
          , Ws = (0,
        Qe.ZP)(( () => a.e(7341).then(a.bind(a, 37341))))
          , qs = (0,
        Qe.ZP)(( () => a.e(8319).then(a.bind(a, 28319))))
          , Qs = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(2209), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(6628), a.e(8704), a.e(2980), a.e(8956), a.e(4226)]).then(a.bind(a, 80306))))
          , Ks = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(2209), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(6628), a.e(8704), a.e(2980), a.e(8956), a.e(2498)]).then(a.bind(a, 98968))))
          , Ys = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(8704), a.e(8956), a.e(7424)]).then(a.bind(a, 2072))))
          , Js = (0,
        Qe.ZP)(( () => Promise.all([a.e(7581), a.e(7198), a.e(7660)]).then(a.bind(a, 90587))))
          , Xs = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(4048), a.e(5739)]).then(a.bind(a, 97457))))
          , en = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(2209), a.e(7581), a.e(5314), a.e(5410), a.e(5148), a.e(4249), a.e(12), a.e(4048), a.e(6628), a.e(2980), a.e(2039), a.e(5644), a.e(7981), a.e(9031), a.e(2100), a.e(8238), a.e(7208), a.e(7507)]).then(a.bind(a, 941))))
          , tn = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(2209), a.e(7581), a.e(5314), a.e(5410), a.e(5148), a.e(407), a.e(7493), a.e(4249), a.e(12), a.e(4048), a.e(6628), a.e(2980), a.e(2039), a.e(5644), a.e(7981), a.e(9031), a.e(2100), a.e(8238), a.e(7208), a.e(3860), a.e(1012), a.e(8184), a.e(5993)]).then(a.bind(a, 45993))))
          , an = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(2209), a.e(7581), a.e(5314), a.e(5410), a.e(5148), a.e(4249), a.e(12), a.e(4048), a.e(6628), a.e(2980), a.e(2039), a.e(5644), a.e(7981), a.e(9031), a.e(2100), a.e(8238), a.e(7208), a.e(7507)]).then(a.bind(a, 65637))))
          , sn = (0,
        Qe.ZP)(( () => a.e(9199).then(a.bind(a, 69199))))
          , nn = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(2209), a.e(7581), a.e(5314), a.e(5410), a.e(5148), a.e(4249), a.e(12), a.e(4048), a.e(6628), a.e(2980), a.e(2039), a.e(5644), a.e(7981), a.e(9031), a.e(2100), a.e(8238), a.e(7208), a.e(7507)]).then(a.bind(a, 50565))))
          , rn = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(8704), a.e(8956), a.e(7220)]).then(a.bind(a, 51057))))
          , on = (0,
        Qe.ZP)(( () => a.e(6150).then(a.bind(a, 47370))))
          , ln = (0,
        Qe.ZP)(( () => a.e(9665).then(a.bind(a, 11233))))
          , cn = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(8704), a.e(8956), a.e(1714)]).then(a.bind(a, 73413))))
          , dn = (0,
        Qe.ZP)(( () => Promise.all([a.e(4265), a.e(4370)]).then(a.bind(a, 32456))))
          , un = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(973), a.e(8704), a.e(8914)]).then(a.bind(a, 3307))))
          , gn = (0,
        Qe.ZP)(( () => Promise.all([a.e(5314), a.e(5410), a.e(9119), a.e(5179)]).then(a.bind(a, 72384))))
          , pn = (0,
        Qe.ZP)(( () => a.e(6292).then(a.bind(a, 66292))))
          , mn = (0,
        Qe.ZP)(( () => a.e(4130).then(a.bind(a, 65813))))
          , hn = (0,
        Qe.ZP)(( () => a.e(4103).then(a.bind(a, 84103))))
          , _n = (0,
        Qe.ZP)(( () => a.e(5702).then(a.bind(a, 85702))))
          , vn = (0,
        Qe.ZP)(( () => a.e(5150).then(a.bind(a, 65150))))
          , fn = (0,
        Qe.ZP)(( () => a.e(5919).then(a.bind(a, 19600))))
          , Sn = (0,
        Qe.ZP)(( () => a.e(6491).then(a.bind(a, 6491))))
          , yn = (0,
        Qe.ZP)(( () => a.e(7591).then(a.bind(a, 7706))))
          , En = (0,
        Qe.ZP)(( () => a.e(7476).then(a.bind(a, 97476))))
          , bn = (0,
        Qe.ZP)(( () => a.e(5417).then(a.bind(a, 65417))))
          , In = (0,
        Qe.ZP)(( () => Promise.all([a.e(4265), a.e(2833)]).then(a.bind(a, 84207))))
          , wn = (0,
        Qe.ZP)(( () => a.e(4555).then(a.bind(a, 46048))))
          , kn = (0,
        Qe.ZP)(( () => a.e(3012).then(a.bind(a, 79873))))
          , Tn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6632), a.e(8354)]).then(a.bind(a, 67188))))
          , Cn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6632), a.e(2125)]).then(a.bind(a, 46397))))
          , Rn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6632), a.e(4243), a.e(2120)]).then(a.bind(a, 43170))))
          , Ln = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(5655), a.e(4764)]).then(a.bind(a, 25194))))
          , Pn = (0,
        Qe.ZP)(( () => a.e(4819).then(a.bind(a, 77696))))
          , An = (0,
        Qe.ZP)(( () => a.e(7182).then(a.bind(a, 97182))))
          , Dn = (0,
        Qe.ZP)(( () => a.e(4001).then(a.bind(a, 4001))))
          , On = (0,
        Qe.ZP)(( () => a.e(9163).then(a.bind(a, 89163))))
          , Nn = (0,
        Qe.ZP)(( () => a.e(8628).then(a.bind(a, 28628))))
          , xn = (0,
        Qe.ZP)(( () => a.e(1855).then(a.bind(a, 61855))))
          , Mn = (0,
        Qe.ZP)(( () => a.e(7957).then(a.bind(a, 97957))))
          , Fn = (0,
        Qe.ZP)(( () => a.e(944).then(a.bind(a, 40944))))
          , Un = (0,
        Qe.ZP)(( () => a.e(1328).then(a.bind(a, 11328))))
          , Hn = (0,
        Qe.ZP)(( () => a.e(6019).then(a.bind(a, 36019))))
          , Gn = (0,
        Qe.ZP)(( () => a.e(2023).then(a.bind(a, 82023))))
          , Vn = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(7581), a.e(2988), a.e(4249), a.e(973), a.e(8704), a.e(6056), a.e(7926), a.e(9279)]).then(a.bind(a, 5411))))
          , zn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6056), a.e(3014)]).then(a.bind(a, 91380))))
          , Bn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6056), a.e(6722)]).then(a.bind(a, 97555))))
          , jn = (0,
        Qe.ZP)(( () => a.e(5713).then(a.bind(a, 79393))))
          , $n = (0,
        Qe.ZP)(( () => a.e(6122).then(a.bind(a, 5793))))
          , Zn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6056), a.e(3781)]).then(a.bind(a, 85106))))
          , Wn = (0,
        Qe.ZP)(( () => a.e(2016).then(a.bind(a, 91277))))
          , qn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6056), a.e(2706)]).then(a.bind(a, 16848))))
          , Qn = (0,
        Qe.ZP)(( () => Promise.all([a.e(6056), a.e(7174)]).then(a.bind(a, 15390))))
          , Kn = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(7581), a.e(9712), a.e(4048), a.e(6056), a.e(1282), a.e(411)]).then(a.bind(a, 19999))))
          , Yn = (0,
        Qe.ZP)(( () => a.e(7606).then(a.bind(a, 67606))))
          , Jn = (0,
        Qe.ZP)(( () => Promise.all([a.e(2209), a.e(7581), a.e(5314), a.e(5410), a.e(407), a.e(7493), a.e(4249), a.e(6628), a.e(2039), a.e(5644), a.e(7981), a.e(9031), a.e(2100), a.e(3860), a.e(1012), a.e(8184), a.e(7758)]).then(a.bind(a, 60202))))
          , Xn = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(8704), a.e(8956), a.e(5956)]).then(a.bind(a, 96613))))
          , er = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(2209), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(6628), a.e(8704), a.e(2980), a.e(8956), a.e(6504)]).then(a.bind(a, 76400))))
          , tr = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(8704), a.e(8956), a.e(9062)]).then(a.bind(a, 44545))))
          , ar = (0,
        Qe.ZP)(( () => a.e(4860).then(a.bind(a, 73766))))
          , sr = (0,
        Qe.ZP)(( () => a.e(2602).then(a.bind(a, 14541))))
          , nr = (0,
        Qe.ZP)(( () => a.e(7731).then(a.bind(a, 51006))))
          , rr = (0,
        Qe.ZP)(( () => a.e(983).then(a.bind(a, 36993))))
          , ir = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(4048), a.e(5358)]).then(a.bind(a, 38647))))
          , or = (0,
        Qe.ZP)(( () => a.e(940).then(a.bind(a, 90940))))
          , lr = (0,
        Qe.ZP)(( () => a.e(8946).then(a.bind(a, 80993))))
          , cr = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(7204), a.e(4249), a.e(973), a.e(8704), a.e(6056), a.e(7926), a.e(871)]).then(a.bind(a, 90874))))
          , dr = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(2209), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(6628), a.e(8704), a.e(2980), a.e(8956), a.e(8833)]).then(a.bind(a, 96286))))
          , ur = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(2209), a.e(7204), a.e(4249), a.e(12), a.e(973), a.e(6628), a.e(8704), a.e(2980), a.e(8956), a.e(8833)]).then(a.bind(a, 10443))))
          , gr = (0,
        Qe.ZP)(( () => a.e(8332).then(a.bind(a, 71471))))
          , pr = (0,
        Qe.ZP)(( () => a.e(4193).then(a.bind(a, 4193))))
          , mr = (0,
        Qe.ZP)(( () => a.e(5506).then(a.bind(a, 75506))))
          , hr = (0,
        Qe.ZP)(( () => a.e(414).then(a.bind(a, 44234))))
          , _r = e => {
            const t = ({children: t}) => s.createElement(lr, {
                feature: e
            }, t);
            return t.displayName = `UnavailableInZombieMode feature="${e}"`,
            t
        }
          , vr = e => e.flatMap((e => {
            if (void 0 === e.subroutes)
                return e;
            const {components: t=[], path: a="", props: s={}} = e;
            return vr(e.subroutes).map(( ({components: e=[], path: n="", props: r={}}) => ({
                components: [...t, ...e],
                path: `${a}${n}`,
                props: {
                    ...s,
                    ...r
                }
            })))
        }
        ))
          , fr = !0
          , Sr = !0
          , yr = {
            noMobileTabbar: fr,
            noMobileTopbar: Sr
        }
          , Er = {
            noDesktopTopbar: !0,
            noMobileTabbar: fr,
            noMobileTopbar: Sr
        }
          , br = {
            noContainer: !0,
            noDesktopTopbar: !0,
            noMobileTabbar: fr,
            noMobileTopbar: Sr
        }
          , Ir = ({appProps: e, components: t, path: a}) => {
            const r = s.useMemo(( () => {
                const e = [Bs, ...t].filter(Qe.NL).filter((e => !e.hasLoaded()));
                return 0 === e.length ? void 0 : Promise.all(e.map((e => e.preload())))
            }
            ), [t])
              , i = (0,
            Ct.Z)([], (async () => (await r,
            t)), [r])
              , o = void 0 === r ? t : i
              , l = ( () => {
                if (t === o)
                    return t;
                const e = t.findIndex(( (e, t) => e !== o[t]));
                return 0 !== o.length && -1 === e ? t : t.slice(0, e)
            }
            )()
              , c = (0,
            L.k6)()
              , d = (0,
            L.TH)()
              , u = (0,
            n.bS)(a);
            return s.createElement(Bs, {
                ...e
            }, l.reduceRight(( (e, t) => s.createElement(t, {
                history: c,
                location: d,
                match: u
            }, e)), null))
        }
          , wr = (0,
        Qe.ZP)(( () => Promise.all([a.e(7053), a.e(4265), a.e(5183), a.e(2712)]).then(a.bind(a, 58345))))
          , kr = "/business/admin"
          , Tr = e => `${kr}/${e}`
          , Cr = Tr("learners")
          , Rr = [s.createElement(n.AW, {
            element: s.createElement(Gs, {
                to: Cr
            }),
            key: "route",
            path: kr
        }), s.createElement(n.AW, {
            element: s.createElement(wr, null),
            key: "route",
            path: `${kr}/:page`
        })]
          , Lr = ({target: e}) => (s.useLayoutEffect(( () => {
            (0,
            P.Zs)(e, !0)
        }
        ), []),
        null)
          , Pr = [s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: P.Oy
            }),
            key: "route",
            path: "/404"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: null !== P.Ql && void 0 !== P.Ql ? P.Ql : "https://blog.duolingo.com"
            }),
            key: "route",
            path: "/blog"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://careers.duolingo.com"
            }),
            key: "route",
            path: "/careers"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://design.duolingo.com/"
            }),
            key: "route",
            path: "/design"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://research.duolingo.com"
            }),
            key: "route",
            path: "/effectiveness-study"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://events.duolingo.com?source=main"
            }),
            key: "route",
            path: "/events"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://careers.duolingo.com"
            }),
            key: "route",
            path: "/jobs"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://press.duolingo.com"
            }),
            key: "route",
            path: "/press"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://research.duolingo.com"
            }),
            key: "route",
            path: "/research"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://schools.duolingo.com?source=main"
            }),
            key: "route",
            path: "/school"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://schools.duolingo.com?source=main"
            }),
            key: "route",
            path: "/schools"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://store.duolingo.com"
            }),
            key: "route",
            path: "/store"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: "https://careers.duolingo.com/#teams"
            }),
            key: "route",
            path: "/team"
        }), s.createElement(n.AW, {
            element: s.createElement(Lr, {
                target: `https://abc.duolingo.com${window.location.search}`
            }),
            key: "route",
            path: "/abc"
        })]
          , Ar = (0,
        Qe.ZP)(( () => Promise.all([a.e(4243), a.e(1002)]).then(a.bind(a, 59668))))
          , Dr = (0,
        Qe.ZP)(( () => Promise.all([a.e(5655), a.e(132)]).then(a.bind(a, 9834))))
          , Or = (0,
        Qe.ZP)(( () => a.e(1144).then(a.bind(a, 24328))))
          , Nr = (0,
        Qe.ZP)(( () => a.e(4125).then(a.bind(a, 4258))))
          , xr = (0,
        Qe.ZP)(( () => a.e(8707).then(a.bind(a, 60207))))
          , Mr = (0,
        Qe.ZP)(( () => a.e(6734).then(a.bind(a, 89945))))
          , Fr = (0,
        Qe.ZP)(( () => a.e(1190).then(a.bind(a, 58504))))
          , Ur = (0,
        Qe.ZP)(( () => Promise.all([a.e(5931), a.e(2396)]).then(a.bind(a, 53755))))
          , Hr = (0,
        Qe.ZP)(( () => a.e(7054).then(a.bind(a, 1668))))
          , Gr = (0,
        Qe.ZP)(( () => Promise.all([a.e(961), a.e(2988), a.e(639)]).then(a.bind(a, 25588))))
          , Vr = (0,
        Qe.ZP)(( () => Promise.all([a.e(961), a.e(8222)]).then(a.bind(a, 97477))))
          , zr = (0,
        Qe.ZP)(( () => a.e(6679).then(a.bind(a, 59705))))
          , Br = [s.createElement(n.AW, {
            element: s.createElement(Mr, null),
            key: "route",
            path: "/2022-campaigns"
        }), s.createElement(n.AW, {
            element: s.createElement(Or, null),
            key: "route",
            path: "/apk-download"
        }), s.createElement(n.AW, {
            element: s.createElement(Dr, null),
            key: "route",
            path: "/business/checkout"
        }), s.createElement(n.AW, {
            element: s.createElement(Ar, null),
            key: "route",
            path: "/business"
        }), s.createElement(n.AW, {
            element: s.createElement(Nr, null),
            key: "route",
            path: "/duoversary"
        }), s.createElement(n.AW, {
            element: s.createElement(xr, null),
            key: "route",
            path: "/efficacy/*"
        }), s.createElement(n.AW, {
            element: s.createElement(Hr, null),
            key: "route",
            path: "/share/sm"
        }), s.createElement(n.AW, {
            element: s.createElement(Hr, null),
            key: "route",
            path: "/share-direct/sm"
        }), s.createElement(n.AW, {
            element: s.createElement(Fr, null),
            key: "route",
            path: "/valyriansteel"
        }), s.createElement(n.AW, {
            element: s.createElement(Ur, {
                purchaseFlowType: "super"
            }),
            key: "route",
            path: "/ios-super-purchase-flow"
        }), s.createElement(n.AW, {
            element: s.createElement(Ur, {
                purchaseFlowType: "max"
            }),
            key: "route",
            path: "/ios-max-purchase-flow"
        }), s.createElement(n.AW, {
            element: s.createElement(Gr, null),
            key: "route",
            path: "/weekly-report"
        }), s.createElement(n.AW, {
            element: s.createElement(Vr, null),
            key: "route",
            path: "/year-in-review/2023"
        }), s.createElement(n.AW, {
            element: s.createElement(zr, null),
            key: "route",
            path: "/campaigns"
        })]
          , jr = () => {
            var e;
            return null !== (e = (0,
            l.rV)(l.Qt.LastAppCrashes, {
                useSessionStorage: !0
            })) && void 0 !== e ? e : []
        }
          , $r = (0,
        Qe.ZP)(( () => Promise.all([a.e(4265), a.e(7803)]).then(a.bind(a, 34251))))
          , Zr = (0,
        Qe.ZP)(( () => a.e(6557).then(a.bind(a, 36557))))
          , Wr = (0,
        Qe.ZP)(( () => a.e(6710).then(a.bind(a, 56710))))
          , qr = (0,
        Qe.ZP)(( () => a.e(7017).then(a.bind(a, 57017))))
          , Qr = Vs("/", "/log-in", "/register_user")
          , Kr = () => {
            const e = (0,
            L.TH)()
              , t = ( () => {
                const e = (0,
                c.Fx)(O.iH)
                  , t = (0,
                c.Fx)(O.Lm)
                  , a = (0,
                L.TH)()
                  , [n,r] = s.useState(!1)
                  , [i,l] = s.useState();
                if (i !== a) {
                    if (i && (0,
                    o.si)(i, a),
                    window.performance.now() / V.zq > 72)
                        return console.log("Window too old; refreshing"),
                        void (0,
                        P.Zs)();
                    l(a)
                }
                if (!n) {
                    const e = (0,
                    P.o_)(a);
                    if (e.pathname !== a.pathname || e.search !== a.search)
                        return e;
                    r(!0)
                }
                if (t && !e && !(0,
                P.v$)(a.pathname))
                    return console.log(`Redirecting "${a.pathname}" to "/welcome" to select learning language`),
                    `/welcome?${Tt.lE}=coursePicker`
            }
            )()
              , a = ( () => {
                const e = (0,
                c.Fx)((e => e.ui.shouldUnmount));
                return s.useEffect(( () => {
                    if (!e)
                        return;
                    ( () => {
                        const e = jr();
                        e.push(Date.now()),
                        (0,
                        l.LS)(l.Qt.LastAppCrashes, e.slice(-3), {
                            useSessionStorage: !0
                        })
                    }
                    )();
                    const t = async e => {
                        await (0,
                        d.trackRedirection)(window.location.href, e, "hard", !1),
                        await (0,
                        P.Zs)(e)
                    }
                    ;
                    if (( () => {
                        const e = Date.now() - 6e4;
                        return 3 === jr().filter((t => t > e)).length
                    }
                    )())
                        return (0,
                        l.cl)(l.Qt.LastAppCrashes, {
                            useSessionStorage: !0
                        }),
                        void t("/errors/500.html");
                    if ("visible" === document.visibilityState)
                        return void t((0,
                        P.cd)());
                    const a = () => {
                        "visible" === document.visibilityState && t((0,
                        P.cd)())
                    }
                    ;
                    return document.addEventListener("visibilitychange", a),
                    () => document.removeEventListener("visibilitychange", a)
                }
                ), [e]),
                e
            }
            )()
              , i = (0,
            z.Pc)()
              , u = s.useMemo(( () => (e => vr((e => [...e ? [{
                components: [ ({location: e}) => s.createElement(Gs, {
                    to: {
                        pathname: P.B6,
                        search: e.search
                    }
                })],
                path: "/"
            }] : [], {
                props: {
                    userMustBeLoggedIn: !0
                },
                subroutes: [{
                    components: [Ys],
                    subroutes: [{
                        components: [Js],
                        path: P.B6
                    }, {
                        components: [_r("shop"), Xs],
                        path: "/shop"
                    }]
                }, {
                    components: [tr],
                    path: "/alphabets/:languageAbbrev/tips",
                    props: yr
                }, {
                    components: [er],
                    path: "/alphabets/:languageAbbrev/tips/:groupIndex/:tipIndex",
                    props: yr
                }, {
                    components: [er],
                    props: Er,
                    subroutes: [{
                        path: "/alphabets/:languageAbbrev/:alphabetSessionId/group/:groupId/tips"
                    }, {
                        path: "/alphabets/:languageAbbrev/:alphabetSessionId/tips"
                    }]
                }, {
                    components: [_r("alphabet-lessons"), Xn],
                    path: "/characters"
                }, {
                    components: [_r("mistakes"), cn, on],
                    path: "/practice-hub/mistakes"
                }, {
                    components: [_r("practice-hub"), cn, ln],
                    path: "/practice-hub/stories"
                }, {
                    components: [_r("practice-hub"), cn, dn],
                    path: P.$R
                }, {
                    components: [an, en],
                    props: Er,
                    subroutes: [{
                        path: "/alphabets/:languageAbbrev/:alphabetSessionId/group/:groupId"
                    }, {
                        path: "/alphabets/:languageAbbrev/:alphabetSessionId"
                    }, {
                        path: "/onboarding/placement/:pathSectionNumber"
                    }, {
                        path: "/practice"
                    }, {
                        path: "/preview/:skillId/:lesson"
                    }]
                }, {
                    components: [nn, an, en],
                    props: Er,
                    subroutes: [{
                        path: "/practice-hub/:practiceType"
                    }, {
                        path: "/practice-hub/:practiceType/practice"
                    }]
                }, {
                    components: [js, tn],
                    props: Er,
                    subroutes: [{
                        path: "/lesson"
                    }, {
                        path: "/lesson/section/:pathSectionNumber/test"
                    }, {
                        path: "/lesson/unit/:pathUnitNumber/level/:pathLevelNumber"
                    }, {
                        path: "/lesson/unit/:pathUnitNumber/legendary/:pathLevelNumber"
                    }, {
                        path: "/lesson/unit/:pathUnitNumber/test"
                    }]
                }, {
                    components: [Qs],
                    path: "/guidebook/:languageAbbrev/:unitNumber",
                    props: yr
                }, {
                    components: [ur],
                    path: "/sections/details/:pathSectionNumber",
                    props: yr
                }, {
                    components: [Ks],
                    path: "/guidebook/preview/:fromLanguageAbbrev/:learningLanguageAbbrev/:unitNumber",
                    props: yr
                }, {
                    components: [nn, en],
                    path: "/mistakes-review",
                    props: Er
                }, {
                    components: [_r("practice-hub"), rn],
                    path: "/practice-hub"
                }, {
                    components: [or, Kn],
                    path: "/settings/*",
                    props: yr
                }, {
                    components: [Sn],
                    path: "/admin_tools"
                }, {
                    components: [_r("profiles"), Zn],
                    path: "/user-search",
                    props: yr
                }, {
                    components: [Wn],
                    path: "/friend-updates"
                }, {
                    components: [qn],
                    path: "/friend-updates/:kudosFilter"
                }, {
                    components: [gn],
                    path: "/welcome/:linkCode?",
                    props: br
                }, {
                    components: [_r("leaderboards"), un],
                    path: "/leaderboard",
                    props: {
                        noMobileTopbar: Sr
                    }
                }, {
                    components: [_r("quests"), cr],
                    path: "/quests",
                    props: {
                        noMobileTopbar: Sr
                    }
                }, {
                    components: [dr],
                    path: "/sections"
                }, {
                    components: [mr],
                    path: "/plushie/register/:code",
                    props: Er
                }]
            }, {
                components: [pr],
                path: "/plushie",
                props: Er
            }, {
                components: [pn],
                subroutes: [{
                    components: [mn],
                    path: "/approach"
                }, {
                    components: [hn],
                    path: "/contact"
                }, {
                    components: [_n],
                    path: "/dnsspi"
                }, {
                    components: [vn],
                    path: "/imprint"
                }, {
                    components: [fn],
                    path: "/info"
                }]
            }, {
                components: [$s],
                path: "/login-page",
                props: br
            }, {
                components: [Mn],
                path: "/abc-privacy"
            }, {
                components: [_r("courses"), En],
                path: "/courses/:fromLanguageId?"
            }, {
                components: [Ws],
                path: "/forgot_password"
            }, {
                components: [Fn],
                path: "/remove/:token/:email"
            }, {
                components: [Un],
                path: "/confirm/:tokenType/:token",
                props: br
            }, {
                components: [Hn],
                path: "/confirm/error",
                props: br
            }, {
                components: [bn],
                path: "/guidelines"
            }, {
                components: [In],
                path: "/help/*",
                props: br
            }, {
                components: [yn],
                path: "/join-beta"
            }, {
                components: [wn],
                path: "/mobile"
            }, {
                components: [kn],
                path: "/participation"
            }, ...P.a9.map((e => ({
                components: [Tn],
                path: e,
                props: br
            }))), {
                components: [Ln],
                path: "/gift/checkout",
                props: br
            }, {
                components: [Rn],
                path: "/gift",
                props: br
            }, {
                components: [Cn],
                path: "/redeem",
                props: br
            }, {
                components: [qs],
                path: "/reset_password/:client_abbrev?"
            }, {
                components: [Pn],
                path: "/attribution",
                props: {
                    noMobileTabbar: fr
                }
            }, {
                components: [On],
                path: "/privacy"
            }, {
                components: [Nn],
                path: "/terms"
            }, {
                components: [An],
                path: "/auto-renewal-agreement"
            }, {
                components: [Dn],
                path: "/cross-border-data-transfer-agreement"
            }, {
                components: [xn],
                path: "/cookies"
            }, {
                components: [Gn],
                path: "/verify/:token"
            }, {
                components: [Yn],
                path: "/stories"
            }, {
                components: [sn, Jn],
                path: "/stories/:storyId",
                props: Er
            }, {
                components: [gr],
                path: "student-plan",
                props: br
            }, {
                components: [_r("profiles"), zn],
                path: "/profile/:username",
                subroutes: [{
                    path: "/followers"
                }, {
                    path: "/following"
                }]
            }, {
                components: [_r("profiles"), jn],
                path: "/profile/:username/achievements"
            }, {
                components: [_r("profiles"), Qn],
                path: "/profile/:username/friends-in-common"
            }, {
                components: [_r("profiles"), Bn],
                path: "/friend-suggestions"
            }, {
                components: [$n],
                path: "/profile/:username/courses"
            }, {
                components: [_r("courses"), Zs],
                path: "/enroll/:learningLanguageId/:fromLanguageId?/:slug?"
            }, {
                components: [ar],
                path: "/family",
                props: br
            }, {
                components: [sr],
                props: br,
                subroutes: [{
                    path: "/family-plan"
                }, {
                    path: "/share-family-plan"
                }, {
                    path: "/family-plan-user-invite"
                }]
            }, {
                components: [nr],
                props: br,
                subroutes: [{
                    path: "/classroom"
                }, {
                    path: "/classroom/:classroomCode"
                }]
            }, {
                components: [rr],
                path: "/bango/:reseller/:token",
                props: br
            }, {
                components: [ir],
                path: "/purchase",
                props: br
            }, {
                props: {
                    noMobileTopbar: e
                },
                subroutes: [{
                    components: [_r("profiles"), Vn],
                    path: "/profile/:username"
                }, {
                    components: [_r("profiles"), Vn],
                    path: "/u/:userId"
                }]
            }, {
                components: [hr],
                path: "/add-scores-to-linkedin",
                props: br
            }])(e)).map(( ({path: e, props: t, components: a=[]}) => {
                if (void 0 === e)
                    throw Error("App route path cannot be undefined");
                return s.createElement(n.AW, {
                    element: s.createElement(Ir, {
                        appProps: null != t ? t : {},
                        components: a,
                        path: e
                    }),
                    key: "route",
                    path: e
                })
            }
            )))(i)), [i])
              , m = s.useMemo(( () => (e => p.ZP.keys(Oa.Jl).map((e => `/${(0,
            Oa.D3)(e)}`)).map((t => s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: (0,
                    P.cd)(e)
                }),
                key: "route",
                path: t
            }))))(i)), [i]);
            if (t)
                return s.createElement(Gs, {
                    to: t
                });
            if (a)
                return null;
            const h = (0,
            P.cd)(i);
            return s.createElement(g, null, s.createElement(n.Z5, null, s.createElement(n.AW, {
                element: s.createElement(kt, null, s.createElement(s.Suspense, {
                    fallback: null
                }, s.createElement(n.j3, null)))
            }, s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/"
                }),
                path: "/comment"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/"
                }),
                path: "/discussion"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/"
                }),
                path: "/topic"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/profile/Luis"
                }),
                path: "/Luis"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/join-beta"
                }),
                path: "/beta-app"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/c"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/mobile"
                }),
                path: "/download"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/words"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/courses"
                }),
                path: "/course_switcher"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/course/en"
                }),
                path: "/english"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/course/fr"
                }),
                path: "/french"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/home"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/course/it"
                }),
                path: "/italian"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/classroom"
                }),
                path: "/join"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/abc"
                }),
                path: "/kids"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/labs"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/2022-campaigns"
                }),
                path: "/learningseason"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/2022-campaigns"
                }),
                path: "/learning-season"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/licensed_music/*"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/log-in"
                }),
                path: "/login"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/"
                }),
                path: "/max/*"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/courses"
                }),
                path: "/mm"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/mm-early-access"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/chess-launch"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: h
                }),
                path: "/navigator/*"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/2022-campaigns"
                }),
                path: "/nocuesta"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/classroom/:classroomCode"
                }),
                path: "/o/:classroomCode"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/classroom"
                }),
                path: "/o"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: P.wl
                }),
                path: "/plus"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/settings/super"
                }),
                path: "/plus_view"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: {
                        pathname: "/redeem",
                        search: e.search
                    }
                }),
                path: "/reddem"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: {
                        pathname: "/redeem",
                        search: e.search
                    }
                }),
                path: "/redem"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: {
                        pathname: "/redeem",
                        search: e.search
                    }
                }),
                path: "/reedeem"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: {
                        pathname: "/redeem",
                        search: e.search
                    }
                }),
                path: "/reedem"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/shop"
                }),
                path: "/show_store"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/register"
                }),
                path: "/sign-up"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/register"
                }),
                path: "/signup"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/course/es"
                }),
                path: "/spanish"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/register"
                }),
                path: "/start"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/2022-campaigns"
                }),
                path: "/summer2020"
            }), s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: "/help"
                }),
                path: "/troubleshooting"
            }), i ? Qr.filter((e => "/" !== e)).map((t => s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: {
                        pathname: P.B6,
                        search: e.search
                    }
                }),
                key: "route",
                path: t
            }))) : s.createElement(n.AW, {
                element: s.createElement(Gs, {
                    to: {
                        pathname: "/",
                        search: e.search
                    }
                }),
                path: P.B6
            }), ...Pr, ...m, ...Br, ...Rr, (0,
            w.Au)() ? s.createElement(n.AW, {
                element: s.createElement(n.Fg, {
                    to: "/debug/components/controls/LottieAnimationLazy"
                }),
                path: "/lottie"
            }) : null, (0,
            w.Au)() ? s.createElement(n.AW, {
                element: s.createElement($r, null),
                path: "/archSample"
            }) : null, (0,
            w.Au)() ? s.createElement(n.AW, {
                element: s.createElement(Zr, null),
                path: "/debug/*"
            }) : null, (e => e ? Vs("/p", "/feed") : Vs("/p", "/leaderboard", "/feed"))(i).map((e => s.createElement(n.AW, {
                element: s.createElement(Wr, null),
                key: "route",
                path: e
            }))), s.createElement(n.AW, {
                element: s.createElement(zs, null, s.createElement(ks, null)),
                path: "/course/:learningLanguageId/:fromLanguageId?/:slug?"
            }), s.createElement(n.AW, {
                element: s.createElement(qr, null),
                path: "/logout"
            }), s.createElement(n.AW, {
                element: s.createElement(Fs, null),
                path: "/referred"
            }), s.createElement(n.AW, {
                element: s.createElement(Fs, null),
                path: "/register/:languageId?"
            }), ...u, Qr.map((e => s.createElement(n.AW, {
                element: s.createElement(Is, null),
                key: "route",
                path: e
            }))), s.createElement(n.AW, {
                element: s.createElement(r.Z, null),
                path: "*"
            }))))
        }
    }
    ,
    83544: (e, t, a) => {
        "use strict";
        a.d(t, {
            t: () => n
        });
        var s = a(18867);
        const n = (0,
        a(18728).md)("courseList", ( () => s._s.courseList()))
    }
    ,
    3731: (e, t, a) => {
        "use strict";
        a.d(t, {
            O: () => l,
            H: () => o
        });
        var s = a(27378);
        const n = "_15v93".split(" ")
          , r = () => document.querySelector("#root")
          , i = () => ({
            x: window.scrollX,
            y: window.scrollY
        })
          , o = (e, t) => {
            s.useLayoutEffect(( () => {
                if (e) {
                    const e = l.lock();
                    return () => {
                        t || l.scrollTo(0, 0),
                        e.release()
                    }
                }
            }
            ), [e])
        }
          , l = new class {
            constructor() {
                this.locks = new Set,
                this.addEventListener = (e, t) => {
                    document.addEventListener("scroll", t),
                    r().addEventListener("scroll", t)
                }
                ,
                this.clampY = e => Math.min(Math.max(e, this.minY), this.maxY),
                this.lock = () => {
                    const e = {
                        release: () => {
                            this.locks.delete(e),
                            0 === this.locks.size && ( () => {
                                const e = r()
                                  , {scrollLeft: t, scrollTop: a} = e;
                                e.classList.remove(...n),
                                window.scrollTo(t, a)
                            }
                            )()
                        }
                    };
                    return this.locks.add(e),
                    1 === this.locks.size && ( () => {
                        const e = r()
                          , {x: t, y: a} = i();
                        e.classList.add(...n),
                        e.scrollLeft = t,
                        e.scrollTop = a,
                        window.scrollTo(0, 0)
                    }
                    )(),
                    e
                }
                ,
                this.removeEventListener = (e, t) => {
                    document.removeEventListener("scroll", t),
                    r().removeEventListener("scroll", t)
                }
                ,
                this.scrollTo = (e, t) => {
                    if (this.isLocked) {
                        const a = r();
                        a.scrollLeft = e,
                        a.scrollTop = t
                    } else
                        window.scrollTo(e, t)
                }
                ,
                this.scrollToY = e => {
                    this.scrollTo(this.x, e)
                }
                ,
                this.getCurrentOffset = () => {
                    if (this.isLocked) {
                        const e = r();
                        return {
                            x: e.scrollLeft,
                            y: e.scrollTop
                        }
                    }
                    return i()
                }
            }
            get isLocked() {
                return this.locks.size > 0
            }
            get isScrollable() {
                return this.scrollHeight > window.innerHeight
            }
            get maxY() {
                return this.scrollHeight - window.innerHeight
            }
            get minY() {
                return 0
            }
            get scrollHeight() {
                return this.isLocked ? r().scrollHeight : document.documentElement.scrollHeight
            }
            get x() {
                return this.getCurrentOffset().x
            }
            get y() {
                return this.getCurrentOffset().y
            }
        }
    }
    ,
    60106: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i
        });
        var s = a(80254);
        class n {
            constructor(e) {
                this.listeners = [],
                this.subscribe = e => (this.listeners.push(e),
                () => {
                    this.listeners = this.listeners.filter((t => t !== e))
                }
                ),
                this.get = () => this.value(),
                this.set = e => {
                    this.value = s.IH(e),
                    this.notifyListeners()
                }
                ,
                this.notifyListeners = () => {
                    this.listeners.forEach((e => e()))
                }
                ,
                this.value = s.IH(e)
            }
        }
        class r {
            constructor(e) {
                this.listeners = [],
                this.substate = e => {
                    var t;
                    return null !== (t = this.substates[e]) && void 0 !== t ? t : this.makeSubstate(e, ( () => {}
                    ))
                }
                ,
                this.subscribe = e => (this.listeners.push(e),
                () => {
                    this.listeners = this.listeners.filter((t => t !== e))
                }
                ),
                this.get = e => this.substate(e).get(),
                this.getAll = () => Object.fromEntries(Object.entries(this.substates).map(( ([e,t]) => [e, t.get()]))),
                this.set = (e, t) => {
                    this.substate(e).set(t)
                }
                ,
                this.makeSubstate = (e, t) => {
                    const a = new n(t);
                    return a.subscribe(this.notifyListeners),
                    this.substates[e] = a,
                    a
                }
                ,
                this.notifyListeners = () => {
                    this.listeners.forEach((e => e()))
                }
                ,
                this.substates = {};
                for (const [t,a] of Object.entries(e))
                    this.makeSubstate(t, ( () => a))
            }
        }
        r.fromSimplePersister = (e, t) => {
            var a;
            const s = new r(null !== (a = e.get()) && void 0 !== a ? a : t());
            return s.subscribe(( () => {
                e.set(( () => s.getAll()))
            }
            )),
            s
        }
        ;
        const i = r
    }
    ,
    40472: (e, t, a) => {
        "use strict";
        a.d(t, {
            M: () => p,
            y: () => i
        });
        const s = [["...", "…"]]
          , n = ["ca", "cs", "cy", "da", "de", "en", "eo", "es", "fi", "fr", "ga", "gd", "ht", "hu", "hv", "hw", "id", "it", "la", "mi", "nl-NL", "no-BO", "pl", "pt", "ro", "sv", "sw", "tl", "tr", "vi", "xx-ZB", "yu"]
          , r = (e, t) => {
            for (let a = 0; a < e.length; a++)
                if (e[a] !== t[a])
                    return a;
            return e.length
        }
          , i = e => n.includes(e)
          , o = [['[’\\"´‘`′ʻ́̀´]', "'"], ["¡", "!"], ["¿", "?"]];
        class l {
            constructor(e, t={}) {
                this.match = (e, t) => {
                    e = this.normalize(e);
                    const a = null != t ? t : this.originalTokens
                      , s = t ? t.map((e => this.normalize(e))) : this.tokens;
                    let n, r = 0;
                    return {
                        highlights: s.map(( (t, s) => {
                            const i = this.matchToken(t, e);
                            return i.index > 0 && (i.isComposing ? n = -1 : void 0 === n ? n = s : n > -1 && this.normalizeWithoutAccents(a[n]) !== this.normalizeWithoutAccents(a[s]) && (n = -1),
                            r++),
                            i
                        }
                        )),
                        match: null != n ? n : -1,
                        partialMatches: r
                    }
                }
                ,
                this.matchAlias = (e, t) => {
                    var a, s;
                    const n = null !== (s = null === (a = this.options.aliases) || void 0 === a ? void 0 : a.filter(( ([,t]) => t === e))) && void 0 !== s ? s : [];
                    let i;
                    for (const [e] of n) {
                        const a = r(e, t);
                        a > 0 && (!i || a > i.length) && (i = {
                            isComposing: a < e.length,
                            length: a
                        })
                    }
                    return i
                }
                ,
                this.matchToken = (e, t) => {
                    const a = {
                        index: 0,
                        isComposing: !1
                    };
                    for (let s = 0, n = 0; s < t.length; s++,
                    n++) {
                        if (t[s] === e[n]) {
                            a.index++;
                            continue
                        }
                        const r = this.matchAlias(e[n], t.slice(s));
                        if (!r || r.isComposing && r.length !== t.length - s)
                            return {
                                index: 0,
                                isComposing: !1
                            };
                        a.index++,
                        a.isComposing = r.isComposing,
                        s += r.length - 1
                    }
                    return a
                }
                ,
                this.normalize = e => (e = this.normalizeAccents(e),
                e = this.normalizeCase(e),
                this.normalizePatterns(e)),
                this.normalizeAccents = e => {
                    const {accentedCharacterMap: t} = this.options;
                    return t && (e = e.split("").map((e => {
                        var a;
                        return null !== (a = t[e]) && void 0 !== a ? a : e
                    }
                    )).join("")),
                    e
                }
                ,
                this.normalizeCase = e => {
                    const {ignoreCase: t} = this.options;
                    return t ? e.toLowerCase() : e
                }
                ,
                this.normalizePatterns = e => {
                    const {normalizationData: t} = this.options;
                    return null == t || t.forEach(( ([t,a]) => {
                        e = e.replace(new RegExp(t,"g"), a)
                    }
                    )),
                    e
                }
                ,
                this.normalizeWithoutAccents = e => (e = this.normalizeCase(e),
                this.normalizePatterns(e)),
                this.options = {
                    normalizationData: o,
                    ...t
                },
                this.originalTokens = e,
                this.tokens = e.map((e => this.normalize(e)))
            }
        }
        class c extends l {
            constructor(e, t={}) {
                var a;
                super(e, {
                    ...t,
                    aliases: [["ae", "æ"], ...null !== (a = t.aliases) && void 0 !== a ? a : s]
                })
            }
        }
        class d extends l {
            constructor(e, t={}) {
                var a;
                super(e, {
                    ...t,
                    aliases: null !== (a = t.aliases) && void 0 !== a ? a : s
                })
            }
        }
        class u extends l {
            constructor(e, t={}) {
                var a;
                super(e, {
                    ...t,
                    aliases: [["ae", "æ"], ["oe", "œ"], ...null !== (a = t.aliases) && void 0 !== a ? a : s]
                })
            }
        }
        class g extends l {
            constructor(e, t={}) {
                var a;
                super(e, {
                    ...t,
                    aliases: [["ss", "ß"], ...null !== (a = t.aliases) && void 0 !== a ? a : s]
                })
            }
        }
        const p = e => {
            switch (e) {
            case "da":
            case "no-BO":
                return (...e) => new c(...e);
            case "de":
                return (...e) => new g(...e);
            case "fr":
                return (...e) => new u(...e);
            default:
                return (...e) => new d(...e)
            }
        }
    }
    ,
    70220: (e, t, a) => {
        "use strict";
        a.d(t, {
            H: () => n,
            w: () => s
        });
        const s = e => t => {
            " " !== t.key && "Enter" !== t.key || (e(),
            t.preventDefault())
        }
          , n = matchMedia("(prefers-reduced-motion: reduce)").matches
    }
    ,
    84389: (e, t, a) => {
        "use strict";
        a.d(t, {
            $9: () => _,
            A9: () => d,
            ET: () => h,
            H2: () => c,
            Kv: () => u,
            Mw: () => g,
            an: () => p,
            vO: () => m
        });
        var s = a(18867)
          , n = a(95940)
          , r = a(795)
          , i = a(95941)
          , o = a(35160);
        const l = {
            champion: {
                displayString: 7018,
                getCompletedDescription: (e, t, a) => {
                    const s = e - 1;
                    if (0 === s)
                        return (0,
                        n.H8)(t ? 27195 : 15352, {
                            name: a
                        });
                    const r = (0,
                    n.H8)(i.Vq[s]);
                    return (0,
                    n.H8)(t ? 27196 : 5667, {
                        league: r,
                        name: a
                    })
                }
                ,
                getDescription: e => {
                    const t = e - 1;
                    if (0 === t)
                        return (0,
                        n.H8)(18931);
                    const a = (0,
                    n.H8)(i.Vq[t]);
                    return (0,
                    n.H8)(9836, {
                        league: a
                    })
                }
                ,
                position: 4
            },
            conqueror: {
                displayString: 6676,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27197 : 17870, {
                    name: a,
                    number: e
                }),
                getDescription: e => (0,
                n.H8)(24339, {
                    number: e
                }),
                position: 6
            },
            friendly: {
                displayString: 2148,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27198 : 21686, {
                    name: a
                }),
                getDescription: () => (0,
                n.H8)(6105),
                position: 10
            },
            legendary: {
                displayString: 31855,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27199 : 7181, {
                    name: a
                }),
                getDescription: () => (0,
                n.H8)(13781),
                position: 8
            },
            overtime: {
                displayString: 19748,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27200 : 11321, {
                    name: a
                }),
                getDescription: () => (0,
                n.H8)(10191),
                position: 11
            },
            photogenic: {
                displayString: 20036,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27201 : 22947, {
                    name: a
                }),
                getDescription: () => (0,
                n.H8)(19790),
                position: 12
            },
            regal: {
                displayString: 9220,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27202 : 4438, {
                    name: a,
                    number_1: e
                }),
                getDescription: e => (0,
                n.H8)(15694, {
                    number_1: e
                }),
                position: 3
            },
            sage: {
                displayString: 20797,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27203 : 21311, {
                    name: a,
                    number_1: e
                }),
                getDescription: e => (0,
                n.H8)(20170, {
                    number_1: e
                }),
                position: 1
            },
            scholar: {
                displayString: 7357,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27204 : 1301, {
                    name: a,
                    number_of_words: e
                }),
                getDescription: e => (0,
                n.H8)(22639, {
                    number_of_words: e
                }),
                position: 2
            },
            sharpshooter: {
                displayString: 2932,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27205 : 17946, {
                    name: a,
                    number_1: e
                }),
                getDescription: e => (0,
                n.H8)(19943, {
                    number_1: e
                }),
                position: 5
            },
            strategist: {
                displayString: 7441,
                earn: e => {
                    s.I7.earnTipsAchievement(e)
                }
                ,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27206 : 18657, {
                    name: a
                }),
                getDescription: () => (0,
                n.H8)(8963),
                position: 9
            },
            wildfire: {
                displayString: 6641,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27207 : 20666, {
                    name: a,
                    number_1: e
                }),
                getDescription: e => (0,
                n.H8)(5551, {
                    number_1: e
                }),
                position: 0
            },
            winner: {
                displayString: 14814,
                getCompletedDescription: (e, t, a) => (0,
                n.H8)(t ? 27208 : 19806, {
                    name: a
                }),
                getDescription: () => (0,
                n.H8)(14009),
                position: 7
            }
        }
          , c = e => (0,
        r.Dp)((0,
        r.qj)(e).sort(( (e, t) => l[e.name].position - l[t.name].position)))
          , d = (e, t, a, s) => {
            const n = t ? Math.max(0, e.tier - 1) : e.tier
              , r = l[e.name]
              , i = e.tierCounts[n];
            return t ? r.getCompletedDescription(i, a, s) : r.getDescription(i)
        }
          , u = e => {
            const t = l[e.name];
            return (0,
            n.H8)(t.displayString)
        }
          , g = e => e.tierCounts[e.tier] || 0
          , p = e => Math.max(1, e.tier < e.tierCounts.length ? e.tier + 1 : e.tier)
          , m = e => e.count >= g(e)
          , h = e => e.reduce(( (e, t) => (e[t.name] = t,
        e)), {})
          , _ = (e, t, a, s) => {
            e({
                options: {
                    achievement: t,
                    achieverName: s,
                    name: o.t.Achievement,
                    thirdPerson: a
                },
                replaceExisting: !1,
                type: "TOGGLE_MODAL"
            })
        }
    }
    ,
    51827: (e, t, a) => {
        "use strict";
        a.d(t, {
            BY: () => P,
            N1: () => b,
            Nq: () => A,
            OE: () => C,
            Ph: () => H,
            Tu: () => k,
            UG: () => G,
            XT: () => U,
            Z7: () => w,
            ZD: () => s,
            _H: () => L,
            as: () => F,
            eu: () => R,
            j2: () => T,
            kN: () => V,
            nc: () => I,
            qc: () => z,
            sb: () => N
        });
        var s, n = a(80254), r = a(98964), i = a(17135), o = a(64115), l = a(37825), c = a(58576), d = a(74971), u = a(84401), g = a(67280), p = a(32499), m = a(30839), h = a(79465), _ = a(16086), v = a(20028);
        !function(e) {
            e.SessionEnd = "SESSION_END",
            e.Tree = "TREE"
        }(s || (s = {}));
        const f = n.IH(( () => (0,
        r.l)("//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js")));
        let S, y = !0;
        const E = new Promise((e => {
            S = e
        }
        ))
          , b = e => {
            y = e.privacySettings.includes("DISABLE_PERSONALIZED_ADS"),
            S()
        }
          , I = async () => {
            await f(),
            await E;
            const e = (0,
            _.Pc)() ? y : !(0,
            d.Xb)("targeting");
            (window.adsbygoogle = window.adsbygoogle || []).requestNonPersonalizedAds = e ? 1 : 0,
            console.log((e ? "Disable" : "Enable") + " personalized ads"),
            (window.adsbygoogle = window.adsbygoogle || []).push({})
        }
          , w = (e, t) => {
            var a, s;
            if ((0,
            o.gQ)("disableAds") || (s = window.location.href,
            decodeURIComponent(s).includes("@")) || (0,
            v.pN)(e))
                return null;
            if (void 0 === (null === (a = e.adsConfig) || void 0 === a ? void 0 : a.units))
                return null;
            const n = e.adsConfig.units[t];
            if (void 0 === n || "" === n.id)
                return null;
            if (e.hasPlus)
                return (0,
                c.Kp)(`Premium user was inappropriately provided ads unit for placement '${t}'`),
                null;
            if ((e => (0,
            v.jq)(e) || (0,
            v.dE)(e))(e) && !n.familySafe)
                return (0,
                c.Kp)(`User was inappropriately provided non-family safe ads unit (id='${n.id}') for placement '${t}'`, {
                    once: !0
                }),
                null;
            const [r,i] = n.id.split("/");
            return {
                client: r,
                familySafe: n.familySafe,
                slot: i
            }
        }
          , k = (e, t) => `${e.toLowerCase()}_ad${"showing" === t ? "" : `_${t}`}`
          , T = e => void 0 !== e && ["session_end_ad", "session_end_ad_blocked", "session_end_ad_showing", "tree_ad", "tree_ad_blocked", "tree_ad_showing"].includes(e)
          , C = (e, t, a, s) => {
            (0,
            h.track)(e, {
                ad_network: "adsense",
                ad_placement: t.toLowerCase(),
                ad_type: "banner",
                ad_unit: a,
                family_safe: s
            })
        }
          , R = e => {
            var t, a, s;
            return (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded) ? null === (s = null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) || void 0 === s ? void 0 : s.some((e => e.isFreeTrial && !e.isNewYears)) : void 0
        }
          , L = e => {
            var t, a;
            return (null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded) ? null === (a = e.subscriptions.subscriptionPlans) || void 0 === a ? void 0 : a.some((e => e.isWinback)) : void 0
        }
          , P = e => {
            var t, a, s;
            if (!(null === (t = e.subscriptions) || void 0 === t ? void 0 : t.isLoaded))
                return;
            const n = null === (s = null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) || void 0 === s ? void 0 : s.find((e => (0,
            p.kY)(e)));
            return void 0 === n ? "USD" : n.planCurrency
        }
          , A = (e, t) => e && t
          , D = {
            "practice-hub-promo": "duo.internalAds.sessionEnd.practiceHubPromo",
            standard: "duo.internalAds.sessionEnd.plus",
            "super-video": "duo.internalAds.sessionEnd.superVideo"
        }
          , O = e => (0,
        m.rV)(D[e])
          , N = (e, t) => {
            let a;
            return (0,
            m.No)(D[e]) ? a = O(e) : (a = null != t ? t : {
                lastShowTimestamp: 0,
                showCount: 0
            },
            x(e, a)),
            a
        }
          , x = (e, t) => {
            (0,
            m.LS)(D[e], t)
        }
          , M = ({isDesktop: e, items: t, user: a}) => !(!(0,
        p.X0)(t, a) || !e || (0,
        v.pN)(a) || 1e3 * a.creationDate > Date.now() - 1728e5)
          , F = ({isDesktop: e, items: t, user: a}) => {
            if (!M({
                isDesktop: e,
                items: t,
                user: a
            }))
                return !1;
            const s = N("standard", {
                lastSessionCount: a.sessionCount,
                lastShowTimestamp: 0,
                showCount: 0
            })
              , n = Math.min(s.showCount, 7) * (0,
            i.dz)({
                days: 1
            }) * 1e3;
            return 0 === s.showCount || Date.now() > s.lastShowTimestamp + n
        }
          , U = ({isDesktop: e, items: t, user: a}) => {
            const s = (0,
            g.Ay)(a.plusDiscounts);
            if (!M({
                isDesktop: e,
                items: t,
                user: a
            }))
                return !1;
            if (!s && 1e3 * a.creationDate > Date.now() - 1728e5)
                return !1;
            if (s)
                return !0;
            if (N("super-video", {
                lastSessionCount: a.sessionCount,
                lastShowTimestamp: 0,
                showCount: 0
            }).lastSessionCount === a.sessionCount - 1)
                return !1;
            const n = O("standard")
              , r = void 0 === (null == n ? void 0 : n.lastSessionCount) ? void 0 : a.sessionCount - n.lastSessionCount;
            return 2 === r || void 0 !== r && r >= 5 && Math.random() < .1
        }
          , H = (e, t="standard", a) => {
            var s;
            const n = N(t);
            x(t, {
                lastSessionCount: e,
                lastShowTimestamp: Date.now(),
                showCount: n.showCount + 1,
                subtypesShown: a ? [a].concat(null !== (s = n.subtypesShown) && void 0 !== s ? s : []) : void 0
            })
        }
          , G = ({isDesktop: e, items: t, user: a}) => {
            var s, n;
            if (!(0,
            p.X0)(t, a) || !(e => {
                var t, a;
                return e.shop.isLoaded ? null === (a = null === (t = e.shop) || void 0 === t ? void 0 : t.in_app_purchase) || void 0 === a ? void 0 : a.some(( ({productId: e}) => (0,
                p.RD)(e))) : void 0
            }
            )(t) || !e || (0,
            v.pN)(a))
                return !1;
            const r = null !== (n = null === (s = a.streakData.currentStreak) || void 0 === s ? void 0 : s.length) && void 0 !== n ? n : 0;
            return 7 === r || r > 0 && r % 50 == 0
        }
          , V = ({items: e, path: t, user: a}) => {
            const s = (0,
            p.X0)(e, a)
              , n = (0,
            u.Hk)(t, (0,
            u.yi)(t, s, a));
            if (!s || !n)
                return !1;
            const r = N("practice-hub-promo", {
                lastShowTimestamp: 0,
                showCount: 0,
                subtypesShown: []
            })
              , o = 1e3 * (0,
            i.dz)({
                days: 5
            })
              , l = Date.now() > r.lastShowTimestamp + o
              , c = r.subtypesShown
              , d = !!c && c.length < 4;
            return 0 === r.showCount || l && d
        }
          , z = ({levelData: e}) => void 0 !== e && (0,
        l.d)(e.level.type) && "passed" === e.level.state
    }
    ,
    40387: (e, t, a) => {
        "use strict";
        a.d(t, {
            IF: () => o,
            hM: () => r,
            jJ: () => i,
            qz: () => l
        });
        var s = a(80254)
          , n = a(11811);
        const r = e => {
            const {currentIndex: t, session: a, session: {adaptiveChallenges: r, challenges: o}} = e;
            if (!r)
                return;
            if (i(a))
                return;
            const l = o.slice(0, t + 1)
              , c = o.slice(t + 1)
              , d = l.every((e => {
                var t;
                return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
            }
            )) && c.length === r.length
              , u = s.jj(o, !1, (e => e.id))
              , g = u[u.length - 1]
              , p = 1 === l.filter((e => {
                var t;
                return !1 === (null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct)
            }
            )).length && t + 1 === o.indexOf(g) && g.type !== n.Sm.Speak;
            switch (a.type) {
            case n.FF.GlobalPractice:
                return d ? r : p ? [r[0]] : void 0;
            case n.FF.Lesson:
                return d ? r : void 0;
            default:
                return
            }
        }
          , i = ({adaptiveChallenges: e, challenges: t}) => e && s.jV(t.map((e => e.id)), e.map((e => e.id))).length > 0
          , o = e => {
            const {currentIndex: t, session: {adaptiveChallenges: a, challenges: n}} = e;
            if (void 0 === a)
                return !1;
            const r = a.map((e => e.id))
              , i = n.slice(0, t + 1).map((e => e.id))
              , o = n[t + 1];
            return 0 === s.jV(i, r).length && r.includes(null == o ? void 0 : o.id)
        }
          , l = (e, t) => {
            var a, s, n, r, i;
            e.adaptiveChallenges = null === (a = e.adaptiveChallenges) || void 0 === a ? void 0 : a.filter((e => !t.includes(e.type))),
            e.mistakesReplacementChallenges = null === (s = e.mistakesReplacementChallenges) || void 0 === s ? void 0 : s.filter((e => !t.includes(e.type)));
            const o = []
              , l = [];
            for (let a = 0; a < e.challenges.length; a++) {
                const s = e.challenges[a]
                  , c = null !== (r = null === (n = e.adaptiveInterleavedChallenges) || void 0 === n ? void 0 : n.speakOrListenReplacementIndices[a]) && void 0 !== r ? r : null;
                if (t.includes(s.type)) {
                    const t = null === (i = e.adaptiveInterleavedChallenges) || void 0 === i ? void 0 : i.challenges[null != c ? c : -1];
                    t && (o.push(t),
                    l.push(null))
                } else
                    o.push(s),
                    l.push(c)
            }
            return e.challenges = o,
            e.adaptiveInterleavedChallenges && (e.adaptiveInterleavedChallenges.speakOrListenReplacementIndices = l),
            e
        }
    }
    ,
    9979: (e, t, a) => {
        "use strict";
        a.d(t, {
            AX: () => i,
            Gg: () => c,
            Vv: () => o,
            jt: () => u,
            nN: () => l,
            q8: () => d
        });
        var s = a(4368)
          , n = a(50498)
          , r = a(59815);
        const i = "cubic-bezier(0.32, 0, 0.67, 0)"
          , o = "cubic-bezier(0.5, 1, 0.89, 1)"
          , l = 1e3 * parseFloat(s.Z["duration-fade"])
          , c = () => new Promise((e => {
            requestAnimationFrame(( () => requestAnimationFrame(e)))
        }
        ))
          , d = {
            EaseInOutCubic: e => e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1,
            EaseInOutQuad: e => e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1,
            EaseInOutQuart: e => e < .5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e,
            EaseInOutQuint: e => e < .5 ? 16 * e * e * e * e * e : 1 + 16 * --e * e * e * e * e,
            EaseInQuad: e => e * e,
            EaseInQuart: e => e * e * e * e,
            EaseInQuint: e => e * e * e * e * e,
            EaseOutCubic: e => --e * e * e + 1,
            EaseOutExpo: e => 1 - 2 ** (-10 * e),
            EaseOutQuad: e => e * (2 - e),
            EaseOutQuart: e => 1 - --e * e * e * e,
            EaseOutQuint: e => 1 + --e * e * e * e * e,
            Linear: e => e
        }
          , u = async ({animationDelay: e=0, animationDuration: t, easingFunction: a=d.Linear, onAnimate: s, signal: i}) => {
            if (e > 0 && await (0,
            n._v)(e),
            null == i ? void 0 : i.aborted)
                throw new r.$K;
            const o = Date.now()
              , l = o + t;
            return new Promise(( (e, t) => {
                const n = async () => {
                    await new Promise((e => {
                        requestAnimationFrame(e)
                    }
                    )),
                    (null == i ? void 0 : i.aborted) && t(new r.$K);
                    const c = Date.now();
                    if (c < l) {
                        const e = a((c - o) / (l - o));
                        s(e),
                        n()
                    } else
                        s(1),
                        e()
                }
                ;
                n()
            }
            ))
        }
    }
    ,
    56043: (e, t, a) => {
        "use strict";
        a.d(t, {
            SK: () => c,
            TK: () => d
        });
        var s = a(76986)
          , n = a(78939)
          , r = a(58576)
          , i = a(43006)
          , o = a(7113);
        const l = s
          , c = (e, t, a) => {
            const s = (0,
            o.J)(e)
              , n = (0,
            o.J)(t)
              , r = u(s.map((e => e.word)), n.map((e => e.word)));
            if (void 0 === r)
                return;
            const {firstIncorrectIndex: i, lastIncorrectIndex: l} = r;
            return s.map(( (e, t) => t >= i && t <= l ? e.word.length : 0)).reduce(( (e, t) => e + t)) > a * e.length || !s[i] || !s[l] ? void 0 : [s[i].startIndexWithinSentence, s[l].endIndexWithinSentence]
        }
          , d = (e, t, a) => {
            const s = (0,
            o.J)(e)
              , n = (0,
            o.J)(t)
              , r = u(s.map((e => e.word)), n.map((e => e.word)));
            if (void 0 === r)
                return {
                    rangeType: "all"
                };
            const {firstIncorrectIndex: i, lastIncorrectIndex: l} = r
              , c = m(s[0].word) ? 0 : 1
              , d = m(s[s.length - 1].word) ? s.length - 1 : s.length - 2
              , g = Math.max(i, c)
              , p = Math.min(l, d);
            if (g === p)
                return {
                    blankIndex: g,
                    highlightEndIndex: s[g].endIndexWithinSentence,
                    highlightStartIndex: s[g].startIndexWithinSentence,
                    rangeType: "one"
                };
            const h = {
                blankEndIndex: p + 1,
                blankStartIndex: c
            }
              , _ = {
                blankEndIndex: d + 1,
                blankStartIndex: g
            }
              , v = s.map(( (e, t) => t >= h.blankStartIndex && t < h.blankEndIndex ? e.word.length : 0)).reduce(( (e, t) => e + t))
              , f = s.map(( (e, t) => t >= _.blankStartIndex && t < _.blankEndIndex ? e.word.length : 0)).reduce(( (e, t) => e + t));
            return Math.min(v, f) > a * s.map((e => e.word)).join("").length ? {
                rangeType: "all"
            } : v < f ? {
                ...h,
                highlightEndIndex: s[h.blankEndIndex].endIndexWithinSentence,
                highlightStartIndex: s[h.blankStartIndex].startIndexWithinSentence,
                rangeType: "partial"
            } : {
                ..._,
                highlightEndIndex: s[_.blankEndIndex].endIndexWithinSentence,
                highlightStartIndex: s[_.blankStartIndex].startIndexWithinSentence,
                rangeType: "partial"
            }
        }
          , u = (e, t) => {
            const a = g(e, t)
              , s = p(e, t);
            if (void 0 === a || void 0 === s)
                return;
            const n = s < a
              , i = n ? s : a
              , o = n ? a : s;
            if (i <= o)
                return {
                    firstIncorrectIndex: i,
                    lastIncorrectIndex: o
                };
            (0,
            r.Kp)("Something went wrong trying to determine the guess's incorrect range.", {
                data: {
                    bestSolutionTokens: e,
                    detectedRange: {
                        firstDivergenceMaybeReversed: i,
                        lastDivergenceMaybeReversed: o
                    },
                    guessTokens: t
                }
            })
        }
          , g = (e, t) => {
            const a = h(e)
              , s = h(t);
            for (let e = 0; e < a.length; e++)
                if (void 0 === s[e] || (0,
                n.GS)((0,
                n.lG)(l, a[e].element)) !== (0,
                n.GS)((0,
                n.lG)(l, s[e].element)))
                    return a[e].index;
            if (a.length !== s.length)
                return a.length < s.length ? e.length : a[s.length].index
        }
          , p = (e, t) => {
            const a = h(e).reverse()
              , s = h(t).reverse();
            for (let e = 0; e < a.length; e++)
                if (void 0 === s[e] || (0,
                n.GS)((0,
                n.lG)(l, a[e].element)) !== (0,
                n.GS)((0,
                n.lG)(l, s[e].element)))
                    return a[e].index;
            if (a.length !== s.length)
                return a.length < s.length ? -1 : a[a.length - s.length - 1].index
        }
          , m = e => !(0 === (0,
        i.Dg)(e).length)
          , h = e => e.map(( (e, t) => m(e) ? {
            element: e,
            index: t
        } : {
            element: "",
            index: t
        })).filter((e => 0 !== e.element.length))
    }
    ,
    18867: (e, t, a) => {
        "use strict";
        a.d(t, {
            Sl: () => ee,
            eN: () => J,
            I7: () => s,
            d0: () => k,
            _s: () => T,
            Vi: () => C,
            Kz: () => n,
            XY: () => i,
            zQ: () => o,
            ub: () => ie,
            bG: () => l,
            Np: () => ne,
            el: () => O,
            jk: () => R,
            tX: () => c,
            mJ: () => d,
            i_: () => u,
            JV: () => g,
            lB: () => p,
            Hx: () => oe,
            qF: () => m,
            dQ: () => h,
            zi: () => _,
            wO: () => v,
            u2: () => N,
            xr: () => f,
            s3: () => l,
            bu: () => S,
            PA: () => y,
            uf: () => E,
            yG: () => b,
            Mw: () => I,
            Fo: () => w,
            a1: () => r,
            w1: () => L,
            pz: () => P,
            eB: () => A,
            AL: () => D
        });
        var s = {};
        a.r(s),
        a.d(s, {
            claimAchievement: () => ue,
            earnTipsAchievement: () => ge,
            getAchievementsV3: () => de,
            migrateToV3: () => pe
        });
        var n = {};
        a.r(n),
        a.d(n, {
            getAvatarBuilderConfig: () => he,
            getUserBuiltAvatar: () => _e,
            updateUserBuiltAvatar: () => ve
        });
        var r = {};
        a.r(r),
        a.d(r, {
            createInvoice: () => ye,
            getB2BPricingData: () => Se,
            submitInvoice: () => be,
            updateInvoice: () => Ee
        });
        var i = {};
        a.r(i),
        a.d(i, {
            B2B_UNIVERSAL_CLOCK_CODE_PREFIX: () => we,
            downloadCodes: () => Oe,
            getCodes: () => Re,
            getDownloadReportUrl: () => Fe,
            getOrganizations: () => ke,
            getPurchases: () => Ce,
            getReports: () => Me,
            getSubscriptions: () => Le,
            redeemCode: () => xe,
            removeCode: () => Pe,
            removeSubscription: () => Ae,
            sendCodes: () => De,
            updateOrganization: () => Te,
            validateCode: () => Ne
        });
        var o = {};
        a.r(o),
        a.d(o, {
            getCharacterChart: () => Ge,
            getExpandedViewInfo: () => Be,
            sessionCreate: () => ze,
            sessionSubmit: () => Ve
        });
        var l = {};
        a.r(l),
        a.d(l, {
            getCefrContent: () => qe,
            getExplanation: () => Ze,
            getGrammarConcept: () => Qe,
            getGuidebook: () => We,
            getLottieAnimation: () => Ke,
            getSmartTip: () => Ye,
            getZombieStatus: () => Je,
            requestGradingConfig: () => Xe
        });
        var c = {};
        a.r(c),
        a.d(c, {
            deleteFeedReaction: () => rt,
            getFeedReactions: () => tt,
            markFeedSeen: () => it,
            sendFeedReactions: () => nt
        });
        var d = {};
        a.r(d),
        a.d(d, {
            addModerator: () => pt,
            isSpecialForumTopic: () => ct,
            listAllMods: () => gt,
            listMods: () => ut,
            listTopics: () => dt,
            removeModerator: () => mt,
            undeleteComment: () => lt
        });
        var u = {};
        a.r(u),
        a.d(u, {
            NUDGE_TRACKING_NAMES: () => vt,
            acknowledgeFriendStreakEnd: () => Wt,
            block: () => xt,
            blockUserWithToken: () => Ft,
            deleteFriendRecommendation: () => Ct,
            deleteFriendStreakMatch: () => Zt,
            follow: () => Ot,
            getFeedV2: () => St,
            getFollowers: () => At,
            getFollowing: () => Pt,
            getFriendRecommendations: () => kt,
            getFriendStreakMatchData: () => Qt,
            getFriendStreakMatchInfo: () => zt,
            getFriendStreakPotentialMatches: () => Bt,
            getFriendsInCommon: () => Dt,
            getKudosAssets: () => Et,
            getKudosDrawerV2: () => bt,
            getSocialProfile: () => Lt,
            markDrawerSeen: () => wt,
            patchFriendStreakMatch: () => jt,
            postFriendStreakMatch: () => $t,
            postFriendsQuestNudge: () => Gt,
            postGenericNudge: () => Vt,
            requestParentalConsentForSocial: () => Ut,
            searchUsers: () => Rt,
            sendTriggeredKudos: () => It,
            unblock: () => Mt,
            unfollow: () => Nt,
            updateFriendRecommendations: () => Tt,
            updateSocialSettingWithToken: () => Ht
        });
        var g = {};
        a.r(g),
        a.d(g, {
            getQuestProgress: () => Jt,
            getQuestsData: () => Xt,
            getQuestsSchema: () => Yt,
            postQuestComplete: () => ea,
            sendBatchUpdate: () => ta
        });
        var p = {};
        a.r(p),
        a.d(p, {
            submitHighValyrianForm: () => sa
        });
        var m = {};
        a.r(m),
        a.d(m, {
            lV: () => ra,
            Y4: () => oa,
            LE: () => ia
        });
        var h = {};
        a.r(h),
        a.d(h, {
            LEAGUES_DOGFOODING_LEADERBOARD_ID: () => ua,
            LEAGUES_ID: () => da,
            SCHOOLS_CLASSROOM_LEADERBOARD_ID: () => ma,
            TOURNAMENT_DOGFOODING_LEADERBOARD_ID: () => ga,
            TOURNAMENT_LEADERBOARD_ID: () => pa,
            get: () => ka,
            getLeaguesLeaderboardId: () => _a,
            getReactionUncohorted: () => Pa,
            getTournamentLeaderboardId: () => ha,
            patch: () => Ca,
            post: () => Ta,
            setReactionCohorted: () => La,
            setReactionUncohorted: () => Aa
        });
        var _ = {};
        a.r(_),
        a.d(_, {
            ackHomeMessage: () => Na,
            ackSessionEndMessages: () => xa,
            getHomeMessages: () => Ma,
            getSessionEndMessages: () => Fa
        });
        var v = {};
        a.r(v),
        a.d(v, {
            clearUngeneratableMistakes: () => za,
            getMistakeCount: () => Ga,
            getMistakes: () => Va
        });
        var f = {};
        a.r(f),
        a.d(f, {
            trackSplashLoad: () => ja
        });
        var S = {};
        a.r(S),
        a.d(S, {
            AssignmentType: () => $a,
            CONTENT_SPECIFIC_ASSIGNMENT_TYPES: () => Za,
            autoFollowClassmates: () => es,
            getClassroomByCode: () => Ka,
            getSessionActivitiesByUser: () => ts,
            getUserClassroomLeaderboardInfo: () => Xa,
            getUserClassrooms: () => Qa,
            joinClassroom: () => Ya,
            leaveClassroom: () => Ja
        });
        var y = {};
        a.r(y),
        a.d(y, {
            detectDuplicates: () => ss,
            fullyConnectDuplicates: () => ns,
            getFeatures: () => rs,
            getSlackReportTypes: () => is,
            getSuggestedFeatures: () => os,
            reportIssue: () => ls
        });
        var E = {};
        a.r(E),
        a.d(E, {
            sendDownloadSMS: () => ds
        });
        var b = {};
        a.r(b),
        a.d(b, {
            ReportReason: () => ps,
            reportProfileUser: () => ms
        });
        var I = {};
        a.r(I),
        a.d(I, {
            getPracticeHubStories: () => Es,
            getStory: () => _s,
            postStoryComplete: () => vs,
            recordUserReply: () => fs
        });
        var w = {};
        a.r(w),
        a.d(w, {
            getUserStreakGoal: () => Is,
            getUserStreakGoalOptions: () => ks,
            putUserStreakGoal: () => ws
        });
        var k = {};
        a.r(k),
        a.d(k, {
            dismissNotification: () => Ls,
            getDeleteModLog: () => Ps,
            getShadowbannedUsers: () => As,
            getSocialCurrencyStats: () => Ns,
            logout: () => Cs,
            shadowbanUser: () => Ds,
            unshadowbanUser: () => Os,
            uploadAvatar: () => Rs
        });
        var T = {};
        a.r(T),
        a.d(T, {
            convertRemoteLanguageId: () => Hs,
            courseList: () => zs,
            courseShow: () => Bs,
            getLanguageTokens: () => js,
            legacyLanguageId: () => Gs,
            registerDevice: () => $s,
            unregisterDevice: () => Zs,
            userBan: () => Us
        });
        var C = {};
        a.r(C),
        a.d(C, {
            ChallengeReports: () => Dn,
            EventType: () => rn,
            PasswordContext: () => dn,
            addUserStripePaymentMethod: () => Vn,
            anonymousValidatePromoCode: () => qn,
            attachUserStripePaymentMethod: () => Bn,
            checkPasswordQuality: () => gn,
            consumeReward: () => rr,
            createPaymentMethodSetup: () => zn,
            createUserSuperDiscount: () => or,
            crossgradePreview: () => $n,
            emailVerificationSend: () => Sn,
            emailVerificationUpdate: () => yn,
            forgotPassword: () => sr,
            getConfig: () => Xn,
            getCustomAcquisitionSurveyResponses: () => ir,
            getPackageNameFromPromoCodeRaw: () => on,
            getScoreSocialSyncData: () => mr,
            getShopItems: () => Nn,
            getSubscriptionPlans: () => xn,
            getUnfilteredPrivacySettings: () => tr,
            getUnitOfTimeFromPromoCodeRaw: () => ln,
            getUserEnergyConfig: () => ur,
            getUserInventory: () => Gn,
            getUserPaymentMethods: () => Hn,
            getUserScoreStatusInfo: () => gr,
            getUserShopItem: () => Mn,
            getUserVocabSummary: () => dr,
            getUserXPSummaries: () => Tn,
            login: () => cn,
            patchUserShopItem: () => Fn,
            purchaseShopItemGift: () => Wn,
            purchaseUserShopItem: () => Zn,
            registerTrackingStatus: () => nr,
            removeEmailUpdate: () => En,
            removeHeart: () => cr,
            reportSentence: () => On,
            resetPassword: () => pn,
            sessionCreate: () => Pn,
            sessionSubmit: () => An,
            subscribeToBangoPlan: () => Jn,
            subscriptionOrderCreate: () => jn,
            treatUser: () => lr,
            updatePrivacySettings: () => ar,
            updateScoreSocialSyncData: () => hr,
            updateUserScoreStatusInfo: () => pr,
            updateUserStripePaymentMethod: () => Un,
            useUserShopItem: () => er,
            userCreate: () => mn,
            userDeleteCourse: () => Ln,
            userIdsByUsername: () => In,
            userInfo: () => hn,
            userInfoPartial: () => fn,
            userMessage: () => Rn,
            userModeratedEvents: () => Cn,
            userProfileInfo: () => _n,
            userSearchByEmail: () => wn,
            userUpdate: () => kn,
            usernameValidate: () => bn,
            validateBangoToken: () => Yn,
            validatePromoCode: () => Qn
        });
        var R = {};
        a.r(R),
        a.d(R, {
            acceptFamilyPlanDirectInvite: () => br,
            acceptFamilyPlanInviteCode: () => fr,
            getFamilyPlanUserInvite: () => Er,
            rejectFamilyPlanDirectInvite: () => Ir,
            removeUserFromFamilyPlan: () => wr,
            sendFamilyPlanDirectInvite: () => Sr,
            validateFamilyInviteToken: () => vr,
            withdrawFamilyPlanDirectInvite: () => yr
        });
        var L = {};
        a.r(L),
        a.d(L, {
            getReport: () => Tr
        });
        var P = {};
        a.r(P),
        a.d(P, {
            getLearnedLexemes: () => Rr,
            getLearnedLexemesCount: () => Lr,
            getPracticeLexemes: () => Pr,
            getSupportedCourses: () => Ar
        });
        var A = {};
        a.r(A),
        a.d(A, {
            getReport: () => xr,
            getReportId: () => Nr,
            openReport: () => Mr
        });
        var D = {};
        a.r(D),
        a.d(D, {
            postRequest: () => Gr,
            postUploadFile: () => Hr
        });
        var O = {};
        a.r(O),
        a.d(O, {
            createTicket: () => jr,
            createTicketFromToken: () => Br,
            getFaqData: () => $r,
            getGlobalStatus: () => Zr,
            getTokenInfo: () => zr
        });
        var N = {};
        a.r(N),
        a.d(N, {
            registerCode: () => qr
        });
        var x = a(54174)
          , M = a(54412)
          , F = a(59604)
          , U = a(58576)
          , H = a(18804)
          , G = a(16086)
          , V = a(20028)
          , z = a(80254)
          , B = a(59815)
          , j = a(53229)
          , $ = a(79465);
        const Z = e => encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        class W extends B.pY {
            constructor(e, {duration: t, request: a, response: s}) {
                super(e),
                this.duration = t,
                this.request = a,
                this.response = s
            }
            get name() {
                return "HttpClientError"
            }
        }
        const q = W;
        class Q extends B.pY {
            static from(e, t) {
                if (e instanceof Q)
                    return e;
                const a = new Q("string" == typeof e ? e : e.message);
                return a.response = t,
                a
            }
        }
        const K = z.P2((e => {
            Math.random() < (0,
            F.O)("web_api_rate_limited_sampling_rate", 0) && (0,
            $.track)("api_rate_limited", {
                host: e
            })
        }
        ), 6e4)
          , Y = z.P2((e => {
            Math.random() < (0,
            F.O)("web_api_not_acceptable_sampling_rate", 0) && (0,
            $.track)("api_request_not_acceptable", {
                host: e
            })
        }
        ), 6e4)
          , J = class {
            constructor(e) {
                this.addCacheBuster = !1,
                this.errorInterceptors = [],
                this.interceptors = [],
                this.throwsOnError = !0,
                this.useFormEncoding = !1,
                this.withCredentials = !1,
                this.getAdditionalHeaders = e => ({}),
                this.mapResponse = (e, t) => ({
                    data: t,
                    headers: Object.fromEntries(e.headers.entries()),
                    status: e.status,
                    statusText: e.statusText
                }),
                this.parseJsonResponse = e => e.text().then((t => {
                    try {
                        return t ? JSON.parse(t) : void 0
                    } catch (a) {
                        const s = String(e.status).startsWith("2") || void 0 === t || "" === t ? a : t.startsWith("<") ? e.statusText : t.split("\n")[0].slice(0, 100);
                        throw Q.from(s, this.mapResponse(e, t))
                    }
                }
                )),
                this.baseUrl = (null == e ? void 0 : e.startsWith("/")) ? `${window.location.origin}${e}` : null != e ? e : ""
            }
            addErrorInterceptor(e) {
                return this.errorInterceptors.push(e),
                this
            }
            addResponseInterceptor(e) {
                return this.interceptors.push(e),
                this
            }
            delete(e, t, a) {
                return this.request("DELETE", e, t, a)
            }
            dontThrowOnError() {
                return this.throwsOnError = !1,
                this
            }
            enableCacheBuster() {
                return this.addCacheBuster = !0,
                this
            }
            enableCredentials() {
                return this.withCredentials = !0,
                this
            }
            enableFormEncoding() {
                return this.useFormEncoding = !0,
                this
            }
            get(e, t) {
                return this.request("GET", e, void 0, t)
            }
            getBlob(e, t) {
                return this.request("GET", e, void 0, t, "blob")
            }
            download(e, t, a, s) {
                return this.request(e, t, a, s, "blob").then((e => {
                    const t = window.URL.createObjectURL(e.data);
                    window.location.assign(t)
                }
                ))
            }
            getBuffer(e, t) {
                return this.request("GET", e, void 0, t, "arraybuffer")
            }
            getText(e, t) {
                return this.request("GET", e, void 0, t, "text")
            }
            patch(e, t, a) {
                return this.request("PATCH", e, t, a)
            }
            post(e, t, a) {
                return this.request("POST", e, t, a)
            }
            put(e, t, a) {
                return this.request("PUT", e, t, a)
            }
            buildUrl(e, t, a={}) {
                const s = a.params instanceof URLSearchParams ? new URLSearchParams(a.params) : {
                    ...a.params
                };
                this.addCacheBuster && "GET" === e && (s instanceof URLSearchParams ? s.set("_", `${Date.now()}`) : s._ = Date.now());
                let n = ( (e, t) => {
                    let a;
                    if (t instanceof URLSearchParams)
                        a = t.toString();
                    else {
                        const e = [];
                        for (const [a,s] of Object.entries(t)) {
                            if (null == s)
                                continue;
                            const t = Array.isArray(s) ? `${a}[]` : a
                              , n = Array.isArray(s) ? s : [s];
                            for (const a of n) {
                                const s = a instanceof Date ? a.toISOString() : "object" == typeof a && null !== a ? JSON.stringify(a) : a;
                                e.push(`${Z(t)}=${Z(s)}`)
                            }
                        }
                        a = e.join("&")
                    }
                    return a && (e += (e.includes("?") ? "&" : "?") + a),
                    e
                }
                )(t, s);
                return n = (0,
                j.qy)(n.startsWith("//") ? n : n.startsWith("/") ? `${this.baseUrl}${n}` : n),
                n
            }
            async request(e, t, a, s={}, n="json") {
                const r = ( () => {
                    const e = window.performance.now();
                    return () => 2 ** Math.round(Math.log2((window.performance.now() - e) / 100)) * 100
                }
                )()
                  , i = {
                    ...s.headers,
                    ...this.getAdditionalHeaders(t)
                }
                  , o = this.buildUrl(e, t, s);
                !this.useFormEncoding || !a || a instanceof FormData || (a = (0,
                j.Vp)(a),
                i["Content-Type"] = "application/x-www-form-urlencoded; charset=UTF-8"),
                "json" === n && (i.Accept = "application/json; charset=UTF-8");
                const l = (async () => {
                    var t;
                    void 0 === a || a instanceof FormData || (null == i ? void 0 : i["Content-Type"]) || (i["Content-Type"] = "application/json; charset=UTF-8");
                    const r = new AbortController;
                    void 0 !== s.timeout && setTimeout(( () => r.abort()), s.timeout);
                    const l = await fetch(o, {
                        body: a instanceof FormData || this.useFormEncoding ? a : JSON.stringify(a),
                        credentials: this.withCredentials ? "include" : "same-origin",
                        headers: i,
                        method: e,
                        signal: r.signal
                    }).catch((e => {
                        throw Q.from(e, void 0)
                    }
                    ))
                      , c = !0 === s.forceJsonDecoding || (null === (t = l.headers.get("content-type")) || void 0 === t ? void 0 : t.split(";").some((e => "application/json" === e.trim())));
                    406 === l.status ? Y((0,
                    j.Fo)(l.url)) : 429 === l.status && K((0,
                    j.Fo)(l.url));
                    const d = ("arraybuffer" === n ? l.arrayBuffer() : "blob" === n ? l.blob() : "text" === n ? l.text() : c ? this.parseJsonResponse(l) : Promise.resolve(void 0)).catch((e => {
                        throw Q.from(e, this.mapResponse(l, void 0))
                    }
                    ))
                      , u = this.mapResponse(l, await d);
                    if (this.throwsOnError && !l.ok)
                        throw Q.from(`Request failed with status code ${l.status}`, u);
                    return u
                }
                )();
                try {
                    const e = await l;
                    return this.interceptors.forEach((t => t(e))),
                    e
                } catch (s) {
                    const n = new q(s.message,{
                        duration: r(),
                        request: {
                            body: a,
                            headers: i,
                            method: e,
                            url: o
                        },
                        response: s.response
                    });
                    throw this.errorInterceptors.forEach((e => e(t, n))),
                    n
                }
            }
        }
          , X = e => new Array(e).fill(null).map(( () => Math.floor(16 * Math.random()).toString(16))).join("")
          , ee = class extends J {
            constructor(e) {
                super(e),
                this.addBearer = !1,
                this.addTraceHeaders = !1,
                this.serviceMap = {},
                this.getAdditionalHeaders = e => {
                    var t, a;
                    const s = {}
                      , n = (0,
                    M.ej)(M.Vj.JWT);
                    if (this.addBearer && n && (s.Authorization = `Bearer ${n}`),
                    this.addTraceHeaders) {
                        if (n) {
                            const e = null !== (t = (0,
                            G.MJ)(n)) && void 0 !== t ? t : 0;
                            s["X-Amzn-Trace-Id"] = `User=${e}`
                        } else
                            s["X-Amzn-Trace-Id"] = "User=0";
                        const r = null === (a = null === H.globalGetState || void 0 === H.globalGetState ? void 0 : (0,
                        H.globalGetState)()) || void 0 === a ? void 0 : a.user;
                        (0,
                        F.O)("web_send_jaeger_debug_id_in_admin_requests") && void 0 !== r && (0,
                        V.Sk)(r) && (s.traceparent = `00-${X(32)}-${X(16)}-01`),
                        "/deactivate" !== e && "/logout" !== e && (s["X-Requested-With"] = "XMLHttpRequest")
                    }
                    const r = Object.entries(this.serviceMap);
                    return r.length && (s["x-duolingo-service-map"] = r.map(( ([e,t]) => `${e}=${t}`)).join(";")),
                    s
                }
                ,
                super.enableCredentials()
            }
            enableBearer() {
                return this.addBearer = !0,
                this
            }
            enableTraceHeaders() {
                return this.addTraceHeaders = !0,
                this
            }
            setServiceEnvironment(e, t) {
                return t ? this.serviceMap[e] = t : delete this.serviceMap[e],
                this
            }
            async request(e, t, a, s={}, n="json") {
                const r = (0,
                H.globalGetState)();
                return r && (0,
                x.d)(r) && !t.startsWith("/admin_tools") && ((0,
                U.Kp)("Performing backend request while Zombie mode is enabled", {
                    data: {
                        method: e,
                        url: t
                    },
                    sample: .01
                }),
                console.trace()),
                super.request(e, t, a, s, n)
            }
        }
        ;
        var te = a(64115)
          , ae = a(30839);
        const se = (e, t=!0) => {
            const a = e && (0,
            te.gQ)("edgeGatewayStaging") ? e.replace("www.duolingo", "www-stage.duolingo") : e
              , s = new ee(a).addErrorInterceptor(( (e, {response: t}) => {}
            )).addResponseInterceptor((e => {}
            )).enableCacheBuster().enableTraceHeaders();
            return t && s.enableBearer(),
            s
        }
          , ne = (e="") => {
            const t = (0,
            te.pL)();
            return void 0 !== t ? se(`https://www.duolingo.com${e}`).setServiceEnvironment("monolith", `next-${t}`) : /[^.]*api[^.]*.duolingo.(com|cn)/.test(window.location.host) ? se(`https://www.duolingo.com${e}`) : se(e)
        }
          , re = e => se(e).enableFormEncoding()
          , ie = () => {
            z.VO(M.Vj).forEach((e => (0,
            M.nJ)(e))),
            (0,
            ae.cl)(ae.Qt.State);
            try {
                new Promise((e => {
                    window.FB ? window.FB.logout(( () => e())) : e()
                }
                ))
            } catch {}
        }
          , oe = e => e instanceof q || null != e && "HttpClientError" === e.name
          , le = ["champion", "conqueror", "friendly", "legendary", "overtime", "photogenic", "regal", "sage", "scholar", "sharpshooter", "strategist", "wildfire", "winner"]
          , ce = se("https://duolingo-achievements-prod.duolingo.com")
          , de = async (e, t, a, s, n, r, i) => {
            const o = `/users/${e}/achievements`;
            if (!t || !a)
                return [];
            const l = {
                fromLanguage: t,
                hasPlus: i ? 1 : 0,
                isAgeRestricted: s ? 1 : 0,
                isProfilePublic: n ? 1 : 0,
                isSchools: r ? 1 : 0,
                learningLanguage: a
            };
            return (c = (await ce.get(o, {
                params: l
            })).data,
            null !== (d = c.achievements) && void 0 !== d ? d : []).filter(( ({name: e}) => le.includes(e)));
            var c, d
        }
          , ue = async (e, t) => {
            const a = `/users/${t}/${e.name}/${e.tier}/claim`;
            await ce.post(a, {})
        }
          , ge = async e => {
            const t = `/users/${e}/update`;
            await ce.post(t, {
                tip_read: !0
            })
        }
          , pe = async (e, t=!0) => {
            const a = `/users/${e}/migrate`;
            await ce.post(a, {
                async: t,
                dryRun: !1
            })
        }
          , me = ne("")
          , he = async (e, t) => (await me.get(`/users/${e}/avatar-builder-config`, {
            params: {
                uiLanguage: t
            }
        })).data.avatarBuilderConfig
          , _e = async e => (await me.get(`/users/${e}/built-avatar-states`)).data.builtAvatarStates[0]
          , ve = async (e, t) => {
            const a = `/users/${e}/built-avatar-states`
              , s = {
                builtAvatarStates: [t],
                shouldRenderAvatar: !0
            };
            await me.patch(a, s)
        }
          , fe = se("https://www.duolingo.com", !1);
        (0,
        te.gQ)("debugStripe") && fe.setServiceEnvironment("purchasing-backend", "staging").setServiceEnvironment("shop-backend", "staging-1").setServiceEnvironment("subscriptions-backend", "staging-1");
        const Se = async e => (await fe.get("/b2b/pricing/", {
            params: {
                country_code: e
            }
        })).data
          , ye = async e => (await fe.post("/subscription-codes/invoices/", e)).data
          , Ee = async (e, t) => (await fe.patch(`/subscription-codes/invoices/${e}/`, t)).data
          , be = async e => (await fe.post(`/subscription-codes/invoices/${e}/finalize/`)).data
          , Ie = ne()
          , we = "B_"
          , ke = async () => (await Ie.get(`/b2b/users/${(0,
        G.Jb)()}/organizations`)).data
          , Te = async (e, t) => {
            await Ie.put(`/b2b/organizations/${e}`, t)
        }
          , Ce = async e => (await Ie.get(`/b2b/organizations/${e}/purchases`)).data
          , Re = async e => (await Ie.get(`/b2b/purchases/${e}/codes`)).data
          , Le = async e => (await Ie.get(`/b2b/purchases/${e}/subscriptions`)).data
          , Pe = async e => 200 === (await Ie.delete(`/b2b/codes/${e}`)).status
          , Ae = async e => 200 === (await Ie.delete(`/b2b/subscriptions/${e}`)).status
          , De = async (e, t) => (await Ie.post(`/b2b/purchases/${e}/codes/send`, t)).data
          , Oe = e => Ie.download("POST", `/b2b/purchases/${e}/codes/download`)
          , Ne = async e => (await Ie.get(`/b2b/codes/${e}`)).data
          , xe = async e => {
            await Ie.post(`/b2b/codes/${e}/redeem`)
        }
          , Me = async e => Ie.get(`/b2b/organizations/${e}/reports`).then(( ({data: e}) => e))
          , Fe = (e, t, a) => Ie.buildUrl("GET", `/b2b/organizations/${e}/reports/${t}/${a}`);
        var Ue = a(88868);
        se(`https://${window.location.host === Ue.a_ ? Ue.a_ : "www.duolingo.com"}/2017-06-30/beta-program`);
        const He = se("https://www-prod.duolingo.com/2017-06-30/alphabets")
          , Ge = async (e, t, a) => {
            const s = {
                params: {
                    alphabetsPathProgressKey: a
                }
            };
            return (await He.get(`/courses/${e}/${t}`, s)).data
        }
          , Ve = async e => He.put(`/sessions/${e.learningLanguage}/${e.fromLanguage}/${e.id}`, e)
          , ze = async (e, t, a) => He.post(`/sessions/${e}/${t}`, a)
          , Be = async e => (await He.get(`/courses/${e.learningLanguage}/${e.fromLanguage}/expandedViewInfo/${e.expandedViewId}`, {
            params: e
        })).data;
        var je = a(17135);
        const $e = new J
          , Ze = async e => (await $e.get(e)).data
          , We = async e => (await $e.get(e)).data
          , qe = async e => (await $e.get(e)).data
          , Qe = async e => (await $e.get(e)).data
          , Ke = async e => (await $e.get(e)).data
          , Ye = async e => (await $e.get(e)).data
          , Je = async () => !0 === (await (async () => {
            let e;
            try {
                e = (0,
                G.Jb)()
            } catch {
                e = 0
            }
            const t = e % 100;
            try {
                return (await $e.get(`https://zombie.duolingo.com/${t}/web.json?user=${e}&ts=${(0,
                je.Zo)()}&tzoffset=${(0,
                je.pQ)() / -60}`, {
                    forceJsonDecoding: !0,
                    timeout: 1e4
                })).data
            } catch {
                return {}
            }
        }
        )()).enforce_offline ? "enabled" : "disabled"
          , Xe = async () => (await $e.get("https://d3kwyfyztuo0xs.cloudfront.net/config/latest/0.9.6", {
            forceJsonDecoding: !0
        })).data
          , et = (se("https://explanations.duolingo.com"),
        ne(""))
          , tt = async (e, t, a, s, n) => {
            if ((0,
            F.O)("feed_microservice_web_client", void 0, a)) {
                const a = void 0 === n ? {
                    limit: s
                } : {
                    limit: s,
                    start: n
                }
                  , r = (await et.get(`/card/${e}/reactions/${t}`, {
                    params: a
                })).data;
                return at(r)
            }
            return {
                cursor: null,
                userReactions: []
            }
        }
          , at = e => {
            const t = e.userReactions.map((e => ({
                ...e,
                reactionType: e.reactionType.toLowerCase()
            })));
            return {
                ...e,
                userReactions: t
            }
        }
          , st = async (e, t, a) => {
            await Promise.all(e.map((e => {
                var s;
                const n = {
                    groupId: e,
                    reaction: null !== (s = null == t ? void 0 : t.toUpperCase()) && void 0 !== s ? s : "NONE",
                    reactionTimestamp: Date.now(),
                    trackingProperties: a ? {
                        screen: a
                    } : void 0,
                    userId: (0,
                    G.Jb)()
                };
                et.post("/card/reaction", n)
            }
            )))
        }
          , nt = async (e, t, a) => {
            await st(e, t, a)
        }
          , rt = async e => {
            await st([e])
        }
          , it = async (e, t, a) => {
            const s = {
                application: "LEARNING",
                timestamp: Date.now()
            };
            await et.post(`/users/${e}/feed/seen`, {
                trackingProperties: t.map((e => ({
                    eventId: e.eventId,
                    kudosTrigger: null == e ? void 0 : e.triggerType,
                    kudosType: null == e ? void 0 : e.cardType,
                    screen: a
                })))
            }, {
                params: s
            })
        }
          , ot = re("https://forum-api.duolingo.com")
          , lt = e => ot.post(`/comments/${e}/undelete`)
          , ct = e => null === e.learning_language
          , dt = async () => (await ot.post("/diagnostics/topic_moderators/list_topics")).data
          , ut = async e => (await ot.post("/diagnostics/topic_moderators/list_mods", {
            topic_id: e
        })).data
          , gt = async () => (await ot.post("/diagnostics/topic_moderators/list_mods")).data
          , pt = async (e, t) => (await ot.post("/diagnostics/topic_moderators/add", {
            topic_id: e,
            user_id: t
        })).data
          , mt = async (e, t) => (await ot.post("/diagnostics/topic_moderators/remove", {
            topic_id: e,
            user_id: t
        })).data
          , ht = {
            LESSONS: "lessons",
            NINETY_ACCURACY_LESSONS: "ninetyPercentLessons",
            PERFECT_LESSONS: "perfectLessons",
            XP: "xp"
        }
          , _t = ["KUDOS_MILESTONE", "KUDOS_OFFER", "NUDGE"]
          , vt = {
            hiAllStar: "hi_all_star",
            hiDreamTeam: "hi_dream_team",
            hiFlex: "hi_flex",
            hiHighFive: "hi_high_five",
            nudgeClaws: "nudge_claws",
            nudgeFlex: "nudge_flex",
            nudgeHighFive: "nudge_high_five",
            nudgeSadDuo: "nudge_sad_duo"
        }
          , ft = ne("/2017-06-30/friends")
          , St = async (e, t, a, s) => {
            if ((0,
            F.O)("friends_microservice_web_client", void 0, a)) {
                const a = (await ft.get(`/users/${e}/feed/v2`, {
                    params: {
                        uiLanguage: t,
                        ...void 0 === s ? {} : {
                            after: s
                        }
                    }
                })).data;
                return yt(a)
            }
            return {
                feed: [],
                kudosConfig: {
                    reactions: [],
                    shareLabel: ""
                }
            }
        }
          , yt = e => {
            const t = e.feed.map((e => {
                const t = e.feedCards.filter((e => _t.includes(e.cardType)));
                return {
                    ...e,
                    feedCards: t
                }
            }
            ));
            return {
                ...e,
                feed: t
            }
        }
          , Et = async e => {
            if ((0,
            F.O)("friends_microservice_web_client", void 0, e)) {
                const e = (await ft.get("/kudos/assets")).data;
                return {
                    ...e.kudosFeedAssets,
                    ...e.kudosDrawerAssets
                }
            }
            return {}
        }
          , bt = async (e, t, a) => {
            if ((0,
            F.O)("friends_microservice_web_client", void 0, a)) {
                const a = (await ft.get(`/kudos/${e}/drawer/v2`, {
                    params: {
                        uiLanguage: t
                    }
                })).data.kudosDrawer;
                return null != a ? a : null
            }
            return null
        }
          , It = async (e, t) => {
            await ft.post("/kudos", {
                triggerTypes: e,
                triggerUserIds: t
            })
        }
          , wt = async (e, t, a) => {
            await ft.patch(`/kudos/${e}/drawer`, {
                eventIds: t,
                notificationType: a
            })
        }
          , kt = async (e, t) => {
            const a = {
                filterUsers: !0,
                pageSize: 50,
                uiLanguage: t
            };
            return (await ft.get(`/users/${e}/recommendations`, {
                params: a
            })).data
        }
          , Tt = async (e, t) => (await ft.patch(`/users/${e}/recommendations`, {
            userIds: t
        })).data
          , Ct = async (e, t) => {
            await ft.delete(`/users/${e}/recommendations/${t}`)
        }
          , Rt = async (e, t, a) => {
            const s = {
                cursor: a,
                pageSize: e,
                query: t,
                searchType: "QUERY"
            };
            return (await ft.get("/users", {
                params: s
            })).data
        }
          , Lt = async (e, t) => (await ft.get(`/users/${e}/profile`, {
            params: {
                pageSize: t
            }
        })).data
          , Pt = async (e, t, a) => (await ft.get(`/users/${e}/following`, {
            params: {
                pageSize: t,
                ...a ? {
                    pageAfter: a
                } : void 0,
                viewerId: (0,
                G.Jb)()
            }
        })).data.following
          , At = async (e, t, a) => (await ft.get(`/users/${e}/followers`, {
            params: {
                pageSize: t,
                ...a ? {
                    pageAfter: a
                } : void 0,
                viewerId: (0,
                G.Jb)()
            }
        })).data.followers
          , Dt = async (e, t, a) => (await ft.get(`/users/${e}/friends-in-common`, {
            params: {
                pageSize: t,
                ...a ? {
                    pageAfter: a
                } : void 0
            }
        })).data.friendsInCommon
          , Ot = async (e, t, a, s, n) => {
            const r = {
                component: t,
                follow_reason: a,
                follow_suggestion_score: n,
                suggested_reason: s
            };
            await ft.post(`/users/${(0,
            G.Jb)()}/follow/${e}`, r)
        }
          , Nt = async e => {
            await ft.delete(`/users/${(0,
            G.Jb)()}/follow/${e}`)
        }
          , xt = async e => {
            await ft.post(`/users/${(0,
            G.Jb)()}/block/${e}`)
        }
          , Mt = async e => {
            await ft.delete(`/users/${(0,
            G.Jb)()}/block/${e}`)
        }
          , Ft = async (e, t, a) => (await ft.post(`/users/${t}/block/${a}/token/${e}`)).data
          , Ut = async () => (await ft.post(`/users/${(0,
        G.Jb)()}/request-parental-consent-for-social`, {
            action: "enableSocial"
        })).data
          , Ht = async (e, t, a) => (await ft.patch(`/users/${t}/update-social-settings/token/${e}`, {
            action: a
        })).data
          , Gt = async ({eventType: e, expirationTime: t, nudgeType: a, recipientId: s, remainingEvents: n, shouldSendPush: r, userId: i, winStreak: o}) => {
            await ft.post(`/users/${i}/friends-quests/${s}/nudge`, {
                eventType: ht[e],
                expirationTime: t,
                nudgeType: a,
                remainingEvents: n,
                shouldSendPush: r,
                winStreak: o
            })
        }
          , Vt = async ({data: e, nudgeType: t, source: a, targetUserIds: s, userId: n, via: r}) => {
            await ft.post("/nudge", {
                data: e,
                nudgeType: t,
                source: a,
                targetUserIds: s,
                userId: n,
                via: r
            })
        }
          , zt = async e => (await ft.get(`/users/${e}/matches`, {
            params: {
                activityName: "friendsStreak"
            }
        })).data
          , Bt = async e => (await ft.get(`/users/${e}/matches/potential-matches`, {
            params: {
                activityName: "friendsStreak"
            }
        })).data
          , jt = async (e, t) => {
            await ft.patch(`/users/${e}/matches`, {
                activityName: "friendsStreak",
                matchIds: [t]
            })
        }
          , $t = async (e, t) => (await ft.post(`/users/${e}/matches`, {
            activityName: "friendsStreak",
            intendedMatches: [{
                targetUserIds: [t]
            }]
        })).data
          , Zt = async (e, t) => {
            await ft.delete(`/users/${e}/matches`, {
                activityName: "friendsStreak",
                matchIds: [t]
            })
        }
          , Wt = async (e, t) => {
            await ft.patch(`/users/${e}/matches/acknowledge-end`, {
                activityName: "friendsStreak",
                matchIds: [t]
            })
        }
          , qt = ne("")
          , Qt = async e => (await qt.get("/friends-streak/matches", {
            params: {
                matchIds: e.join(",")
            }
        })).data
          , Kt = se("https://goals-api.duolingo.com")
          , Yt = async e => (await Kt.get(`/schema?ui_language=${e}`)).data
          , Jt = async ({timezone: e, uiLanguage: t, userId: a}) => (await Kt.get(`/users/${a}/progress`, {
            params: {
                timezone: e,
                ui_language: t
            }
        })).data
          , Xt = async e => (await Kt.get(`/users/${e}/quests`)).data
          , ea = async ({goalId: e, questId: t, questSlot: a, timestamp: s, timezone: n, userId: r}) => {
            await Kt.post(`/users/${r}/quest`, {
                goal_id: e,
                quest_id: t,
                quest_slot: a,
                timestamp: s.toISOString(),
                timezone: n
            })
        }
          , ta = async (e, t, a, s) => {
            await Kt.post(`/users/${e}/progress/batch`, {
                metric_updates: t.metricUpdates,
                timestamp: null == a ? void 0 : a.toISOString(),
                timezone: s
            })
        }
          , aa = new J("https://api.hsforms.com")
          , sa = (e, t) => na("22404983", "48a49871-198d-470d-a32f-a959d7b72c44", [{
            name: "email",
            value: e
        }, {
            name: "username",
            value: t
        }])
          , na = (e, t, a) => aa.post(`/submissions/v3/integration/submit/${e}/${t}`, {
            context: {
                pageUri: window.location.href
            },
            fields: a
        });
        var ra, ia, oa;
        !function(e) {
            e.SUPER = "premium_subscription",
            e.MAX = "gold_subscription",
            e.IMMERSIVE_SUPER = "immersive_subscription"
        }(ra || (ra = {})),
        function(e) {
            e.IOS = "APPLE",
            e.Schools = "DUOLINGO_SCHOOLS",
            e.Stripe = "DUOLINGO",
            e.Android = "GOOGLE_PLAY",
            e.ImmersivePlus = "IMMERSIVE_PLUS",
            e.Admin = "NONE"
        }(ia || (ia = {})),
        function(e) {
            e.Standard = "STANDARD",
            e.NewYears2025 = "NEW_YEARS_2025",
            e.MAX_MVP = "DUOLINGO_MAX_MVP"
        }(oa || (oa = {}));
        var la = a(44780);
        const ca = se("https://duolingo-leaderboards-prod.duolingo.com")
          , da = "7d9f5dd1-8423-491a-91f2-2532052038ce"
          , ua = "6a7eea1c-f80b-48a7-9c29-ddb4cd7d84e6"
          , ga = "d50df136-ca7a-4c17-8c44-83f599174f58"
          , pa = "4b668ba6-288d-4b78-81a3-7b213175ae2c"
          , ma = "b7f7f746-212e-42a2-aa70-54beacad9011"
          , ha = () => (0,
        te.ky)("debugUseDogfoodingTournamentLeaderboard") ? ga : pa
          , _a = () => (0,
        te.ky)("debugUseDogfoodingLeaguesLeaderboard") ? ua : da
          , va = e => "TROPHY,winner" === e ? "TROPHY_DIAMOND" : (0,
        la.gs)(e) ? e : "NONE"
          , fa = e => ({
            itemId: e.item_id,
            itemQuantity: e.item_quantity,
            rank: e.rank,
            rankRange: e.rank_range,
            rewardType: e.reward_type,
            tier: e.tier
        })
          , Sa = e => ({
            cohortSize: e.cohort_size,
            cohortType: e.cohort_type,
            numDemoted: e.num_demoted,
            numLosers: e.num_losers,
            numPromoted: e.num_promoted,
            numWinners: e.num_winners,
            rewards: e.rewards.map(fa),
            scoreType: e.score_type
        })
          , ya = e => ({
            contestEnd: Date.parse(e.contest_end),
            contestStart: Date.parse(e.contest_start),
            contestState: e.contest_state,
            registrationEnd: Date.parse(e.registration_end),
            registrationStart: Date.parse(e.registration_start),
            registrationState: e.registration_state,
            ruleset: Sa(e.ruleset)
        })
          , Ea = e => ({
            avatarUrl: e.avatar_url,
            displayName: e.display_name,
            hasRecentActivity: e.has_recent_activity_15,
            reaction: va(e.reaction),
            score: e.score,
            userId: e.user_id
        })
          , ba = e => ({
            creationDate: Date.parse(e.creation_date),
            id: e.cohort_id,
            rankings: e.rankings.map(Ea),
            tier: e.tier
        })
          , Ia = e => ({
            cohort: ba(e.cohort),
            complete: e.complete,
            contest: ya(e.contest),
            isDemoted: e.is_demoted,
            isLoser: e.is_loser,
            isPromoted: e.is_promoted,
            isWinner: e.is_winner,
            score: e.score,
            userId: e.user_id
        })
          , wa = async (...e) => {
            (await Promise.resolve().then(a.bind(a, 79465))).trackLeaderboardApiEvent(...e)
        }
          , ka = async (e, t, a=!1) => {
            wa("fetch", {
                unlocked: a
            });
            const s = `/leaderboards/${e}/users/${t}`
              , n = {};
            return a && (n.client_unlocked = !0),
            n.get_reactions = !0,
            (e => {
                const t = {
                    streakInTier: e.streak_in_tier,
                    tier: e.tier,
                    topThreeFinishes: e.top_three_finishes
                };
                return void 0 !== e.num_sessions_remaining_to_unlock && (t.numSessionsRemainingToUnlock = e.num_sessions_remaining_to_unlock),
                void 0 !== e.num_wins && (t.numWins = e.num_wins),
                void 0 !== e.active && (t.active = null === e.active ? null : Ia(e.active)),
                void 0 !== e.ended && ("result" === (0,
                te.ky)("debugLeaderboards") && e.active ? t.ended = [Ia(e.active)] : t.ended = e.ended.map(Ia)),
                void 0 !== e.leaderboard && (t.leaderboard = (e => ({
                    activeContest: e.active_contest ? ya(e.active_contest) : null,
                    nextContestStart: e.next_contest_start ? Date.parse(e.next_contest_start) : null
                }))(e.leaderboard)),
                t
            }
            )((await ca.get(s, {
                params: n
            })).data)
        }
          , Ta = async (e, t) => {
            wa("join");
            const a = `/leaderboards/${e}/users/${t}`;
            await ca.post(a)
        }
          , Ca = async (e, t) => {
            wa("clear_ended");
            const a = `/leaderboards/${e}/users/${t}`;
            await ca.patch(a)
        }
          , Ra = e => "TROPHY_DIAMOND" === e ? "TROPHY,winner" : e
          , La = async (e, t, a) => {
            wa("set_reaction", {
                cohorted: !0
            });
            const s = `/reactions/${e}/users/${t}`
              , n = {
                reaction: Ra(a)
            };
            await ca.patch(s, n)
        }
          , Pa = async (e, t) => {
            wa("fetch_reaction_uncohorted");
            const a = `/reactions/uncohorted/${e}/users/${t}`;
            return va((await ca.get(a)).data.reaction)
        }
          , Aa = async (e, t, a) => {
            wa("set_reaction", {
                cohorted: !1
            });
            const s = `/reactions/uncohorted/${e}/users/${t}`
              , n = {
                reaction: Ra(a)
            };
            await ca.patch(s, n)
        }
        ;
        var Da = a(67116);
        const Oa = se("https://www.duolingo.com/2017-06-30/messaging")
          , Na = (e, t={}) => Oa.post("/ack-message/", {
            messageId: {
                [e]: t
            },
            userId: (0,
            G.Jb)()
        })
          , xa = e => Oa.post("/ack-messages/", {
            sessionEndMessageLogs: e.map(( ({ctaWasClicked: e, messageId: t, timestamp: a}) => ({
                ctaWasClicked: e,
                sessionEndMessageId: {
                    [t]: {}
                },
                timestamp: a
            }))),
            userId: (0,
            G.Jb)()
        })
          , Ma = async (e, t) => (await Oa.post("/get-messages/", {
            potentialMessageIds: e.map((e => ({
                [e]: {}
            }))),
            uiLanguage: Da.h9,
            useOnboardingBackend: t,
            userId: (0,
            G.Jb)()
        })).data
          , Fa = async (e, t) => (await Oa.post("/get-messages/", {
            sessionEndPotentialMessageIds: e.map((e => ({
                [e]: {}
            }))),
            uiLanguage: Da.h9,
            useOnboardingBackend: t,
            userId: (0,
            G.Jb)()
        })).data
          , Ua = ne("/v2/mistakes");
        var Ha;
        !function(e) {
            e[e.ADD = 0] = "ADD",
            e[e.RESOLVE_INBOX = 1] = "RESOLVE_INBOX",
            e[e.RESOLVE_LEARNING = 2] = "RESOLVE_LEARNING"
        }(Ha || (Ha = {}));
        const Ga = async (e, t, a) => (await Ua.get(`/users/${(0,
        G.Jb)()}/courses/${e}/count`, {
            params: {
                includeListening: t,
                includeSpeaking: a
            }
        })).data.numberMistakes
          , Va = async ({countLimit: e, courseId: t, includeListening: a, includeSpeaking: s}) => (await Ua.get(`/users/${(0,
        G.Jb)()}/courses/${t}`, {
            params: {
                includeListening: a,
                includeSpeaking: s,
                limit: e,
                requestType: "INBOX"
            }
        })).data.mistakes
          , za = async ({courseId: e, expectedMistakes: t, session: a}) => {
            var s;
            const n = null === (s = null == a ? void 0 : a.challenges) || void 0 === s ? void 0 : s.map((e => e.challengeGeneratorIdentifier)).filter((e => void 0 !== e))
              , r = null == n ? void 0 : n.map((e => e.generatorId))
              , i = null == t ? void 0 : t.filter((e => !(null == r ? void 0 : r.includes(e.generatorId))))
              , o = null == i ? void 0 : i.map((e => ({
                challengeIdentifier: e,
                patchType: Ha.RESOLVE_INBOX
            })));
            void 0 !== o && 0 !== o.length && await Ua.patch(`/users/${(0,
            G.Jb)()}/courses/${e}`, {
                incomingMistakes: o
            })
        }
          , Ba = se("https://invite.duolingo.com")
          , ja = e => Ba.post("/user/splash-load", {
            invite_code: e
        });
        var $a;
        !function(e) {
            e.SKILL = "SKILL",
            e.STORY = "STORY",
            e.XP = "XP_CHALLENGE",
            e.UNIT = "UNIT"
        }($a || ($a = {}));
        const Za = [$a.SKILL, $a.STORY]
          , Wa = se("https://schools.duolingo.com/api/1")
          , qa = se("https://schools.duolingo.com/api/2")
          , Qa = async () => (await Wa.get("/observers/list_settings_classrooms")).data.classrooms
          , Ka = async e => (await Wa.get("/observers/get_observer_for_code", {
            params: {
                link_code: e
            }
        })).data
          , Ya = async e => (await Wa.post("/observers/join_classroom_by_code", {
            link_code: e
        })).data
          , Ja = async e => {
            await Wa.post("/observers/leave_classroom", {
                classroom_id: e
            })
        }
          , Xa = async e => (await qa.get(`/leaderboards/${e}/classroom_info`, {
            params: {
                user_id: e
            }
        })).data
          , es = e => qa.post(`/students/${e}/auto_follow`)
          , ts = async (e, t, a) => (await qa.get("/activities", {
            params: {
                end_time: a,
                start_time: t,
                user_ids: [e].join(",")
            }
        })).data[e]
          , as = se("https://jeeves.duolingo.com")
          , ss = async e => (await as.get("/api/1/detect_duplicates", {
            params: {
                issue_key: e
            }
        })).data
          , ns = e => as.post("/api/1/fully_connect_duplicates", {
            issue_keys: e
        })
          , rs = async e => (await as.get(`/api/1/shakira/features?project=${e}`)).data.features
          , is = async () => (await as.get("/api/2/shakira/slack_report_types")).data
          , os = async e => (await as.post("/api/2/shakira/suggested_features", e)).data
          , ls = async (e, t) => {
            const a = new FormData;
            return a.set("issueData", JSON.stringify(e)),
            t.forEach(( ([e,t]) => a.set(e, t))),
            (await as.post("/api/2/shakira/report_issue", a)).data
        }
          , cs = ne("")
          , ds = async e => {
            await cs.post("/d", {
                phoneNumber: e
            })
        }
        ;
        var us = a(50498);
        const gs = se("https://spam-control-api.duolingo.com");
        var ps;
        !function(e) {
            e.BAD_BEHAVIOR = "bad_behavior",
            e.BAD_NAME = "bad_name",
            e.NUDITY = "nudity",
            e.SPAM = "spam",
            e.SOMETHING_ELSE = "something_else"
        }(ps || (ps = {}));
        const ms = async (e, t) => {
            const {name: a="(Unknown)", picture: s, username: n="(Unknown)", id: r} = e;
            await (0,
            us.XD)((async () => gs.post("/reports/user_profiles", {
                name: a,
                picture: `https:${s}/xlarge`,
                reason: t,
                user_id: r,
                username: n
            })), {
                retries: 1
            })
        }
          , hs = se("https://stories.duolingo.com")
          , _s = async ({storyId: e, ...t}) => (await hs.get(`/api2/stories/${e}`, {
            params: t
        })).data
          , vs = async (e, t) => (await hs.post(`/api2/stories/${e}/complete`, t)).data
          , fs = async e => (await hs.post("/api/userReply", e)).data;
        let Ss, ys = 0;
        const Es = async (e, t, a) => {
            if (void 0 === Ss || Ss + 1e4 < Date.now())
                ys = 1,
                Ss = Date.now();
            else if (ys += 1,
            ys >= 5)
                return (0,
                te.Au)() && alert("Practice hub stories has been refreshed too frequently - please contact a developer."),
                void (0,
                U.vU)("Practice hub stories has been refreshed too many times", {
                    data: {
                        practiceHubStoryApiCount: ys
                    }
                });
            return (await hs.get("/api2/practiceHubStories", {
                params: {
                    featuredStoryId: e,
                    fromLanguage: t,
                    illustrationFormat: "svg",
                    learningLanguage: a
                }
            })).data
        }
          , bs = ne()
          , Is = async e => (await bs.get(`/users/${e}/streak-goal-current`)).data
          , ws = async (e, t) => (await bs.put(`/users/${e}/streak-goal-current`, void 0, {
            params: {
                tier: t
            }
        })).data
          , ks = async e => (await bs.get(`/users/${e}/streak-goal-next-options`)).data
          , Ts = re("")
          , Cs = async () => {
            await Ts.post("/logout")
        }
          , Rs = async e => {
            const t = new FormData;
            t.append("image", e),
            await Ts.post("/avatars", t)
        }
          , Ls = async e => {
            await Ts.post("/dismiss_notification", {
                message: e.toLowerCase()
            })
        }
          , Ps = async e => (await Ts.get("/admin_tools", {
            params: {
                log_type: "deletes",
                page: e
            }
        })).data
          , As = async () => (await Ts.get("/admin_tools/shadow_banned")).data
          , Ds = async e => {
            const t = (await Ts.post("/admin_tools/shadow_banned/add", {
                username: e
            })).data;
            if (t.error)
                throw t.error instanceof Error ? t.error : Error(t.error);
            return t
        }
          , Os = async e => {
            const t = (await Ts.post("/admin_tools/shadow_banned/remove", {
                user_id: e
            })).data;
            if (t.error)
                throw t.error instanceof Error ? t.error : Error(t.error);
            return t
        }
          , Ns = async () => (await Ts.get("/admin_tools/social_currency_stats")).data;
        var xs = a(26886)
          , Ms = a(86500);
        const Fs = re("/api/1")
          , Us = async (e, t, a, s) => {
            const n = new FormData;
            n.append("user_id", `${e}`),
            n.append("username", t),
            s && n.append("image", s),
            a.length && n.append("ban_description", a),
            await Fs.post("/shadowban_user", n)
        }
          , Hs = e => "zh-CN" === e ? "zh" : e
          , Gs = e => "zh" === e ? "zh-CN" : e
          , Vs = ({from_language: e, from_language_id: t, from_language_name: a, learning_language: s, learning_language_id: n, learning_language_name: r, num_learners: i, num_learners_string: o, ...l}) => ({
            fromLanguage: e,
            fromLanguageId: Hs(t),
            fromLanguageName: a,
            learningLanguage: s,
            learningLanguageId: Hs(n),
            learningLanguageName: r,
            numLearners: i,
            numLearnersString: o,
            ...l
        })
          , zs = async () => (await Fs.get("/courses/list")).data.map(Vs).filter(( ({fromLanguageId: e, learningLanguageId: t}) => ((0,
        Da.nV)(t, e) || (0,
        Ms.H)(e, t)) && !(0,
        xs.It)(t, e)))
          , Bs = async (e, t=Da.h9, a=Da.h9) => ( ({beta_date: e, from_language: t, from_language_name: a, from_language_id: s, learning_language: n, learning_language_id: r, learning_language_name: i, num_learners: o, num_learners_string: l, released_date: c, released_date_string: d, start_date: u, subscriber_count: g, user_subscribed: p, ...m}) => ({
            betaDate: e,
            fromLanguage: t,
            fromLanguageId: Hs(s),
            fromLanguageName: a,
            learningLanguage: n,
            learningLanguageId: Hs(r),
            learningLanguageName: i,
            numLearners: o,
            numLearnersString: l,
            releasedDate: c,
            releasedDateString: d,
            startDate: u,
            subscriberCount: g,
            userSubscribed: p,
            ...m
        }))((await Fs.get(`/courses/${Gs(e)}/${Gs(t)}/show`, {
            params: {
                ui_language_abbrev: (0,
                Da.D3)(a)
            }
        })).data)
          , js = z.HP((async e => (await Fs.get("/get_language_tokens", {
            params: {
                language: e
            }
        })).data.tokens || []))
          , $s = async (e, t) => {
            await Fs.post("/me/register_device", {
                registration_id: e,
                subscription: t
            })
        }
          , Zs = async e => {
            await Fs.post("/me/unregister_device", {
                registration_id: e
            })
        }
        ;
        var Ws = a(16324)
          , qs = a(451)
          , Qs = a(99773)
          , Ks = a(41364)
          , Ys = a(71371)
          , Js = a(25062)
          , Xs = a(32499)
          , en = a(54448)
          , tn = a(11811);
        const an = ne("/2017-06-30")
          , sn = "Idempotency-Key";
        an.addErrorInterceptor(( (e, {response: t}) => {
            if (401 === (null == t ? void 0 : t.status) && !e.includes("login")) {
                if ((0,
                G.Pc)())
                    return (0,
                    U.um)("Requiring logged-out user to log in again", {
                        sample: .1
                    }),
                    ie(),
                    (0,
                    Ue.Zs)();
                (0,
                U.vU)("Attempted authenticated call while logged-out")
            }
        }
        )),
        (0,
        te.gQ)("debugStripe") && an.setServiceEnvironment("purchasing-backend", "staging").setServiceEnvironment("shop-backend", "staging-1").setServiceEnvironment("subscriptions-backend", "staging-1"),
        (0,
        te.gQ)("monolithStaging") && an.setServiceEnvironment("monolith", `next-${(0,
        te.ky)("monolithStaging")}`),
        (0,
        te.gQ)("edgeGatewayStaging") && an.setServiceEnvironment("user-report-stats-backend", "staging");
        const nn = (e=!0) => ["acquisitionSurveyReason", "adsConfig", "animationEnabled", "betaStatus", "blockedUserIds", "blockerUserIds", "canUseModerationTools", "classroomLeaderboardsEnabled", "courses", "creationDate", "currentCourseId", "email", "emailAnnouncement", "emailAssignment", "emailAssignmentComplete", "emailClassroomJoin", "emailClassroomLeave", "emailEditSuggested", "emailEventsDigest", "emailFollow", "emailPass", "emailPromotion", "emailResearch", "emailWeeklyProgressReport", "emailSchoolsAnnouncement", "emailSchoolsNewsletter", "emailSchoolsProductUpdate", "emailSchoolsPromotion", "emailStreamPost", "emailVerified", "emailWeeklyReport", "enableMicrophone", "enableSoundEffects", "enableSpeaker", `experiments{${Qs.rn}}`, "facebookId", "fromLanguage", "gemsConfig", "globalAmbassadorStatus", "googleId", "hasFacebookId", "hasGoogleId", "hasPlus", "health", "id", "inviteURL", "joinedClassroomIds", "lastResurrectionTimestamp", "learningLanguage", "location", "name", "observedClassroomIds", "optionalFeatures", "persistentNotifications", "picture", "plusDiscounts", "practiceReminderSettings", "privacySettings", "referralInfo", "rewardBundles", "roles", "sessionCount", "shouldPreventMonetizationForSchoolsUser", "streak", "streakData{currentStreak,longestStreak,previousStreak}", "timezone", "timezoneOffset", "totalXp", "trackingProperties", "username", "webNotificationIds", "xpGains", "xpGoal", "zhTw"].concat(e ? ["currentCourse"] : []);
        var rn;
        !function(e) {
            e.COMMENT = "COMMENT",
            e.FOLLOW = "FOLLOW",
            e.LESSON = "LESSON",
            e.MASTER = "MASTER",
            e.PASS = "PASS",
            e.PRACTICE = "PRACTICE",
            e.STREAM_POST = "STREAM_POST",
            e.TEST = "TEST",
            e.TRANSLATION = "TRANSLATION",
            e.WELCOME = "WELCOME"
        }(rn || (rn = {}));
        const on = e => {
            if (["PREPAID", "TRIAL"].includes(e.couponType) && e.packageInfo) {
                if ("premium" === e.packageInfo[0].subscriptionType)
                    return e.packageInfo[0].isFamilyPlan ? "Super Family" : "Super";
                if ("gold" === e.packageInfo[0].subscriptionType)
                    return e.packageInfo[0].isFamilyPlan ? "Max Family" : "Max";
                throw Error("Invalid Subscription Type from Coupon")
            }
            if ("B2B_UNIVERSAL_CLOCK" === e.couponType)
                return "Super";
            throw Error("Invalid couponType")
        }
          , ln = e => {
            if ("PREPAID" === e.couponType && e.packageInfo) {
                if ("WEEK" === e.packageInfo[0].unitOfTime)
                    return "WEEK";
                if ("MONTH" === e.packageInfo[0].unitOfTime)
                    return "MONTH"
            }
            return "MONTH"
        }
          , cn = async (e, t=!0, a=null) => {
            await an.post("/login", {
                distinctId: (0,
                $.getDistinctId)(),
                signal: a,
                ...e
            }, {
                params: {
                    fields: t ? nn().join(",") : ""
                }
            })
        }
        ;
        var dn;
        !function(e) {
            e.CHANGE_PASSWORD = "CHANGE_PASSWORD",
            e.RESET_PASSWORD = "RESET_PASSWORD",
            e.SIGN_UP = "SIGN_UP"
        }(dn || (dn = {}));
        const un = () => "DUOLINGO_GENERAL" + ((0,
        te.gQ)("debugStripe") ? "_TEST" : "")
          , gn = async e => (await an.post("/password-quality/check", {
            ...e
        })).data
          , pn = async e => {
            await an.post("/login", {
                distinctId: (0,
                $.getDistinctId)(),
                ...e
            }, {
                params: {
                    fields: ""
                }
            })
        }
          , mn = async (e, t) => (await an.post("/users", {
            distinctId: (0,
            $.getDistinctId)(),
            signal: t,
            ...e
        }, {
            forceJsonDecoding: !0,
            params: {
                fields: "id"
            }
        })).data
          , hn = (0,
        Ks.p)("GET_USER")((async (e, t=void 0) => await fn(e, nn(t))))
          , _n = (0,
        Ks.p)("GET_USER")((async e => await fn(e, ["courses", "creationDate", "fromLanguage", "gemsConfig", "globalAmbassadorStatus", "hasPlus", "id", "learningLanguage", "location", "name", "picture", "privacySettings", "roles", "streak", "streakData{currentStreak,previousStreak}", "subscriberLevel", "totalXp", "username"])))
          , vn = ["picture", "roles", "rewardBundles", "trackingProperties"]
          , fn = async (e, t) => {
            const a = await an.get(`/users/${e}`, {
                params: {
                    fields: t.join(",")
                }
            })
              , s = a.data
              , n = ( () => {
                try {
                    return e === (0,
                    G.Jb)()
                } catch {
                    return !1
                }
            }
            )()
              , r = vn.filter((e => t.includes(e) && !(e in (null != s ? s : {}))));
            return n && r.length > 0 && (0,
            U.um)("Expected fields not present in user info response", {
                data: {
                    allMissingFields: t.filter((e => !(e in (null != s ? s : {})))),
                    dataPrefix: JSON.stringify(s).slice(0, 100),
                    expectedMissingFields: r,
                    firstMissingField: r[0],
                    isMissingRewardBundles: !t.includes("rewardBundles") || !s.rewardBundles,
                    requestedFields: t,
                    responseKeys: Object.keys(null != s ? s : {}),
                    status: a.status
                },
                once: !0
            }),
            s
        }
          , Sn = (e, t) => an.post(`/users/${e}/email-verifications`, {
            course_id: t
        })
          , yn = async (e, t) => (await an.patch(`/users/${e}/email-verifications/${t}`, {
            verified: !0
        })).data
          , En = async (e, t) => (await an.post("/email-removals", {
            email: e,
            token: t
        })).data
          , bn = async e => (await an.get("/onboarding/validate-username", {
            params: {
                username: e
            }
        })).data
          , In = async e => (await an.get("/users", {
            params: {
                fields: "users{id}",
                username: e
            }
        })).data.users
          , wn = async e => (await an.get("/users", {
            params: {
                email: e
            }
        })).data.users
          , kn = async (e, t, a, s=null) => {
            const n = a ? {
                fields: a.join(",")
            } : {};
            return (await an.patch(`/users/${e}`, {
                signal: s,
                ...t
            }, {
                forceJsonDecoding: !0,
                params: n
            })).data
        }
          , Tn = async (e, t) => {
            const a = t ? (0,
            je.zK)((0,
            je.g8)(t)) : void 0;
            return (await an.get(`/users/${e}/xp_summaries`, {
                params: {
                    startDate: a
                }
            })).data.summaries
        }
          , Cn = async (e, t, a) => (await an.get(`/users/${e}/moderated-events`, {
            params: {
                limit: a,
                types: t.join(",")
            }
        })).data.events
          , Rn = async (e, t) => {
            await an.post(`/users/${e}/messages`, {
                message: t
            })
        }
          , Ln = e => an.delete(`/users/${(0,
        G.Jb)()}/courses/${e}`, {})
          , Pn = async e => {
            var t, a, s;
            const n = (e.type !== tn.FF.AlphabetLesson && e.type !== tn.FF.AlphabetPractice || !(0,
            te.NY)() ? await an.post("/sessions", e) : await ze(e.learningLanguage, e.fromLanguage, e)).data;
            if (e.type === tn.FF.DuoRadio) {
                const r = n.elements.filter((e => "challenge" === e.type && "challengeType"in e));
                n.challenges = (0,
                qs.Qj)(null !== (t = r) && void 0 !== t ? t : [], n),
                n.fromLanguage = null !== (a = e.fromLanguage) && void 0 !== a ? a : "en",
                n.learningLanguage = null !== (s = e.learningLanguage) && void 0 !== s ? s : "es",
                n.type = tn.FF.DuoRadio
            }
            if (!Array.isArray(n.challenges))
                throw Error("No challenges present in session");
            return n
        }
          , An = (e, {onError: t, signal: a}={}) => {
            const s = new AbortController;
            return (0,
            us.XD)((async () => {
                try {
                    let t;
                    if (t = e.type === tn.FF.AlphabetLesson || e.type === tn.FF.AlphabetPractice ? await Ve(e) : await an.put(`/sessions/${e.id}`, {
                        ...e
                    }, {
                        headers: {
                            "Idempotency-Key": e.id
                        },
                        timeout: 1e4
                    }),
                    202 === t.status)
                        throw Error("Session has been accepted but not yet processed.");
                    return t.data
                } catch (e) {
                    throw Ys.Z.remove("session_end_grade"),
                    null == t || t(e),
                    e.response && (e.response.status >= 500 && e.response.status < 600 && !e.response.headers["no-retry"] || s.abort()),
                    e
                }
            }
            ), {
                backoffFn: e => 250 * 2 ** (e - 1) * (.75 + 2 * Math.random() * .25),
                retries: 1 / 0,
                signal: a ? (0,
                us.yv)(s.signal, a) : s.signal,
                stopAtTime: Date.now() + 24e4
            })
        }
          , Dn = {
            BAD_AUDIO: "BAD_AUDIO",
            BAD_HINTS: "BAD_HINTS",
            BAD_IMAGE: "BAD_IMAGE",
            BAD_OPTION: "BAD_OPTION",
            BAD_PROMPT: "BAD_PROMPT",
            CHARACTER_DISPLAY: "CHARACTER_DISPLAY",
            MISSING_AUDIO: "MISSING_AUDIO",
            MISSING_HINTS: "MISSING_HINTS",
            MISSING_IMAGE: "MISSING_IMAGE",
            NOT_ACCEPTED: "NOT_ACCEPTED",
            OFFENSIVE_OPTION: "OFFENSIVE_OPTION",
            OTHER_ISSUE: "OTHER_ISSUE",
            WRONG_ACCEPTED: "WRONG_ACCEPTED"
        }
          , On = async (e, t) => {
            const a = {
                challenge: (0,
                en.g)(e),
                problems: t
            };
            await an.post(`/challenges/${e.id}/reports`, a)
        }
          , Nn = async () => (await an.get("/shop-items")).data.shopItems
          , xn = async (e="US", t, a) => {
            const s = new URLSearchParams;
            s.set("billingCountryCode", e),
            s.set("vendor", "VENDOR_STRIPE"),
            s.append("supportedLayouts", oa.Standard),
            t && s.append("supportedLayouts", oa.NewYears2025),
            a && s.append("supportedLayouts", oa.MAX_MVP);
            const n = ( () => {
                if (Ue.AA.some((e => window.location.href.includes(e))))
                    return {
                        "User-Agent": `${window.navigator.userAgent} DuolingoWebIos`
                    }
            }
            )()
              , r = (await an.get(`/users/${(0,
            G.Jb)()}/subscription-catalog`, {
                headers: n,
                params: s
            })).data
              , i = t => void 0 === t.planCurrency ? "UNDEFINED" : (0,
            Js.T4)(( () => {
                const e = Math.floor(t.priceInCents / t.periodLengthInMonths)
                  , a = Math.ceil(t.priceInCents / t.periodLengthInMonths);
                return [49, 99].includes(e % 100) ? e : a
            }
            )(), t.planCurrency, e)
              , o = t => void 0 === t.planCurrency ? "UNDEFINED" : (0,
            Js.T4)(t.priceInCents, t.planCurrency, e)
              , l = r.plusPackageViewModels.find((e => 1 === e.periodLengthInMonths))
              , c = t => t === Xs._r.TwelveMonth && l ? (0,
            Js.T4)(12 * l.priceInCents, l.planCurrency, e) : void 0
              , d = t => void 0 === t.undiscountedPriceInCents ? void 0 : (0,
            Js.T4)(t.undiscountedPriceInCents, t.planCurrency, e)
              , u = e => {
                const a = 1 === (s = e).periodLengthInMonths ? Xs._r.OneMonth : s.isFamilyPlan ? Xs._r.FamilyPlan : Xs._r.TwelveMonth;
                var s;
                return {
                    ...e,
                    formattedHypotheticalYearlyPrice: c(a),
                    formattedMonthlyPrice: i(e),
                    formattedNypUndiscountedPrice: d(e),
                    formattedPrice: o(e),
                    isFreeTrial: e.trialPeriodInDays > 0,
                    isNewYears: t && a === Xs._r.TwelveMonth,
                    planType: a,
                    type: e.type
                }
            }
            ;
            return {
                currentPlan: r.currentPlan ? u(r.currentPlan) : void 0,
                subscriptionPlans: r.plusPackageViewModels.map(u)
            }
        }
          , Mn = async e => (await an.get(`/users/${(0,
        G.Jb)()}/shop-items/${e}`)).data
          , Fn = async (e, t) => an.patch(`/users/${(0,
        G.Jb)()}/shop-items/${e}`, t)
          , Un = async (e, t, a, s) => (await an.put(`/users/${(0,
        G.Jb)()}/payment-methods/${e}`, {
            product: t,
            stripeToken: a
        }, {
            headers: {
                [sn]: s
            }
        })).data
          , Hn = async () => (await an.get(`/users/${(0,
        G.Jb)()}`, {
            params: {
                fields: "paymentMethods"
            }
        })).data.paymentMethods
          , Gn = async () => (await an.get(`/users/${(0,
        G.Jb)()}`, {
            params: {
                fields: "shopItems{familyPlanInfo{inviteToken,pendingInvites,ownerId,secondaryMembers},itemName,purchaseDate,purchaseId,purchasePrice,quantity,subscriptionInfo{currency,expectedExpiration,extendedFreeTrialLength,isFreeTrialPeriod,periodLength,price,renewer,renewing,vendorPurchaseId},wagerDay}"
            }
        })).data.shopItems
          , Vn = async (e, t) => (await an.post(`/users/${(0,
        G.Jb)()}/payment-methods`, {
            product: Js.hp.Duolingo,
            stripeToken: e
        }, {
            headers: {
                [sn]: t
            }
        })).data
          , zn = async (e, t) => (await an.post(`/users/${(0,
        G.Jb)()}/create-setup`, {
            paymentMethodId: e,
            product: Js.hp.Duolingo
        }, {
            headers: {
                [sn]: t
            }
        })).data
          , Bn = async (e, t) => (await an.post(`/users/${(0,
        G.Jb)()}/attach-payment-method`, {
            paymentMethodId: e,
            product: Js.hp.Duolingo
        }, {
            headers: {
                [sn]: t
            }
        })).data
          , jn = async ({email: e, idempotencyKey: t, languageCode: a, productId: s, promoCode: n}) => {
            const r = {
                couponCode: n,
                email: e,
                languageCode: a,
                productId: s,
                stripeAccount: un(),
                vendor: "VENDOR_STRIPE"
            };
            return (0,
            Ws.EV)((await an.post(`/users/${(0,
            G.Jb)()}/create-order`, (0,
            Ws.Ed)(r), {
                headers: {
                    [sn]: t
                }
            })).data)
        }
          , $n = async (e, t) => {
            var a;
            const s = null === (a = e.subscriptionInfo) || void 0 === a ? void 0 : a.vendorPurchaseId;
            if (void 0 === s)
                throw Error("Current subscription doesn't have a valid vendorPurchaseId");
            const n = {
                subscriptionInfo: {
                    vendor: "VENDOR_STRIPE",
                    vendorPurchaseId: s
                },
                vendor: "VENDOR_STRIPE",
                vendorSpecificPayload: JSON.stringify({
                    account: un(),
                    newSubscriptionSkuIds: t
                })
            };
            return (await an.post("/purchase-subscription-preview", n)).data
        }
          , Zn = async (e, t, a, s) => {
            const n = new AbortController;
            let r = 0;
            return (0,
            us.XD)((async () => {
                try {
                    return {
                        item: (await an.post(`/users/${(0,
                        G.Jb)()}/shop-items`, {
                            itemName: e,
                            ...t
                        }, {
                            headers: a ? {
                                [sn]: a
                            } : void 0
                        })).data,
                        numRetries: r
                    }
                } catch (e) {
                    throw e.response && (e.response.status >= 500 && e.response.status < 600 && !e.response.headers["no-retry"] && !0 !== s ? r++ : n.abort()),
                    e
                }
            }
            ), {
                retries: 1,
                signal: n.signal
            })
        }
          , Wn = async ({itemName: e, purchasingId: t, receivingId: a}) => (await an.post(`/users/${t}/gifts/${a}`, {
            itemName: e
        })).data
          , qn = async e => (await an.get(`/plus-coupon-codes/${e}`)).data
          , Qn = async (e, t) => (await an.get(`/users/${e}/coupon-codes/${t}`)).data
          , Kn = ["ageRestrictionLimit", `clientExperiments{${Qs.Sg}}`, "featureFlags", "ipCountry", "speechHost"]
          , Yn = async e => 200 === (await an.get(`/bango/invite/${e}`)).status
          , Jn = async e => 200 === (await an.post(`/users/${(0,
        G.Jb)()}/activate-bango-subscription`, {
            inviteToken: e
        })).status
          , Xn = async () => (await an.get("/config", {
            params: {
                fields: Kn.join(",")
            }
        })).data
          , er = async e => {
            await an.delete(`/users/${(0,
            G.Jb)()}/shop-items`, {
                itemName: e
            })
        }
          , tr = async () => (await an.get(`/users/${(0,
        G.Jb)()}/privacy-settings`)).data.privacySettings.map((e => ({
            ...e,
            id: e.id.toUpperCase()
        })))
          , ar = async e => (await an.patch(`/users/${(0,
        G.Jb)()}/privacy-settings`, e, {
            params: {
                fields: "privacySettings"
            }
        })).data.privacySettings
          , sr = e => an.post("/password-reset", {
            email: e
        })
          , nr = async (e, t) => {
            await an.post("/tracking-status", {
                distinctId: t,
                enabled: e
            })
        }
          , rr = async ({id: e, fromLanguage: t, learningLanguage: a}, s, n) => {
            await an.patch(`/users/${e}/rewards/${s}`, {
                consumed: !0,
                fromLanguage: t,
                learningLanguage: a,
                pathLevelSpecifics: n
            })
        }
          , ir = async e => (await an.get(`/attribution/survey/custom?uiLanguage=${e}`)).data.responses
          , or = async e => (await an.post(`/users/${(0,
        G.Jb)()}/plus-discounts`, {
            discountType: e
        })).data
          , lr = (e, t, a) => an.patch(`/users/${e}/experiments/${t}`, a)
          , cr = async () => {
            await an.put(`/users/${(0,
            G.Jb)()}/remove-heart`)
        }
          , dr = async (e, t, a) => (await an.get(`/users/${e}/vocab-summary?endTime=${a}&startTime=${t}`)).data
          , ur = async () => (await an.get(`/users/${(0,
        G.Jb)()}/energy-info`)).data
          , gr = async ({courseId: e, fields: t="scores", ...a}) => (await an.get(`/score-info/courses/${e}`, {
            params: {
                fields: t,
                ...a
            }
        })).data
          , pr = async ({courseId: e, ...t}) => (await an.patch(`/score-info/courses/${e}`, {
            ...t
        })).data
          , mr = async ({target: e, courseIds: t}) => (await an.post("/score-info/scores/sync", {
            course_ids: t,
            target: e
        })).data
          , hr = async e => {
            var t, a;
            try {
                return await an.patch("/score-info/scores/sync", e),
                {
                    success: !0
                }
            } catch (e) {
                return {
                    error: "BAD_EXTERNAL_SERVICE_STATE" === (null === (a = null === (t = null == e ? void 0 : e.response) || void 0 === t ? void 0 : t.data) || void 0 === a ? void 0 : a.error) ? e.response.data.detail.reason : "unknown error",
                    success: !1
                }
            }
        }
          , _r = ne("/2017-06-30")
          , vr = async e => (await _r.get(`/family-plan/invite/${e}`)).data
          , fr = async e => (await _r.post(`/users/${(0,
        G.Jb)()}/family-plan/members/invite/${e}`, {})).data
          , Sr = async e => 200 === (await _r.post(`/users/${e}/family-plan/invites/${(0,
        G.Jb)()}`)).status
          , yr = async e => 200 === (await _r.delete(`/users/${e}/family-plan/invites/${(0,
        G.Jb)()}`)).status
          , Er = async e => (await _r.get(`/users/${(0,
        G.Jb)()}/family-plan/invites`, {
            params: {
                ownerId: e
            }
        })).data
          , br = async e => 200 === (await _r.patch(`/users/${(0,
        G.Jb)()}/family-plan/invites/${e}`, {
            status: "ACCEPTED"
        })).status
          , Ir = async e => 200 === (await _r.patch(`/users/${(0,
        G.Jb)()}/family-plan/invites/${e}`, {
            status: "REJECTED"
        })).status
          , wr = (e, t) => _r.delete(`/users/${e}/family-plan/members/${t}`, {})
          , kr = se("https://www.duolingo.com/2017-06-30")
          , Tr = async () => {
            var e;
            if (null === (e = window.webkit) || void 0 === e ? void 0 : e.messageHandlers)
                return new Promise((e => {
                    window.weekly_data_callback = t => {
                        window.user_model_callback = a => {
                            if (t.current_streak = a.streakData.length,
                            t.current_learning_language = a.currentCourse.learningLanguage,
                            a.currentCourse.skills) {
                                const e = a.currentCourse.skills;
                                let s = 0
                                  , n = 0;
                                e.forEach((e => {
                                    e.forEach(( ({finishedLevels: e}) => {
                                        s += 1,
                                        e > 0 && (n += 1)
                                    }
                                    ))
                                }
                                )),
                                t.current_course_progress = n / s
                            }
                            e(t)
                        }
                        ,
                        window.webkit.messageHandlers.observer.postMessage({
                            get_user_model: {
                                callback: "user_model_callback",
                                fields: ["currentCourse", "streakData"]
                            }
                        })
                    }
                    ,
                    window.webkit.messageHandlers.observer.postMessage({
                        get_weekly_report_info: {
                            callback: "weekly_data_callback"
                        }
                    })
                }
                ));
            const {data: t} = await kr.get("/weekly-report-info");
            return t
        }
          , Cr = ne("/2017-06-30")
          , Rr = async ({fromLanguage: e, lastTotalLexemeCount: t, learningLanguage: a, limit: s=200, progressedSkills: n, sortBy: r="LEARNED_DATE", startIndex: i=0}) => (await Cr.post(`/users/${(0,
        G.Jb)()}/courses/${a}/${e}/learned-lexemes`, {
            lastTotalLexemeCount: t,
            progressedSkills: n
        }, {
            params: {
                limit: s,
                sortBy: r,
                startIndex: i
            }
        })).data
          , Lr = async (e, t, a) => (await Cr.post(`/users/${(0,
        G.Jb)()}/courses/${t}/${e}/learned-lexemes/count`, {
            progressedSkills: a
        })).data
          , Pr = async (e, t, a, s) => (await Cr.post(`/users/${(0,
        G.Jb)()}/courses/${a}/${e}/practice-lexemes`, {
            lastTotalLexemeCount: t,
            progressedSkills: s
        })).data
          , Ar = async () => (await Cr.get("/words-list/supported-courses")).data
          , Dr = se("https://www.duolingo.com")
          , Or = se("https://yir.duolingo.com")
          , Nr = () => {
            const e = (0,
            j.vl)().id;
            return e ? Promise.resolve(e) : Dr.get("/2017-06-30/year-in-review-info").then((e => {
                var t;
                return (null === (t = null == e ? void 0 : e.data) || void 0 === t ? void 0 : t.report_url) ? (0,
                j.vl)(e.data.report_url.split("?")[1]).id : ""
            }
            )).catch(( () => (window.location.href = "https://www.duolingo.com",
            "")))
        }
          , xr = e => Or.get(`/2023/user_stats_${e}.json`, {
            forceJsonDecoding: !0
        }).then((e => e.data))
          , Mr = async e => {
            await Dr.patch("/2017-06-30/year-in-review-info", {
                learner_style: e
            })
        }
          , Fr = (0,
        a(80388).J9)() ? "zendesk.duolingo.cn" : "duolingotest.zendesk.com"
          , Ur = new J(`https://${Fr}/api/v2`)
          , Hr = async (e, t) => (await fetch(`https://${Fr}/api/v2/uploads?filename=${e}`, {
            body: t,
            headers: {
                "Content-Type": t.type
            },
            method: "POST"
        })).json()
          , Gr = async ({description: e, email: t, subject: a, tags: s, uploadTokens: n}) => {
            const r = {
                request: {
                    comment: {
                        body: e,
                        uploads: n
                    },
                    requester: {
                        email: t,
                        locale: window.duo.uiLanguage,
                        name: t
                    },
                    subject: a,
                    tags: s
                }
            };
            return (await Ur.post("/requests", r)).data
        }
          , Vr = (ne(),
        ne());
        Vr.enableFormEncoding();
        const zr = async e => (await Vr.get(`/support/tokens/${e}`)).data
          , Br = async (e, t, a, s, n, r) => {
            const i = new FormData;
            return i.set("description", n),
            i.set("email", t),
            i.set("subject", s),
            r.forEach((e => i.append("tags[]", e))),
            a.forEach((e => i.append("uploadTokens[]", e))),
            (await Vr.post(`/support/tokens/${e}/tickets`, i)).data
        }
          , jr = async (e, t, a, s, n, r, i) => {
            const o = new FormData;
            return o.set("client", e),
            o.set("description", r),
            o.set("email", t),
            o.set("extraData", a),
            o.set("subject", n),
            i.forEach((e => o.append("tags[]", e))),
            s.forEach((e => o.append("uploadTokens[]", e))),
            (await Vr.post("/support/tickets", o)).data
        }
          , $r = async e => (await Vr.get(`/help/faq?relative_domains=1&ui_language=${e}`)).data
          , Zr = async () => {
            const e = (await Vr.get("/global-status-message")).data;
            return {
                expiration: (0,
                je.zM)(e.expiration_seconds),
                message: e.message
            }
        }
          , Wr = se("https://www.duolingo.com/plushie-backend/pairing-code")
          , qr = async e => (await Wr.patch(`/${e}`)).data
    }
    ,
    50498: (e, t, a) => {
        "use strict";
        a.d(t, {
            Bw: () => l,
            XD: () => c,
            _v: () => d,
            f: () => o,
            p4: () => i,
            yv: () => r
        });
        var s = a(80254)
          , n = a(59815);
        const r = (...e) => {
            const t = new AbortController
              , a = () => {
                t.abort();
                for (const t of e)
                    t.removeEventListener("abort", a)
            }
            ;
            for (const t of e) {
                if (t.aborted) {
                    a();
                    break
                }
                t.addEventListener("abort", a)
            }
            return t.signal
        }
          , i = async e => {
            const t = {};
            try {
                return await Promise.race([e, t]) === t ? "pending" : "fulfilled"
            } catch {
                return "rejected"
            }
        }
          , o = s.IH(( () => new Promise(( () => {}
        ))))
          , l = () => {
            let e, t;
            return {
                promise: new Promise(( (a, s) => {
                    e = a,
                    t = s
                }
                )),
                reject: t,
                resolve: e
            }
        }
          , c = async (e, {backoffFn: t, retries: a, signal: s, stopAtTime: r}) => {
            let i, o = 0;
            for (; o < a + 1; ) {
                if (o > 0) {
                    const e = t ? t(o) : Math.round(Math.min(1e3 * o, 3e4) * (Math.random() + 1));
                    console.log(`Backing off for ${e}ms before retrying`),
                    await d(e)
                }
                if (!0 === (null == s ? void 0 : s.aborted) || r && Date.now() >= r)
                    break;
                try {
                    return await e(o)
                } catch (e) {
                    i = e
                }
                if (o++,
                null == s ? void 0 : s.aborted)
                    break
            }
            throw null != i ? i : new n.$K
        }
          , d = (e, t) => new Promise(( (a, s) => {
            var r;
            if (null == t ? void 0 : t.aborted)
                return void s(null !== (r = t.reason) && void 0 !== r ? r : new n._L(t.reason));
            const i = window.setTimeout(a, e);
            null == t || t.addEventListener("abort", ( () => {
                var e;
                window.clearTimeout(i),
                s(null !== (e = t.reason) && void 0 !== e ? e : new n._L(t.reason))
            }
            ))
        }
        ))
    }
    ,
    97236: (e, t, a) => {
        "use strict";
        a.d(t, {
            Tc: () => I,
            cq: () => O,
            IZ: () => M,
            a1: () => F,
            GN: () => U,
            nU: () => H,
            Ap: () => G,
            N$: () => A,
            Ms: () => B
        });
        var s = a(91367)
          , n = a(80254);
        const r = a.p + "sounds/7abe057dc8446ad325229edd6d8fd250.mp3"
          , i = a.p + "sounds/2aae0ea735c8e9ed884107d6f0a09e35.mp3"
          , o = a.p + "sounds/421d48c53ad6d52618dba715722278e0.mp3"
          , l = a.p + "sounds/37d8f0b39dcfe63872192c89653a93f6.mp3"
          , c = a.p + "sounds/0a27c1ee63dd220647e8410a0029aed2.mp3"
          , d = a.p + "sounds/a28ff0a501ef5f33ca78c0afc45ee53e.mp3"
          , u = a.p + "sounds/2e4669d8cf839272f0731f8afa488caf.mp3"
          , g = a.p + "sounds/f0b6ab4396d5891241ef4ca73b4de13a.mp3";
        var p = a(50498)
          , m = a(80388)
          , h = a(53229)
          , _ = a(58576)
          , v = a(71371)
          , f = a(18804)
          , S = a(79465);
        const y = s.Howler._setup;
        s.Howler._setup = () => {
            const e = null === s.Howler._navigator ? null : new Proxy(s.Howler._navigator,{
                get: (e, t) => "userAgent" === t ? e.userAgent.replace(/OPR\/(\d{3})/, "OPR/99") : e[t]
            });
            return s.Howler._navigator = e,
            y()
        }
        ;
        const E = {
            BONUS: {
                url: r,
                volume: .5
            },
            CORRECT: {
                url: l,
                volume: .35
            },
            FAILED: {
                url: o,
                volume: .5
            },
            INCORRECT: {
                url: g,
                volume: .35
            },
            PASSED: {
                url: i,
                volume: .5
            },
            TEST: {
                url: d,
                volume: .4
            },
            TIMER: {
                url: u,
                volume: .6
            }
        }
          , b = Symbol("SOUND_OPTIONS_KEY")
          , I = n.Xc(E, (e => e.url))
          , w = n.Ry(n.VO(E).map(( ({url: e, volume: t}) => [e, t])))
          , k = window.duo.useWebAudio ? new AudioContext : void 0
          , T = {};
        let C, R = !1;
        const L = e => e instanceof s.Howl
          , P = ({failureReason: e, source: t, timeTaken: a, url: s}) => {
            const n = (0,
            m.J9)() ? .005 : 5e-4;
            if (Math.random() < n) {
                const r = new URL(V(s),window.location.href);
                (0,
                S.track)("tts_play_finished", {
                    failure_reason: e,
                    host: r.host,
                    path: r.pathname,
                    sampling_rate: n,
                    successful: void 0 === e,
                    time_taken: a,
                    tts_source: t
                })
            }
        }
          , A = ({text: e, url: t}) => {
            const a = (0,
            m.J9)() ? .1 : .01;
            Math.random() < a && (0,
            S.track)("tts_download_failure", {
                offline: !navigator.onLine,
                path: "string" == typeof t ? V(t) : "",
                text: e
            })
        }
          , D = ({failureReason: e, url: t}) => {
            (0,
            S.track)("tts_failed_to_play", {
                failure_reason: e,
                tts_url: "string" == typeof t ? V(t) : ""
            })
        }
          , O = () => window.duo.useWebAudio ? "running" === k.state : R
          , N = e => {
            var t;
            if (window.duo.useWebAudio) {
                const t = new Audio;
                return t.crossOrigin = "anonymous",
                t.src = e,
                t.addEventListener("error", ( () => {
                    var e;
                    (0,
                    _.vU)("Failed to load audio", {
                        data: {
                            errorCode: null === (e = t.error) || void 0 === e ? void 0 : e.code,
                            url: t.src
                        },
                        sample: 1e-4
                    })
                }
                )),
                k.createMediaElementSource(t).connect(k.destination),
                t
            }
            return new s.Howl({
                format: ["mp3"],
                html5: !0,
                onloaderror: (t, a) => (0,
                _.vU)("Failed to load audio", {
                    data: {
                        errorCode: a,
                        url: e
                    },
                    sample: 1e-4
                }),
                preload: !0,
                src: [e],
                volume: null !== (t = w[e]) && void 0 !== t ? t : 1
            })
        }
          , x = e => {
            switch (e) {
            case "ended":
                return "end";
            case "error":
                return "loaderror";
            default:
                return e
            }
        }
          , M = e => {
            if (!e)
                return Promise.reject(Error("loadSound called with empty URL"));
            e = V(e);
            const t = T[e];
            if (t)
                return t.promise;
            const a = N(e)
              , s = new Promise(( (e, t) => {
                L(a) ? (a.on("load", e),
                a.on("loaderror", t)) : (a.addEventListener("canplaythrough", ( () => e())),
                a.addEventListener("error", ( () => t())))
            }
            ));
            return T[e] = {
                player: a,
                promise: s
            },
            s
        }
          , F = (e, {requestedAt: t}, a) => {
            var s, n;
            if (!e)
                return (0,
                _.Kp)("TTS URL is null"),
                D({
                    failureReason: "empty_url",
                    url: ""
                }),
                void P({
                    failureReason: "empty_url",
                    source: "network",
                    timeTaken: 0,
                    url: ""
                });
            const r = null === (s = T[e]) || void 0 === s ? void 0 : s.promise;
            let i = "network";
            (async () => {
                const e = r ? await (0,
                p.p4)(r) : "empty";
                i = "fulfilled" === e ? "cache" : "pending" === e ? "pending-cache" : "network"
            }
            )();
            const o = window.performance.now();
            return U(e, {
                ...a,
                eventListeners: [...null !== (n = null == a ? void 0 : a.eventListeners) && void 0 !== n ? n : [], ["error", () => {
                    D({
                        failureReason: "load_error",
                        url: e
                    }),
                    P({
                        failureReason: "load_error",
                        source: i,
                        timeTaken: window.performance.now() - o,
                        url: e
                    })
                }
                ], ["play", () => {
                    const a = window.performance.now();
                    v.Z.start("tts_play", {
                        startTime: t
                    }),
                    v.Z.finish("tts_play"),
                    P({
                        failureReason: void 0,
                        source: i,
                        timeTaken: a - o,
                        url: e
                    })
                }
                ], ["playerror", () => {
                    D({
                        failureReason: "play_promise_rejected",
                        url: e
                    }),
                    P({
                        failureReason: "play_promise_rejected",
                        source: i,
                        timeTaken: window.performance.now() - o,
                        url: e
                    })
                }
                ]]
            })
        }
          , U = (e, t={}) => {
            var a, s, r, i, o, l, c, d, u, g, p;
            if (!e)
                return void (0,
                _.Kp)("TTS URL is null");
            const m = V(e);
            if (n.VO(I).includes(m) && !(null === (a = (0,
            f.globalGetState)()) || void 0 === a ? void 0 : a.user.enableSoundEffects))
                return;
            if (!t.overlay && C && (L(C.player) ? C.player.playing() : !C.player.paused) && C.options.forceListen && C.url !== m && C.url !== t.allowInterrupt)
                return;
            const h = T[m]
              , v = null !== (s = null == h ? void 0 : h.player) && void 0 !== s ? s : N(m)
              , S = L(v) ? v[b] : null == h ? void 0 : h.options;
            L(v) ? v[b] = t : h && (h.options = t),
            null === (r = null == S ? void 0 : S.eventListeners) || void 0 === r || r.forEach(( ([e,t]) => {
                L(v) ? v.off(x(e), t) : v.removeEventListener(e, t)
            }
            )),
            null === (i = t.eventListeners) || void 0 === i || i.forEach(( ([e,t]) => {
                L(v) ? v.on(x(e), t) : v.addEventListener(e, t)
            }
            )),
            !T[m] && L(v) && v.on("end", ( () => z(v))),
            t.overlay || (G(),
            C = {
                options: t,
                player: v,
                url: m
            }),
            L(v) ? (v.loop(null !== (o = t.shouldLoop) && void 0 !== o && o),
            v.seek(null !== (l = t.currentTime) && void 0 !== l ? l : 0),
            v.rate(null !== (c = t.playbackRate) && void 0 !== c ? c : 1)) : (v.loop = null !== (d = t.shouldLoop) && void 0 !== d && d,
            v.currentTime = null !== (u = t.currentTime) && void 0 !== u ? u : 0,
            v.playbackRate = null !== (g = t.playbackRate) && void 0 !== g ? g : 1,
            v.volume = null !== (p = w[m]) && void 0 !== p ? p : 1);
            const y = async () => {
                if (L(v))
                    v.play();
                else
                    try {
                        await v.play()
                    } catch (e) {
                        console.error(e)
                    }
            }
            ;
            return y(),
            {
                get currentTime() {
                    return L(v) ? "unloaded" === v.state() ? 0 : v.seek() : v.currentTime
                },
                set currentTime(e) {
                    L(v) ? "unloaded" !== v.state() && v.seek(e) : v.currentTime = e
                },
                get duration() {
                    return L(v) ? v.duration() : v.duration
                },
                set paused(e) {
                    L(v) ? e && v.playing() ? v.pause() : e || v.playing() || y() : e ? v.pause() : v.paused && y()
                },
                get paused() {
                    return L(v) ? !v.playing() : v.paused
                },
                get src() {
                    return m
                },
                get unmodifiedSrc() {
                    return e
                }
            }
        }
          , H = n.IH(( () => {
            if (window.duo.useWebAudio) {
                const e = () => {
                    "suspended" === k.state && k.resume(),
                    document.removeEventListener("click", e, !0),
                    document.removeEventListener("touchend", e, !0),
                    document.removeEventListener("touchstart", e, !0)
                }
                ;
                document.addEventListener("click", e, !0),
                document.addEventListener("touchend", e, !0),
                document.addEventListener("touchstart", e, !0)
            } else
                try {
                    const e = new s.Howl({
                        src: [c]
                    });
                    e.on("unlock", ( () => {
                        e.unload(),
                        R = !0
                    }
                    ))
                } catch (e) {
                    (0,
                    _.vU)("Howler failed to unlock audio", {
                        ex: e
                    })
                }
        }
        ))
          , G = () => {
            C && (L(C.player) ? null == C || C.player.stop() : (C.player.pause(),
            C.player.currentTime = 0))
        }
          , V = e => {
            if (e = e.replace("http://static.duolingo.com", "https://d7mj4aqfscim2.cloudfront.net"),
            window.duo.useWebAudio) {
                const t = new URL(e,window.location.href);
                return t.searchParams.set("x-duo-cors", "1"),
                (0,
                h.qy)(t.toString())
            }
            return e
        }
          , z = e => {
            var t;
            const a = e[b];
            null === (t = null == a ? void 0 : a.eventListeners) || void 0 === t || t.forEach(( ([t,a]) => e.off(x(t), a))),
            e[b] = void 0,
            e.unload()
        }
          , B = e => {
            var t;
            if (!e)
                return;
            e = V(e);
            const a = null === (t = T[e]) || void 0 === t ? void 0 : t.player;
            a && L(a) && z(a),
            delete T[e]
        }
    }
    ,
    70326: (e, t, a) => {
        "use strict";
        a.d(t, {
            $C: () => S,
            IS: () => E,
            Wj: () => _,
            lV: () => w,
            pK: () => f,
            rV: () => I,
            x4: () => y
        });
        var s = a(80254)
          , n = a(18867)
          , r = a(54412)
          , i = a(17135)
          , o = a(59815)
          , l = a(41679)
          , c = a(15670)
          , d = a(95940)
          , u = a(67116)
          , g = a(58576)
          , p = a(30839)
          , m = a(79465)
          , h = a(16086);
        class _ extends o.pY {
            constructor(e, t) {
                super(),
                this.useImprovedErrorMessages = e,
                this.errorFields = t
            }
        }
        const v = async e => {
            var t;
            const a = {
                timezone: (0,
                i.NP)()
            };
            try {
                const a = l.E6() && (null === (t = await l.Jb()) || void 0 === t ? void 0 : t.accessToken);
                a && (e.facebookToken = a)
            } catch {}
            const s = (0,
            p.rV)(p.Qt.InviteCode);
            s && (e.inviteCode = s,
            (0,
            p.cl)(p.Qt.InviteCode));
            const o = (0,
            r.ej)(r.Vj.LandingURL);
            o !== r.m_ && (e.landingUrl = o);
            const d = (0,
            r.ej)(r.Vj.InitialReferrer);
            d !== r.m_ && (e.initialReferrer = d),
            e.lastReferrer = (0,
            r.ej)(r.Vj.LastReferrer),
            (0,
            r.d8)(r.Vj.LastReferrer, "");
            const u = await c.e("SIGNUP")
              , g = await n.Vi.userCreate({
                ...a,
                ...e
            }, u)
              , h = g.id;
            return await (0,
            m.alias)(h),
            (0,
            m.setDistinctId)(h),
            g
        }
          , f = async (e, t=u.h9) => {
            if (e === t && "en" !== e)
                throw (0,
                g.vU)("Tried to create trial user with same from and learning languages", {
                    data: {
                        fromLanguage: t,
                        learningLanguage: e
                    }
                }),
                Error("learningLanguage and fromLanguage cannot be the same");
            return await v({
                fromLanguage: t,
                learningLanguage: e
            })
        }
          , S = async (e={}, t=u.h9) => {
            await v({
                fromLanguage: t,
                ...e
            })
        }
          , y = async (e, t=!0) => {
            const a = (0,
            r.ej)(r.Vj.LandingURL);
            a !== r.m_ && (e.landingUrl = a),
            e.lastReferrer = (0,
            r.ej)(r.Vj.LastReferrer),
            (0,
            r.d8)(r.Vj.LastReferrer, "");
            const s = await c.e("LOGIN");
            await n.Vi.login(e, t, s);
            const i = (0,
            h.Jb)();
            (0,
            m.setDistinctId)(i)
        }
          , E = async (e, t=!0) => {
            const a = {}
              , n = {
                identifier: e.identifier.trim(),
                password: e.password
            };
            if (n.identifier || (a.identifier = (0,
            d.H8)(11696)),
            n.password.trim() || (a.password = (0,
            d.H8)(5030)),
            !s.xb(a))
                throw new _(!1,a);
            try {
                await y(s.ei(n, "identifier", "password"), !1)
            } catch {
                if (t) {
                    const e = await b(n.identifier);
                    a.password = e ? (0,
                    d.H8)(6852) : void 0,
                    a.identifier = e ? void 0 : (0,
                    d.H8)(52720, {
                        email_or_username: n.identifier
                    })
                } else
                    a.connectivity = (0,
                    d.H8)(19737);
                throw new _(!0,a)
            }
        }
          , b = async e => {
            const [t,a] = await Promise.all([n.Vi.userSearchByEmail(e), n.Vi.userIdsByUsername(e)]);
            return t.length > 0 || a.length > 0
        }
          , I = async e => {
            const t = await n.Vi.usernameValidate(e);
            if (t.isUsernameTaken)
                throw new _(!0,{
                    suggestedUsernames: t.suggestedUsernames,
                    username: t.suggestedUsernames.length ? (0,
                    d.H8)(49958, {
                        num: t.suggestedUsernames.length
                    }) : (0,
                    d.H8)(6284)
                });
            if (!t.isUsernameValid)
                throw new _(!0,{
                    suggestedUsernames: [],
                    username: (0,
                    d.H8)(14591)
                })
        }
          , w = e => new _(!1,Object.assign({}, ...e.map((e => {
            switch (e) {
            case "AGE_INVALID":
                return {
                    age: (0,
                    d._i)(15012)
                };
            case "EMAIL_INVALID":
                return {
                    email: (0,
                    d._i)(11696)
                };
            case "EMAIL_TAKEN":
                return {
                    email: (0,
                    d._i)(1760)
                };
            case "NAME_INVALID":
                return {
                    name: (0,
                    d._i)(24091)
                };
            case "PASSWORD_INCORRECT":
                return {
                    currentPassword: (0,
                    d._i)(8182)
                };
            case "PASSWORD_INVALID":
                return {
                    password: (0,
                    d._i)(5030)
                };
            case "USERNAME_INVALID":
                return {
                    username: (0,
                    d._i)(14591)
                };
            case "USERNAME_TAKEN":
                return {
                    username: (0,
                    d._i)(6284)
                };
            default:
                return
            }
        }
        ))))
    }
    ,
    30033: (e, t, a) => {
        "use strict";
        a.d(t, {
            Aq: () => i,
            _q: () => o,
            m5: () => r
        });
        var s = a(80254)
          , n = a(58576);
        const r = "data-test"
          , i = (e, t) => {
            console.log(`${e}${JSON.stringify(t)}`, n.VR)
        }
          , o = (...e) => {
            const t = s.jj(s.oA(e).map((e => e.split(" "))).flat()).sort();
            return t.length ? {
                [r]: t.join(" ")
            } : {}
        }
    }
    ,
    83719: (e, t, a) => {
        "use strict";
        a.d(t, {
            Oj: () => s,
            ub: () => o,
            ul: () => l,
            zD: () => i
        });
        var s, n = a(80254);
        !function(e) {
            e.Accent = "accent",
            e.ExtraSpace = "extra_space",
            e.MissingSpace = "missing_space",
            e.MissingWord = "missing_word",
            e.Typo = "typo",
            e.WrongWord = "wrong_word"
        }(s || (s = {}));
        const r = [12244, 9366, 748, 6198, 12541, 9987, 1358, 11280, 22136, 11684]
          , i = "Nice! You’re building your writing skills!"
          , o = () => n.UP(r)
          , l = e => e ? n.UP(r) : 15039
    }
    ,
    80388: (e, t, a) => {
        "use strict";
        a.d(t, {
            J9: () => n,
            lS: () => r,
            nC: () => l,
            vQ: () => i
        });
        var s = a(17135);
        const n = () => window.location.host.endsWith(".cn")
          , r = () => "zh-CN" === navigator.language
          , i = async e => {
            navigator.clipboard ? await navigator.clipboard.writeText(e) : o(e)
        }
          , o = e => {
            const t = document.createElement("textarea");
            t.value = e,
            document.body.appendChild(t),
            t.select();
            try {
                if (!document.execCommand("copy"))
                    throw Error('Cannot execute "copy" command')
            } finally {
                document.body.removeChild(t)
            }
        }
          , l = (e, t) => {
            const a = t / 1e3;
            let n = (0,
            s.Zo)();
            return window.setInterval(( () => {
                const t = (0,
                s.Zo)();
                t - n < a || (n = t,
                e())
            }
            ), 1e4)
        }
    }
    ,
    16324: (e, t, a) => {
        "use strict";
        a.d(t, {
            EV: () => i,
            Ed: () => o,
            TD: () => s
        });
        const s = e => e.toLowerCase().split("_").reduce(( (e, t, a) => e + (a ? (e => e[0].toUpperCase() + e.slice(1))(t) : t)))
          , n = e => e.split(/(?=[A-Z])/).join("_").toLowerCase()
          , r = (e, t) => ( (e, t) => Object.fromEntries(Object.entries(e).map((e => t(e)))))(e, ( ([e,a]) => [t(e), null === a || "object" != typeof a || a instanceof Function ? a : Array.isArray(a) ? a.slice() : r(a, t)]))
          , i = e => r(e, s)
          , o = e => r(e, n)
    }
    ,
    95332: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dw: () => L,
            F: () => _,
            SJ: () => h,
            Tu: () => p,
            cC: () => E,
            cf: () => w,
            eK: () => b,
            gr: () => T,
            j$: () => v,
            j6: () => k,
            jc: () => I,
            nT: () => S,
            qD: () => P,
            r1: () => y,
            rF: () => f,
            vv: () => R,
            xV: () => C,
            yH: () => m
        });
        var s = a(80254)
          , n = a(40472)
          , r = a(18867)
          , i = a(37590)
          , o = a(68903)
          , l = a(95940)
          , c = a(67116)
          , d = a(58576)
          , u = a(43006)
          , g = a(11811);
        const p = 3
          , m = [g.Sm.Assist, g.Sm.CompleteReverseTranslation, g.Sm.Dialogue, g.Sm.Form, g.Sm.GapFill, g.Sm.Judge, g.Sm.Listen, g.Sm.ListenComplete, g.Sm.ListenIsolation, g.Sm.ListenSpeak, g.Sm.ListenTap, g.Sm.PartialListen, g.Sm.PartialReverseTranslate, g.Sm.SelectPronunciation, g.Sm.SelectTranscription, g.Sm.Speak, g.Sm.SyllableTap, g.Sm.Translate]
          , h = {
            [g.Sm.Assist]: "assist",
            [g.Sm.CharacterIntro]: "character_intro",
            [g.Sm.CharacterMatch]: "character_match",
            [g.Sm.CharacterPuzzle]: "character_puzzle",
            [g.Sm.CharacterSelect]: "character_select",
            [g.Sm.CharacterTrace]: "character_trace",
            [g.Sm.CharacterWrite]: "character_write",
            [g.Sm.CompleteReverseTranslation]: "complete_reverse_translation",
            [g.Sm.Definition]: "definition",
            [g.Sm.Dialogue]: "dialogue",
            [g.Sm.ExtendedMatch]: "extended_match",
            [g.Sm.ExtendedListenMatch]: "extended_listen_match",
            [g.Sm.Form]: "form",
            [g.Sm.FreeResponse]: "free_response",
            [g.Sm.GapFill]: "gap_fill",
            [g.Sm.Judge]: "judge",
            [g.Sm.Listen]: "listen",
            [g.Sm.ListenComplete]: "listen_complete",
            [g.Sm.ListenComprehension]: "listen_comprehension",
            [g.Sm.ListenIsolation]: "listen_isolation",
            [g.Sm.ListenMatch]: "listen_match",
            [g.Sm.ListenSpeak]: "listen_speak",
            [g.Sm.ListenTap]: "listen_tap",
            [g.Sm.Match]: "match",
            [g.Sm.Name]: "name",
            [g.Sm.OrderTapComplete]: "order_tap_complete",
            [g.Sm.PartialListen]: "partial_listen",
            [g.Sm.PartialReverseTranslate]: "partial_reverse_translate",
            [g.Sm.PatternTapComplete]: "pattern_tap_complete",
            [g.Sm.RadioBinary]: "radio_binary",
            [g.Sm.RadioImageSelect]: "radio_image_select",
            [g.Sm.RadioListenMatch]: "radio_listen_match",
            [g.Sm.RadioListenRecognize]: "radio_listen_recognize",
            [g.Sm.RadioSelect]: "radio_select",
            [g.Sm.ReadComprehension]: "read_comprehension",
            [g.Sm.ReverseAssist]: "reverse_assist",
            [g.Sm.SameDifferent]: "same_different",
            [g.Sm.Select]: "select",
            [g.Sm.SelectPronunciation]: "select_pronunciation",
            [g.Sm.SelectTranscription]: "select_transcription",
            [g.Sm.SvgPuzzle]: "svg_puzzle",
            [g.Sm.SyllableListenTap]: "syllable_listen_tap",
            [g.Sm.SyllableTap]: "syllable_tap",
            [g.Sm.Speak]: "speak",
            [g.Sm.TapCloze]: "tap_cloze",
            [g.Sm.TapClozeTable]: "tap_cloze_table",
            [g.Sm.TapComplete]: "tap_complete",
            [g.Sm.TapCompleteTable]: "tap_complete_table",
            [g.Sm.TapDescribe]: "tap_describe",
            [g.Sm.Translate]: "translate",
            [g.Sm.Transliterate]: "transliterate",
            [g.Sm.TransliterationAssist]: "transliteration_assist",
            [g.Sm.TypeCloze]: "type_cloze",
            [g.Sm.TypeClozeTable]: "type_cloze_table",
            [g.Sm.TypeComplete]: "type_complete",
            [g.Sm.TypeCompleteTable]: "type_complete_table",
            [g.Sm.WriteComprehension]: "write_comprehension"
        }
          , _ = {
            BEA: "bea",
            EDDY: "eddy",
            FALSTAFF: "falstaff",
            JUNIOR: "junior",
            LILY: "lily",
            LIN: "lin",
            LUCY: "lucy",
            OSCAR: "oscar",
            VIKRAM: "vikram",
            ZARI: "zari"
        }
          , v = e => {
            const t = [];
            return e.forEach(( (e, a, s) => {
                e.isBlank && a > 0 && s[a - 1].isBlank ? t[t.length - 1].text += e.text : t.push({
                    ...e
                })
            }
            )),
            t
        }
          , f = e => [!0, void 0].includes(e.grader.whitespaceDelimited) ? " " : ""
          , S = (e, t) => {
            e.length !== t.length && (0,
            d.Kp)("Mismatch between text sequence lengths", {
                data: {
                    differentTexts: t,
                    originalTexts: e
                }
            });
            let a = 0;
            const s = [];
            for (let n = 0; n < Math.min(e.length, t.length); n++) {
                const r = e[n];
                r !== t[n] && s.push([a, a + r.length]),
                a += r.length
            }
            return s
        }
          , y = e => {
            var t, a;
            switch (e.type) {
            case g.Sm.Assist:
            case g.Sm.CharacterIntro:
            case g.Sm.CharacterPuzzle:
            case g.Sm.CharacterSelect:
            case g.Sm.CharacterTrace:
            case g.Sm.CharacterWrite:
            case g.Sm.CompleteReverseTranslation:
            case g.Sm.Judge:
            case g.Sm.Listen:
            case g.Sm.ListenSpeak:
            case g.Sm.ListenComplete:
            case g.Sm.ListenTap:
            case g.Sm.Name:
            case g.Sm.PartialListen:
            case g.Sm.PatternTapComplete:
            case g.Sm.ReverseAssist:
            case g.Sm.Select:
            case g.Sm.SvgPuzzle:
            case g.Sm.SyllableListenTap:
            case g.Sm.SyllableTap:
            case g.Sm.Speak:
            case g.Sm.Translate:
            case g.Sm.Transliterate:
            case g.Sm.TransliterationAssist:
                return [e.prompt];
            case g.Sm.CharacterMatch:
                return [e.pairs.map((e => e.character)).join(", ")];
            case g.Sm.Definition:
                return [e.displayTokens.map((e => e.text)).join(""), (0,
                l.H8)(1831, {
                    string_1: e.phraseToDefine
                })];
            case g.Sm.Dialogue:
                {
                    const t = e.dialogue.map((e => {
                        const t = v(e.displayTokens).map((e => e.isBlank ? u.qv : e.text)).join("");
                        return (0,
                        l.H8)(20248, {
                            message: t,
                            speaker: e.speaker
                        })
                    }
                    ));
                    return e.promptTokens && t.push(e.promptTokens.map((e => e.value)).join("")),
                    t
                }
            case g.Sm.Form:
                return [`${e.promptPieces[0]} ${u.qv} ${e.promptPieces[1]}`];
            case g.Sm.FreeResponse:
                return [null !== (t = e.prompt) && void 0 !== t ? t : ""];
            case g.Sm.GapFill:
                return [v(e.displayTokens).map((e => e.isBlank ? u.qv : e.text)).join("")];
            case g.Sm.ListenComprehension:
                return [e.prompt, e.question ? e.question : (0,
                l.H8)(2005)];
            case g.Sm.ExtendedListenMatch:
            case g.Sm.ListenMatch:
                return [e.pairs.map((e => e.translation)).join(", ")];
            case g.Sm.ExtendedMatch:
            case g.Sm.Match:
                return [e.pairs.map((e => e.learningToken)).join(", ")];
            case g.Sm.OrderTapComplete:
                return [v(e.displayTokens).map((e => e.isBlank ? u.qv : e.text)).join("")];
            case g.Sm.PartialReverseTranslate:
                return [e.prompt];
            case g.Sm.RadioBinary:
            case g.Sm.RadioImageSelect:
            case g.Sm.RadioListenMatch:
            case g.Sm.RadioListenRecognize:
            case g.Sm.RadioSelect:
                return [];
            case g.Sm.ReadComprehension:
                return [e.passage, null !== (a = e.question) && void 0 !== a ? a : (0,
                l.H8)(2005)];
            case g.Sm.SelectPronunciation:
            case g.Sm.SelectTranscription:
                return [e.choices[e.correctIndex].text];
            case g.Sm.TapCloze:
            case g.Sm.TapClozeTable:
            case g.Sm.TapCompleteTable:
            case g.Sm.TypeCloze:
            case g.Sm.TypeClozeTable:
            case g.Sm.TypeCompleteTable:
                return [(0,
                i.JH)(e)];
            case g.Sm.TapComplete:
                return [e.displayTokens.map((e => e.isBlank ? u.qv : e.text)).join("")];
            case g.Sm.TypeComplete:
                return [e.displayTokens.map((e => e.text)).join("")];
            case g.Sm.TapDescribe:
                return [e.correctSolutions[0]];
            case g.Sm.ListenIsolation:
                return [e.solutionTranslation];
            case g.Sm.WriteComprehension:
                return [e.passage, e.question ? e.question : (0,
                l.H8)(2005)];
            case g.Sm.SameDifferent:
                return [e.prompts.join(" ")];
            default:
                throw (0,
                o.RJ)(e),
                Error(`Cannot get prompt for ${e.type} challenge`)
            }
        }
          , E = (e, {fromLanguage: t, learningLanguage: a}) => {
            switch (e.type) {
            case g.Sm.Assist:
            case g.Sm.CharacterIntro:
            case g.Sm.CharacterPuzzle:
            case g.Sm.CharacterSelect:
            case g.Sm.CharacterTrace:
            case g.Sm.CharacterWrite:
            case g.Sm.CompleteReverseTranslation:
            case g.Sm.Dialogue:
            case g.Sm.Form:
            case g.Sm.FreeResponse:
            case g.Sm.GapFill:
            case g.Sm.Judge:
            case g.Sm.Listen:
            case g.Sm.ListenComplete:
            case g.Sm.ListenComprehension:
            case g.Sm.ListenIsolation:
            case g.Sm.ListenSpeak:
            case g.Sm.ListenTap:
            case g.Sm.Name:
            case g.Sm.OrderTapComplete:
            case g.Sm.PartialListen:
            case g.Sm.PartialReverseTranslate:
            case g.Sm.PatternTapComplete:
            case g.Sm.RadioBinary:
            case g.Sm.RadioImageSelect:
            case g.Sm.RadioListenMatch:
            case g.Sm.RadioListenRecognize:
            case g.Sm.RadioSelect:
            case g.Sm.ReadComprehension:
            case g.Sm.SameDifferent:
            case g.Sm.Select:
            case g.Sm.SelectPronunciation:
            case g.Sm.SelectTranscription:
            case g.Sm.Speak:
            case g.Sm.SvgPuzzle:
            case g.Sm.SyllableListenTap:
            case g.Sm.SyllableTap:
            case g.Sm.TapCloze:
            case g.Sm.TapClozeTable:
            case g.Sm.TapComplete:
            case g.Sm.TapCompleteTable:
            case g.Sm.TapDescribe:
            case g.Sm.TypeCloze:
            case g.Sm.TypeClozeTable:
            case g.Sm.TypeComplete:
            case g.Sm.TypeCompleteTable:
            case g.Sm.WriteComprehension:
                return a;
            case g.Sm.CharacterMatch:
            case g.Sm.ListenMatch:
            case g.Sm.Match:
            case g.Sm.ExtendedListenMatch:
            case g.Sm.ExtendedMatch:
                return;
            case g.Sm.Definition:
                return r._s.convertRemoteLanguageId(e.choiceLanguageId);
            case g.Sm.ReverseAssist:
            case g.Sm.TransliterationAssist:
                return t;
            case g.Sm.Translate:
                return e.targetLanguage;
            case g.Sm.Transliterate:
                return "en";
            default:
                throw (0,
                o.RJ)(e),
                Error(`Unexpected challenge type: ${e.type}`)
            }
        }
          , b = ({browserSettings: e, challenge: t, isDesktop: a, isGrammar: s, learningLanguage: n, session: r}) => {
            if (r.type === g.FF.AlphabetLesson || r.type === g.FF.AlphabetPractice)
                return {
                    canToggleTyping: !1,
                    isToggledToTyping: !1
                };
            switch (t.type) {
            case g.Sm.CompleteReverseTranslation:
                return {
                    canToggleTyping: !0,
                    isToggledToTyping: e.completeReverseTranslationTypingEnabled && !s
                };
            case g.Sm.ListenTap:
                return a ? {
                    canToggleTyping: !0,
                    isToggledToTyping: e.typingEnabled
                } : {
                    canToggleTyping: !1,
                    isToggledToTyping: !1
                };
            case g.Sm.Translate:
                return R(t) ? P(t, n) ? {
                    canToggleTyping: !1,
                    isToggledToTyping: !1
                } : {
                    canToggleTyping: !0,
                    isToggledToTyping: e.typingEnabled
                } : {
                    canToggleTyping: !1,
                    isToggledToTyping: !0
                };
            default:
                return {
                    canToggleTyping: !1,
                    isToggledToTyping: !0
                }
            }
        }
          , I = e => (0,
        n.y)(e)
          , w = (e, t, a) => {
            const s = 2 * a
              , n = e * a + t;
            return s < 10 ? n + 1 : (n + 1) % s
        }
          , k = (e, t, a=[]) => {
            if ((0,
            c.k4)(e, t))
                return t.map(( (e, t) => a.includes(e.value) ? t : void 0)).filter((e => void 0 !== e));
            const s = t.map(( ({value: e}) => e)).join("");
            return T(s, a)
        }
          , T = (e, t=[]) => t.reduce(( (t, a) => {
            const n = e.indexOf(a);
            return t.concat(s.DZ(a.length, (e => e + n)))
        }
        ), [])
          , C = e => {
            var t;
            return null === (t = e.weakWordsRanges) || void 0 === t ? void 0 : t.reduce(( (t, a) => (e.tokens.forEach(( (s, n) => {
                const r = e.prompt.indexOf(s.value)
                  , i = r + s.value.length - 1;
                r >= a.start_index && i <= a.end_index && t.push(n)
            }
            )),
            t)), [])
        }
          , R = e => void 0 !== e.choices && void 0 !== e.correctIndices && e.choices.length > 0 && e.correctIndices.length > 0
          , L = (e, t) => !P(e, t)
          , P = (e, t) => e.sourceLanguage === t
    }
    ,
    70732: (e, t, a) => {
        "use strict";
        a.d(t, {
            KT: () => V,
            fM: () => z,
            uu: () => W,
            uZ: () => j,
            w6: () => $,
            sS: () => J,
            Q5: () => Z,
            j4: () => q,
            Gs: () => Q,
            BY: () => K,
            w4: () => Y
        });
        var s = a(80254)
          , n = a(76986)
          , r = a(93540)
          , i = a(18867)
          , o = a(83719)
          , l = a(95332)
          , c = a(18675)
          , d = a(78939)
          , u = a(33037)
          , g = a(37590)
          , p = a(95940)
          , m = a(58576)
          , h = a(23275)
          , _ = a(89260)
          , v = a(59096)
          , f = a(18804)
          , S = a(43006)
          , y = a(11811);
        const E = a.p + "rive/makerInLesson/1c03e97b411efbf320a858b8c2e0248e.riv"
          , b = a.p + "rive/makerInLesson/70270dae679a0c2e5e3062b080e26a4a.riv"
          , I = a.p + "rive/makerInLesson/51478562013d6926fbdfcbd72d8d8399.riv"
          , w = a.p + "rive/makerInLesson/00e65775b63084cf1756d3529fa4899e.riv"
          , k = a.p + "rive/makerInLesson/9a1302daf4ccfb8e58e91fe60bf609be.riv"
          , T = a.p + "rive/makerInLesson/e1e20f0934a4b03f0a9ec5c056c6ab2e.riv"
          , C = a.p + "rive/makerInLesson/06bd889a26cd059e826cee3fe0b1a656.riv"
          , R = a.p + "rive/makerInLesson/e18abc5a6264d3e62ac2a3490b7d050e.riv"
          , L = a.p + "rive/makerInLesson/201fc4b2342fb3a92f46aa205a29d80a.riv"
          , P = a.p + "rive/makerInLesson/839a2259471208630a70624e340dbba9.riv"
          , A = {
            artBoardName: "character",
            correctStateName: "correct_trig",
            darkModeStateName: "darkmode_bool",
            incorrectStateName: "incorrect_trig",
            notSetStateName: "reset_trig",
            rtlStateName: "rtl_bool",
            scale: 1,
            stateMachineName: "character_statemachine",
            type: "maker",
            xOffset: 0,
            yOffset: 0
        }
          , D = {
            bea: {
                scale: 1,
                url: E,
                xOffset: -10,
                yOffset: 0
            },
            eddy: {
                scale: 1.1,
                url: b,
                xOffset: -10,
                yOffset: 0
            },
            falstaff: {
                scale: 1.1,
                url: I,
                xOffset: -10,
                yOffset: 0
            },
            junior: {
                scale: 1.3,
                url: w,
                xOffset: -10,
                yOffset: 20
            },
            lily: {
                scale: 1.25,
                url: k,
                xOffset: -10,
                yOffset: 15
            },
            lin: {
                scale: 1.15,
                url: T,
                xOffset: -10,
                yOffset: 10
            },
            lucy: {
                scale: 1.2,
                url: C,
                xOffset: -10,
                yOffset: 10
            },
            oscar: {
                scale: 1.25,
                url: R,
                xOffset: -10,
                yOffset: 15
            },
            vikram: {
                scale: 1.15,
                url: L,
                xOffset: -10,
                yOffset: 10
            },
            zari: {
                scale: 1.15,
                url: P,
                xOffset: -10,
                yOffset: 10
            }
        }
          , O = e => ({
            ...A,
            ...D[e],
            xOffsetPercentage: D[e].xOffset / 144 * 100,
            yOffsetPercentage: D[e].yOffset / 176 * 100
        })
          , N = {
            bea: O("bea"),
            eddy: O("eddy"),
            falstaff: O("falstaff"),
            junior: O("junior"),
            lily: O("lily"),
            lin: O("lin"),
            lucy: O("lucy"),
            oscar: O("oscar"),
            vikram: O("vikram"),
            zari: O("zari")
        }
          , x = n
          , M = " "
          , F = ({challenge: e, challengeState: t}) => {
            var a, s;
            const n = (0,
            S.Dg)(null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.map((t => e.choices[t].text)).join("")) && void 0 !== s ? s : "", "")
              , r = e.type === y.Sm.SyllableTap ? e.correctSolutions.map((e => (0,
            S.Dg)(e, ""))) : [(0,
            S.Dg)(e.correctIndices.map((t => e.choices[t].text)).join(""))];
            return Promise.resolve({
                correct: r.includes(n),
                guess: n
            })
        }
          , U = ({challenge: e, challengeState: t}) => {
            var a, s, n;
            const r = null !== (a = t.guess) && void 0 !== a ? a : []
              , i = {
                BOTH: ["left", "right"],
                LEFT: ["left"],
                NEITHER: [],
                RIGHT: ["right"]
            };
            for (let t = 0; t < r.length; t++) {
                const a = e.choices[r[t]]
                  , o = t > 0 ? e.choices[r[t - 1]] : void 0
                  , l = t + 1 < r.length ? e.choices[r[t + 1]] : void 0
                  , c = i[null !== (s = null == l ? void 0 : l.damagePosition) && void 0 !== s ? s : "NEITHER"]
                  , d = i[null !== (n = null == o ? void 0 : o.damagePosition) && void 0 !== n ? n : "NEITHER"];
                if ("NEITHER" !== a.damagePosition)
                    if ("LEFT" === a.damagePosition) {
                        if (!d.includes("right"))
                            return !1
                    } else if ("RIGHT" === a.damagePosition) {
                        if (!c.includes("left"))
                            return !1
                    } else if (!("BOTH" !== a.damagePosition || d.includes("right") && c.includes("left")))
                        return !1
            }
            return !0
        }
        ;
        class H {
            continueChallenge({challengeState: e}) {
                return {
                    ...e
                }
            }
            prepareChallenge({challenge: e}) {
                const t = {
                    ...e
                };
                if (t.character && !t.character.image && delete t.character,
                t.character) {
                    const e = N;
                    t.character = {
                        ...t.character,
                        riveAnimation: "BEA" === t.character.name ? e.bea : "EDDY" === t.character.name ? e.eddy : "FALSTAFF" === t.character.name ? e.falstaff : "JUNIOR" === t.character.name ? e.junior : "LILY" === t.character.name ? e.lily : "LIN" === t.character.name ? e.lin : "LUCY" === t.character.name ? e.lucy : "OSCAR" === t.character.name ? e.oscar : "VIKRAM" === t.character.name ? e.vikram : "ZARI" === t.character.name ? e.zari : void 0
                    }
                }
                return t
            }
        }
        const G = {
            [y.Sm.Assist]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.options.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: t.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.CharacterIntro]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => [{
                        autoplay: !0,
                        required: !1,
                        text: e.prompt,
                        url: e.tts
                    }],
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.CharacterMatch]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.pairs.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.character,
                        url: e.tts
                    }))),
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: void 0 !== e.guess,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.CharacterPuzzle]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([...e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    })), {
                        autoplay: !0,
                        required: !1,
                        text: e.correctSolutions[0],
                        url: e.tts
                    }]),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        var a;
                        const s = null === (a = t.guess) || void 0 === a ? void 0 : a.choices.map((t => t >= 0 ? e.choices[t].text : "")).join("")
                          , n = e.correctIndices.map((t => e.choices[t].text)).join("");
                        return Promise.resolve({
                            correct: s === n,
                            guess: s
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => {
                        var a, s;
                        return (null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.choices) || void 0 === s ? void 0 : s.filter((e => e >= 0)).length) === e.correctIndices.length
                    }
                }
            }
            ,
            [y.Sm.CharacterSelect]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.character,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.CharacterTrace]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO],
                    this.getTts = ({challenge: e}) => e.tts ? [{
                        autoplay: !0,
                        required: !1,
                        text: e.prompt,
                        url: e.tts
                    }] : [],
                    this.grade = ({challenge: e, challengeState: t}) => {
                        var a, s;
                        return Promise.resolve({
                            correct: (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0) >= e.strokes.length,
                            guess: t.guess
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => {
                        var a, s;
                        return (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0) >= e.strokes.length
                    }
                }
            }
            ,
            [y.Sm.CharacterWrite]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO],
                    this.getTts = ({challenge: e}) => e.promptTts ? [{
                        autoplay: !0,
                        required: !1,
                        text: e.prompt,
                        url: e.promptTts
                    }] : [],
                    this.grade = ({challenge: e, challengeState: t}) => {
                        var a, s, n;
                        const r = e.strokes.filter((e => "PREDRAWN" !== e.strokeDrawMode))
                          , i = null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0
                          , o = i >= r.length && !(null === (n = t.guess) || void 0 === n ? void 0 : n.skippedCurrentStroke);
                        return Promise.resolve({
                            correct: o,
                            guess: t.guess,
                            numStrokesLeft: r.length - i
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => {
                        var a, s;
                        const n = e.strokes.filter((e => "PREDRAWN" !== e.strokeDrawMode));
                        return (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.currentStrokeIndex) && void 0 !== s ? s : 0) >= n.length
                    }
                }
            }
            ,
            [y.Sm.CompleteReverseTranslation]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t, challengeToggleState: a}) => {
                        if (a.isToggledToTyping) {
                            const s = this.getTypedSentence(t);
                            return (0,
                            u.wM)({
                                allowTypoBlame: !0,
                                challenge: e,
                                guess: s,
                                isTypingInLearningLanguage: a.isToggledToTyping
                            })
                        }
                        const n = this.getTypedWords(e, t)
                          , r = this.getAllWords(e, t).join("")
                          , i = e.displayTokens.filter((e => e.isBlank)).map((e => e.text));
                        if (s.Xy(n, i))
                            return Promise.resolve({
                                correct: !0,
                                guess: r
                            });
                        const o = await (0,
                        u.wM)({
                            allowTypoBlame: !0,
                            challenge: e,
                            guess: r,
                            isTypingInLearningLanguage: a.isToggledToTyping
                        });
                        return o.correct || delete o.blameMessage,
                        o
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: {
                            translatedWords: e.displayTokens.map(( () => ""))
                        },
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t, challengeToggleState: a}) => a.isToggledToTyping ? this.getTypedSentence(t).length > 0 : this.getTypedWords(e, t).every((e => e)),
                    this.getTypedWords = (e, t) => {
                        var a, s;
                        const n = null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.translatedWords) && void 0 !== s ? s : [];
                        return e.displayTokens.flatMap(( (e, t) => e.isBlank ? n[t] : []))
                    }
                    ,
                    this.getAllWords = (e, t) => {
                        const {displayTokens: a} = e;
                        let s = 0;
                        const n = this.getTypedWords(e, t);
                        return a.map((e => e.isBlank ? n[s++] : e.text))
                    }
                    ,
                    this.getTypedSentence = e => {
                        var t, a;
                        return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.translatedSentence) && void 0 !== a ? a : "").trim()
                    }
                }
            }
            ,
            [y.Sm.Definition]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([...e.displayTokens.map((e => e.hintToken.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.hintToken.tts
                    })), e.tts && {
                        autoplay: !0,
                        required: !1,
                        text: e.displayTokens.map((e => e.text)).join(""),
                        url: e.tts
                    }]),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: t.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.Dialogue]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.continueChallenge = ({challengeState: e}) => ({
                        ...e,
                        currentDialogueIndex: e.currentDialogueIndex + 1
                    }),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => {
                        var t;
                        return s.oA([...e.dialogue.map((e => e.hintTokens)).flat(), ...null !== (t = e.promptTokens) && void 0 !== t ? t : []].map((e => e.tts && {
                            autoplay: !1,
                            required: !1,
                            text: e.value,
                            url: e.tts
                        })))
                    }
                    ,
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = ({challenge: e, challengeState: t}) => {
                        const {dialogue: a} = e
                          , {currentDialogueIndex: s} = t;
                        return s >= a.length
                    }
                    ,
                    this.prepareChallengeState = ({challenge: e, isDesktop: t}) => ({
                        currentDialogueIndex: t ? e.dialogue.length : 0,
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.ExtendedMatch]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.pairs.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.learningToken,
                        url: e.tts
                    }))),
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: void 0 !== e.guess,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = () => !1
                }
            }
            ,
            [y.Sm.ExtendedListenMatch]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.pairs.map((e => e.tts && {
                        autoplay: !1,
                        required: !0,
                        text: e.translation,
                        url: e.tts
                    }))),
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: void 0 !== e.guess,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = () => !1
                }
            }
            ,
            [y.Sm.Form]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        gradingMetadata: (0,
                        v.u5)(e, t.guess),
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallenge = e => {
                        const t = super.prepareChallenge(e);
                        return t.options || (t.options = t.choices.map((e => ({
                            text: e
                        })))),
                        t
                    }
                    ,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.FreeResponse]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [],
                    this.getTts = () => [],
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: "" !== this.getResponse(e),
                        guess: this.getResponse(e)
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => {
                        const {maxGuessLength: a} = e
                          , s = this.getResponse(t);
                        return s.length > 0 && s.length <= a
                    }
                    ,
                    this.getResponse = e => {
                        var t;
                        return (null !== (t = e.guess) && void 0 !== t ? t : "").trim()
                    }
                }
            }
            ,
            [y.Sm.GapFill]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        closestSolution: e.displayTokens.map((e => e.text)).join(""),
                        correct: t.guess === e.correctIndex,
                        guess: void 0 === t.guess ? void 0 : e.choices[t.guess]
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.Judge]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.OFFENSIVE_OPTION, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = ({challenge: e, challengeState: t}) => (e.correctIndices.length > 1 && (0,
                    m.vU)(`Judge has more than one right answer: ${e.prompt}`),
                    Promise.resolve({
                        correct: void 0 !== t.guess && e.correctIndices.includes(t.guess),
                        guess: t.guess
                    })),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.Listen]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([e.slowTts && {
                        autoplay: !1,
                        required: !1,
                        text: e.prompt,
                        url: e.slowTts
                    }, {
                        autoplay: !0,
                        required: !0,
                        text: e.prompt,
                        url: e.tts
                    }]),
                    this.grade = ({challenge: e, challengeState: t, learningLanguage: a}) => (0,
                    u.wM)({
                        allowTypoBlame: !0,
                        challenge: e,
                        guess: this.getGuess(t),
                        isTypingInLearningLanguage: e.grader.language === a
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => !!this.getGuess(e),
                    this.getGuess = e => {
                        var t;
                        return (null !== (t = e.guess) && void 0 !== t ? t : "").trim()
                    }
                }
            }
            ,
            [y.Sm.ListenComplete]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([e.slowTts && {
                        autoplay: !1,
                        required: !1,
                        text: e.prompt,
                        url: e.slowTts
                    }, {
                        autoplay: !0,
                        required: !0,
                        text: e.prompt,
                        url: e.tts
                    }]),
                    this.grade = ({challenge: e, challengeState: t, learningLanguage: a}) => (0,
                    u.wM)({
                        allowTypoBlame: !0,
                        challenge: e,
                        guess: this.getUserInput(e, t, !0).join(""),
                        isTypingInLearningLanguage: e.grader.language === a
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallenge = e => {
                        const t = super.prepareChallenge(e);
                        return t.prompt = t.displayTokens.map((e => e.text)).join(""),
                        t
                    }
                    ,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: e.displayTokens.map(( () => "")),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getUserInput(e, t, !1).every((e => e)),
                    this.getUserInput = (e, t, a) => {
                        var s;
                        const n = null !== (s = t.guess) && void 0 !== s ? s : [];
                        return e.displayTokens.flatMap(( (e, t) => {
                            const s = a ? e.text : [];
                            return e.isBlank ? n[t] : s
                        }
                        ))
                    }
                }
            }
            ,
            [y.Sm.ListenMatch]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.pairs.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.translation,
                        url: e.tts
                    }))),
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: void 0 !== e.guess,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.Match]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.pairs.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.learningToken,
                        url: e.tts
                    }))),
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: void 0 !== e.guess,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.Name]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = ({challenge: e, challengeState: t, session: a}) => {
                        var s;
                        const n = [this.getTranslation(t)]
                          , i = this.getArticle(e, t);
                        if (i && n.unshift(i),
                        e.grader) {
                            const t = null !== (s = (0,
                            c.K)(n)) && void 0 !== s ? s : ""
                              , a = {
                                ...e,
                                grader: e.grader
                            };
                            return (0,
                            u.wM)({
                                allowTypoBlame: !0,
                                challenge: a,
                                guess: t,
                                isTypingInLearningLanguage: !0
                            })
                        }
                        const o = (e.correctSolutions || []).map((e => (0,
                        d.lG)(x, e)));
                        if (o.includes((0,
                        d.lG)(x, n.join(M))) || o.includes((0,
                        d.lG)(x, n.join(""))))
                            return Promise.resolve({
                                correct: !0,
                                guess: n
                            });
                        const l = (0,
                        f.globalGetState)();
                        let g = !1;
                        if (l) {
                            const e = (0,
                            r.HF)(l)
                              , t = a.skillId;
                            t && e && (g = void 0 !== (0,
                            h.m8)(e, (e => "skill" === e.type && e.pathLevelClientData.skillId === t && "custom_intro" === e.subtype)))
                        }
                        if (g)
                            return Promise.resolve({
                                correct: !1,
                                guess: n
                            });
                        throw Error("Unable to grade name challenge")
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => (!e.articles || this.getArticle(e, t).length > 0) && this.getTranslation(t).length > 0,
                    this.getArticle = (e, t) => {
                        var a, s, n, r;
                        return null !== (r = (null !== (a = e.articles) && void 0 !== a ? a : [])[null !== (n = null === (s = t.guess) || void 0 === s ? void 0 : s.article) && void 0 !== n ? n : -1]) && void 0 !== r ? r : ""
                    }
                    ,
                    this.getTranslation = e => {
                        var t, a;
                        return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.translation) && void 0 !== a ? a : "").trim()
                    }
                }
            }
            ,
            [y.Sm.ListenComprehension]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => {
                        var t;
                        return s.oA([e.slowTts && {
                            autoplay: !1,
                            required: !1,
                            text: e.prompt,
                            url: e.slowTts
                        }, {
                            autoplay: !0,
                            required: !0,
                            text: e.prompt,
                            url: e.tts
                        }, ...(null !== (t = e.questionTokens) && void 0 !== t ? t : []).map((e => e.tts && {
                            autoplay: !1,
                            required: !1,
                            text: e.value,
                            url: e.tts
                        }))])
                    }
                    ,
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.ListenIsolation]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => {
                        var t, a;
                        return s.oA([{
                            autoplay: !0,
                            required: !0,
                            text: e.tokens.map((e => e.value)).join(""),
                            url: e.tts
                        }, ...(null !== (t = e.options) && void 0 !== t ? t : []).map((e => e.tts && {
                            autoplay: !1,
                            required: !0,
                            text: e.text,
                            url: e.tts
                        })), ...(null !== (a = e.tokens) && void 0 !== a ? a : []).map((e => e.tts && {
                            autoplay: !1,
                            required: !1,
                            text: e.value,
                            url: e.tts
                        }))])
                    }
                    ,
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.ListenSpeak]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => [{
                        autoplay: !0,
                        required: !1,
                        text: e.prompt,
                        url: e.tts
                    }],
                    this.grade = ({challenge: e, challengeState: t}) => {
                        var a, s, n, r;
                        const i = (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.score) && void 0 !== s ? s : 0) >= e.threshold;
                        return Promise.resolve({
                            correct: i,
                            guess: t.guess,
                            numRetriesLeft: i || void 0 === (null === (n = t.guess) || void 0 === n ? void 0 : n.usedGuesses) ? 0 : l.Tu - (null === (r = t.guess) || void 0 === r ? void 0 : r.usedGuesses)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = () => !1
                }
            }
            ,
            [y.Sm.ListenTap]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([e.slowTts && {
                        autoplay: !1,
                        required: !1,
                        text: e.prompt,
                        url: e.slowTts
                    }, {
                        autoplay: !0,
                        required: !0,
                        text: e.prompt,
                        url: e.tts
                    }, ...e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    }))]),
                    this.grade = async ({challenge: e, challengeState: t, challengeToggleState: a}) => {
                        if (a.isToggledToTyping)
                            return (0,
                            u.wM)({
                                allowTypoBlame: !0,
                                challenge: e,
                                guess: this.getTranscription(t),
                                isTypingInLearningLanguage: a.isToggledToTyping
                            });
                        const n = (0,
                        l.rF)(e)
                          , r = this.getTapTranscriptions(e, t)
                          , i = r.join(n)
                          , o = e.correctIndices.map((t => e.choices[t].text));
                        if (s.Xy(o, r))
                            return Promise.resolve({
                                correct: !0,
                                guess: i
                            });
                        const c = await (0,
                        u.wM)({
                            allowTypoBlame: !1,
                            challenge: e,
                            guess: i,
                            isTypingInLearningLanguage: a.isToggledToTyping
                        });
                        return c.correct ? c : Promise.resolve({
                            correct: c.correct,
                            guess: i
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t, challengeToggleState: a}) => a.isToggledToTyping ? this.getTranscription(t).length > 0 : this.getTapTranscriptions(e, t).length > 0,
                    this.getTapTranscriptions = (e, t) => {
                        var a, s, n;
                        return null !== (n = null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.tapTranscriptions) || void 0 === s ? void 0 : s.map((t => e.choices[t].text))) && void 0 !== n ? n : []
                    }
                    ,
                    this.getTranscription = e => {
                        var t, a;
                        return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.transcription) && void 0 !== a ? a : "").trim()
                    }
                }
            }
            ,
            [y.Sm.OrderTapComplete]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        const a = this.getGuesses(t).values();
                        let s = !0
                          , n = !1;
                        for (const t of e.displayTokens)
                            if (t.isBlank) {
                                n = !0;
                                const r = a.next().value;
                                if (null == r || t.text !== e.choices[r].text) {
                                    s = !1;
                                    break
                                }
                            } else if (n && t.text !== M) {
                                n = !1;
                                const e = a.next();
                                if (null !== e.value && !e.done) {
                                    s = !1;
                                    break
                                }
                            }
                        return Promise.resolve({
                            closestSolution: e.displayTokens.map((e => e.text)).join(""),
                            correct: s,
                            guess: t.guess,
                            highlights: this.getHighlights(e, t)
                        })
                    }
                    ,
                    this.hasDiscussion = () => !1,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => this.getGuesses(e).length > 0 && null !== this.getGuesses(e)[0],
                    this.getGuesses = e => {
                        var t;
                        return null !== (t = e.guess) && void 0 !== t ? t : []
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuesses(t).map((t => null === t ? null : e.choices[t].text));
                        return (0,
                        l.nT)(e.displayTokens.map((e => e.text)), e.displayTokens.map((e => {
                            var t;
                            return e.isBlank ? null !== (t = a.shift()) && void 0 !== t ? t : "" : e.text
                        }
                        )))
                    }
                }
            }
            ,
            [y.Sm.PartialListen]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = async ({challenge: e, challengeState: t, challengeToggleState: a}) => {
                        var n;
                        const r = e.displayTokens
                          , i = r.findIndex((e => e.isBlank))
                          , o = e.displayTokens.map((e => e.text)).join("")
                          , l = null !== (n = t.guess) && void 0 !== n ? n : ""
                          , c = r.map(( (e, t) => e.isBlank ? t === i ? l : "" : e.text)).join("");
                        if (s.Xy(c, o))
                            return Promise.resolve({
                                correct: !0,
                                guess: l
                            });
                        const d = await (0,
                        u.wM)({
                            allowTypoBlame: !0,
                            challenge: e,
                            guess: c,
                            isTypingInLearningLanguage: a.isToggledToTyping
                        });
                        return d.guess = l,
                        d.correct || delete d.blameMessage,
                        d
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => !!e.guess
                }
            }
            ,
            [y.Sm.PartialReverseTranslate]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t, challengeToggleState: a}) => {
                        var n;
                        const r = e.displayTokens
                          , i = r.findIndex((e => e.isBlank))
                          , o = e.displayTokens.map((e => e.text)).join("")
                          , l = null !== (n = t.guess) && void 0 !== n ? n : ""
                          , c = r.map(( (e, t) => e.isBlank ? t === i ? l : "" : e.text)).join("");
                        if (s.Xy(c, o))
                            return Promise.resolve({
                                correct: !0,
                                guess: l
                            });
                        const d = await (0,
                        u.wM)({
                            allowTypoBlame: !0,
                            challenge: e,
                            guess: c,
                            isTypingInLearningLanguage: a.isToggledToTyping
                        });
                        return d.guess = l,
                        d.correct || delete d.blameMessage,
                        d
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => !!e.guess
                }
            }
            ,
            [y.Sm.PatternTapComplete]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = async ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: e.correctIndex === t.guess,
                        guess: void 0 === t.guess ? "" : e.choices[t.guess]
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.RadioBinary]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [],
                    this.getConditionallyDisplayedReportTypes = () => [],
                    this.getTts = () => [],
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: !0,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.RadioImageSelect]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [],
                    this.getConditionallyDisplayedReportTypes = () => [],
                    this.getTts = () => [],
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: !0,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.RadioListenMatch]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [],
                    this.getConditionallyDisplayedReportTypes = () => [],
                    this.getTts = () => [],
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: !0,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: void 0,
                        pairs: e.pairs,
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.RadioListenRecognize]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [],
                    this.getConditionallyDisplayedReportTypes = () => [],
                    this.getTts = () => [],
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: !0,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        correctIndices: !0,
                        guess: e.correctIndices,
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.RadioSelect]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [],
                    this.getConditionallyDisplayedReportTypes = () => [],
                    this.getTts = () => [],
                    this.grade = ({challengeState: e}) => Promise.resolve({
                        correct: !0,
                        guess: e.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.ReadComprehension]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.continueChallenge = ({challengeState: e}) => ({
                        ...e,
                        finishedPassage: !0
                    }),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => {
                        var t, a;
                        return s.oA([...null !== (t = e.passageTokens) && void 0 !== t ? t : [], ...null !== (a = e.questionTokens) && void 0 !== a ? a : []].map((e => e.tts && {
                            autoplay: !1,
                            required: !1,
                            text: e.value,
                            url: e.tts
                        })))
                    }
                    ,
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = ({challengeState: e}) => e.finishedPassage,
                    this.prepareChallengeState = ({challenge: e, isDesktop: t}) => ({
                        finishedPassage: t,
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.ReverseAssist]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: t.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.SameDifferent]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.ttsURLs.map(( (t, a) => ({
                        autoplay: !0,
                        required: !0,
                        text: e.prompts[a],
                        url: t
                    })))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: t.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.Select]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_IMAGE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.phrase,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.SelectPronunciation]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => e.choices.map(( (t, a) => ({
                        autoplay: a === e.correctIndex,
                        required: !0,
                        text: t.text,
                        url: t.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.SelectTranscription]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([{
                        autoplay: !0,
                        required: !0,
                        text: e.choices[e.correctIndex].text,
                        url: e.tts
                    }, ...e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !0,
                        text: e.text,
                        url: e.tts
                    }))]),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: `${t.guess}`
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.SvgPuzzle]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_OPTION, i.Vi.ChallengeReports.CHARACTER_DISPLAY, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.choices.map((e => e.tts && e.text && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    })).concat(e.tts ? [{
                        autoplay: !0,
                        required: !1,
                        text: e.correctSolutions[0],
                        url: e.tts
                    }] : [])),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        var a, s;
                        let n = !0;
                        for (let s = 0; s < e.correctIndices.length; s++)
                            if (e.correctIndices[s] !== (null === (a = t.guess) || void 0 === a ? void 0 : a.choices[s])) {
                                n = !1;
                                break
                            }
                        const r = null === (s = t.guess) || void 0 === s ? void 0 : s.choices.map((e => `${e}`)).join(", ").trim();
                        return Promise.resolve({
                            correct: n,
                            guess: `[${r}]`
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => {
                        var a, s;
                        return (null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.choices) || void 0 === s ? void 0 : s.filter((e => e >= 0)).length) === e.correctIndices.length
                    }
                }
            }
            ,
            [y.Sm.SyllableTap]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([{
                        autoplay: !1,
                        required: !0,
                        text: e.prompt,
                        url: e.tts
                    }, ...e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !0,
                        text: e.text,
                        url: e.tts
                    }))]),
                    this.grade = e => F(e),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = e => U(e)
                }
            }
            ,
            [y.Sm.SyllableListenTap]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA([{
                        autoplay: !1,
                        required: !0,
                        text: e.prompt,
                        url: e.tts
                    }, ...e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !0,
                        text: e.text,
                        url: e.tts
                    }))]),
                    this.grade = e => F(e),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = e => U(e)
                }
            }
            ,
            [y.Sm.Speak]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => [{
                        autoplay: !0,
                        required: !1,
                        text: e.prompt,
                        url: e.tts
                    }],
                    this.grade = ({challenge: e, challengeState: t}) => {
                        var a, s, n, r;
                        const i = (null !== (s = null === (a = t.guess) || void 0 === a ? void 0 : a.score) && void 0 !== s ? s : 0) >= e.threshold;
                        return Promise.resolve({
                            correct: i,
                            guess: t.guess,
                            numRetriesLeft: i || void 0 === (null === (n = t.guess) || void 0 === n ? void 0 : n.usedGuesses) ? 0 : l.Tu - (null === (r = t.guess) || void 0 === r ? void 0 : r.usedGuesses)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = () => !1
                }
            }
            ,
            [y.Sm.TapCloze]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        const a = this.getGuessedTexts(e, t)
                          , n = (0,
                        g.Ub)(e);
                        return Promise.resolve({
                            correct: s.Xy(a, n),
                            guess: a.join(""),
                            highlights: this.getHighlights(e, t)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: (0,
                        g.jL)(e.displayTokens),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).every((e => void 0 !== e)),
                    this.getGuessedTexts = (e, t) => {
                        const {displayTokens: a} = e;
                        let s = 0;
                        const n = this.getGuesses(e, t);
                        return a.map((e => {
                            if (void 0 === e.damageStart)
                                return e.text;
                            const t = n[s++];
                            return void 0 === t ? e.text.slice(0, e.damageStart) : `${e.text.slice(0, e.damageStart)}${t}`
                        }
                        ))
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuessedTexts(e, t)
                          , s = (0,
                        g.Ub)(e);
                        return (0,
                        l.nT)(s, a)
                    }
                    ,
                    this.getGuesses = (e, t) => {
                        const {displayTokens: a} = e;
                        return t.guess ? t.guess.map((e => e.guess)) : (0,
                        g.jL)(a).map(( () => {}
                        ))
                    }
                }
            }
            ,
            [y.Sm.TapClozeTable]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        const a = this.getGuessedTexts(e, t)
                          , n = (0,
                        g.Ub)(e);
                        return Promise.resolve({
                            correct: s.Xy(a, n),
                            guess: a.join(""),
                            highlights: this.getHighlights(e, t)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: (0,
                        g.Xh)(e.displayTableTokens),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).every((e => void 0 !== e.guess)),
                    this.getGuessedTexts = (e, t) => {
                        const {displayTableTokens: a, headers: s} = e
                          , n = this.getGuesses(e, t);
                        return (0,
                        g.x6)(a, s, ( (e, t, a) => {
                            if (void 0 === a.damageStart)
                                return a.text;
                            const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                            return (null == s ? void 0 : s.guess) ? `${a.text.slice(0, a.damageStart)}${s.guess}` : a.text.slice(0, a.damageStart)
                        }
                        ))
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuessedTexts(e, t)
                          , s = (0,
                        g.Ub)(e);
                        return (0,
                        l.nT)(s, a)
                    }
                    ,
                    this.getGuesses = (e, t) => {
                        var a;
                        const {displayTableTokens: s} = e;
                        return null !== (a = t.guess) && void 0 !== a ? a : (0,
                        g.Xh)(s)
                    }
                }
            }
            ,
            [y.Sm.TapComplete]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        const a = this.getGuesses(e, t)
                          , n = a.values()
                          , r = e.displayTokens.map((t => {
                            if (t.isBlank) {
                                const t = n.next().value;
                                return null === t ? "" : e.choices[t].text
                            }
                            return t.text
                        }
                        )).join("");
                        return Promise.resolve({
                            closestSolution: e.displayTokens.map((e => e.text)).join(""),
                            correct: s.Xy(a, e.correctIndices),
                            guess: r,
                            highlights: this.getHighlights(e, t)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).filter((e => null !== e)).length === e.correctIndices.length,
                    this.getGuesses = (e, t) => t.guess ? t.guess : new Array(e.correctIndices.length).fill(null),
                    this.getHighlights = (e, t) => {
                        const a = this.getGuesses(e, t).values();
                        return (0,
                        l.nT)(e.displayTokens.map((e => e.text)), e.displayTokens.map((t => {
                            if (t.isBlank) {
                                const t = a.next().value;
                                return null === t ? "" : e.choices[t].text
                            }
                            return t.text
                        }
                        )))
                    }
                }
            }
            ,
            [y.Sm.TapCompleteTable]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => {
                        const a = this.getGuessedTexts(e, t)
                          , n = (0,
                        g.Ub)(e);
                        return Promise.resolve({
                            correct: s.Xy(a, n),
                            guess: a.join(""),
                            highlights: this.getHighlights(e, t)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: (0,
                        g.Xh)(e.displayTableTokens),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).every((e => void 0 !== e.guess)),
                    this.getGuessedTexts = (e, t) => {
                        const {displayTableTokens: a, headers: s} = e
                          , n = this.getGuesses(e, t);
                        return (0,
                        g.x6)(a, s, ( (e, t, a) => {
                            if (!a.isBlank)
                                return a.text;
                            const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                            return (null == s ? void 0 : s.guess) ? s.guess : ""
                        }
                        ))
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuessedTexts(e, t)
                          , s = (0,
                        g.Ub)(e);
                        return (0,
                        l.nT)(s, a)
                    }
                    ,
                    this.getGuesses = (e, t) => {
                        var a;
                        const {displayTableTokens: s} = e;
                        return null !== (a = t.guess) && void 0 !== a ? a : (0,
                        g.Xh)(s)
                    }
                }
            }
            ,
            [y.Sm.TapDescribe]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t}) => {
                        const a = this.getGuess(e, t)
                          , s = await (0,
                        u.wM)({
                            allowTypoBlame: !1,
                            challenge: e,
                            guess: a,
                            isTypingInLearningLanguage: !1
                        });
                        return s.correct ? s : {
                            correct: s.correct,
                            guess: a
                        }
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getChoices(t).length === e.correctIndices.length,
                    this.getChoices = e => {
                        var t;
                        return null !== (t = e.guess) && void 0 !== t ? t : []
                    }
                    ,
                    this.getGuess = (e, t) => {
                        const a = (0,
                        l.rF)(e);
                        return this.getChoices(t).map((t => e.choices[t].text)).join(a)
                    }
                }
            }
            ,
            [y.Sm.Translate]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.BAD_IMAGE, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.MISSING_IMAGE, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e, learningLanguage: t, session: a}) => s.oA([e.tts && {
                        autoplay: e.sourceLanguage === t,
                        required: !1,
                        text: e.prompt,
                        url: e.tts
                    }, ...e.choices.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    })), ...e.tokens.map((e => e.tts && !(0,
                    _.LJ)(a.type) && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))]),
                    this.grade = async ({challenge: e, challengeState: t, challengeToggleState: a, learningLanguage: n}) => {
                        if (a.isToggledToTyping)
                            return (0,
                            u.wM)({
                                allowTypoBlame: a.isToggledToTyping,
                                challenge: e,
                                guess: this.getTranslation(t),
                                isTypingInLearningLanguage: a.isToggledToTyping && e.grader.language === n
                            });
                        const r = (0,
                        l.rF)(e)
                          , i = this.getTapTranslations(e, t)
                          , c = i.join(r)
                          , d = e.correctIndices.map((t => e.choices[t].text));
                        if (s.Xy(d, i))
                            return Promise.resolve({
                                correct: !0,
                                guess: c
                            });
                        const g = await (0,
                        u.wM)({
                            allowTypoBlame: a.isToggledToTyping,
                            challenge: e,
                            guess: c,
                            isTypingInLearningLanguage: a.isToggledToTyping && e.grader.language === n
                        });
                        return g.correct ? g.blameType === o.Oj.ExtraSpace ? {
                            correct: g.correct,
                            guess: c
                        } : g : Promise.resolve({
                            correct: g.correct,
                            guess: c,
                            mistakesRecyclingHighlights: g.mistakesRecyclingHighlights
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t, challengeToggleState: a}) => a.isToggledToTyping ? this.getTranslation(t).length > 0 : this.getTapTranslations(e, t).length > 0,
                    this.getTapTranslations = (e, t) => {
                        var a, s, n;
                        return null !== (n = null === (s = null === (a = t.guess) || void 0 === a ? void 0 : a.tapTranslations) || void 0 === s ? void 0 : s.map((t => e.choices[t].text))) && void 0 !== n ? n : []
                    }
                    ,
                    this.getTranslation = e => {
                        var t, a;
                        return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.translation) && void 0 !== a ? a : "").trim()
                    }
                }
            }
            ,
            [y.Sm.Transliterate]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = () => [],
                    this.grade = ({challenge: e, challengeState: t}) => {
                        const a = this.getTransliteration(t)
                          , s = (e.correctSolutions || []).map((e => (0,
                        d.lG)(x, e))).map((e => e.replace(M, "")))
                          , n = (0,
                        d.lG)(x, a).replace(M, "")
                          , r = s.includes(n);
                        return Promise.resolve({
                            correct: r,
                            guess: a
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => this.getTransliteration(e).length > 0,
                    this.getTransliteration = e => {
                        var t, a;
                        return (null !== (a = null === (t = e.guess) || void 0 === t ? void 0 : t.transliteration) && void 0 !== a ? a : "").trim()
                    }
                }
            }
            ,
            [y.Sm.TransliterationAssist]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.options.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.text,
                        url: e.tts
                    }))),
                    this.grade = ({challenge: e, challengeState: t}) => Promise.resolve({
                        correct: t.guess === e.correctIndex,
                        guess: t.guess
                    }),
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
            ,
            [y.Sm.TypeCloze]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t, learningLanguage: a}) => {
                        const n = this.getGuessedTexts(e, t)
                          , r = (0,
                        g.Ub)(e)
                          , i = await (0,
                        d.C3)(a);
                        return Promise.resolve({
                            correct: s.Xy(n.map((e => (0,
                            d.PW)(i.accentedCharacterMap, i.normalizationData, e))), r.map((e => (0,
                            d.PW)(i.accentedCharacterMap, i.normalizationData, e)))),
                            guess: n.join(""),
                            highlights: this.getHighlights(e, t)
                        })
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: (0,
                        g.jL)(e.displayTokens),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).every((e => void 0 !== e)),
                    this.getGuessedTexts = (e, t) => {
                        const {displayTokens: a} = e;
                        let s = 0;
                        const n = this.getGuesses(e, t);
                        return a.map((e => {
                            if (void 0 === e.damageStart)
                                return e.text;
                            const t = n[s++];
                            return void 0 === t ? e.text.slice(0, e.damageStart) : `${e.text.slice(0, e.damageStart)}${t}`
                        }
                        ))
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuessedTexts(e, t)
                          , s = (0,
                        g.Ub)(e);
                        return (0,
                        l.nT)(s, a)
                    }
                    ,
                    this.getGuesses = (e, t) => {
                        const {displayTokens: a} = e;
                        return t.guess ? t.guess.map((e => e.guess)) : (0,
                        g.jL)(a).map(( () => {}
                        ))
                    }
                }
            }
            ,
            [y.Sm.TypeClozeTable]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t, learningLanguage: a}) => {
                        const n = this.getGuessedTexts(e, t)
                          , r = (0,
                        g.Ub)(e)
                          , i = await (0,
                        d.C3)(a);
                        return {
                            correct: s.Xy(n.map((e => (0,
                            d.PW)(i.accentedCharacterMap, i.normalizationData, e))), r.map((e => (0,
                            d.PW)(i.accentedCharacterMap, i.normalizationData, e)))),
                            guess: n.join(""),
                            highlights: this.getHighlights(e, t)
                        }
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: (0,
                        g.Xh)(e.displayTableTokens),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).every((e => void 0 !== e.guess)),
                    this.getGuessedTexts = (e, t) => {
                        const {displayTableTokens: a, headers: s} = e
                          , n = this.getGuesses(e, t);
                        return (0,
                        g.x6)(a, s, ( (e, t, a) => {
                            if (void 0 === a.damageStart)
                                return a.text;
                            const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                            return (null == s ? void 0 : s.guess) ? `${a.text.slice(0, a.damageStart)}${s.guess}` : a.text.slice(0, a.damageStart)
                        }
                        ))
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuessedTexts(e, t)
                          , s = (0,
                        g.Ub)(e);
                        return (0,
                        l.nT)(s, a)
                    }
                    ,
                    this.getGuesses = (e, t) => {
                        const {displayTableTokens: a} = e;
                        return t.guess ? t.guess : (0,
                        g.Xh)(a)
                    }
                }
            }
            ,
            [y.Sm.TypeComplete]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tokens.map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t}) => {
                        const a = e.displayTokens
                          , n = a.findIndex((e => e.isBlank))
                          , r = e.displayTokens.map((e => e.text)).join("")
                          , i = this.getUserInput(e, t, !0)
                          , o = a.map(( (t, a) => t.isBlank ? a === n ? e.assistedText ? e.assistedText + i[a] : i[a] : "" : t.text)).join("");
                        if (s.Xy(o, r))
                            return Promise.resolve({
                                correct: !0,
                                guess: i
                            });
                        const l = await (0,
                        u.wM)({
                            allowTypoBlame: !0,
                            challenge: e,
                            guess: o,
                            isTypingInLearningLanguage: !0
                        });
                        return l.guess = i[0],
                        l.correct || delete l.blameMessage,
                        l
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: "",
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess,
                    this.getUserInput = (e, t, a) => {
                        var s;
                        const n = null !== (s = t.guess) && void 0 !== s ? s : [];
                        return e.displayTokens.flatMap((e => {
                            const t = a ? e.text : [];
                            return e.isBlank ? n : t
                        }
                        ))
                    }
                }
            }
            ,
            [y.Sm.TypeCompleteTable]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_AUDIO, i.Vi.ChallengeReports.BAD_HINTS, i.Vi.ChallengeReports.MISSING_AUDIO, i.Vi.ChallengeReports.MISSING_HINTS, i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => s.oA(e.tableTokens.flat(2).map((e => e.tts && {
                        autoplay: !1,
                        required: !1,
                        text: e.value,
                        url: e.tts
                    }))),
                    this.grade = async ({challenge: e, challengeState: t, learningLanguage: a}) => {
                        const n = this.getGuessedTexts(e, t)
                          , r = (0,
                        g.Ub)(e)
                          , i = await (0,
                        d.C3)(a);
                        return {
                            correct: s.Xy(n.map((e => (0,
                            d.PW)(i.accentedCharacterMap, i.normalizationData, e))), r.map((e => (0,
                            d.PW)(i.accentedCharacterMap, i.normalizationData, e)))),
                            guess: n.join(""),
                            highlights: this.getHighlights(e, t)
                        }
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        guess: (0,
                        g.Xh)(e.displayTableTokens),
                        type: e.type
                    }),
                    this.validate = ({challenge: e, challengeState: t}) => this.getGuesses(e, t).every((e => void 0 !== e.guess)),
                    this.getGuessedTexts = (e, t) => {
                        const {displayTableTokens: a, headers: s} = e
                          , n = this.getGuesses(e, t);
                        return (0,
                        g.x6)(a, s, ( (e, t, a) => {
                            if (!a.isBlank)
                                return a.text;
                            const s = n.find((a => a.colIndex === e && a.rowIndex === t));
                            return (null == s ? void 0 : s.guess) ? s.guess : ""
                        }
                        ))
                    }
                    ,
                    this.getHighlights = (e, t) => {
                        const a = this.getGuessedTexts(e, t)
                          , s = (0,
                        g.Ub)(e);
                        return (0,
                        l.nT)(s, a)
                    }
                    ,
                    this.getGuesses = (e, t) => {
                        const {displayTableTokens: a} = e;
                        return t.guess ? t.guess : (0,
                        g.Xh)(a)
                    }
                }
            }
            ,
            [y.Sm.WriteComprehension]: new class extends H {
                constructor() {
                    super(...arguments),
                    this.getAlwaysDisplayedReportTypes = () => [i.Vi.ChallengeReports.BAD_PROMPT, i.Vi.ChallengeReports.OTHER_ISSUE],
                    this.getConditionallyDisplayedReportTypes = () => [i.Vi.ChallengeReports.NOT_ACCEPTED, i.Vi.ChallengeReports.WRONG_ACCEPTED],
                    this.getTts = ({challenge: e}) => {
                        var t, a;
                        return s.oA([...null !== (t = e.passageTokens) && void 0 !== t ? t : [], ...null !== (a = e.questionTokens) && void 0 !== a ? a : []].map((e => e.tts && {
                            autoplay: !1,
                            required: !1,
                            text: e.value,
                            url: e.tts
                        })))
                    }
                    ,
                    this.grade = async ({challenge: e, challengeState: t, learningLanguage: a}) => {
                        var s;
                        const n = await (0,
                        u.wM)({
                            allowTypoBlame: !0,
                            challenge: e,
                            guess: null !== (s = t.guess) && void 0 !== s ? s : "",
                            isTypingInLearningLanguage: e.grader.language === a
                        });
                        return {
                            blameMessage: n.correct ? void 0 : (0,
                            p.H8)(30063),
                            correct: n.correct,
                            guess: n.guess
                        }
                    }
                    ,
                    this.isReadyForGuessing = () => !0,
                    this.prepareChallengeState = ({challenge: e}) => ({
                        type: e.type
                    }),
                    this.validate = ({challengeState: e}) => void 0 !== e.guess
                }
            }
        }
          , V = s.XP(G)
          , z = [y.Sm.RadioBinary, y.Sm.RadioImageSelect, y.Sm.RadioListenMatch, y.Sm.RadioListenRecognize, y.Sm.RadioSelect]
          , B = e => t => {
            const a = t.challenge.type;
            if (!(a in G))
                throw Error(`Unknown challenge type: ${a}`);
            return G[a][e](t)
        }
          , j = B("getAlwaysDisplayedReportTypes")
          , $ = B("getConditionallyDisplayedReportTypes")
          , Z = e => {
            const {challenge: t, challengeState: a, session: s} = e;
            if (t.skipped && (!(0,
            _.LJ)(s.type) || s.type === y.FF.UnitTest || s.type === y.FF.SectionTest)) {
                if (a.hasBrokenTts)
                    return Promise.resolve({
                        correct: !0,
                        guess: ""
                    });
                if ((0,
                _.tq)().includes(t.type))
                    return Promise.resolve({
                        blameMessage: (0,
                        p.H8)(4469),
                        blameSubtext: (0,
                        p.H8)(35006),
                        correct: !0,
                        guess: ""
                    });
                if ((0,
                _.bc)().includes(t.type)) {
                    const e = a.recognizerFailed ? (0,
                    p.H8)(7768) : (0,
                    p.H8)(35006);
                    return Promise.resolve({
                        blameMessage: (0,
                        p.H8)(12946),
                        blameSubtext: e,
                        correct: !0,
                        guess: ""
                    })
                }
            }
            return B("grade")(e)
        }
          , W = B("continueChallenge")
          , q = B("isReadyForGuessing")
          , Q = B("prepareChallenge")
          , K = B("prepareChallengeState")
          , Y = B("validate")
          , J = B("getTts")
    }
    ,
    18675: (e, t, a) => {
        "use strict";
        a.d(t, {
            K: () => g,
            w: () => f
        });
        var s = a(80254)
          , n = a(5219)
          , r = a(95332)
          , i = a(64115)
          , o = a(68903)
          , l = a(58576)
          , c = a(11811);
        const d = s.IH(( () => {
            n.setDebug((0,
            i.Au)())
        }
        ))
          , u = (e, t, a) => a.challenges.slice(0, t.currentIndex).filter((t => t.id === e.id && t.type === e.type)).length
          , g = e => "string" == typeof e ? e : e[0].endsWith("'") ? e.join("") : e.join(" ")
          , p = (e, t) => {
            var a;
            const s = t.guess;
            switch (e.type) {
            case c.Sm.CharacterMatch:
            case c.Sm.CharacterPuzzle:
            case c.Sm.CharacterTrace:
            case c.Sm.CharacterWrite:
            case c.Sm.ExtendedListenMatch:
            case c.Sm.ExtendedMatch:
            case c.Sm.ListenMatch:
            case c.Sm.ListenSpeak:
            case c.Sm.Match:
            case c.Sm.RadioBinary:
            case c.Sm.RadioListenMatch:
            case c.Sm.RadioListenRecognize:
            case c.Sm.Speak:
            case c.Sm.SvgPuzzle:
                return;
            case c.Sm.Assist:
            case c.Sm.ReverseAssist:
            case c.Sm.TransliterationAssist:
                return null === (a = e.options[s]) || void 0 === a ? void 0 : a.text;
            case c.Sm.SameDifferent:
                return e.options[s];
            case c.Sm.CharacterIntro:
                return e.choices[s];
            case c.Sm.CharacterSelect:
                return ( (e, t) => {
                    var a;
                    return null === (a = e.choices[t]) || void 0 === a ? void 0 : a.character
                }
                )(e, s);
            case c.Sm.Judge:
                return e.choices[s];
            case c.Sm.Select:
                return ( (e, t) => {
                    var a;
                    return null === (a = e.choices[t]) || void 0 === a ? void 0 : a.phrase
                }
                )(e, s);
            case c.Sm.SelectPronunciation:
            case c.Sm.SelectTranscription:
                return ( (e, t) => {
                    var a;
                    return null === (a = e.choices[t]) || void 0 === a ? void 0 : a.text
                }
                )(e, s);
            case c.Sm.TapCloze:
            case c.Sm.TypeCloze:
            case c.Sm.TypeComplete:
            case c.Sm.TapClozeTable:
            case c.Sm.TypeClozeTable:
            case c.Sm.TapCompleteTable:
            case c.Sm.TypeCompleteTable:
            case c.Sm.CompleteReverseTranslation:
            case c.Sm.FreeResponse:
            case c.Sm.Listen:
            case c.Sm.ListenComplete:
            case c.Sm.ListenIsolation:
            case c.Sm.ListenTap:
            case c.Sm.OrderTapComplete:
            case c.Sm.PartialListen:
            case c.Sm.PartialReverseTranslate:
            case c.Sm.SyllableListenTap:
            case c.Sm.SyllableTap:
            case c.Sm.TapComplete:
            case c.Sm.TapDescribe:
            case c.Sm.Translate:
            case c.Sm.Transliterate:
            case c.Sm.WriteComprehension:
                return s;
            case c.Sm.Definition:
            case c.Sm.Dialogue:
            case c.Sm.ListenComprehension:
            case c.Sm.PatternTapComplete:
            case c.Sm.RadioImageSelect:
            case c.Sm.RadioSelect:
            case c.Sm.ReadComprehension:
                return e.choices[s];
            case c.Sm.Form:
                return ( (e, t) => {
                    if (e.promptPieces.length < 2 || !(t in e.options) || !("text"in e.options[t]))
                        return;
                    const a = e.options[t].text;
                    return e.promptPieces[0] + a + e.promptPieces[1]
                }
                )(e, s);
            case c.Sm.GapFill:
                return ( (e, t) => e.displayTokens.map((e => e.isBlank ? t : e.text)).join(""))(e, s);
            case c.Sm.Name:
                return g(s);
            default:
                throw (0,
                o.RJ)(e),
                Error("Unexpected challenge type for computing tracked response guess in computeGuess.")
            }
        }
          , m = e => {
            var t, a, s;
            switch (e.type) {
            case c.Sm.CompleteReverseTranslation:
            case c.Sm.GapFill:
            case c.Sm.ListenIsolation:
            case c.Sm.ListenSpeak:
            case c.Sm.OrderTapComplete:
            case c.Sm.PartialReverseTranslate:
            case c.Sm.Speak:
            case c.Sm.SyllableTap:
            case c.Sm.TapCloze:
            case c.Sm.TapComplete:
            case c.Sm.Translate:
            case c.Sm.TypeCloze:
            case c.Sm.TypeComplete:
                return null !== (t = e.tokens) && void 0 !== t ? t : [];
            case c.Sm.Definition:
                return e.displayTokens.map((e => e.hintToken));
            case c.Sm.Dialogue:
                return e.dialogue.flatMap((e => e.hintTokens));
            case c.Sm.ReadComprehension:
            case c.Sm.WriteComprehension:
                return [...null !== (a = e.passageTokens) && void 0 !== a ? a : [], ...null !== (s = e.questionTokens) && void 0 !== s ? s : []];
            case c.Sm.TapClozeTable:
            case c.Sm.TapCompleteTable:
            case c.Sm.TypeClozeTable:
            case c.Sm.TypeCompleteTable:
                return e.tableTokens.flat(2);
            case c.Sm.Assist:
            case c.Sm.CharacterIntro:
            case c.Sm.CharacterMatch:
            case c.Sm.CharacterPuzzle:
            case c.Sm.CharacterSelect:
            case c.Sm.CharacterTrace:
            case c.Sm.CharacterWrite:
            case c.Sm.ExtendedListenMatch:
            case c.Sm.ExtendedMatch:
            case c.Sm.Form:
            case c.Sm.FreeResponse:
            case c.Sm.Judge:
            case c.Sm.Listen:
            case c.Sm.ListenComprehension:
            case c.Sm.ListenComplete:
            case c.Sm.ListenMatch:
            case c.Sm.ListenTap:
            case c.Sm.Match:
            case c.Sm.Name:
            case c.Sm.PartialListen:
            case c.Sm.PatternTapComplete:
            case c.Sm.RadioBinary:
            case c.Sm.RadioImageSelect:
            case c.Sm.RadioListenMatch:
            case c.Sm.RadioListenRecognize:
            case c.Sm.RadioSelect:
            case c.Sm.ReverseAssist:
            case c.Sm.SameDifferent:
            case c.Sm.Select:
            case c.Sm.SelectPronunciation:
            case c.Sm.SelectTranscription:
            case c.Sm.SvgPuzzle:
            case c.Sm.SyllableListenTap:
            case c.Sm.TapDescribe:
            case c.Sm.Transliterate:
            case c.Sm.TransliterationAssist:
                return [];
            default:
                throw (0,
                o.RJ)(e),
                Error("Unexpected challenge type for computing tracked response prompt tokens in computePromptTokens.")
            }
        }
          , h = e => {
            const t = e.challengeStates[e.currentIndex].hintsShown;
            if (void 0 === t)
                return [];
            const a = e.sessionParams.challengeTypes[e.currentIndex]
              , s = [c.Sm.ReverseAssist, c.Sm.PartialReverseTranslate, c.Sm.CompleteReverseTranslation, c.Sm.Translate].includes(a);
            return t.map((e => {
                var t, a, n, r, i;
                return s ? null !== (i = null === (r = null === (n = null === (a = null === (t = e.hintTable) || void 0 === t ? void 0 : t.rows) || void 0 === a ? void 0 : a[0]) || void 0 === n ? void 0 : n[0]) || void 0 === r ? void 0 : r.hint) && void 0 !== i ? i : "" : e.value
            }
            )).slice(0, 128)
        }
          , _ = e => {
            var t, a;
            return null !== (a = null === (t = e.challengeGeneratorIdentifier) || void 0 === t ? void 0 : t.specificType) && void 0 !== a ? a : r.SJ[e.type]
        }
          , v = e => {
            var t;
            return e.worldCharacterShown && (null === (t = e.character) || void 0 === t ? void 0 : t.name) ? [r.F[e.character.name]] : void 0
        }
          , f = (e, t, a, s, r, i, o) => {
            var g;
            const f = e.challenges[a.currentIndex]
              , S = {
                app_version: window.duo.version,
                app_version_hash: window.duo.versionHash,
                challenge_response_tracking_properties: f.challengeResponseTrackingProperties,
                closest_solution: s.closestSolution,
                compact_translations: f.compactTranslations,
                content_id: null === (g = f.challengeGeneratorIdentifier) || void 0 === g ? void 0 : g.generatorId,
                correct: r ? void 0 : s.correct,
                distractors: f.wrongTokens,
                from_language: a.sessionParams.fromLanguage,
                guess: p(f, s),
                hinted_words: h(a),
                item_type: _(f),
                learning_language: a.sessionParams.learningLanguage,
                level_index: a.sessionParams.levelIndex,
                num_hints_tapped: h(a).length,
                order_index: a.currentIndex,
                previous_mistake_order_index: a.recycledMistakeIndexToOriginalMistakeIndex[a.currentIndex],
                prompt: f.prompt,
                prompt_tokens: (y = m(f),
                y.filter((e => void 0 !== e.hintTable)).map((e => {
                    var t, a;
                    return {
                        hints: null !== (a = null === (t = e.hintTable) || void 0 === t ? void 0 : t.rows.flatMap((e => e.flatMap((e => {
                            var t;
                            return null !== (t = e.hint) && void 0 !== t ? t : []
                        }
                        ))))) && void 0 !== a ? a : [],
                        value: e.value
                    }
                }
                ))),
                repetition_number: u(f, a, e),
                responded_by_typing: o.canToggleTyping && o.isToggledToTyping,
                session_id: e.type === c.FF.AlphabetLesson || e.type === c.FF.AlphabetPractice ? e.trackingProperties.alphabet_static_session_id : e.trackingProperties.activity_uuid,
                session_type: e.type.toLowerCase(),
                skill_id: e.skillId,
                skill_tree_id: e.trackingProperties.skill_tree_id,
                skipped: r,
                tagged_kc_ids: f.metadata.lexeme_ids_to_update,
                time_taken: i,
                tree_row: f.metadata.depth,
                user_id: t.id,
                world_characters_shown: v(f)
            };
            var y;
            d(),
            n.track(S, ( () => (0,
            l.bP)("track", "challenge response", [{
                data: S,
                name: "properties"
            }], {
                excludeFromTelemetry: !0
            })))
        }
    }
    ,
    16970: (e, t, a) => {
        "use strict";
        a.d(t, {
            AX: () => P,
            BV: () => g,
            HZ: () => b,
            LK: () => A,
            Rv: () => x,
            S1: () => R,
            S9: () => I,
            SR: () => m,
            XW: () => d,
            Yt: () => T,
            aw: () => p,
            bo: () => y,
            cd: () => N,
            hN: () => w,
            i_: () => D,
            n_: () => u,
            u_: () => h,
            w: () => k,
            yB: () => O
        });
        var s = a(81149)
          , n = a(68903)
          , r = a(59604)
          , i = a(95940)
          , o = a(67116)
          , l = a(34704)
          , c = a(11811);
        const d = "＿"
          , u = 18
          , g = 10
          , p = 270;
        var m;
        !function(e) {
            e.CorrectMoveInwards = "correct_1",
            e.CorrectShowFinalWord = "correct_2",
            e.CorrectFinal = "correct_3",
            e.IncorrectMoveInwards = "incorrect_1",
            e.IncorrectSnapBack = "incorrect_2"
        }(m || (m = {}));
        const h = e => e ? [m.CorrectMoveInwards, m.IncorrectMoveInwards, m.IncorrectSnapBack].includes(e) ? "white" : [m.CorrectShowFinalWord, m.CorrectFinal].includes(e) ? "green" : null : null
          , _ = (e, t, a, n) => {
            const r = {
                fromLanguageId: t,
                learningLanguageId: e
            };
            return a.some(( ({course: e, experiment: t}) => {
                return n = r,
                !((a = e).fromLanguageId !== n.fromLanguageId || a.learningLanguageId !== n.learningLanguageId || void 0 !== t && "experiment" !== (0,
                s.j6)(t, void 0));
                var a, n
            }
            )) || n.some(( ({learningLanguageId: t, experiment: a}) => t === e && (void 0 === a || "experiment" === (0,
            s.j6)(a, void 0))))
        }
          , v = [{
            course: {
                fromLanguageId: "en",
                learningLanguageId: "ar"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "el"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "he"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "hi"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "ja"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "ko"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "ru"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "uk"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "yi"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "zh"
            }
        }, ...[{
            fromLanguageId: "ar",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "bn",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "cs",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "de",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "el",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "en",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "es",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "fr",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "hi",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "hu",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "id",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "it",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "ja",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "ko",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "nl-NL",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "pl",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "pt",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "ro",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "ru",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "sv",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "ta",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "th",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "tl",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "tr",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "uk",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "vi",
            learningLanguageId: "en"
        }, {
            fromLanguageId: "zh",
            learningLanguageId: "en"
        }].map((e => ({
            course: e
        })))]
          , f = [{
            experiment: "web_bingo_ja_xx",
            learningLanguageId: "ja"
        }, {
            experiment: "web_bingo_ko_xx",
            learningLanguageId: "ko"
        }, {
            experiment: "web_bingo_zh_xx",
            learningLanguageId: "zh"
        }]
          , S = ["ja<en", "zh<en"]
          , y = (e, t) => (0,
        n.p)(S)((0,
        l.LP)(e, t))
          , E = ["kanji", "hanzi"]
          , b = e => (0,
        n.p)(E)(e)
          , I = (e, t) => _(e, t, v, f)
          , w = (e, t) => !(0,
        r.O)("alphabets_web_maintenance", !1, t) && I(e.learningLanguage, e.fromLanguage)
          , k = ({learningLanguage: e, fromLanguage: t}) => "ja" === e && "en" === t
          , T = e => {
            const {currentIndex: t, session: {challenges: a}} = e;
            if (a.slice(0, t + 1).some((e => e.indicatorType === c.A.LimitedTts)))
                return !1;
            const s = a[t + 1];
            return (null == s ? void 0 : s.indicatorType) === c.A.LimitedTts
        }
          , C = [{
            course: {
                fromLanguageId: "en",
                learningLanguageId: "ja"
            }
        }, {
            course: {
                fromLanguageId: "en",
                learningLanguageId: "zh"
            }
        }]
          , R = (e, t) => _(e, t, C, [])
          , L = ["ja", "zh"]
          , P = e => "characters" === (e => L.includes(e) ? "characters" : "letters")(e) ? (0,
        i.H8)(40498, {
            language_name: (0,
            o.vY)(e)
        }) : (0,
        i.H8)(40499, {
            language_name: (0,
            o.vY)(e)
        })
          , A = (e, t) => {
            for (let a = 1; a < e.length; a++)
                if (void 0 === e[(t + a) % e.length].choiceIndex)
                    return (t + a) % e.length
        }
          , D = (e, t) => `${e}|groupId:${t}`
          , O = e => "kanji" === e
          , N = (e, t) => {
            let a = [...t]
              , s = t.length - 1;
            for (; a.length > 4 && s >= 0; )
                e.includes(s) || (a = [...a.slice(0, s), ...a.slice(s + 1)]),
                s -= 1;
            return a
        }
          , x = e => "en" !== e
    }
    ,
    78939: (e, t, a) => {
        "use strict";
        a.d(t, {
            sd: () => y,
            C3: () => h,
            YK: () => b,
            PW: () => f,
            GS: () => w,
            tc: () => p,
            gE: () => g,
            lG: () => S
        });
        var s = a(87251)
          , n = a.n(s)
          , r = a(80254);
        const i = JSON.parse('{"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","×":"x","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","÷":"/","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Ĉ":"C","ĉ":"c","Ċ":"C","ċ":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"D","đ":"d","Ē":"E","ē":"e","Ĕ":"E","ĕ":"e","Ė":"E","ė":"e","Ę":"E","ę":"e","Ě":"E","ě":"e","Ĝ":"G","ĝ":"g","Ğ":"G","ğ":"g","Ġ":"G","ġ":"g","Ģ":"G","ģ":"g","Ĥ":"H","ĥ":"h","Ħ":"H","ħ":"h","Ĩ":"I","ĩ":"i","Ī":"I","ī":"i","Ĭ":"I","ĭ":"i","Į":"I","į":"i","İ":"I","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","ĺ":"l","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ŀ":"L","ŀ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ō":"O","ō":"o","Ŏ":"O","ŏ":"o","Ő":"O","ő":"o","Ŕ":"R","ŕ":"r","Ŗ":"R","ŗ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ŝ":"S","ŝ":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ŧ":"T","ŧ":"t","Ũ":"U","ũ":"u","Ū":"U","ū":"u","Ŭ":"U","ŭ":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","Ơ":"O","ơ":"o","Ư":"U","ư":"u","Ș":"S","ș":"s","Ț":"T","ț":"t","Ά":"Α","Έ":"Ε","Ή":"Η","Ί":"Ι","Ό":"Ο","Ύ":"Υ","Ώ":"Ω","ΐ":"ι","Ϊ":"Ι","Ϋ":"Υ","ά":"α","έ":"ε","ή":"η","ί":"ι","ΰ":"υ","ϊ":"ι","ϋ":"υ","ό":"ο","ύ":"υ","ώ":"ω","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y"}');
        var o = a(76986)
          , l = a(18867)
          , c = a(83719)
          , d = a(30839);
        const u = o
          , g = () => {
            const e = d.Qt.GradingConfig;
            if (!(0,
            d.No)(e))
                return !0;
            const t = d.Qt.GradingConfigTimestamp;
            let a = 0;
            return (0,
            d.No)(t) && (a = (0,
            d.rV)(t)),
            Date.now() - a > 108e5 || a < 16969464e5
        }
          , p = e => {
            (0,
            d.LS)(d.Qt.GradingConfig, e),
            (0,
            d.LS)(d.Qt.GradingConfigTimestamp, Date.now())
        }
          , m = r.HP((e => (0,
        d.rV)(`${d.Qt.LanguageTokens}.${e}`) || []))
          , h = async e => {
            var t, a, s;
            let n = i
              , r = u;
            if (e) {
                const i = await (async () => {
                    if (!g())
                        return (0,
                        d.rV)(d.Qt.GradingConfig);
                    const e = await l.bG.requestGradingConfig();
                    return p(e),
                    e
                }
                )();
                n = {
                    ...i.language_data.default.accented_character_map,
                    ...null === (t = i.language_data[e]) || void 0 === t ? void 0 : t.accented_character_map
                },
                r = [...i.language_data.default.normalization_data, ...null !== (s = null === (a = i.language_data[e]) || void 0 === a ? void 0 : a.normalization_data) && void 0 !== s ? s : []]
            }
            return {
                accentedCharacterMap: n,
                normalizationData: r
            }
        }
          , _ = {
            Accent: [c.Oj.Accent, 1e-12],
            ExtraSpace: [c.Oj.ExtraSpace, .002],
            MissingSpace: [c.Oj.MissingSpace, .001],
            MissingWord: [c.Oj.MissingWord, .6],
            Typo: [c.Oj.Typo, 1e-6],
            WrongWord: [c.Oj.WrongWord, .6]
        }
          , v = r.Ry(r.VO(_))
          , f = (e, t, a) => S(t, a).split("").map((t => {
            var a;
            return null !== (a = e[t]) && void 0 !== a ? a : t
        }
        )).join("")
          , S = (e, t) => e.reduce(( (e, [t,a]) => e.replace(new RegExp(t,"g"), a)), t.toLowerCase())
          , y = (e, t) => {
            if (!e)
                return null != t ? t.length : Number.MAX_VALUE;
            if (!t)
                return e.length;
            const a = [];
            let s, n;
            for (s = 0; s <= t.length; s++)
                a[s] = [s];
            for (n = 0; n <= e.length; n++)
                a[0][n] = n;
            for (s = 1; s <= t.length; s++)
                for (n = 1; n <= e.length; n++)
                    t.charAt(s - 1) === e.charAt(n - 1) ? a[s][n] = a[s - 1][n - 1] : a[s][n] = Math.min(a[s - 1][n - 1] + 1, Math.min(a[s][n - 1] + 1, a[s - 1][n] + 1));
            return a[t.length][e.length]
        }
        ;
        class E {
            constructor({accentedCharacterMap: e={}, allowTypoBlame: t, isTypingInLearningLanguage: a, isWhitespaceDelimited: s=!0, language: n, submittedValue: r, vertices: i}) {
                if (this.startState = () => [0, 0],
                this.isEndState = ([e,t]) => e === this.vertices.length - 1 && t === this.submittedValue.length,
                this.iterEdges = e => {
                    const t = []
                      , a = (e, [t,a]) => ({
                        ...e,
                        type: t,
                        weight: a + (e.auto ? 1e-4 : 0)
                    })
                      , [s,n] = e;
                    if (n > this.submittedValue.length)
                        throw Error('"pos" must be less than the length of "submittedValue".');
                    const r = this.submittedValue.slice(n);
                    return this.vertices[s].forEach((e => {
                        let s, i;
                        const o = e.lenient;
                        if (!o.length)
                            return void t.push([e, [e.to, n]]);
                        if (" " === o)
                            return void (r.startsWith(" ") ? t.push([e, [e.to, n + 1]]) : "" === r ? t.push([e, [e.to, n]]) : (i = this.isWhitespaceDelimited ? a(e, _.MissingSpace) : e,
                            t.push([i, [i.to, n]])));
                        if (this.isWhitespaceDelimited) {
                            let l = !0
                              , c = 0;
                            o.split("").some((e => {
                                for (; c < r.length && " " === r[c]; )
                                    c += 1;
                                return c === r.length || e !== r[c] ? (l = !1,
                                !0) : (c += 1,
                                !1)
                            }
                            )),
                            l && (i = a(e, _.ExtraSpace),
                            s = n + c,
                            t.push([i, [i.to, s]]))
                        }
                        const l = r.indexOf(" ")
                          , c = l < 0 ? r : r.slice(0, l);
                        if (s = n + c.length,
                        o === c)
                            t.push([e, [e.to, s]]);
                        else if (this.isWhitespaceDelimited && c.length) {
                            const n = ( (e, t, a) => ( (e, t, a=( (e, t) => e === t)) => {
                                if (Math.abs(e.length - t.length) > 1)
                                    return 2;
                                t.length > e.length && ([e,t] = [t, e]);
                                const s = e.length
                                  , n = t.length;
                                let r = 0;
                                for (; r < n && a(e[r], t[r]); )
                                    r += 1;
                                if (r === n)
                                    return s > n ? 1 : 0;
                                let i = 0;
                                for (; i < n && a(e[s - 1 - i], t[n - 1 - i]); )
                                    i += 1;
                                return r + i + 1 >= s || s === n && r + 1 < s && a(e[r], t[r + 1]) && a(e[r + 1], t[r]) && r + i + 2 === s ? 1 : 2
                            }
                            )(e, t, ( (e, t) => {
                                var s, n;
                                return (null !== (s = a[e]) && void 0 !== s ? s : e) === (null !== (n = a[t]) && void 0 !== n ? n : t)
                            }
                            )))(o, c, this.accentedCharacterMap);
                            if (0 === n)
                                i = a(e, _.Accent),
                                t.push([i, [i.to, s]]);
                            else if (1 === n) {
                                const n = this.isValidToken(c)
                                  , r = !this.allowTypoBlame || n && this.isTypingInLearningLanguage ? _.WrongWord : _.Typo;
                                return i = a(e, r),
                                void t.push([i, [i.to, s]])
                            }
                        }
                        c.startsWith(o) && t.push([e, [e.to, n + o.length]]),
                        !this.isWhitespaceDelimited && c.startsWith(o) || (i = a(e, _.MissingWord),
                        this.isWhitespaceDelimited && (i = this.spaceSkippingEdge(i)),
                        t.push([i, [i.to, n]]),
                        c.length && (i = a(e, _.WrongWord),
                        t.push([i, [i.to, s]])))
                    }
                    )),
                    t
                }
                ,
                this.edgeWeight = e => {
                    var t;
                    return null !== (t = e.weight) && void 0 !== t ? t : 0
                }
                ,
                this.isValidToken = e => this.languageTokens.includes(e),
                this.spaceSkippingEdge = e => {
                    const t = {
                        ...e
                    }
                      , a = this.vertices[e.to];
                    return 1 === a.length && " " === a[0].lenient && (t.to = a[0].to,
                    t.lenient += " ",
                    "orig"in t && (t.orig += " ")),
                    t
                }
                ,
                i[i.length - 1].length)
                    throw Error("Malformed vertices array: Last element is not empty.");
                this.accentedCharacterMap = e,
                this.isWhitespaceDelimited = s,
                this.isTypingInLearningLanguage = a,
                this.languageTokens = m(n),
                this.submittedValue = r,
                this.vertices = i,
                this.allowTypoBlame = t
            }
        }
        const b = ({accentedCharacterMap: e, allowTypoBlame: t, compiledNormalizationData: a, gradingData: s, isTypingInLearningLanguage: i, submittedValue: o}) => {
            var l;
            if (0 !== s.version)
                throw Error("Client-side grading version incompatible");
            const d = new E({
                accentedCharacterMap: e,
                allowTypoBlame: t,
                isTypingInLearningLanguage: i,
                isWhitespaceDelimited: null === (l = s.whitespaceDelimited) || void 0 === l || l,
                language: s.language,
                submittedValue: S(a, o),
                vertices: s.vertices
            })
              , [u,g] = ( (e, t, a, s, i) => {
                const o = new (n())(( (e, t) => e.weight - t.weight || e.tieBreaker - t.tieBreaker));
                o.push({
                    path: [],
                    state: e,
                    tieBreaker: 0,
                    weight: 0
                });
                const l = {};
                for (; o.size(); ) {
                    const e = r.Fp(o.toArray().map(( ({tieBreaker: e}) => e))) + 1
                      , {path: n, state: i, weight: c} = o.pop();
                    if (!l[`${i}`]) {
                        if (l[`${i}`] = !0,
                        c > 1)
                            return [null, null];
                        if (t(i))
                            return [n, c];
                        a(i).forEach(( ([t,a], r) => {
                            const l = s(t);
                            if (l < 0)
                                throw Error("Negative weight edge in solution DAG");
                            o.push({
                                path: [...n, [i, t]],
                                state: a,
                                tieBreaker: e + r,
                                weight: c + l
                            })
                        }
                        ))
                    }
                }
                return [null, null]
            }
            )(d.startState(), d.isEndState, d.iterEdges, d.edgeWeight);
            if (null === u || null === g)
                return {
                    correct: !1
                };
            const p = I(u);
            if (void 0 !== p)
                return {
                    correct: !1,
                    gradingMetadata: p
                };
            const m = g <= .5
              , h = {};
            let _ = "";
            u.forEach(( ([{},e]) => {
                var t, a, s;
                const n = null !== (t = e.type) && void 0 !== t ? t : "correct"
                  , r = null !== (a = e.orig) && void 0 !== a ? a : e.lenient;
                if ("correct" !== n) {
                    const e = _.length;
                    let t = e + r.length;
                    n === c.Oj.MissingWord && r.endsWith(" ") && (t -= 1);
                    const a = null !== (s = h[n]) && void 0 !== s ? s : [];
                    a.push([e, t]),
                    h[n] = a
                }
                _ += r
            }
            ));
            const f = r.xb(h) ? void 0 : r.Fp(r.XP(h), (e => v[e]))
              , y = m && f === c.Oj.Accent && !i ? void 0 : f
              , b = y ? h[y] : void 0;
            return {
                blameType: y,
                closestSolution: _,
                correct: m,
                highlights: b
            }
        }
          , I = e => {
            const t = e.filter(( ([{},e]) => e.lenient.trim().length > 0)).map(( ([{},e]) => e.metadata))
              , a = t.filter((e => void 0 !== e));
            if (0 !== a.length && a.length === t.length)
                return a[0].filter((e => a.every((t => t.some((t => r.Xy(e, t)))))))
        }
          , w = e => e.normalize("NFD").replace(/\p{Diacritic}/gu, "")
    }
    ,
    8765: (e, t, a) => {
        "use strict";
        a.d(t, {
            D: () => r
        });
        var s = a(19290);
        const n = {
            "black-white": ["#000000", "#ffffff"],
            "diamond-stat": ["#56dbe2"],
            "mask-green": ["#89e219", "#90dc48"],
            "pearl-stat": ["#ffaade"],
            "snow-dark-swan": ["#ffffff", "#37464f"],
            "black-text": ["#3c3c3c", "#f1f7fb"],
            "blue-space": ["#0b3e71"],
            "juicy-blue-space": ["#0a4a82"],
            "juicy-blue-space-light": ["#235390"],
            gold: ["#faa919"],
            "gray-text": ["#999", "#dce6ec"],
            orange: ["#ff9d00"],
            "diamond-highlight": ["#e7fbfb"],
            diamond: ["#38d0d0"],
            banana: ["#ffb020"],
            cloud: ["#cfcfcf"],
            "cloud-light": ["#ddd"],
            "cloud-lightest": ["#f0f0f0"],
            kiwi: ["#7ac70c"],
            "kiwi-dark": ["#5d9709"],
            "kiwi-light": ["#8ee000"],
            facebook: ["#3b5998"],
            "facebook-dark": ["#2d4373"],
            google: ["#4285f4"],
            twitter: ["#1da1f2"],
            "hv-light-peach": ["#f1dab3"],
            "hv-peach": ["#dbba83"],
            "hv-light-orange": ["#ffb140"],
            "hv-orange": ["#cc7900"],
            "hv-brown": ["#8c5a11"],
            "streak-panel-extended-background": ["#ff9600", "#cd7900"],
            "streak-panel-friend-background": ["#FF5F00"],
            "streak-panel-frozen-background": ["#ddf4ff", "#2b70c9"],
            "streak-panel-frozen-flair-background": ["#84d8ff", "#49c0f8"],
            "streak-panel-frozen-subtitle": ["#1cb0f6", "#ffffff"],
            "streak-panel-frozen-text": ["#84d8ff", "#ffffff"],
            "streak-panel-frozen-topbar-text": ["#1899d6", "#ffffff"],
            "streak-panel-streak-society-background": ["#ffc800", "#d79433"],
            "streak-panel-streak-society-background-always-dark": ["#d79433"],
            "streak-panel-streak-society-text": ["#cd7900", "#ffffff"],
            "streak-panel-unextended-heading-text": ["#ebc37f", "#52656d"],
            "streak-panel-unextended-heading-background": ["#fff5d3", "#202f36"],
            "streak-panel-unextended-topbar-text": ["#ebc37f", "#ffffff"],
            "streak-panel-milestone-gradient-start": ["#ff933a"],
            "streak-panel-milestone-gradient-end": ["#ffc800"],
            "streak-society-dark-orange": ["#ff9701"],
            "streak-society-light-orange": ["#ffb301"],
            "friends-quest-own-incomplete": ["#afafaf", "#6f8b9d"],
            "friends-quest-friend-incomplete": ["#919191", "#4f6471"],
            "black-text-always-light": ["#3c3c3c"],
            "cardinal-always-light": ["#ff4b4b"],
            cowbird: ["#ae6802"],
            "eel-always-light": ["#4b4b4b"],
            "fox-always-light": ["#ff9600"],
            "fire-ant-always-light": ["#ea2b2b"],
            "grizzly-lite": ["#dc8f47"],
            "guinea-pig-always-light": ["#cd7900"],
            "iguana-always-light": ["#ddf4ff"],
            "macaw-always-light": ["#1cb0f6"],
            "owl-always-light": ["#58cc02"],
            "polar-always-light": ["#f7f7f7"],
            "sea-sponge-always-light": ["#d7ffb8"],
            "tree-frog-always-light": ["#58a700"],
            "turtle-always-light": ["#a5ed6e"],
            "walking-fish-always-light": ["#ffdfe0"],
            "wolf-always-light": ["#777"],
            "cardinal-always-dark": ["#ee5555"],
            "eel-always-dark": ["#f1f7fb"],
            "hare-always-dark": ["#52656d"],
            "macaw-always-dark": ["#49c0f8"],
            "owl-always-dark": ["#93d333"],
            "polar-always-dark": ["#202f36"],
            "wolf-always-dark": ["#dce6ec"],
            rookie: ["#00af85"],
            explorer: ["#ff64bf"],
            traveler: ["#ff9153"],
            trailblazer: ["#9a8fe8"],
            adventurer: ["#600cc7"],
            discoverer: ["#6f2c39"],
            daredevil: ["#2e538a"],
            navigator: ["#092f77"],
            champion: ["#ff6e35"],
            daily_refresh: ["#0094ff"],
            "dark-mode-locked-path-section-text-color": ["#52656d"],
            "rookie-progress-bar": ["#00c696"],
            "explorer-progress-bar": ["#ff8acf"],
            "traveler-progress-bar": ["#ffa76a"],
            "trailblazer-progress-bar": ["#a99dfe"],
            "adventurer-progress-bar": ["#7a0dc7"],
            "discoverer-progress-bar": ["#833241"],
            "daredevil-progress-bar": ["#3662a5"],
            "navigator-progress-bar": ["#0c398d"],
            "champion-progress-bar": ["#ff8150"],
            "daily_refresh-progress-bar": ["#1ca0ff"],
            "course-complete-cta": ["#78dbe0"],
            "course-complete-cta-border": ["#5ec9cc"],
            "bea-secondary": ["#1899d6"],
            "eddy-secondary": ["#ea2b2b"],
            "gilded-secondary": ["#e7a601"],
            "lily-secondary": ["#a568cc"],
            "vikram-secondary": ["#a32a71"],
            "zari-secondary": ["#cc6ba6"],
            "oscar-secondary": ["#00a47d"],
            "falstaff-secondary": ["#965a3a"],
            "bea-radio": ["#147bac"],
            "duo-radio": ["#3e8f01"],
            "eddy-radio": ["#b33535"],
            "falstaff-radio": ["#834f33"],
            "lin-lucy-radio": ["#b36900"],
            "lily-radio": ["#905bb3"],
            "vikram-radio": ["#8f2463"],
            "zari-radio": ["#b35e92"],
            "oscar-radio": ["#00906d"],
            "bea-junior-shine": ["#43bef8"],
            "duo-shine": ["#72d627"],
            "eddy-shine": ["#ff6969"],
            "falstaff-shine": ["#e3a56c"],
            "lily-shine": ["#d696ff"],
            "lin-lucy-shine": ["#ffa82c"],
            "oscar-shine": ["#3fd9b5"],
            "vikram-shine": ["#d65aa2"],
            "zari-shine": ["#ff9ed9"],
            "super-background-secondary": ["#1a1e4c"],
            "super-gradient-background": ["#0c2f71"],
            "super-gradient-top-halo": ["#0c4c46"],
            "super-gradient-bottom-halo": ["#4c1d73"],
            "super-gradient-neutral": ["#183d8e"],
            "super-gradient-neutral-blue": ["#1552a7"],
            "super-gradient-neutral-purple": ["#5f3cac"],
            "gold-shine": ["#ffe700"],
            "legendary-dark-background": ["#181818"],
            roseate: ["#df4ba2"],
            rosefinch: ["#b41c75"],
            bluebird: ["#0390d3"],
            cotinga: ["#793ae3"],
            sabrewing: ["#a570ff"],
            blueberry: ["#1152a7"],
            ether: ["#3c598d"],
            "diamond-tournament-purple": ["#a1a1ee"],
            "diamond-tournament-reaction": ["#76a3e7"],
            "yir-page0": ["#ddf4ff"],
            "yir-page1": ["#e3ffeb"],
            "yir-page1-shadow": ["#131f24"],
            "yir-page3-shadow": ["#bbacfc"],
            "yir-page4-shadow": ["#8fdbff"],
            "yir-page5-shadow": ["#ffb750"],
            "super-gradient-green-variant1": ["#26ff55"],
            "super-gradient-blue-variant1": ["#268bff"],
            "super-gradient-pink-variant1": ["#fc55ff"],
            "super-gradient-purple-variant1": ["#1122b5"],
            "max-dark": ["#270a3d"],
            "max-purple": ["#42026a"],
            "max-light-purple": ["#dd8cfe"],
            "max-button-purple": ["#6121c2"],
            "max-button-dark-purple": ["#3a1b7b"],
            "max-ad82e6": ["#ad82e6"],
            "unknown-001e2d": ["#001e2d"],
            "unknown-0047a4": ["#0047a4"],
            "unknown-0087d0": ["#0087d0"],
            "unknown-00aff9": ["#00aff9"],
            "unknown-013047": ["#013047"],
            "unknown-048fd1": ["#048fd1"],
            "unknown-0e0f10": ["#0e0f10"],
            "unknown-0e3d79": ["#0e3d79"],
            "unknown-172071": ["#172071"],
            "unknown-280378": ["#280378"],
            "unknown-3ebbf6": ["#3ebbf6"],
            "unknown-655ebb": ["#655ebb"],
            "unknown-696cee": ["#696cee"],
            "unknown-7c0000": ["#7c0000"],
            "unknown-89e219": ["#89e219"],
            "unknown-935051": ["#935051"],
            "unknown-959595": ["#959595"],
            "unknown-a2a2a2": ["#a2a2a2"],
            "unknown-a3dbeb": ["#a3dbeb"],
            "unknown-a4dffb": ["#a4dffb"],
            "unknown-aaa": ["#aaa"],
            "unknown-d087ff": ["#d087ff"],
            "unknown-d9d9d9": ["#d9d9d9"],
            "unknown-ddd": ["#ddd"],
            "unknown-de8029": ["#de8029"],
            "unknown-e3e3e3": ["#e3e3e3"],
            "unknown-e4ffff": ["#e4ffff"],
            "unknown-ed8c01": ["#ed8c01"],
            "unknown-f3484e": ["#f3484e"],
            "unknown-f4fafe": ["#f4fafe"],
            "unknown-fbdec5": ["#fbdec5"],
            "unknown-ffc700": ["#ffc700"],
            "unknown-fff2aa": ["#fff2aa"],
            "unknown-fffbef": ["#fffbef"],
            "unknown-6e00cf": ["#6e00cf"],
            "unknown-cf17c9": ["#cf17c9"],
            "unknown-051d3c": ["#051d3c"],
            "unknown-26ff55": ["#26ff55"],
            "unknown-000437": ["#000437"],
            "ultra-violet": ["#6121c2"]
        }
          , r = {
            ...s.DM,
            ...n
        };
        for (const e of Object.keys(n))
            if (s.DM[e])
                throw Error(`Color '${e}' already exists in the web-ui palette`);
        for (const e of Object.keys(r))
            if (e.endsWith("-always-light")) {
                const t = e.slice(0, -13);
                if (!r[t])
                    throw Error(`Color '${e}' should be renamed to '${t}'`);
                if (1 === r[t].length)
                    throw Error(`Color '${e}' should be removed because the base color '${t}{' has no dark mode variant`)
            }
    }
    ,
    72398: (e, t, a) => {
        "use strict";
        a.d(t, {
            JE: () => v,
            ar: () => u,
            bP: () => p,
            ji: () => m,
            qr: () => g,
            s1: () => d,
            si: () => h
        });
        var s = a(80254)
          , n = a(17135)
          , r = a(64115)
          , i = a(58576);
        const o = []
          , l = {}
          , c = e => {
            o.push(e),
            o.length > 100 && o.shift()
        }
          , d = () => {
            let e = !1;
            return o.map((t => "action" === t.type ? e ? s.CE(t, "state") : (e = !0,
            t) : t))
        }
          , u = (e, t, a, s) => {
            var i;
            if ((0,
            r.Au)()) {
                const r = null !== (i = null == s ? void 0 : s.timestamp) && void 0 !== i ? i : (0,
                n.Ux)();
                p("action", t.type, [{
                    data: e,
                    name: "prev state"
                }, {
                    data: t,
                    name: "action"
                }, {
                    data: a,
                    name: "next state"
                }], {
                    ...s,
                    excludeFromTelemetry: !0,
                    timestamp: r
                }),
                c({
                    action: t,
                    state: a,
                    timestamp: r,
                    type: "action"
                })
            }
        }
          , g = (e, t, a, s={}) => {
            const n = s.localOverride ? `Condition ${e} overridden from experiment ${t} in HOF local override` : s.queryOverride ? `Condition ${e} overridden from experiment ${t} in HOF query string` : s.url ? s.cache ? `Condition ${e} retrieved from cache for URL experiment ${t}` : s.default ? `Condition control queried from URL experiment ${t}, but experiment record not found` : `Condition ${e} queried from URL experiment ${t}` : `Condition ${e} queried from ${s.loggedOut ? "logged out experiment" : "experiment"} ${t} in context ${a}${s.cache ? ", provided by cache" : s.default ? ", but record not found" : s.notInRollout ? ", but user not in rollout" : ""}`;
            l[t] !== n && ((0,
            r.Au)() && p("condition", `${t} in ${e}`, [{
                data: n,
                name: "detail"
            }], {
                excludeFromTelemetry: !0
            }),
            l[t] = n)
        }
          , p = (e, t, a, s) => {
            m("groupCollapsed", e, t, s),
            (0,
            r.Au)() && (a.forEach(( ({name: e, data: t}) => f.log(`%c${e}:`, "font-weight: 700;", t))),
            f.groupEnd())
        }
          , m = (e, t, a, s) => {
            var i, o;
            if ((0,
            r.Au)()) {
                const r = ( (e, t, a, s) => {
                    const n = [];
                    return "other" !== e && n.push(e),
                    n.push(`%c${t}`, `%c@ ${a}`),
                    void 0 !== s && n.push(`%c(in ${s.toFixed(2)}ms)`),
                    n.join(" ")
                }
                )(t, a, (o = null !== (i = null == s ? void 0 : s.timestamp) && void 0 !== i ? i : (0,
                n.Ux)(),
                `${_(o.getHours(), 2)}:${_(o.getMinutes(), 2)}:${_(o.getSeconds(), 2)}.${_(o.getMilliseconds(), 3)}`), null == s ? void 0 : s.duration);
                f[e](`%c${r}`, ...( (e, t) => {
                    const a = [];
                    return "other" !== e && a.push("color: gray; font-weight: lighter;"),
                    a.push("font-weight: 700;", "color: gray; font-weight: lighter;"),
                    void 0 !== (null == t ? void 0 : t.duration) && a.push("color: gray; font-weight: lighter;"),
                    a
                }
                )(t, s))
            }
        }
          , h = (e, t, a) => {
            var s;
            const i = `${e.pathname}${e.search}`
              , o = `${t.pathname}${t.search}`;
            if ((0,
            r.Au)()) {
                const r = null !== (s = null == a ? void 0 : a.timestamp) && void 0 !== s ? s : (0,
                n.Ux)();
                p("route", `${i} → ${o}`, [{
                    data: e,
                    name: "from"
                }, {
                    data: t,
                    name: "to"
                }], {
                    ...a,
                    excludeFromTelemetry: !0,
                    timestamp: r
                }),
                c({
                    timestamp: r,
                    to: t,
                    type: "navigation"
                })
            }
        }
          , _ = (e, t) => `${e}`.padStart(t, "0")
          , v = e => s.XP(console).forEach((t => {
            if ("function" == typeof console[t]) {
                const a = console[t].bind(console);
                console[t] = (...n) => {
                    if ((0,
                    r.Au)() && (a(...s.zu(n, i.VR)),
                    i.iZ[t] && !n.includes(i.VR))) {
                        const [a,...s] = n;
                        e(i.iZ[t], a, ...s)
                    }
                }
                ,
                f[t] = a
            } else
                f[t] = console[t]
        }
        ))
          , f = {}
    }
    ,
    54412: (e, t, a) => {
        "use strict";
        a.d(t, {
            Vj: () => n,
            d8: () => o,
            ej: () => i,
            m_: () => c,
            nJ: () => l
        });
        var s = a(67921);
        const n = {
            CSRFToken: "csrf_token",
            Impersonate: "impersonate",
            InitialReferrer: "initial_referrer",
            JWT: (window.location.host.includes("testbed") ? "testbed_" : "") + "jwt_token",
            LandingPage: "lp",
            LandingURL: "lu",
            LastReferrer: "lr",
            LoggedIn: "logged_in",
            LoggedOutUUID: "logged_out_uuid",
            RedirectToPreview: "redirect_to_preview",
            ShouldTrackWelcome: "should_track_welcome",
            Test: "test",
            TimeSiteLoaded: "tsl",
            UTMParameters: "utm_parameters"
        }
          , r = window.location.host.includes("duolingo.com") ? ".duolingo.com" : window.location.host.includes("duolingo.cn") ? ".duolingo.cn" : window.location.host.includes("githubpreview.dev") ? window.location.host : "localhost"
          , i = e => s.get(e)
          , o = (e, t, a, n) => {
            const i = {
                domain: r,
                expires: 365
            };
            a && (i.SameSite = "Lax"),
            n && (i.secure = !0),
            s.set(e, t, i)
        }
          , l = e => {
            s.remove(e),
            s.remove(e, {
                domain: "duolingo.com"
            }),
            s.remove(e, {
                domain: "www.duolingo.com"
            }),
            s.remove(e, {
                domain: r
            })
        }
          , c = "N/A"
    }
    ,
    29581: (e, t, a) => {
        "use strict";
        a.d(t, {
            ml: () => l,
            vL: () => c
        });
        var s = a(19172)
          , n = a(7515)
          , r = a(73573);
        const i = e => "selfNetworkStatus"in e
          , o = e => e.includes("mutating") ? "mutating" : e.includes("loading") ? "loading" : "idle"
          , l = (0,
        r.V)((e => (0,
        s.f)(`${e.debugLabel}.dependentNetworkStatus`).derived((t => {
            const a = t(e).map((e => t(c(e))));
            return o(a)
        }
        )).build()))
          , c = (0,
        r.V)((e => (0,
        s.f)(`${e.debugLabel}.networkStatus`).derived((t => o([...i(e) ? [t((0,
        n.P)(e.selfNetworkStatus, "value"))] : [], ...t(i(e) ? (0,
        n.P)(e.selfNetworkStatus, "deps") : (0,
        n.P)(e, "deps")).flatMap((e => t(c(e))))]))).build()))
    }
    ,
    96195: (e, t, a) => {
        "use strict";
        a.d(t, {
            d: () => p
        });
        var s = a(80254)
          , n = a(29581)
          , r = a(31106)
          , i = a(68903)
          , o = a(20716)
          , l = a(43633)
          , c = a(19172)
          , d = a(7515)
          , u = a(58576)
          , g = a(14437);
        const p = (e, t, a, {blockOnDependencies: p=!0, fetchOnMount: m=!0, queryKeyHasher: h=(e => e)}={}) => {
            const _ = t => (0,
            c.f)(`${e}.${t}`)
              , v = e => (0,
            g.r)([e.refetchKey, h(e.queryKey)])
              , f = _("refetchKey").primitive(0).reducer(( (e, {}) => e + 1)).build()
              , S = _("queryStatus").primitive({}).build()
              , y = _("mutationStatus").primitive([]).build()
              , E = _("query").derivedTracked((e => {
                const t = e.untracked(f);
                return m || 0 !== t ? Array.from(a(e)).map((e => ({
                    ...e,
                    refetchKey: t
                }))) : []
            }
            )).build()
              , b = _("querySettle").derivedTracked((e => {
                const t = e(E)
                  , a = e.untracked(S);
                return t.every((e => {
                    var t;
                    return "settled" === (null === (t = a[v(e)]) || void 0 === t ? void 0 : t.state)
                }
                ))
            }
            )).write(( (e, a, s, n) => {
                const r = e(S)[v(s.query)];
                void 0 !== r && "settled" !== r.state && r.controller === s.controller && (e(y).length > 0 ? a(S, (e => {
                    const t = {
                        ...e
                    };
                    return t[v(s.query)] = {
                        controller: s.controller,
                        query: s.query,
                        result: n,
                        state: "awaitingSettlement"
                    },
                    t
                }
                )) : (a(t, n),
                a(S, (e => {
                    const t = {
                        ...e
                    };
                    return t[v(s.query)] = {
                        query: s.query,
                        state: "settled"
                    },
                    t
                }
                ))))
            }
            )).build()
              , I = _("queryValidateAction").write(( (e, t, a) => {
                const s = Object.entries(e(S)).flatMap(( ([e,t]) => {
                    if (void 0 === t)
                        return [];
                    const s = a(t);
                    switch (s) {
                    case "invalidated":
                        return "settled" !== t.state && t.controller.abort(),
                        [];
                    case "superseded":
                        return "settled" !== t.state && t.controller.abort(),
                        [[e, {
                            query: t.query,
                            state: "settled"
                        }]];
                    case "unaffected":
                        return [[e, t]];
                    default:
                        throw Error(`Unexpected action type: ${(0,
                        i.RJ)(s)}`)
                    }
                }
                ));
                t(S, Object.fromEntries(s))
            }
            )).build()
              , w = _("queryAction").derived((e => {
                const t = {
                    ...e(S)
                }
                  , a = []
                  , s = new Set;
                return e(y).length > 0 ? [] : ((p && "idle" !== e((0,
                n.ml)((0,
                d.P)(E, "deps"))) ? [] : e((0,
                d.P)(E, "value"))).forEach((e => {
                    const n = v(e)
                      , r = t[n];
                    if (void 0 === r) {
                        if (s.has(n))
                            throw Error("Duplicate query key");
                        a.push({
                            action: "start",
                            query: e
                        })
                    } else
                        "awaitingSettlement" === r.state && a.push({
                            action: "settle",
                            query: r
                        }),
                        delete t[n]
                }
                )),
                [...Object.values(t).filter(i.$K).map((e => ({
                    action: "abort",
                    query: e
                }))), ...a])
            }
            )).write(( (e, t, ...a) => {
                const n = e((0,
                l.Z0)());
                if ("teardown" === a[0])
                    return void t(I, ( () => "invalidated"));
                const r = e(w);
                if (0 === r.length)
                    return;
                const {abort: o, settle: c, start: d, ...u} = s.vM(r, "action");
                if (!s.xb(u))
                    throw (0,
                    i.RJ)(null),
                    Error(`Unexpected network action types: ${JSON.stringify(Object.keys(u))}`);
                null == c || c.forEach(( ({query: e}) => {
                    t(b, e, e.result)
                }
                ));
                const g = {
                    ...e(S)
                };
                null == o || o.forEach(( ({query: e}) => {
                    "settled" !== e.state && e.controller.abort(),
                    delete g[v(e.query)]
                }
                )),
                null == d || d.forEach(( ({query: e}) => {
                    const t = new AbortController
                      , a = {
                        controller: t,
                        query: e
                    };
                    g[v(e)] = {
                        state: "running",
                        ...a
                    },
                    (async () => {
                        let s;
                        await Promise.resolve();
                        try {
                            s = {
                                type: "network-success",
                                value: await e.queryFn(e.queryKey)(t.signal)
                            }
                        } catch (e) {
                            s = {
                                ex: e,
                                type: "network-failure"
                            }
                        }
                        n.set(b, a, {
                            queryKey: e.queryKey,
                            result: s,
                            type: "network-result"
                        })
                    }
                    )()
                }
                )),
                t(S, g)
            }
            )).build()
              , k = (0,
            r.w)(`${e}.mount`, (e => {
                const t = e.sub(w, ( () => {
                    e.set(w, "update")
                }
                ));
                return e.set(w, "update"),
                () => {
                    t(),
                    e.set(w, "teardown")
                }
            }
            ))
              , T = _("networkState").derivedTracked((e => e.untracked(y).length > 0 ? "mutating" : e(b) ? "idle" : "loading")).build()
              , C = _("final").derivedTracked((e => {
                e.record(E);
                const a = e.untracked(t);
                return e.untracked(y).reduce(( (e, t) => void 0 === t.applyOptimisticUpdate ? e : t.applyOptimisticUpdate(e)), a)
            }
            )).write(( (e, a, s) => {
                const n = e(y)
                  , r = []
                  , i = n.reduce(( (e, t) => {
                    const a = e.resolveMutationConflict(t);
                    switch (a) {
                    case "race":
                        {
                            const a = e => "constructor"in e ? e.constructor.name : "anonymous";
                            (0,
                            u.um)("Mutations are racing", {
                                data: {
                                    existingMutationName: a(t),
                                    newMutationName: a(e)
                                },
                                sample: .001
                            })
                        }
                    case "unaffected":
                        return r.push(t),
                        e;
                    default:
                        return a
                    }
                }
                ), s);
                a(y, [...r, i]);
                let o = !0;
                const c = ( () => {
                    const t = e((0,
                    l.Z0)());
                    return () => o ? {
                        get: e,
                        set: a
                    } : t
                }
                )()
                  , d = (...e) => {
                    const t = c().get(y)
                      , a = t.filter((e => e !== i));
                    if (t.length !== a.length)
                        if (c().set(y, a),
                        e.length > 0) {
                            if (o)
                                throw e[0]
                        } else
                            c().set(I, (e => i.resolveQueryConflict(e.query.queryKey, "settled" === e.state ? "settled" : "in-flight")))
                }
                  , g = {
                    update: (...e) => {
                        o ? a(t, ...e) : c().set(t, ...e)
                    }
                };
                let p;
                try {
                    p = i.execute(g)
                } catch (e) {
                    return void d(e)
                }
                p instanceof Promise ? (o = !1,
                (async () => {
                    try {
                        await p,
                        d()
                    } catch (e) {
                        d(e)
                    }
                }
                )()) : d()
            }
            )).build();
            return (0,
            o.it)(C, k),
            (0,
            o.IM)(C, T),
            (0,
            o.XV)(C, f),
            C
        }
    }
    ,
    95304: (e, t, a) => {
        "use strict";
        a.d(t, {
            Q: () => g,
            allCoordinatedAtomForDebug: () => p
        });
        var s = a(98980)
          , n = a(40893)
          , r = a(57593)
          , i = a(35506)
          , o = a(21025)
          , l = a(87443)
          , c = a(19172)
          , d = a(56366)
          , u = a(55419);
        const g = (e, t) => [...l.br, s.m, u.vk, u.vB, ...e && t ? [i.aH, o.kv, o.Co] : [], ...e ? [d.Sf] : []]
          , p = (0,
        c.f)("allCoordinatedAtomForDebug").derived((e => {
            const t = e(n.LF)
              , a = g(void 0 !== t.id, (0,
            r.m7)(t));
            return a.forEach((t => e(t))),
            a.map((e => e.debugLabel))
        }
        )).build()
    }
    ,
    31106: (e, t, a) => {
        "use strict";
        a.d(t, {
            w: () => r
        });
        var s = a(68903)
          , n = a(19172);
        const r = (e, t) => {
            const a = (0,
            n.f)(e).primitive("unmounted").reducer(( (e, t) => {
                switch (t.type) {
                case "increment":
                    if ("unmounted" === e)
                        throw Error("A mount action should be used on an unmounted coordinator");
                    return {
                        ...e,
                        mountCount: e.mountCount + 1
                    };
                case "mount":
                    if ("unmounted" !== e)
                        throw Error("An increment action should be used on a mounted coordiantor");
                    return {
                        mountCount: 1,
                        unmount: t.unmount
                    };
                case "unmount":
                    if ("unmounted" === e)
                        throw Error("Coordinator was already unmounted");
                    return e.mountCount > 1 ? {
                        ...e,
                        mountCount: e.mountCount - 1
                    } : "unmounted";
                default:
                    return (0,
                    s.RJ)(t),
                    e
                }
            }
            )).build();
            return e => ("unmounted" === e.get(a) ? e.set(a, {
                type: "mount",
                unmount: t(e)
            }) : e.set(a, {
                type: "increment"
            }),
            () => {
                var t;
                const s = e.get(a);
                if ("unmounted" === s)
                    throw Error("Coordinator was already unmounted");
                1 === s.mountCount && (null === (t = s.unmount) || void 0 === t || t.call(s)),
                e.set(a, {
                    type: "unmount"
                })
            }
            )
        }
    }
    ,
    63956: (e, t, a) => {
        "use strict";
        a.d(t, {
            j: () => r
        });
        var s = a(14437);
        const n = e => {
            class t {
                constructor(a) {
                    this.prerequisitePromises = [],
                    this.execute = e => {
                        const t = () => {
                            if ("settled" === this.status)
                                return;
                            const t = this.mutation.execute(e);
                            return this.status = t instanceof Promise ? t : "settled",
                            t
                        }
                        ;
                        return 0 === this.prerequisitePromises.length ? t() : (async () => {
                            await Promise.all(this.prerequisitePromises.map((e => e.catch(( () => {}
                            ))))),
                            await t()
                        }
                        )()
                    }
                    ,
                    this.resolveMutationConflict = e => {
                        if (!(e instanceof t))
                            return "race";
                        if ((0,
                        s.r)(this.mutation.mergeKey) !== (0,
                        s.r)(e.mutation.mergeKey))
                            return "unaffected";
                        if (void 0 === e.status) {
                            const a = new t(this.mutation.mergeMutation(e.constructorArgs));
                            return a.prerequisitePromises.push(...this.prerequisitePromises, ...e.prerequisitePromises),
                            this.status = "settled",
                            e.status = "settled",
                            a
                        }
                        return "settled" === e.status || this.prerequisitePromises.push(e.status),
                        "unaffected"
                    }
                    ,
                    this.constructorArgs = a,
                    this.mutation = e(a)
                }
                get applyOptimisticUpdate() {
                    return this.mutation.applyOptimisticUpdate
                }
                get resolveQueryConflict() {
                    return this.mutation.resolveQueryConflict
                }
            }
            return t
        }
          , r = () => n
    }
    ,
    40539: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dy: () => s,
            MF: () => n,
            jR: () => r
        });
        const s = e => t => e[t.type](t)
          , n = e => t => a => {
            const n = s(e)(t);
            return {
                ...a,
                inFlightActions: [...a.inFlightActions, n.getInProgressKey()],
                optimisticUpdated: n.apply("optimistic")(a.optimisticUpdated)
            }
        }
          , r = e => t => async ({update: a}) => {
            const n = s(e)(t)
              , r = await n.execute();
            a({
                type: "override",
                value: e => ({
                    ...e,
                    ...n.apply("result", r)(e)
                })
            })
        }
    }
    ,
    18728: (e, t, a) => {
        "use strict";
        a.d(t, {
            Lv: () => g,
            lQ: () => u,
            md: () => d
        });
        var s = a(27378)
          , n = a(80254)
          , r = a(96195)
          , i = a(31106)
          , o = a(20716)
          , l = a(28818)
          , c = a(19172);
        const d = (e, t, {cacheTime: a=3e5}={}) => {
            const s = n.HP((s => {
                const n = `${e}.${s}`
                  , l = e => (0,
                c.f)(`${n}.${e}`)
                  , d = l("base").primitive(void 0).reducer(( (e, t) => {
                    if ("clear" !== t)
                        return "network-success" === t.result.type ? t.result.value : e
                }
                )).build()
                  , u = (0,
                r.d)(`${n}.coordinator`, d, ( () => void 0 === s ? [] : [{
                    queryFn: e => () => t(e),
                    queryKey: s
                }]))
                  , g = l("timeoutId").primitive(void 0).build()
                  , p = (0,
                c.f)(n).derivedTracked((e => e(u))).build()
                  , m = (0,
                i.w)(`${n}.mount`, (e => {
                    clearTimeout(e.get(g));
                    const t = u.mount(e);
                    return () => {
                        null == t || t();
                        const s = setTimeout(( () => {
                            e.set(d, "clear")
                        }
                        ), a);
                        e.set(g, s)
                    }
                }
                ));
                return (0,
                o.it)(p, m),
                p
            }
            ));
            return {
                debugName: e,
                getAtom: s
            }
        }
          , u = (e, t) => g(e, void 0 === t ? [] : [t])[0]
          , g = (e, t) => {
            const a = (0,
            l.oR)()
              , n = s.useMemo(( () => t.map((t => e.getAtom(t)))), t)
              , r = s.useMemo(( () => (0,
            c.f)(`${e.debugName}.group.${t.length}`).derivedTracked((e => n.map((t => e(t))))).build()), [n]);
            return s.useEffect(( () => {
                const e = n.map((e => e.mount(a)));
                return () => {
                    e.forEach((e => null == e ? void 0 : e()))
                }
            }
            ), [n, a]),
            (0,
            l.tj)(r)
        }
    }
    ,
    75532: (e, t, a) => {
        "use strict";
        a.d(t, {
            p: () => s
        });
        const s = (e, t, a, s="race") => [e, {
            execute: ({update: e}) => {
                e({
                    type: "override",
                    value: t
                })
            }
            ,
            resolveMutationConflict: e => "function" == typeof s ? s(e) : s,
            resolveQueryConflict: () => a
        }]
    }
    ,
    26886: (e, t, a) => {
        "use strict";
        a.d(t, {
            Gh: () => h,
            It: () => v,
            j7: () => y,
            jP: () => S,
            og: () => p,
            s7: () => _
        });
        var s = a(72538)
          , n = a(49695)
          , r = a(86500)
          , i = a(81149)
          , o = a(59604)
          , l = a(53229)
          , c = a(95940)
          , d = a(67116)
          , u = a(16086);
        const g = [["eo", "es"], ["eo", "fr"], ["eo", "pt"], ["gn", "es"]]
          , p = (e, t=d.h9) => {
            const a = (0,
            l.lV)((0,
            c.H8)(2471, {
                learning_language_name: (0,
                d.vY)(e)
            }));
            return `/${(0,
            u.Pc)() ? "enroll" : "course"}/${e}/${t}/${a}`
        }
          , m = (e, t) => `${t}<-${e}`
          , h = (e, t, a) => {
            const s = n.W.find((e => e.fromLanguageId === a && e.learningLanguageId === t));
            return void 0 !== s && _(e, s)
        }
          , _ = (e, t) => {
            const a = (0,
            r.a)(t.fromLanguageId, t.learningLanguageId);
            switch (null == a ? void 0 : a.type) {
            case "featureFlag":
                return !!(0,
                o.O)(a.featureFlag, void 0, e);
            case "clientSideExperiment":
                return !(void 0 !== a.holdoutExperiment && "non_holdout_users" !== (0,
                i.cu)(a.holdoutExperiment, null, e.clientExperiments) || void 0 !== a.clientSideExperiment && "experiment" !== (0,
                i.cu)(a.clientSideExperiment, null, e.clientExperiments));
            case "backendExperiment":
                return (0,
                u.Pc)() && "experiment" === (0,
                i.j6)(a.backendExperiment, void 0);
            default:
                return t.status.supportsUserActivity
            }
        }
          , v = (e, t) => g.some(( ([a,s]) => a === e && s === t))
          , f = (e, t) => {
            var a;
            return (null === (a = t.currentCourseId) || void 0 === a ? void 0 : a.endsWith("ZH-CN")) && t.zhTw ? t.currentCourseId === e || t.currentCourseId.replace("ZH-CN", "ZH-TW") === e : t.currentCourseId === e
        }
          , S = (e, t) => t.courses.filter((a => f(a, t) || e[a].xp)).map((a => ( (e, t, a) => {
            var n;
            const r = e[a].fromLanguage
              , i = e[a].learningLanguage
              , o = (0,
            d.vI)(r, t.zhTw);
            return {
                courseId: a,
                fromLanguageId: r,
                isCurrent: f(a, t),
                learningLanguageId: i,
                learningLanguageName: o === i ? "Intermediate Eng." : null === (n = s[o]) || void 0 === n ? void 0 : n[i]
            }
        }
        )(e, t, a)))
          , y = (e, t) => {
            const a = n.W.flatMap((e => _(t, e) ? m(e.fromLanguageId, e.learningLanguageId) : []));
            return e.filter((e => a.includes(m(e.fromLanguageId, e.learningLanguageId))))
        }
    }
    ,
    49695: (e, t, a) => {
        "use strict";
        a.d(t, {
            W: () => s
        });
        const s = JSON.parse('[{"from_language_id":"ar","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"sv","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ar","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"bn","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"cs","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"de","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"el","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ar","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"cs","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"cy","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"da","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"el","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"eo","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"fi","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ga","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"gd","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"he","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"hi","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ht","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"hu","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"hv","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"hw","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"id","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"la","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"nl-NL","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"no-BO","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"nv","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"pl","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ro","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"ru","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"sv","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"sw","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"tlh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"tr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"uk","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"vi","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"yi","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"en","learning_language_id":"zu","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"ca","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"eo","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"gn","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"ru","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"sv","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"es","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"eo","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"fr","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hi","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"hu","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"id","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"it","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ja","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ko","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"nl-NL","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pl","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"eo","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"pt","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ro","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ru","learning_language_id":"sv","status":{"allows_development":true,"supports_user_activity":false}},{"from_language_id":"ru","learning_language_id":"uk","status":{"allows_development":true,"supports_user_activity":false}},{"from_language_id":"ru","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"sv","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"ta","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"te","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"th","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tl","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"ru","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"tr","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"uk","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"vi","learning_language_id":"zh","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"de","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"en","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"es","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"fr","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"it","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"ja","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"ko","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"pt","status":{"allows_development":true,"supports_user_activity":true}},{"from_language_id":"zh","learning_language_id":"zh-HK","status":{"allows_development":true,"supports_user_activity":true}}]').map((e => ({
            fromLanguageId: e.from_language_id,
            learningLanguageId: e.learning_language_id,
            status: {
                allowsDevelopment: e.status.allows_development,
                supportsUserActivity: e.status.supports_user_activity
            }
        })))
    }
    ,
    95351: (e, t, a) => {
        "use strict";
        a.d(t, {
            K: () => i
        });
        var s = a(23275)
          , n = a(11811);
        const r = {
            [n.FF.GlobalPractice]: {
                maxLength: 16,
                minLength: 10,
                nthSessionStart: 4,
                requiredSessionEnds: 2
            }
        }
          , i = ({currentCourseHistory: e, levelData: t, sessionType: a, timestamp: i}) => {
            if (void 0 === e)
                return;
            const {globalPracticeSessionEnds: o, globalPracticeSessionStarts: l, mistakeHistory: c} = e;
            if (t && (0,
            s.$)(t.level)) {
                const e = c.filter((e => {
                    var a;
                    return t.level.id === (null === (a = e.additionalData) || void 0 === a ? void 0 : a.levelId)
                }
                )).map((e => e.value.generatorIdentifier)).slice(0, 10);
                return e.length >= 0 ? e : void 0
            }
            if (a === n.FF.GlobalPractice) {
                if (void 0 === i)
                    throw Error("timestamp should not be undefined for Global Practice SessionType");
                const e = c.filter((e => i < e.expirationTimestamp)).map((e => e.value))
                  , t = r[a];
                return l % t.nthSessionStart == 0 && o >= t.requiredSessionEnds && e.length >= t.minLength ? e.map((e => e.generatorIdentifier)).slice(0, t.maxLength) : void 0
            }
        }
    }
    ,
    86500: (e, t, a) => {
        "use strict";
        a.d(t, {
            H: () => i,
            a: () => o
        });
        const s = (e, t) => `${t}<-${e}`
          , n = e => ({
            clientSideExperiment: e,
            holdoutExperiment: "fig_exp_holdout_v3",
            type: "clientSideExperiment"
        })
          , r = {
            "de<-bn": n(),
            "de<-cs": n(),
            "de<-el": n(),
            "de<-hi": n(),
            "de<-id": n(),
            "de<-ja": n(),
            "de<-ko": n(),
            "de<-pl": n(),
            "de<-ro": n(),
            "de<-sv": n(),
            "de<-ta": n(),
            "de<-te": n(),
            "de<-th": n(),
            "de<-tl": n(),
            "de<-uk": n(),
            "de<-vi": n(),
            "de<-zh": n(),
            "es<-ar": n(),
            "es<-bn": n(),
            "es<-cs": n(),
            "es<-el": {
                holdoutExperiment: "fig_exp_holdout",
                type: "clientSideExperiment"
            },
            "es<-hi": n(),
            "es<-hu": n(),
            "es<-id": n(),
            "es<-ja": n(),
            "es<-ko": n(),
            "es<-nl-NL": {
                holdoutExperiment: "fig_exp_holdout",
                type: "clientSideExperiment"
            },
            "es<-pl": {
                holdoutExperiment: "fig_exp_holdout",
                type: "clientSideExperiment"
            },
            "es<-ro": n(),
            "es<-sv": n(),
            "es<-ta": n(),
            "es<-te": n(),
            "es<-th": n(),
            "es<-tl": n(),
            "es<-tr": n(),
            "es<-uk": n(),
            "es<-vi": n(),
            "fr<-bn": n(),
            "fr<-cs": n(),
            "fr<-el": n(),
            "fr<-hi": n(),
            "fr<-hu": n(),
            "fr<-id": n(),
            "fr<-ko": n(),
            "fr<-pl": n(),
            "fr<-ro": n(),
            "fr<-sv": n(),
            "fr<-ta": n(),
            "fr<-te": n(),
            "fr<-th": n(),
            "fr<-tl": n(),
            "fr<-tr": n(),
            "fr<-uk": n(),
            "fr<-vi": n(),
            "it<-ar": n(),
            "it<-bn": n(),
            "it<-cs": n(),
            "it<-el": n(),
            "it<-hi": n(),
            "it<-hu": n(),
            "it<-id": n(),
            "it<-ja": n(),
            "it<-ko": n(),
            "it<-nl-NL": n(),
            "it<-pl": n(),
            "it<-ro": n(),
            "it<-ru": n(),
            "it<-sv": n(),
            "it<-ta": n(),
            "it<-te": n(),
            "it<-th": n(),
            "it<-tl": n(),
            "it<-tr": n(),
            "it<-uk": n(),
            "it<-vi": n(),
            "ja<-ar": n(),
            "ja<-bn": n(),
            "ja<-cs": n(),
            "ja<-de": n(),
            "ja<-el": n(),
            "ja<-es": n(),
            "ja<-fr": n(),
            "ja<-hi": n(),
            "ja<-hu": n(),
            "ja<-id": n(),
            "ja<-it": n(),
            "ja<-ko": n(),
            "ja<-nl-NL": n(),
            "ja<-pl": n(),
            "ja<-pt": n(),
            "ja<-ro": n(),
            "ja<-ru": n(),
            "ja<-sv": n(),
            "ja<-ta": n(),
            "ja<-te": n(),
            "ja<-th": n(),
            "ja<-tl": n(),
            "ja<-tr": n(),
            "ja<-uk": n(),
            "ja<-vi": n(),
            "ko<-ar": n(),
            "ko<-bn": n(),
            "ko<-cs": n(),
            "ko<-de": n(),
            "ko<-el": n(),
            "ko<-es": n(),
            "ko<-fr": n(),
            "ko<-hi": n(),
            "ko<-hu": n(),
            "ko<-id": n(),
            "ko<-it": n(),
            "ko<-nl-NL": n(),
            "ko<-pl": n(),
            "ko<-pt": n(),
            "ko<-ro": n(),
            "ko<-ru": n(),
            "ko<-sv": n(),
            "ko<-ta": n(),
            "ko<-te": n(),
            "ko<-th": n(),
            "ko<-tl": n(),
            "ko<-tr": n(),
            "ko<-uk": n(),
            "ko<-vi": n(),
            "pt<-ar": n(),
            "pt<-bn": n(),
            "pt<-cs": n(),
            "pt<-de": n(),
            "pt<-el": n(),
            "pt<-hi": n(),
            "pt<-hu": n(),
            "pt<-id": n(),
            "pt<-it": n(),
            "pt<-ja": n(),
            "pt<-ko": n(),
            "pt<-nl-NL": n(),
            "pt<-pl": n(),
            "pt<-ro": n(),
            "pt<-ru": n(),
            "pt<-sv": n(),
            "pt<-ta": n(),
            "pt<-te": n(),
            "pt<-th": n(),
            "pt<-tl": n(),
            "pt<-tr": n(),
            "pt<-uk": n(),
            "pt<-vi": n(),
            "pt<-zh": n(),
            "zh<-ar": n(),
            "zh<-bn": n(),
            "zh<-cs": n(),
            "zh<-de": n(),
            "zh<-el": n(),
            "zh<-es": n(),
            "zh<-fr": n(),
            "zh<-hi": n(),
            "zh<-hu": n(),
            "zh<-id": n(),
            "zh<-it": n(),
            "zh<-ko": n(),
            "zh<-nl-NL": n(),
            "zh<-pl": n(),
            "zh<-pt": n(),
            "zh<-ro": n(),
            "zh<-ru": n(),
            "zh<-sv": n(),
            "zh<-ta": n(),
            "zh<-te": n(),
            "zh<-th": n(),
            "zh<-tl": n(),
            "zh<-tr": n(),
            "zh<-uk": n()
        }
          , i = (e, t) => void 0 !== r[s(e, t)]
          , o = (e, t) => r[s(e, t)]
    }
    ,
    17135: (e, t, a) => {
        "use strict";
        a.d(t, {
            ee: () => y,
            PG: () => f,
            wD: () => S,
            rE: () => E,
            Mb: () => w,
            zq: () => I,
            Xx: () => b,
            v4: () => $,
            Qn: () => Z,
            ky: () => C,
            g8: () => D,
            NP: () => H,
            zM: () => O,
            M: () => F,
            zK: () => l,
            cz: () => i,
            i_: () => _,
            Qe: () => h,
            aW: () => ne,
            zO: () => R,
            Ux: () => k,
            QB: () => T,
            $$: () => oe,
            ji: () => j,
            t8: () => re,
            Ij: () => ee,
            dz: () => ae,
            zj: () => se,
            qx: () => q,
            Ml: () => P,
            Zo: () => L,
            RF: () => A,
            fv: () => J,
            S2: () => le,
            L3: () => X,
            mm: () => Q,
            J8: () => ie,
            Z2: () => K,
            oE: () => ce,
            Zm: () => Y,
            F: () => m,
            kJ: () => p,
            Ko: () => te,
            T6: () => W,
            HR: () => x,
            pQ: () => U,
            VV: () => G,
            Kc: () => V,
            pY: () => M,
            bC: () => B,
            zk: () => z,
            Gz: () => N,
            iN: () => d,
            $I: () => o,
            Rw: () => u
        });
        var s = a(58576)
          , n = a(76578)
          , r = a(80254);
        const i = e => {
            const t = e.getFullYear().toString();
            let a = (e.getMonth() + 1).toString()
              , s = e.getDate().toString();
            return a.length < 2 && (a = `0${a}`),
            s.length < 2 && (s = `0${s}`),
            [t, a, s].join("-")
        }
          , o = e => {
            const [t,a,s] = e.split("-");
            return new Date(parseInt(t, 10),parseInt(a, 10) - 1,parseInt(s, 10))
        }
          , l = e => new Date(1e3 * e).toISOString().slice(0, 10)
          , c = [["s", 1e3], ["m", 6e4], ["h", 36e5], ["d", 864e5]]
          , d = e => {
            var t;
            if (e.includes(":"))
                return e.split(":").reverse().reduce(( (e, t, a) => e + parseInt(t, 10) * c[a][1]), 0);
            const a = e.trim().charAt(e.length - 1)
              , s = null === (t = c.find(( ([e]) => e === a))) || void 0 === t ? void 0 : t[1];
            return void 0 === s ? NaN : parseInt(e, 10) * s
        }
          , u = r.ZP.memoize((e => {
            let t;
            try {
                t = parseInt(e, 10)
            } catch {
                (0,
                s.Kp)("Invalid timezoneOffset", {
                    data: {
                        timezoneOffset: e
                    }
                }),
                t = parseInt(f, 10)
            }
            const a = Math.sign(t);
            return t = Math.abs(t),
            a * (Math.floor(t / 100) + t % 100 / 60)
        }
        ));
        var g = a(95940);
        const p = (e, t, a) => (J(e, t) - a + 7) % 7
          , m = (e, t, a=0) => {
            const s = Y(e, t)
              , n = p(e, t, a);
            return Math.ceil((s + n) / 7)
        }
          , h = (e, t, a=0) => {
            const s = (t + 1) % 12
              , n = t < 11 ? e : e + 1
              , r = (t - 1 + 12) % 12
              , i = t > 0 ? e : e - 1
              , o = Y(e, t)
              , l = Y(i, r)
              , c = p(e, t, a)
              , d = []
              , u = Math.ceil((o + c) / 7);
            for (let a = 0; a < u; a++) {
                const u = [];
                for (let d = 0; d < 7; d++) {
                    const g = 7 * a + d - c
                      , p = g < 0 ? r : g >= o ? s : t
                      , m = (g < 0 ? l + g : g % o) + 1
                      , h = p === r ? i : p === s ? n : e;
                    u.push(oe(h, p, m))
                }
                d.push(u)
            }
            return d
        }
          , _ = ({month: e, year: t}) => (0,
        g.T$)(new Date(t,e), {
            month: "long",
            year: "numeric"
        })
          , v = "America/New_York"
          , f = "-500"
          , S = 2147483647
          , y = 7
          , E = 1440
          , b = 3600
          , I = 36e5
          , w = 864e5
          , k = () => new Date
          , T = e => new Date(e)
          , C = e => new Date(e)
          , R = e => new Date(1e3 * e)
          , L = () => Math.floor(Date.now() / 1e3)
          , P = () => Math.floor(Date.now() / I)
          , A = e => Math.floor(Date.now() / 1e3) - ae(e)
          , D = e => Math.floor(e.getTime() / 1e3)
          , O = (e, t="000") => new Date(1e3 * e + 36e5 * u(t))
          , N = e => new Date(e)
          , x = e => Date.now() + 1e3 * e
          , M = e => Date.now() >= e
          , F = (e, t) => (t - 1e3 * e) / w
          , U = () => (new Date).getTimezoneOffset()
          , H = () => {
            try {
                return Intl.DateTimeFormat().resolvedOptions().timeZone || ((0,
                s.Kp)("Got empty time zone from browser API", {
                    once: !0,
                    sample: .1
                }),
                v)
            } catch (e) {
                (0,
                s.Kp)("Failed to detect time zone", {
                    ex: e,
                    once: !0
                })
            }
            return v
        }
          , G = e => (void 0 === e ? new Date : new Date(e.getTime())).setUTCHours(0, 0, 0, 0)
          , V = (e=new Date) => Date.UTC(e.getFullYear(), e.getMonth(), e.getDate())
          , z = e => e.toDateString() === k().toDateString()
          , B = (e, t) => {
            const a = new Date;
            return a.setDate(a.getDate() + t),
            e.toDateString() === a.toDateString()
        }
          , j = (e=f) => O(Date.now() / 1e3, e).getUTCDay()
          , $ = (e, t) => {
            const a = new Date(e.setDate(e.getDate() + t));
            return G(a) / 1e3
        }
          , Z = (e, t) => new Date(e.setDate(e.getDate() + t))
          , W = () => {
            const e = new Date;
            return e.setHours(0, 0, 0, 0),
            e
        }
          , q = () => {
            const e = new Date;
            return e.setHours(23, 59, 59, 999),
            e
        }
          , Q = () => {
            const e = new Date;
            return e.setDate(e.getDate() + 1),
            e.setHours(0, 0, 0, 0)
        }
          , K = () => {
            const e = new Date;
            return e.setDate(1),
            e.setHours(0, 0, 0, 0),
            e.setMonth(e.getMonth() + 1),
            e
        }
          , Y = (e, t) => new Date(e,t + 1,0).getDate()
          , J = (e, t) => new Date(e,t).getDay()
          , X = (e=f) => {
            const t = Math.floor(23 - k().getUTCHours() - u(e));
            return (0,
            n.vN)(t, 24)
        }
          , ee = e => {
            const t = O(e);
            return Y(t.getUTCFullYear(), t.getUTCMonth()) - t.getUTCDate()
        }
          , te = (e=f) => {
            const t = k()
              , a = 3600 * (t.getUTCHours() + u(e)) + 60 * t.getUTCMinutes() + t.getUTCSeconds();
            return (0,
            n.vN)(a, 86400)
        }
          , ae = e => {
            const {days: t=0, hours: a=0, minutes: s=0, seconds: n=0} = e;
            return 86400 * t + a * b + 60 * s + n
        }
          , se = e => {
            if (e < 0)
                throw RangeError("The argument must be greater than or equal to 0.");
            const t = e / 1e3
              , a = t / 60
              , s = a / 60
              , n = s / 24
              , r = Math.floor(n)
              , i = 24 * r
              , o = Math.floor(s - i)
              , l = 60 * (i + o)
              , c = Math.floor(a - l)
              , d = 60 * (l + c);
            return {
                days: r,
                hours: o,
                hoursTotal: o + 24 * r,
                minutes: c,
                seconds: Math.floor(t - d)
            }
        }
          , ne = (e, t, a="floor") => {
            const s = new Date(e)
              , n = new Date(t)
              , r = Date.UTC(s.getFullYear(), s.getMonth(), s.getDate())
              , i = Date.UTC(n.getFullYear(), n.getMonth(), n.getDate());
            switch (a) {
            case "round":
                return Math.round((i - r) / w);
            case "ceil":
                return Math.ceil((i - r) / w);
            default:
                return Math.floor((i - r) / w)
            }
        }
          , re = (e, t, a="floor") => {
            switch (a) {
            case "round":
                return Math.round((t - e) / w);
            case "ceil":
                return Math.ceil((t - e) / w);
            default:
                return Math.floor((t - e) / w)
            }
        }
          , ie = (e, t) => {
            const a = 12 * e.getFullYear() + e.getMonth();
            return 12 * t.getFullYear() + t.getMonth() - a
        }
          , oe = (...e) => {
            const t = e.indexOf(void 0);
            return new Date(...e.slice(0, -1 === t ? e.length : t))
        }
          , le = (e, t, a) => {
            const s = new Date(e);
            $(s, (a - e.getDay() + 7) % 7);
            const n = new Date(t);
            return $(n, 1),
            $(n, -(n.getDay() - a + 7) % 7),
            Math.max(0, Math.floor(ne(s, n, "round") / 7))
        }
          , ce = ({currentTime: e, targetHour: t, targetWeekday: a}) => {
            const s = new Date(e)
              , n = s.getUTCDay();
            let r = 0;
            return n === a ? s.getUTCHours() >= t && (r = y) : r = n > a ? y - n + a : a - n,
            s.setUTCDate(s.getUTCDate() + r),
            s.setUTCHours(t, 0, 0, 0),
            s.getTime()
        }
    }
    ,
    64115: (e, t, a) => {
        "use strict";
        a.d(t, {
            vU: () => g,
            Vl: () => I,
            R: () => y,
            ky: () => w,
            nn: () => _,
            pL: () => S,
            gQ: () => k,
            Au: () => E,
            oj: () => v,
            NY: () => f,
            nV: () => T,
            Sz: () => C
        });
        var s = a(53229)
          , n = a(795)
          , r = a(43633)
          , i = a(30839)
          , o = a(27378)
          , l = a(31542)
          , c = a(28818);
        let d;
        const u = (0,
        a(1398).ZP)(( () => a.e(2343).then(a.bind(a, 12343)).then((e => ({
            default: e.DevTools
        })))))
          , g = () => {
            const [e,t] = o.useReducer((e => !e), !1);
            o.useEffect(( () => void 0 === window.duoDebug ? () => {}
            : (d = t,
            window.duoDebug.toggleJotaiDevtools = t,
            () => {
                var e;
                d === t && (d = void 0),
                (null === (e = window.duoDebug) || void 0 === e ? void 0 : e.toggleJotaiDevtools) === t && (window.duoDebug.toggleJotaiDevtools = void 0)
            }
            )), []);
            const a = (0,
            c.oR)();
            return e ? (0,
            l.createPortal)(o.createElement(o.Suspense, {
                fallback: null
            }, o.createElement(u, {
                isInitialOpen: !0,
                store: a
            })), document.querySelector("#overlays")) : null
        }
        ;
        let p, m = !1, h = !1;
        const _ = () => {
            var e;
            return null !== (e = null == p ? void 0 : p()) && void 0 !== e ? e : 0
        }
          , v = () => window.location.host.startsWith("preview.")
          , f = () => /^next-\d+\./.test(window.location.host)
          , S = () => {
            const e = /^next-(\d+)\./.exec(window.location.host);
            return e ? parseInt(e[1], 10) : void 0
        }
          , y = () => {
            h || (h = !0,
            console.log("Enabled debug mode"),
            R())
        }
          , E = () => f() || h
          , b = () => ({
            ...(0,
            s.vl)((0,
            i.rV)(i.Qt.DebugFlags)),
            ...(0,
            s.vl)((0,
            i.rV)(i.Qt.BrowserSessionDebugFlags, {
                useSessionStorage: !0
            })),
            ...(0,
            s.vl)(window.location.search)
        })
          , I = () => Object.keys(b()).length > 0
          , w = (e, t) => {
            var a;
            return E() && null !== (a = b()[e]) && void 0 !== a ? a : t
        }
          , k = e => void 0 !== w(e)
          , T = e => void 0 !== e && "" !== e && "false" !== e
          , C = (e, t) => {
            var a;
            if (!E())
                throw Error("Tried to set a debug flag with debug mode disabled.");
            const s = null !== (a = (0,
            i.rV)(i.Qt.BrowserSessionDebugFlags, {
                useSessionStorage: !0
            })) && void 0 !== a ? a : {};
            if (T(t) ? s[e] === t : !(e in s))
                return;
            const r = T(t) ? (0,
            n.t8)(s, e, t) : (0,
            n.zu)(s, e);
            (0,
            i.LS)(i.Qt.BrowserSessionDebugFlags, r, {
                useSessionStorage: !0
            }),
            console.log(`Set debugFlag ${e} to ${t}`)
        }
          , R = () => {
            m || ((async () => {
                const [e] = await Promise.all([a.e(1711).then(a.bind(a, 4485))]);
                p = e.getDebugOffset
            }
            )(),
            L(),
            window.duoDebug = {
                mountCoordinators: async () => {
                    const {allCoordinatedAtomForDebug: e} = await Promise.resolve().then(a.bind(a, 95304));
                    (0,
                    r.h0)().sub(e, ( () => {}
                    ))
                }
                ,
                get persistedState() {
                    return (0,
                    i.pn)("duo.state")
                }
            },
            m = !0)
        }
          , L = async () => {
            const {globalDispatch: e, globalGetState: t} = await Promise.resolve().then(a.bind(a, 18804));
            let s;
            e({
                timestamp: Date.now(),
                type: "debug/PAGE_LOAD"
            });
            const n = () => {
                var a, r;
                Date.now() > (null !== (r = null === (a = t()) || void 0 === a ? void 0 : a.debug.pageLoadTime) && void 0 !== r ? r : Date.now()) + 864e5 ? e({
                    type: "debug/ADD_UNIQUE_DEBUG_WARNING",
                    warning: {
                        type: "stale-page"
                    }
                }) : s = window.setTimeout(n, 1e4)
            }
            ;
            document.addEventListener("visibilitychange", ( () => {
                "hidden" === document.visibilityState ? window.clearTimeout(s) : s = window.setTimeout(n, 600)
            }
            )),
            n()
        }
        ;
        E() && R()
    }
    ,
    9677: (e, t, a) => {
        "use strict";
        a.d(t, {
            l: () => r
        });
        var s = a(68903)
          , n = a(67116);
        const r = () => {
            const e = ( () => {
                switch (window.duo.uiLanguage) {
                case "zh-CN":
                    return "zs";
                case "zh-TW":
                    return "zt";
                default:
                    return (0,
                    n.D3)(n.h9)
                }
            }
            )();
            return i(e) ? e : void 0
        }
          , i = (0,
        s.p)(["de", "en", "es", "fr", "hi", "hu", "id", "it", "ja", "ko", "pt", "ru", "th", "tr", "uk", "vi", "zs", "zt"])
    }
    ,
    451: (e, t, a) => {
        "use strict";
        a.d(t, {
            a1: () => y,
            XA: () => b,
            Qj: () => I
        });
        var s = a(80254);
        const n = a.p + "images/duoRadio/titleCards/0a1dbbee82ca1abf78cfa96926c993d0.svg"
          , r = a.p + "images/duoRadio/titleCards/86a7197b4d04f50efeda11d91e01f04d.svg"
          , i = a.p + "images/duoRadio/titleCards/0213039e407c5a87138e3a1899deb91f.svg"
          , o = a.p + "images/duoRadio/titleCards/83a42d94b6f15a46780255fe86b71c9c.svg"
          , l = a.p + "images/duoRadio/titleCards/ba9f61070706600cdcccfc8e6e8945d2.svg"
          , c = a.p + "images/duoRadio/titleCards/b48799a15e2373ad7be768c485925b13.svg"
          , d = a.p + "images/duoRadio/titleCards/ec9adf7c80b18615d426b934c0485ed4.svg"
          , u = a.p + "images/duoRadio/titleCards/32e296a54199e290304787f2e7ade910.svg"
          , g = a.p + "images/duoRadio/titleCards/e7f11db7a8a3f557dd711b07b151f5d4.svg"
          , p = a.p + "images/duoRadio/titleCards/6d305343640ddcedc69570b68afb83da.svg"
          , m = a.p + "images/duoRadio/titleCards/574da2b8f9f820018251d07cdb43846c.svg"
          , h = a.p + "images/duoRadio/titleCards/1f0e6afc41d32e12bf67c54adac62070.svg"
          , _ = a.p + "images/duoRadio/titleCards/0c34200c8bfd5ae2588af5f470bef829.svg"
          , v = a.p + "images/duoRadio/titleCards/029f7af45c1fefa43d38099d87a33489.svg"
          , f = a.p + "images/duoRadio/titleCards/fbc42e2bc09a4f7b89cb3f4edfa92211.svg";
        var S = a(11811);
        const y = e => {
            const t = e.duoRadioChallengeStats;
            if (!t)
                throw Error("DuoRadio session missing challenge stats");
            return Math.round(t.numChallengesCorrect / t.numChallengesCompleted * 100)
        }
          , E = e => {
            switch (e) {
            case "binary":
            case "binaryComprehension":
                return S.Sm.RadioBinary;
            case "imageComprehension":
            case "imageSelect":
                return S.Sm.RadioImageSelect;
            case "listenMatch":
                return S.Sm.RadioListenMatch;
            case "listenRecognize":
                return S.Sm.RadioListenRecognize;
            case "select":
                return S.Sm.RadioSelect;
            default:
                throw Error(`Unknown DuoRadio challenge type: ${e}`)
            }
        }
          , b = e => {
            switch (e) {
            case "aventurasConBea":
                return o;
            case "adventuresWithBea":
                return i;
            case "chattingWithZari":
                return v;
            case "hablandoConZari":
                return f;
            case "ideasConBea":
                return r;
            case "ideasWithBea":
                return n;
            case "laCasaDeVikram":
                return _;
            case "lilyConoceGente":
                return c;
            case "lilyAndStrangers":
                return l;
            case "lucyEstaEscuchando":
                return u;
            case "lucyIsListening":
                return d;
            case "askLucy":
                return g;
            case "preguntaleALucy":
                return p;
            case "vikramsCommunityHotline":
                return m;
            case "vikramsHouse":
                return h;
            default:
                throw Error(`Unknown title: ${e}`)
            }
        }
          , I = (e, t) => e.map((e => {
            const a = {
                type: E(e.challengeType),
                ...void 0 === e.correctIndex ? {} : {
                    correctIndex: e.correctIndex
                },
                ...void 0 === e.correctIndices ? {} : {
                    correctIndices: e.correctIndices
                },
                ...void 0 === e.choices ? {} : {
                    choices: e.choices
                },
                ...void 0 === e.isTrue ? {} : {
                    isTrue: e.isTrue
                },
                ...void 0 === e.pairs ? {} : {
                    pairs: e.pairs
                },
                ...void 0 === e.prompt ? {} : {
                    prompt: e.prompt
                },
                ...void 0 === e.audioText ? {} : {
                    audioText: e.audioText
                },
                ...void 0 === e.audioUrl ? {} : {
                    audioUrl: e.audioUrl
                },
                challengeResponseTrackingProperties: {
                    "": void 0
                },
                id: "",
                indicatorType: null,
                metadata: t.metadata,
                solutionTranslation: "",
                trackingProperties: t.trackingProperties
            };
            if (a.type === S.Sm.RadioListenRecognize || a.type === S.Sm.RadioSelect) {
                const e = s.ZP.shuffle(a.choices);
                if (a.type === S.Sm.RadioListenRecognize) {
                    const t = a.correctIndices.map((t => e.indexOf(a.choices[t])));
                    a.correctIndices = t
                } else if (a.type === S.Sm.RadioSelect) {
                    const t = e.indexOf(a.choices[a.correctIndex]);
                    a.correctIndex = t
                }
                a.choices = e
            }
            return a
        }
        ))
    }
    ,
    37971: (e, t, a) => {
        "use strict";
        var s;
        a.d(t, {
            c: () => s
        }),
        function(e) {
            e.AlphabetTipSplash = "ALPHABET_TIP_SPLASH",
            e.Blaming = "BLAMING",
            e.CapstoneReviewSplash = "CAPSTONE_REVIEW_SPLASH",
            e.CharacterWriteRetryBlaming = "CHARACTER_WRITE_RETRY_BLAMING",
            e.CoachDuo = "COACH_DUO",
            e.CoachDuoSplash = "COACH_DUO_SPLASH",
            e.CoachDuoSliding = "COACH_DUO_SLIDING",
            e.CoachDuoSubmitting = "COACH_DUO_SUBMITTING",
            e.EarnbackSplash = "EARNBACK_SPLASH",
            e.EasierPlacementSplash = "EASIER_PLACEMENT_SPLASH",
            e.EndCarousel = "END_CAROUSEL",
            e.Grading = "GRADING",
            e.GrammarSkillSplash = "GRAMMAR_SKILL_SPLASH",
            e.Guessing = "GUESSING",
            e.HardModeDuo = "HARD_MODE_DUO",
            e.HardModeDuoSliding = "HARD_MODE_DUO_SLIDING",
            e.LegendaryDuo = "LEGENDARY_DUO",
            e.MistakesReviewDuo = "MISTAKES_REVIEW_DUO",
            e.PartialXpDuo = "PARTIAL_XP_DUO",
            e.PartialXpDuoSliding = "PARTIAL_XP_DUO_SLIDING",
            e.PracticeHubDuo = "PRACTICE_HUB_DUO",
            e.SectionTestSplash = "SECTION_TEST_SPLASH",
            e.Showing = "SHOWING",
            e.Sliding = "SLIDING",
            e.SmartTip = "SMART_TIP",
            e.SmartTipBlaming = "SMART_TIP_BLAMING",
            e.SmartTipSliding = "SMART_TIP_SLIDING",
            e.SpeakRetryBlaming = "SPEAK_RETRY_BLAMING",
            e.Submitting = "SUBMITTING",
            e.UnitReviewSplash = "UNIT_REVIEW_SPLASH",
            e.UnitTestSplash = "UNIT_TEST_SPLASH",
            e.VisiblePersonalizationSplash = "VISIBLE_PERSONALIZATION_SPLASH"
        }(s || (s = {}))
    }
    ,
    94786: (e, t, a) => {
        "use strict";
        var s;
        a.d(t, {
            Q: () => s
        }),
        function(e) {
            e.AlphabetLesson = "alphabet_lesson",
            e.AlphabetPractice = "alphabet_practice",
            e.DuoRadio = "duo_radio",
            e.GlobalPractice = "practice",
            e.Legendary = "legendary",
            e.LegendaryLevel = "legendary_level",
            e.LegendaryLexemePractice = "legendary_lexeme_practice",
            e.LegendaryUnitPractice = "legendary_unit_practice",
            e.Lesson = "lesson",
            e.LevelReview = "level_review",
            e.LexemePractice = "lexeme_practice",
            e.LexemeSkillLevelPractice = "lexeme_skill_level_practice",
            e.ListeningPractice = "listen_up",
            e.MistakesReview = "mistakes_review",
            e.Placement = "placement",
            e.SectionTest = "section_test",
            e.SpeakingPractice = "perfect_pronounciation",
            e.SpecifiedMatchPractice = "specified_match_practice",
            e.Stories = "stories",
            e.TargetPractice = "target_practice",
            e.UnitPractice = "unit_practice",
            e.UnitReview = "unit_review",
            e.UnitRewind = "unit_rewind",
            e.UnitTest = "unit_test"
        }(s || (s = {}))
    }
    ,
    67173: (e, t, a) => {
        "use strict";
        var s;
        a.d(t, {
            V: () => s
        }),
        function(e) {
            e.AccountNotFound = "account-not-found",
            e.AchievementV3Slide = "achievementV3-slide",
            e.AcquisitionSurvey = "acquisitionSurvey",
            e.AddFamilyMember = "add-family-member",
            e.AgeInput = "age-input",
            e.AllowButton = "allow-button",
            e.AppStoreButtons = "app-store-buttons",
            e.AudioButton = "audio-button",
            e.AvatarsIntroDismissButton = "avatars-intro-dismiss-button",
            e.B2bStartButton = "b2b-start-button",
            e.BackArrow = "back-arrow",
            e.BigRedButton = "big-red-button",
            e.Blame = "blame",
            e.BlameCorrect = "blame-correct",
            e.BlameIncorrect = "blame-incorrect",
            e.BlockButton = "block-button",
            e.CancelEditFamily = "cancel-edit-family",
            e.CcBillingInfoForm = "cc-billing-info-form",
            e.CcBillingInfoRejected = "cc-billing-info-rejected",
            e.CcCancelButton = "cc-cancel-button",
            e.CcExpirationInput = "cc-expiration-input",
            e.CcExpirationLabel = "cc-expiration-label",
            e.CcNameInput = "cc-name-input",
            e.CcNameLabel = "cc-name-label",
            e.CcNumberInput = "cc-number-input",
            e.CcNumberLabel = "cc-number-label",
            e.CcPostalCodeInput = "cc-postal-code-input",
            e.CcPostalCodeLabel = "cc-postal-code-label",
            e.CcRejectedImage = "cc-rejected-image",
            e.CcSecurityInput = "cc-security-input",
            e.CcSecurityLabel = "cc-security-label",
            e.CcSubmitButton = "cc-submit-button",
            e.CcTermsConditionsLabel = "cc-terms-conditions-label",
            e.CcTermsConditionsLink = "cc-terms-conditions-link",
            e.Challenge = "challenge",
            e.ChallengeChoice = "challenge-choice",
            e.ChallengeHeader = "challenge-header",
            e.ChallengeJudgeText = "challenge-judge-text",
            e.ChallengeTapToken = "challenge-tap-token",
            e.ChallengeTapTokenText = "challenge-tap-token-text",
            e.ChallengeTextInput = "challenge-text-input",
            e.ChallengeTranslateInput = "challenge-translate-input",
            e.ChinesePrivacy = "chinese-privacy",
            e.ChineseTerms = "chinese-terms",
            e.ChoosePlanHeader = "choose-plan-header",
            e.CloseButton = "close-button",
            e.CloseButtonInviteFamily = "close-button-invite-family",
            e.CloseButtonStories = "close-button-stories",
            e.ContinueButton = "continue-button",
            e.ContinueWithFacebook = "continue-with-facebook",
            e.ContinueWithGoogle = "continue-with-google",
            e.CoursesLink = "courses-link",
            e.CoursesMenu = "courses-menu",
            e.CreateProfile = "create-profile",
            e.CreateProfileJuicy = "create-profile-juicy",
            e.CreateProfileLater = "create-profile-later",
            e.DailyQuestProgressSlide = "daily-quest-progress-slide",
            e.DailyQuestRewardSlide = "daily-quest-reward-slide",
            e.DailyReminder = "daily-reminder",
            e.DarkMode = "dark-mode",
            e.DrawerBackdrop = "drawer-backdrop",
            e.EditFamily = "edit-family",
            e.EmailConfirmationModalHeader = "email-confirmation-modal-header",
            e.EmailField = "email-field",
            e.EmailInput = "email-input",
            e.EnableSpeaker = "enable-speaker",
            e.EnglishPrivacy = "english-privacy",
            e.EnglishTerms = "english-terms",
            e.FamilyMember = "family-member",
            e.FaqLink = "faq-link",
            e.FooterLinks = "footer-links",
            e.ForgotPassword = "forgot-password",
            e.ForgotPasswordThankYou = "forgot-password-thank-you",
            e.FriendAddButton = "friend-add-button",
            e.FriendAddedButton = "friend-added-button",
            e.FriendEntry = "friend-entry",
            e.FriendFollowersList = "friend-followers-list",
            e.FriendFollowingList = "friend-following-list",
            e.FriendUpdatesHeader = "friend-updates-header",
            e.FullNameInput = "full-name-input",
            e.FunboardingAccountLink = "funboarding-account-link",
            e.FunboardingContinueButton = "funboarding-continue-button",
            e.GetStartedTop = "get-started-top",
            e.GlobalPractice = "global-practice",
            e.GoalCasual = "daily-goal-10",
            e.GoalIntense = "daily-goal-50",
            e.GoalRegular = "daily-goal-20",
            e.GoalSerious = "daily-goal-30",
            e.GuidebookButton = "guidebook-button",
            e.GuidebookHeader = "guidebook-header",
            e.HaveAccount = "have-account",
            e.HdyhauFriends = "hdyhau-friendsOrFamily",
            e.HdyhauNews = "hdyhau-newsArticleOrBlog",
            e.HdyhauOnline = "hdyhau-onlineAds",
            e.HdyhauOther = "hdyhau-other",
            e.HdyhauRadio = "hdyhau-radio",
            e.HdyhauSearch = "hdyhau-webSearch",
            e.HdyhauSocial = "hdyhau-socialMedia",
            e.HdyhauTv = "hdyhau-tv",
            e.HeartsIntroContinueButton = "hearts-intro-continue-button",
            e.HeartsMenu = "hearts-menu",
            e.HintPopover = "hint-popover",
            e.HintToken = "hint-token",
            e.Home = "home",
            e.IntroPopover = "intro-popover",
            e.InvalidFormField = "invalid-form-field",
            e.LanguageCard = "language-card",
            e.Leaderboard = "leaderboard",
            e.LeaderboardsLocked = "leaderboards-locked",
            e.LeaderboardsOpenButton = "leaderboards-open",
            e.LeaderboardsPopover = "leaderboards-popover",
            e.LearnWithPlus = "learn-with-plus",
            e.LegendaryEarnedSlide = "legendary-earned-slide",
            e.LegendaryNodeButton = "legendary-node-button",
            e.LegendaryPaywallLingotsCTA = "legendary-paywall-lingots-cta",
            e.LegendarySessionEndContinue = "legendary-session-end-continue",
            e.LegendaryStartButton = "legendary-start-button",
            e.LingotMenu = "lingot-menu",
            e.LingotStat = "lingot-stat",
            e.LoggedOutTopbar = "logged-out-topbar",
            e.LoginWithFacebook = "login-with-facebook",
            e.LoginWithGoogle = "login-with-google",
            e.LongscrollTitle = "longscroll-title",
            e.MilestoneStreakFreezeSlide = "milestone-streak-freeze-slide",
            e.MobileApps = "mobile-apps",
            e.NotificationButton = "notification-button",
            e.NotificationDrawerNoThanksButton = "notification-drawer-no-thanks-button",
            e.NyButton = "ny-button",
            e.NyPromo = "ny-promo",
            e.PasswordInput = "password-input",
            e.PlayerNext = "player-next",
            e.PlayerPracticeAgain = "player-practice-again",
            e.PlayerSkip = "player-skip",
            e.PlayerToggleKeyboard = "player-toggle-keyboard",
            e.PlusChecklistTitle = "plus-checklist-title",
            e.PlusCloseX = "plus-close-x",
            e.PlusContinue = "plus-continue",
            e.PlusNoThanks = "plus-no-thanks",
            e.PlusOfferButton = "plus-offer-button",
            e.PlusOfferLogo = "plus-offer-logo",
            e.PlusPlans = "plus-plans",
            e.PlusTimelineIcon = "plus-timeline-icon",
            e.PlusViewAllPlans = "plus-view-all-plans",
            e.PracticeHubAdContinueButton = "practice-hub-ad-continue-button",
            e.PracticeHubAdNoThanksButton = "practice-hub-ad-no-thanks-button",
            e.PracticeHubCollectionButton = "practice-hub-collection-button",
            e.PracticeHubCollectionHeader = "practice-hub-collection-header",
            e.PracticeHubFeatureSessionCTA = "practice-hub-feature-session-cta",
            e.PrivacyPersonalizedAds = "privacy-personalized-ads",
            e.PrivacyPublicProfile = "privacy-public-profile",
            e.PriorProficiencyCard = "prior-proficiency-card",
            e.ProfileHeaderBlockButton = "profile-header-block-button",
            e.ProfileHeaderPopover = "profile-header-popover",
            e.ProfileHeaderUnblockButton = "profile-header-unblock-button",
            e.ProfileUsername = "profile-username",
            e.PurchaseButton = "purchase-button",
            e.PurchaseIcon = "purchase-icon",
            e.PurchaseStepActive = "purchase-step-active",
            e.QuitButton = "quit-button",
            e.RegisterButton = "register-button",
            e.RemoveMember = "remove-member",
            e.Reset = "reset",
            e.ResetPassword = "reset-password",
            e.RewardSlide = "reward-slide",
            e.SaveButton = "save-button",
            e.SelectMemberCheckbox = "select-member-checkbox",
            e.SessionCompleteSlide = "session-complete-slide",
            e.SessionDuo = "session-duo",
            e.SessionSplashTitle = "session-splash-title",
            e.SettingsAccount = "settings-account",
            e.SettingsCoach = "settings-coach",
            e.SettingsCourses = "settings-courses",
            e.SettingsNotifications = "settings-notifications",
            e.SettingsPassword = "settings-password",
            e.SettingsPrivacy = "settings-privacy",
            e.SettingsProfilePictureLabel = "settings-profile-picture-label",
            e.SettingsSchools = "settings-schools",
            e.SettingsSound = "settings-sound",
            e.SettingsSuper = "settings-super",
            e.ShopSection = "shop-section",
            e.SignInButton = "sign-in-button",
            e.SignInJuicy = "sign-in-juicy",
            e.SignUpButton = "sign-up-button",
            e.SignUpLink = "sign-up-link",
            e.SkillPath = "skill-path",
            e.SkillPathLevel = "skill-path-level",
            e.SkillPathLevelLockedButton = "skill-path-level-locked-button",
            e.SkillPathState = "skill-path-state",
            e.SkillPathTooltipUnitTest = "skill-path-tooltip-unit-test",
            e.SkillPathUnit = "skill-path-unit",
            e.SkillPathUnitTest = "skill-path-unit-test",
            e.SocialPanelFindFriends = "social-panel-find-friends",
            e.SocialPanelInviteFriends = "social-panel-invite-friends",
            e.SoundSettings = "sound-settings",
            e.StartBasics = "start-basics",
            e.StartPlacement = "start-placement",
            e.StoriesChoice = "stories-choice",
            e.StoriesElement = "stories-element",
            e.StoriesPlayerContinue = "stories-player-continue",
            e.StoriesPlayerDone = "stories-player-done",
            e.StoriesTextInput = "stories-text-input",
            e.StoryStart = "story-start",
            e.StoryStartButton = "story-start-button",
            e.StoryTitle = "story-title",
            e.StreakFreezeSlide = "streak-freeze-slide",
            e.StreakGoalOption = "streak-goal-option",
            e.StreakMenu = "streak-menu",
            e.StreakPanel = "streak-panel",
            e.StreakPanelHeader = "streak-panel-header",
            e.StreakSlide = "streak-slide",
            e.StreakStat = "streak-stat",
            e.Submit = "submit",
            e.SuperMenu = "super-menu",
            e.SurveyBrain = "brain",
            e.SurveyCulture = "culture",
            e.SurveyFamily = "family",
            e.SurveyFun = "fun",
            e.SurveyOther = "other",
            e.SurveySchool = "school",
            e.SurveyTravel = "travel",
            e.SurveyWork = "work",
            e.TrialReminder = "trial-reminder",
            e.UnitTestResultsSlide = "unit-test-results-slide",
            e.UseAnotherAccount = "use-another-account",
            e.UseAnotherCardRadio = "use-another-card",
            e.UsernameInput = "username-input",
            e.UserSearchEmptyState = "user-search-empty-state",
            e.UserSearchInput = "user-search-input",
            e.WordBank = "word-bank"
        }(s || (s = {}))
    }
    ,
    59815: (e, t, a) => {
        "use strict";
        a.d(t, {
            $K: () => n,
            Di: () => o,
            Wp: () => l,
            _L: () => r,
            pY: () => s,
            w: () => i
        });
        class s extends Error {
            constructor(e) {
                const t = new.target.prototype;
                super(e),
                Object.setPrototypeOf(this, t)
            }
        }
        class n extends s {
            constructor() {
                super("Aborted by user")
            }
        }
        class r extends s {
            constructor(e, t="aborted") {
                super(`AbortError: ${t}`),
                this.reason = e
            }
        }
        class i extends s {
        }
        class o extends s {
            constructor() {
                super("Encountered stale data")
            }
        }
        const l = e => "CSS_CHUNK_LOAD_FAILED" === e.code || "ChunkLoadError" === e.name
    }
    ,
    99773: (e, t, a) => {
        "use strict";
        a.d(t, {
            IQ: () => i,
            RM: () => l,
            Sg: () => c,
            rn: () => o
        });
        var s = a(80254);
        const n = {
            conditions: ["control", "experiment"],
            contexts: [void 0]
        }
          , r = {
            minfra_web_stripe_setup_intent: n,
            path_web_course_complete_slides: n,
            path_web_sections_overview: n,
            placeholder_experiment: {
                cache: "standard",
                conditions: ["control", "experiment"],
                contexts: [void 0]
            },
            score_web_linkedin_sync: n,
            score_web_score_on_topbar: n,
            score_web_score_session_end: n,
            web_bingo_ja_xx: n,
            web_bingo_ko_xx: n,
            web_bingo_zh_xx: n
        }
          , i = e => {
            var t;
            const a = r[e];
            return null !== (t = "cache"in a ? a.cache : void 0) && void 0 !== t ? t : "standard"
        }
          , o = s.XP(r).sort().join(",")
          , l = [...s.XP({
            placeholder_experiment: {
                conditions: ["control", "experiment"],
                contexts: [null]
            }
        }), ...s.XP({
            fig_exp_holdout: {
                conditions: ["non_holdout_users", "holdout_users"],
                contexts: [null]
            },
            fig_exp_holdout_v3: {
                conditions: ["non_holdout_users", "holdout_users"],
                contexts: [null]
            },
            placeholder_experiment: {
                conditions: ["control", "experiment"],
                contexts: [null]
            }
        })].filter((e => "placeholder_experiment" !== e))
          , c = l.join(",")
    }
    ,
    81149: (e, t, a) => {
        "use strict";
        a.d(t, {
            LK: () => E,
            Uy: () => T,
            cu: () => R,
            j6: () => b,
            nY: () => w,
            xz: () => C
        });
        var s = a(5029)
          , n = a(54174)
          , r = a(18867)
          , i = a(72398)
          , o = a(54412)
          , l = a(17135)
          , c = a(64115)
          , d = a(99773)
          , u = a(53229)
          , g = a(60752)
          , p = a(58576)
          , m = a(30839)
          , h = a(18804)
          , _ = a(79465)
          , v = a(16086);
        a(20028);
        const f = e => (t, ...a) => {
            var s;
            if ((0,
            c.Au)()) {
                const e = (0,
                u.vl)();
                if (e[t])
                    return (0,
                    i.qr)(e[t], t, void 0, {
                        queryOverride: !0
                    }),
                    e[t];
                const a = null === (s = (0,
                m.rV)(m.Qt.DebugExperimentOverrides)) || void 0 === s ? void 0 : s[t];
                if (a)
                    return (0,
                    i.qr)(a, t, void 0, {
                        localOverride: !0
                    }),
                    `${a}`
            }
            return e(t, ...a)
        }
        ;
        let S = {};
        const y = 1 / 0
          , E = () => {
            S = Object.fromEntries(Object.entries(S).filter(( ([,[,e]]) => e === y)))
        }
          , b = f(( (e, t) => {
            const a = `${e} ${t}`;
            if (a in S) {
                const [s,n] = S[a];
                if ((0,
                l.Zo)() < n)
                    return (0,
                    i.qr)(s, e, t, {
                        cache: !0
                    }),
                    s
            }
            const s = ( (e, t) => {
                const a = t
                  , s = (null !== (o = null === (i = (0,
                h.globalGetState)()) || void 0 === i ? void 0 : i.user.experiments) && void 0 !== o ? o : {})[e];
                var i, o;
                if (!s) {
                    if ("indefinitely" === (0,
                    d.IQ)(e)) {
                        const t = `Indefinitely-cached experiment ${e} treated without record loaded`;
                        console.error(t),
                        (0,
                        p.Kp)(t, {
                            once: !0,
                            sample: .001
                        })
                    }
                    return "control"
                }
                if (!s.eligible)
                    return s.condition;
                const l = void 0 !== a && !s.contexts.includes(a);
                if (!s.treated || l) {
                    const t = (0,
                    h.globalGetState)();
                    t && (0,
                    n.d)(t) ? (async () => {
                        const t = await (0,
                        g.b)();
                        await t.add("submittableRequests", {
                            request: {
                                contexts: a ? [a] : [],
                                experimentName: e
                            },
                            type: "experiment-treatment"
                        })
                    }
                    )() : r.Vi.treatUser((0,
                    v.Jb)(), e, {
                        contexts: a ? [a] : [],
                        treated: !0
                    }),
                    window.setTimeout(( () => (0,
                    h.globalDispatch)({
                        context: a,
                        name: e,
                        treated: !0,
                        type: "UPDATE_EXPERIMENT_RECORD"
                    })), 0),
                    (0,
                    _.track)("treatment_record_updated", {
                        experiment_name: e
                    })
                }
                return s.condition
            }
            )(e, t);
            return S[a] = [s, {
                indefinitely: y,
                minimal: (0,
                l.Zo)() + 1,
                standard: (0,
                l.Zo)() + 30
            }[(0,
            d.IQ)(e)]],
            (0,
            i.qr)(s, e, t),
            s
        }
        ))
          , I = e => {
            const t = (0,
            s.sha256)(e);
            return parseInt(t.slice(-8), 16)
        }
          , w = (e, t, a=[null]) => {
            const s = C()
              , n = s[e] || {
                condition: t,
                contexts: a
            };
            n.condition = t,
            s[e] = n,
            (0,
            m.LS)(m.Qt.LoggedOutExperiments, s)
        }
          , k = (e, t, a, s=[null]) => {
            w(e, t, s),
            (0,
            _.track)("counterfactuals_client_treat", {
                condition: t,
                context: a,
                experiment_name: e,
                is_owner_only: void 0
            })
        }
          , T = e => {
            const t = C();
            delete t[e],
            (0,
            m.LS)(m.Qt.LoggedOutExperiments, t)
        }
          , C = () => (0,
        m.rV)(m.Qt.LoggedOutExperiments) || {}
          , R = f(( (e, t, a, s) => {
            (0,
            v.Pc)() && console.warn(`Logged in users should not usually be treated for logged out experiments! (${e})`);
            const n = C()[e]
              , r = a[e];
            if (!r && !n)
                return (0,
                i.qr)(null != s ? s : "control", e, t, {
                    default: !0,
                    loggedOut: !0
                }),
                null != s ? s : "control";
            if (r && void 0 !== r.condition)
                return (0,
                i.qr)(r.condition, e, t, {
                    loggedOut: !0
                }),
                r.condition;
            if (n) {
                const a = n.contexts;
                return a.includes(t) || k(e, n.condition, t, [...a, t]),
                (0,
                i.qr)(n.condition, e, t, {
                    loggedOut: !0
                }),
                n.condition
            }
            const l = r.conditions;
            if (!(I(`${(0,
            o.ej)(o.Vj.LoggedOutUUID)}-${e}`) / 2 ** 32 < r.rollout)) {
                const a = l[0];
                return (0,
                i.qr)(a, e, t, {
                    loggedOut: !0,
                    notInRollout: !0
                }),
                a
            }
            const c = l[I(`${(0,
            o.ej)(o.Vj.LoggedOutUUID)}-${e}-condition`) % l.length];
            return k(e, c, t, [t]),
            (0,
            i.qr)(c, e, t, {
                loggedOut: !0
            }),
            c
        }
        ))
          , L = (e, t, a, s, n=[null]) => {
            w(e, t, n),
            (0,
            _.track)("counterfactuals_client_treat", {
                condition: t,
                context: a,
                experiment_name: e,
                is_owner_only: !1
            }),
            (0,
            _.trackRawEvent)("counterfactuals_client_treat", {
                condition: t,
                context: a,
                distinct_id: s,
                experiment_name: e,
                is_owner_only: !0,
                user_id: s
            })
        }
        ;
        f(( (e, t, a, s, n, r, o) => {
            const l = C()[e]
              , c = a[e];
            if (void 0 === n || void 0 === s)
                return (0,
                p.vU)(`Users not in a family plan should not usually be treated for family plan experiments! (${e})`, {
                    data: {
                        experimentName: e
                    },
                    once: !0
                }),
                c.conditions[0];
            if (!c && !l)
                return (0,
                i.qr)(null != o ? o : "control", e, t, {
                    default: !0,
                    loggedOut: !0,
                    user_id: r
                }),
                null != o ? o : "control";
            if (c && void 0 !== c.condition)
                return c.condition;
            if (l) {
                const a = l.contexts;
                return a.includes(t) || L(e, l.condition, t, n, [...a, t]),
                l.condition
            }
            const d = I(`${e}_${s}`) % 65536;
            if (!(d / 65536 < c.rollout)) {
                const a = c.conditions[0];
                return (0,
                i.qr)(a, e, t, {
                    loggedOut: !0,
                    notInRollout: !0,
                    user_id: r
                }),
                a
            }
            const u = c.conditions[d % c.conditions.length];
            return L(e, u, t, n, [t]),
            (0,
            i.qr)(u, e, t, {
                loggedOut: !0,
                notInRollout: !1,
                user_id: r
            }),
            u
        }
        ))
    }
    ,
    41679: (e, t, a) => {
        "use strict";
        a.d(t, {
            E6: () => h,
            Jb: () => _,
            L8: () => g,
            hP: () => p,
            k3: () => S
        });
        var s = a(80254)
          , n = a(98964)
          , r = a(64184)
          , i = a(18867)
          , o = a(70326)
          , l = a(67899)
          , c = a(6986)
          , d = a(79465)
          , u = a(16086);
        const g = s.IH(( () => new Promise(( (e, t) => {
            window.fbAsyncInit = async () => {
                window.FB.init({
                    appId: "234536436609303",
                    version: "v7.0",
                    xfbml: !0
                }),
                window.FB.AppEvents.logPageView(),
                await _(),
                e()
            }
            ,
            (async () => {
                try {
                    await (0,
                    n.l)("//connect.facebook.net/en_US/sdk.js", "facebook-jssdk")
                } catch {
                    t(Error("Cannot load facebook SDK"))
                }
            }
            )()
        }
        ))))
          , p = async () => (await g(),
        (await v()).accessToken);
        let m = !1;
        const h = () => m
          , _ = () => new Promise((e => {
            window.FB.getLoginStatus((t => {
                "connected" === t.status ? (console.log("User already granted Facebook-access"),
                e(t.authResponse)) : (console.log("User didn't grant Facebook-access yet"),
                e(void 0))
            }
            ))
        }
        ))
          , v = async (e=[], t=!1) => {
            if (m = !0,
            !t) {
                const e = await _();
                if (e)
                    return e
            }
            return new Promise(( (t, a) => {
                window.FB.login((e => {
                    e.authResponse ? (console.log("Facebook-access granted"),
                    t(e.authResponse)) : (console.log("User closed Facebook popup or denied access"),
                    a(Error("User closed Facebook popup or denied access")))
                }
                ), {
                    scope: ["email", ...e].join(",")
                })
            }
            ))
        }
          , f = () => new Promise((e => {
            window.FB.api("/me", {
                fields: "name,email,id"
            }, e)
        }
        ))
          , S = async ({allowLanguagelessUser: e=!1, dispatch: t, history: a, onLoginSuccess: s, redirectPath: n, via: g, age: m}) => {
            var h, _;
            const v = await p();
            try {
                return await (async ({dispatch: e, facebookToken: t, history: a, onLoginSuccess: s, redirectPath: n}) => {
                    await (0,
                    o.x4)({
                        facebookToken: t
                    });
                    const i = e((0,
                    r.eY)({
                        onUserRetrieved: e => {
                            (0,
                            c.oV)("social", e)
                        }
                        ,
                        urlForStringsReload: n
                    }));
                    return console.log("Logging into existing account"),
                    await i,
                    s ? s() : a.push(n),
                    !0
                }
                )({
                    dispatch: t,
                    facebookToken: v,
                    history: a,
                    onLoginSuccess: s,
                    redirectPath: n
                })
            } catch (a) {
                if (!(0,
                i.Hx)(a) || 401 !== (null === (h = a.response) || void 0 === h ? void 0 : h.status) && 403 !== (null === (_ = a.response) || void 0 === _ ? void 0 : _.status))
                    throw a;
                if ((0,
                u.Pc)()) {
                    const e = await f();
                    await t((0,
                    r.DZ)({
                        age: m,
                        email: e.email,
                        facebookToken: v,
                        name: e.name
                    })),
                    await t((0,
                    r.eY)()),
                    (0,
                    d.track)("register", {
                        successful: !0,
                        through: "facebook",
                        via: g
                    }),
                    (0,
                    l.SX)({
                        event: "sign_up"
                    })
                } else if (e) {
                    const e = await f();
                    await (0,
                    o.$C)({
                        age: m,
                        email: e.email,
                        name: e.name
                    }),
                    await t((0,
                    r.eY)()),
                    (0,
                    d.track)("register", {
                        successful: !0,
                        through: "facebook",
                        via: g
                    }),
                    (0,
                    l.SX)({
                        event: "sign_up"
                    })
                }
                return !1
            }
        }
    }
    ,
    1897: (e, t, a) => {
        "use strict";
        a.d(t, {
            g: () => s
        });
        const s = e => async (t, {...a}) => {
            const s = () => {
                if (0 === Object.keys(a).length)
                    throw Error("All requests aborted")
            }
              , n = (e, t, s=void 0) => {
                const n = a[e];
                delete a[e],
                void 0 !== n && (void 0 === s ? void 0 !== t ? n.resolver.resolve(t) : n.resolver.reject(Error(`Fetcher failed to fetch data for ${e.toString()}`)) : n.resolver.reject(s))
            }
            ;
            try {
                Object.keys(a).forEach((e => {
                    var t;
                    const s = null === (t = a[e]) || void 0 === t ? void 0 : t.resolver.signal;
                    (null == s ? void 0 : s.aborted) ? delete a[e] : null == s || s.addEventListener("abort", ( () => {
                        delete a[e]
                    }
                    ))
                }
                )),
                await e({
                    batch: a,
                    batchKey: t,
                    resolveField: n,
                    resolveIndexField: n,
                    throwIfAllAborted: s
                }),
                Object.keys(a).forEach((e => {
                    var t;
                    null === (t = a[e]) || void 0 === t || t.resolver.reject(Error("Request not resolved by fetcher"))
                }
                ))
            } catch (e) {
                Object.keys(a).forEach((t => {
                    var s;
                    null === (s = a[t]) || void 0 === s || s.resolver.reject(e)
                }
                ))
            }
        }
    }
    ,
    53396: (e, t, a) => {
        "use strict";
        a.d(t, {
            S: () => r
        });
        const s = e => {
            let t = e.filter((e => !e.signal.aborted));
            if (t.length <= 1)
                return e[0];
            const a = new AbortController;
            return t.forEach((e => {
                e.signal.addEventListener("abort", ( () => {
                    t = t.filter((t => t !== e)),
                    0 === t.length && a.abort()
                }
                ))
            }
            )),
            {
                reject: e => {
                    t.forEach((t => {
                        t.reject(e)
                    }
                    ))
                }
                ,
                resolve: e => {
                    t.forEach((t => {
                        t.resolve(e)
                    }
                    ))
                }
                ,
                signal: a.signal
            }
        }
        ;
        var n = a(14437);
        const r = (e, t, a) => r => {
            const i = {};
            r.forEach(( ({params: a, resolver: r}) => {
                const o = a[0]
                  , l = "function" == typeof t ? t : t[o]
                  , c = "function" == typeof e ? () => e(...a) : () => e[o](a[1])
                  , [d,u] = c()
                  , g = (0,
                n.r)(d);
                let p = i[g];
                void 0 === p && (p = [d, {}],
                i[g] = p);
                const m = p[1][o];
                p[1][o] = void 0 === m ? {
                    params: u,
                    resolver: r
                } : {
                    params: l(m.params, u, o),
                    resolver: s([m.resolver, r])
                }
            }
            )),
            Object.values(i).forEach(( ([e,t]) => {
                a(e, t)
            }
            ))
        }
    }
    ,
    20821: (e, t, a) => {
        "use strict";
        a.d(t, {
            Q: () => s
        });
        const s = (e, t=0) => {
            let a, s = [];
            var n;
            return n = n => {
                s.push(n),
                void 0 === a && (a = setTimeout(( () => {
                    const t = s.filter(( ({resolver: e}) => !e.signal.aborted));
                    a = void 0,
                    s = [],
                    t.length > 0 && e(t)
                }
                ), t))
            }
            ,
            e => t => new Promise(( (a, s) => {
                n({
                    params: e,
                    resolver: {
                        reject: s,
                        resolve: a,
                        signal: t
                    }
                })
            }
            ))
        }
    }
    ,
    57593: (e, t, a) => {
        "use strict";
        a.d(t, {
            N0: () => l,
            m7: () => i,
            sE: () => o
        });
        var s = a(58576)
          , n = a(81621)
          , r = a(20028);
        const i = (e, {ignoreSharedStreakPrivacy: t=!1}={}) => !(0,
        r.pN)(e) && (0,
        n.VY)(e) && (t || !e.privacySettings.includes("DISABLE_SHARED_STREAK"))
          , o = e => e.filter((e => !(e.self.hasAcknowledgedEnd || null === e.endTimestamp && ((0,
        s.Kp)("Ended streak has null endTimestamp", {
            data: {
                matchId: e.matchId
            },
            sample: .01
        }),
        1))))
          , l = e => void 0 === e.matchInfo ? [] : e.matchInfo.pendingMatches.filter(( ({other: t, self: a}) => {
            var s;
            return !1 === a.isConfirmed && !0 !== (null === (s = e.seenInvites) || void 0 === s ? void 0 : s.includes(t.userId))
        }
        ))
    }
    ,
    35506: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dw: () => w,
            Go: () => E,
            HI: () => y,
            O4: () => I,
            PX: () => v,
            YR: () => S,
            aH: () => h,
            vc: () => b,
            x8: () => k
        });
        var s = a(40893)
          , n = a(59510)
          , r = a(18867)
          , i = a(96195)
          , o = a(63956)
          , l = a(40539)
          , c = a(75532)
          , d = a(68903)
          , u = a(19172)
          , g = a(74901)
          , p = a(58576)
          , m = a(79465);
        const h = (0,
        i.d)("friendStreakData", ( () => {
            const e = (0,
            g.u)("friendStreakData").withDefault({}).withReducer(( (e={}, t) => {
                var a, s;
                if ("override" === t.type)
                    return "function" == typeof t.value ? t.value(e) : t.value;
                if ("network-failure" === t.result.type)
                    return (0,
                    p.Kp)("Failed to load friend streak match data", {
                        data: {
                            queryType: t.queryKey[1]
                        },
                        ex: t.result.ex,
                        sample: .01
                    }),
                    e;
                const n = null === (a = t.result.value.matchInfo) || void 0 === a ? void 0 : a.pendingMatches;
                return {
                    ...e,
                    ...t.result.value,
                    ...void 0 === n ? {} : {
                        seenInvites: null === (s = e.seenInvites) || void 0 === s ? void 0 : s.filter((e => n.some((t => t.other.userId === e))))
                    }
                }
            }
            )).build();
            return (0,
            u.f)("friendStreakData.withOptimisticUpdates").derived((t => {
                const a = t(e);
                return {
                    ...a,
                    inFlightActions: [],
                    optimisticUpdated: a
                }
            }
            )).write(( ({}, t, a) => t(e, a))).build()
        }
        )(), (function*(e) {
            if (e.untracked(n.v))
                return;
            const t = e.untracked(s.DW);
            void 0 !== t && (yield{
                queryFn: ([e]) => async () => {
                    const t = (await r.i_.getFriendStreakMatchInfo(e.userId)).friendsStreak
                      , a = t => {
                        const a = t.usersInMatch.find((t => t.userId === e.userId))
                          , s = t.usersInMatch.find((t => t.userId !== e.userId));
                        if (void 0 === a || void 0 === s)
                            throw Error("Match does not contain both users");
                        return {
                            ...t,
                            other: s,
                            self: a
                        }
                    }
                    ;
                    return {
                        matchInfo: {
                            confirmedMatches: t.confirmedMatches.map(a),
                            emptySlots: t.emptySlots,
                            endedConfirmedMatches: t.endedConfirmedMatches.map(a),
                            pendingMatches: t.pendingMatches.map(a)
                        }
                    }
                }
                ,
                queryKey: [{
                    userId: t
                }, "matchInfo"]
            },
            yield{
                queryFn: ([e]) => async () => ({
                    potentialMatches: (await r.i_.getFriendStreakPotentialMatches(e.userId)).friendsStreak.potentialMatches
                }),
                queryKey: [{
                    userId: t
                }, "potentialMatches"]
            })
        }
        ))
          , _ = {
            accept: e => ({
                apply: () => t => ({
                    ...t,
                    matchInfo: void 0 === t.matchInfo ? void 0 : {
                        ...t.matchInfo,
                        confirmedMatches: [...t.matchInfo.confirmedMatches, {
                            ...e.match,
                            confirmTimestamp: Date.now(),
                            self: {
                                ...e.match.self,
                                isConfirmed: !0
                            }
                        }],
                        emptySlots: t.matchInfo.emptySlots - 1,
                        pendingMatches: t.matchInfo.pendingMatches.filter((t => t.matchId !== e.match.matchId))
                    }
                }),
                execute: async () => {
                    await r.i_.patchFriendStreakMatch(e.match.self.userId, e.match.matchId)
                }
                ,
                getInProgressKey: () => ["accept", e.match.matchId]
            }),
            acknowledgeEnd: e => ({
                apply: () => t => ({
                    ...t,
                    matchInfo: void 0 === t.matchInfo ? void 0 : {
                        ...t.matchInfo,
                        endedConfirmedMatches: t.matchInfo.endedConfirmedMatches.filter((t => t.matchId !== e.match.matchId))
                    }
                }),
                execute: async () => {
                    await r.i_.acknowledgeFriendStreakEnd(e.match.self.userId, e.match.matchId)
                }
                ,
                getInProgressKey: () => ["acknowledgeEnd", e.match.matchId]
            }),
            decline: e => ({
                apply: () => t => ({
                    ...t,
                    matchInfo: void 0 === t.matchInfo ? void 0 : {
                        ...t.matchInfo,
                        pendingMatches: t.matchInfo.pendingMatches.filter((t => t.matchId !== e.match.matchId))
                    }
                }),
                execute: async () => {
                    await r.i_.deleteFriendStreakMatch(e.match.self.userId, e.match.matchId)
                }
                ,
                getInProgressKey: () => ["decline", e.match.matchId]
            }),
            invite: e => ({
                apply: (...[,t]) => a => {
                    var s;
                    return {
                        ...a,
                        matchInfo: void 0 === a.matchInfo ? void 0 : {
                            ...a.matchInfo,
                            emptySlots: a.matchInfo.emptySlots - 1,
                            pendingMatches: void 0 === t ? a.matchInfo.pendingMatches : [...a.matchInfo.pendingMatches, {
                                confirmId: null,
                                confirmTimestamp: null,
                                endTimestamp: null,
                                inviteTimestamp: e.now,
                                matchId: t,
                                other: {
                                    ...e.invitee,
                                    hasAcknowledgedEnd: void 0,
                                    isConfirmed: !1
                                },
                                self: {
                                    ...e.self,
                                    hasAcknowledgedEnd: void 0,
                                    isConfirmed: !0
                                }
                            }]
                        },
                        potentialMatches: null === (s = a.potentialMatches) || void 0 === s ? void 0 : s.filter((t => t.userId !== e.invitee.userId))
                    }
                }
                ,
                execute: async () => {
                    var t, a;
                    const s = null === (a = null === (t = (await r.i_.postFriendStreakMatch(e.self.userId, e.invitee.userId)).friendsStreak.success) || void 0 === t ? void 0 : t.find((t => t.targetUserIds[0] === e.invitee.userId))) || void 0 === a ? void 0 : a.matchId;
                    if (void 0 === s)
                        throw Error("Failed to create friend streak invitation");
                    return s
                }
                ,
                getInProgressKey: () => ["invite", e.invitee.userId]
            }),
            remove: e => ({
                apply: () => t => ({
                    ...t,
                    matchInfo: void 0 === t.matchInfo ? void 0 : {
                        ...t.matchInfo,
                        confirmedMatches: t.matchInfo.confirmedMatches.filter((t => t.matchId !== e.match.matchId)),
                        emptySlots: t.matchInfo.emptySlots + 1,
                        endedConfirmedMatches: [...t.matchInfo.endedConfirmedMatches, {
                            ...e.match,
                            self: {
                                ...e.match.self,
                                hasAcknowledgedEnd: e.markAsAcknowledged
                            }
                        }]
                    }
                }),
                execute: async () => {
                    await r.i_.deleteFriendStreakMatch(e.match.self.userId, e.match.matchId),
                    e.markAsAcknowledged && await r.i_.acknowledgeFriendStreakEnd(e.match.self.userId, e.match.matchId)
                }
                ,
                getInProgressKey: () => ["remove", e.match.matchId]
            }),
            uninvite: e => ({
                apply: () => t => ({
                    ...t,
                    matchInfo: void 0 === t.matchInfo ? void 0 : {
                        ...t.matchInfo,
                        emptySlots: t.matchInfo.emptySlots + 1,
                        pendingMatches: t.matchInfo.pendingMatches.filter((t => t.matchId !== e.match.matchId))
                    },
                    potentialMatches: void 0 === t.potentialMatches ? void 0 : [...t.potentialMatches, e.match.other]
                }),
                execute: async () => {
                    await r.i_.deleteFriendStreakMatch(e.match.self.userId, e.match.matchId)
                }
                ,
                getInProgressKey: () => ["uninvite", e.match.other.userId]
            })
        }
          , v = _
          , f = (0,
        o.j)()((e => ({
            applyOptimisticUpdate: t => (0,
            l.MF)(_)(e)(t),
            execute: (0,
            l.jR)(_)(e),
            mergeKey: ( () => {
                switch (e.type) {
                case "accept":
                case "decline":
                    return ["incoming", e.match.matchId];
                case "acknowledgeEnd":
                    return ["acknowledgeEnd", e.match.matchId];
                case "invite":
                    return ["outgoing", e.self.userId, e.invitee.userId];
                case "remove":
                    return ["remove", e.match.matchId];
                case "uninvite":
                    return ["outgoing", e.match.self.userId, e.match.other.userId];
                default:
                    return void (0,
                    d.RJ)(e)
                }
            }
            )(),
            mergeMutation: () => e,
            resolveQueryConflict: (e, t) => {
                switch (e[1]) {
                case "matchInfo":
                    return "invalidated";
                case "potentialMatches":
                    return "in-flight" === t ? "invalidated" : "unaffected";
                default:
                    return (0,
                    d.RJ)(e[1]),
                    "unaffected"
                }
            }
        })))
          , S = (0,
        u.f)("acceptFriendStreakAtom").write(( (e, t, a, s) => {
            const {matchInfo: n} = e(h).value
              , r = null == n ? void 0 : n.pendingMatches.find((e => e.matchId === a));
            if (void 0 === r)
                throw Error("Could not find match to accept");
            (0,
            m.track)("friend_streak_match_invite_accept_tap", {
                match_id: a,
                sender_user_id: r.other.userId,
                source: s
            }),
            t(h, new f({
                match: r,
                now: Date.now(),
                type: "accept"
            }))
        }
        )).build()
          , y = (0,
        u.f)("acknowledgeAllFriendStreakEnd").write(( (e, t) => {
            const {matchInfo: a} = e(h).value
              , s = null == a ? void 0 : a.endedConfirmedMatches.filter((e => !e.self.hasAcknowledgedEnd));
            null == s || s.forEach((e => {
                t(h, new f({
                    match: e,
                    type: "acknowledgeEnd"
                }))
            }
            ))
        }
        )).build()
          , E = (0,
        u.f)("declineFriendStreakAtom").write(( (e, t, a, s) => {
            const {matchInfo: n} = e(h).value
              , r = null == n ? void 0 : n.pendingMatches.find((e => e.matchId === a));
            if (void 0 === r)
                throw Error("Could not find match to decline");
            (0,
            m.track)("friend_streak_match_invite_decline_tap", {
                match_id: a,
                sender_user_id: r.other.userId,
                source: s
            }),
            t(h, new f({
                match: r,
                now: Date.now(),
                type: "decline"
            }))
        }
        )).build()
          , b = (0,
        u.f)("inviteFriendStreakAtom").write(( (e, t, a, n) => {
            var r, i;
            const o = e(s.LF);
            if (void 0 === o.id)
                throw Error("Logged out user cannot send a friend streak invite");
            const {potentialMatches: l} = e(h).value
              , c = null == l ? void 0 : l.find((e => e.userId === a));
            if (void 0 === c)
                throw Error("Could not find user to invite to friend streak");
            (0,
            m.track)("friend_streak_match_invite_send_tap", {
                receiving_user_id: a,
                source: n
            }),
            t(h, new f({
                invitee: c,
                now: Date.now(),
                self: {
                    name: null !== (i = null !== (r = o.name) && void 0 !== r ? r : o.username) && void 0 !== i ? i : "",
                    picture: o.picture,
                    userId: o.id
                },
                type: "invite"
            }))
        }
        )).build()
          , I = (0,
        u.f)("markInviteSeen").write(( ({}, e, t) => {
            e(...(0,
            c.p)(h, (e => {
                var a;
                return {
                    ...e,
                    seenInvites: [...null !== (a = e.seenInvites) && void 0 !== a ? a : [], ...t.filter((t => {
                        var a;
                        return !0 !== (null === (a = e.seenInvites) || void 0 === a ? void 0 : a.includes(t))
                    }
                    ))]
                }
            }
            ), "unaffected", "unaffected"))
        }
        )).build()
          , w = (0,
        u.f)("removeFriendStreakAtom").write(( (e, t, a, s) => {
            const {matchInfo: n} = e(h).value
              , r = null == n ? void 0 : n.confirmedMatches.find((e => e.matchId === a));
            if (void 0 === r)
                throw Error("Could not find match to remove");
            t(h, new f({
                markAsAcknowledged: s,
                match: r,
                type: "remove"
            }))
        }
        )).build()
          , k = (0,
        u.f)("uninviteFriendStreakInvitation").write(( (e, t, a, n) => {
            if (void 0 === e(s.DW))
                throw Error("Logged out user cannot send a friend streak invite");
            const {matchInfo: r} = e(h).value
              , i = null == r ? void 0 : r.pendingMatches.find((e => e.other.userId === a));
            if (void 0 === i)
                throw Error("Could not find match to uninvite");
            (0,
            m.track)("friend_streak_match_invite_rescind_tap", {
                receiving_user_id: a,
                source: n
            }),
            t(h, new f({
                match: i,
                type: "uninvite"
            }))
        }
        )).build()
    }
    ,
    21025: (e, t, a) => {
        "use strict";
        a.d(t, {
            Co: () => R,
            XN: () => k,
            g4: () => w,
            iJ: () => T,
            kv: () => y,
            qE: () => C
        });
        var s = a(80254)
          , n = a(40893)
          , r = a(59510)
          , i = a(18867)
          , o = a(29581)
          , l = a(96195)
          , c = a(17135)
          , d = a(1897)
          , u = a(53396)
          , g = a(20821)
          , p = a(35506)
          , m = a(68903)
          , h = a(20716)
          , _ = a(19172)
          , v = a(74901)
          , f = a(58576);
        const S = s.ZP.once(( () => (0,
        _.f)("currentDate").primitive((0,
        c.Kc)() / 1e3).onMount((e => {
            const t = setInterval(( () => {
                e((0,
                c.Kc)() / 1e3)
            }
            ), 6e4);
            return () => clearInterval(t)
        }
        )).build()))
          , y = (0,
        l.d)("friendStreakPartnerData", (0,
        v.u)("friendStreakPartnerData").withDefault({}).withReducer(( (e={}, t) => {
            var a;
            if ("override" === t.type)
                return "function" == typeof t.value ? t.value(e) : t.value;
            if ("network-failure" === t.result.type)
                return (0,
                i.Hx)(t.result.ex) && 500 === (null === (a = t.result.ex.response) || void 0 === a ? void 0 : a.status) || (0,
                f.Kp)("Failed to load friend streak partner data", {
                    data: {
                        queryType: t.queryKey[1]
                    },
                    ex: t.result.ex,
                    sample: .01
                }),
                e;
            const s = t.queryKey[1].userId;
            switch (t.result.value.type) {
            case "partnerData":
                return {
                    ...e,
                    [s]: {
                        ...e[s],
                        partnerLastExtendedDate: void 0 !== t.result.value.summary && t.result.value.summary.streakExtended ? t.result.value.summary.date : "not-recently"
                    }
                };
            case "matchData":
                {
                    const {streakData: a} = t.result.value;
                    return void 0 === a ? {
                        ...e,
                        [s]: {
                            endDate: void 0,
                            streakLength: void 0,
                            ...e[s]
                        }
                    } : {
                        ...e,
                        [s]: {
                            ...e[s],
                            confirmId: a.confirmId,
                            endDate: a.endDate,
                            hasActiveStreak: a.hasActiveStreak,
                            lastExtendedDate: a.lastExtendedDate,
                            streakLength: a.streakLength
                        }
                    }
                }
            default:
                return (0,
                m.RJ)(t.result.value),
                e
            }
        }
        )).build(), (function*(e) {
            if (e.untracked(r.v))
                return;
            const t = e(p.aH)
              , a = e.untracked(S());
            if (void 0 !== t.matchInfo)
                for (const e of t.matchInfo.confirmedMatches)
                    yield{
                        queryFn: E,
                        queryKey: ["matchData", {
                            confirmId: e.confirmId,
                            matchId: e.matchId,
                            todayUtc: a,
                            userId: e.other.userId
                        }]
                    },
                    yield{
                        queryFn: E,
                        queryKey: ["partnerData", {
                            todayUtc: a,
                            userId: e.other.userId
                        }]
                    }
        }
        ), {
            blockOnDependencies: !1
        })
          , E = e => {
            switch (e[0]) {
            case "matchData":
                return I(e[1]);
            case "partnerData":
                return b(e[1]);
            default:
                throw (0,
                m.RJ)(e),
                Error("Invalid key")
            }
        }
          , b = ({todayUtc: e, userId: t}) => async () => ({
            summary: (await i.Vi.getUserXPSummaries(t, (0,
            c.zO)(e))).find((t => t.date === e)),
            type: "partnerData"
        })
          , I = ( () => {
            const e = (0,
            g.Q)((0,
            u.S)(( () => [null, null]), ( () => null), (0,
            d.g)((async ({batch: e, resolveIndexField: t}) => {
                const a = Object.keys(e)
                  , s = await i.i_.getFriendStreakMatchData(a);
                for (const e of s.friendsStreak)
                    t(e.matchId, e)
            }
            ))));
            return ({confirmId: t, matchId: a, todayUtc: s}) => async n => {
                if (null === t)
                    return {
                        streakData: void 0,
                        type: "matchData"
                    };
                const {hasActiveStreak: r, streaks: i} = await e([a, null])(n)
                  , o = i.find((e => e.confirmId === t));
                return void 0 === o ? {
                    streakData: void 0,
                    type: "matchData"
                } : {
                    streakData: {
                        confirmId: t,
                        endDate: void 0 === o.endDate ? void 0 : (0,
                        c.g8)((0,
                        c.QB)(o.endDate)),
                        hasActiveStreak: r,
                        lastExtendedDate: (0,
                        c.g8)((0,
                        c.QB)(o.lastExtendedDate)),
                        lastFetchedDate: s,
                        streakLength: o.streakLength
                    },
                    type: "matchData"
                }
            }
        }
        )()
          , w = (0,
        _.f)("friendStreakCombinedData").derivedTracked((e => {
            var t;
            const a = null === (t = e(p.aH).matchInfo) || void 0 === t ? void 0 : t.confirmedMatches
              , s = e(y)
              , n = e.untracked(S());
            return void 0 === a ? [] : a.flatMap((e => {
                var t;
                const a = s[e.other.userId];
                if (void 0 !== (null !== (t = null == a ? void 0 : a.confirmId) && void 0 !== t ? t : void 0) && (null == a ? void 0 : a.confirmId) === e.confirmId && !1 === (null == a ? void 0 : a.hasActiveStreak))
                    return [];
                if (void 0 === (null == a ? void 0 : a.confirmId) || a.confirmId !== e.confirmId || void 0 === a.streakLength || void 0 === a.lastExtendedDate || void 0 === a.partnerLastExtendedDate)
                    return [{
                        match: e,
                        streak: void 0
                    }];
                const r = a.lastExtendedDate === n;
                return [{
                    match: e,
                    streak: {
                        alreadyExtended: r,
                        nudgedToday: void 0 !== a.lastNudgeUTCTimestamp && a.lastNudgeUTCTimestamp === n,
                        readyForExtension: !r && a.partnerLastExtendedDate === n,
                        streakLength: a.streakLength
                    }
                }]
            }
            ))
        }
        )).build()
          , k = (e, t) => e.map((e => {
            if (void 0 === e.streak)
                return {
                    match: e.match,
                    streak: e.streak
                };
            const a = !e.streak.alreadyExtended && e.streak.readyForExtension && t;
            return {
                match: e.match,
                streak: {
                    extendedToday: e.streak.alreadyExtended || a,
                    friendExtendedToday: e.streak.readyForExtension,
                    nudgedToday: e.streak.nudgedToday,
                    streakLength: e.streak.streakLength + (a ? 1 : 0)
                }
            }
        }
        ))
          , T = e => e.every((e => void 0 !== e.streak))
          , C = (0,
        _.f)("activeFriendStreakData").derivedTracked((e => k(e(w), e.untracked(n.oo)))).build()
          , R = ( () => {
            const e = (0,
            _.f)("cleanupEndedStreaks").derivedTracked((e => {
                var t;
                if ("idle" !== e.untracked((0,
                o.vL)(y)))
                    return;
                const a = e.untracked(S())
                  , s = null === (t = e(p.aH).matchInfo) || void 0 === t ? void 0 : t.confirmedMatches
                  , n = e(y);
                return null == s ? void 0 : s.flatMap((e => {
                    var t;
                    const s = n[e.other.userId];
                    return (null == s ? void 0 : s.lastFetchedDate) !== a || void 0 === (null !== (t = null == s ? void 0 : s.confirmId) && void 0 !== t ? t : void 0) || (null == s ? void 0 : s.confirmId) !== e.confirmId || !1 !== (null == s ? void 0 : s.hasActiveStreak) ? [] : [{
                        match: e,
                        partner: s
                    }]
                }
                ))
            }
            )).build();
            return (0,
            h.it)(e, (t => t.sub(e, ( () => {
                const a = t.get(e).value
                  , s = t.get(n.LF);
                null == a || a.forEach(( ({match: e, partner: a}) => {
                    const n = ( () => {
                        if (void 0 === a.endDate)
                            return (0,
                            f.Kp)("Partner end date is undefined", {
                                data: {
                                    matchId: e.matchId
                                },
                                sample: .01
                            }),
                            !1;
                        const t = (0,
                        c.v4)((0,
                        c.zO)(a.endDate), 1)
                          , n = s.xpSummaries[(0,
                        c.cz)((0,
                        c.zO)(t))];
                        return void 0 === n || n.repaired || !n.streakExtended && !n.frozen
                    }
                    )();
                    t.set(p.Dw, e.matchId, n)
                }
                ))
            }
            )))),
            e
        }
        )()
    }
    ,
    94171: (e, t, a) => {
        "use strict";
        a.d(t, {
            Nh: () => A,
            wS: () => D,
            Dw: () => F,
            py: () => N,
            xH: () => x,
            Mb: () => P,
            RL: () => C,
            rl: () => R,
            fw: () => M,
            N7: () => L,
            ed: () => j,
            ET: () => U,
            Ck: () => B,
            qh: () => W,
            WV: () => Z,
            Fy: () => $,
            _Q: () => H,
            ML: () => G,
            qt: () => q,
            Vz: () => z,
            JD: () => V,
            BQ: () => Q
        });
        const s = a.p + "images/goals/7170947038eaa6cba13c7ee7d6c14e35.svg"
          , n = a.p + "images/goals/b5dc107d1cf9cea867391174a8f3185b.svg"
          , r = a.p + "images/goals/2f657380071df22fcb537fd294a42ae7.svg"
          , i = a.p + "images/goals/645d8ee266b41bb009986bcf057bdddd.svg"
          , o = a.p + "images/goals/d50a64c07d6a558abecc5eaf8481cd80.svg";
        var l = a(20770);
        const c = a.p + "images/goals/f874b6952352c8466b192d0a0d6ddc28.svg"
          , d = a.p + "images/goals/daa802c6eebc41858b704ee001d05f0c.svg"
          , u = a.p + "images/goals/5ac5f9a9c076d81536ee0f85ac88e4c2.svg"
          , g = a.p + "images/goals/d8e2b76c5f925390f22c39c17f752e84.svg"
          , p = a.p + "images/goals/b39589bb4696d406be1ec194e3550d29.svg"
          , m = a.p + "images/goals/81ee0dbf33ffd889da4f899c2ec6f36b.svg"
          , h = a.p + "images/goals/a9dcc1aaf98e3e6a030e243415a28850.svg"
          , _ = a.p + "images/goals/e0d5a67550d87239e9b604e7ba9603b6.svg"
          , v = a.p + "images/goals/00b59b3190fddbc40ae4eb1a1b81765f.svg"
          , f = a.p + "images/goals/6c46b3c45da29cd15b5c797f908e07d3.svg"
          , S = a.p + "images/goals/59de0be96dd57b30e3e44f9e1396827e.svg"
          , y = a.p + "images/goals/dd8f074a2a72986c2c0b115623c6dc57.svg";
        var E = a(17135)
          , b = a(64115)
          , I = a(68903)
          , w = a(95940)
          , k = a(55829)
          , T = a(81621);
        const C = 216e5
          , R = 216e6
          , L = ["hiFlex", "hiDreamTeam", "hiHighFive", "hiAllStar"]
          , P = ["nudgeFlex", "nudgeClaws", "nudgeHighFive", "nudgeSadDuo"]
          , A = 30
          , D = "friends_quest_complete"
          , O = "FRIENDS_QUESTS"
          , N = 20
          , x = "xp_boost_15_gift"
          , M = 2
          , F = {
            avatarUrl: T.tU,
            displayName: "Sample User",
            historicalStats: [{
                goalCategory: "FRIENDS_QUEST",
                streak: 2
            }],
            progressIncrements: [100, 0, 0, 0, 0],
            userId: 0
        }
          , U = () => {
            const e = (0,
            b.ky)("debugFriendsQuestState");
            if (e && Object.values(k.S).some((t => t === e)))
                return {
                    friendProgress: F,
                    goalId: "sample_xp_goal",
                    metric: "XP",
                    ownProgress: 150,
                    questId: "sample_xp_quest",
                    questPoints: 5,
                    status: e,
                    threshold: 500,
                    totalProgress: 250,
                    winStreak: 1
                }
        }
          , H = e => (0,
        E.oE)({
            currentTime: e,
            targetHour: 17,
            targetWeekday: 0
        })
          , G = e => (0,
        E.oE)({
            currentTime: e,
            targetHour: 17,
            targetWeekday: 2
        })
          , V = e => H(e) < G(e)
          , z = (e, t) => void 0 !== t && V(e) && t.totalProgress < t.threshold
          , B = (e, t) => void 0 !== e ? e.totalProgress >= e.threshold || e.status === k.S.FINISHED ? "belowDailyQuest" : "aboveDailyQuest" : 0 === t ? "none" : "belowDailyQuest"
          , j = e => {
            var t;
            return null === (t = null == e ? void 0 : e.quests) || void 0 === t ? void 0 : t.find((e => e.goalCategory === O && [k.S.ACTIVE, k.S.FINISHED].includes(e.questState)))
        }
          , $ = e => {
            var t, a;
            return null !== (a = null === (t = e.find((e => e.goalCategory === O))) || void 0 === t ? void 0 : t.streak) && void 0 !== a ? a : 0
        }
          , Z = (e, t) => {
            switch (e) {
            case "LESSONS":
                return (0,
                w._i)(30518, {
                    threshold: t
                });
            case "NINETY_ACCURACY_LESSONS":
                return (0,
                w._i)(35010, {
                    threshold: t
                });
            case "PERFECT_LESSONS":
                return (0,
                w._i)(35007, {
                    threshold: t
                });
            case "XP":
                return (0,
                w._i)(35008, {
                    threshold: t
                });
            default:
                throw (0,
                I.RJ)(e),
                Error("Unsupported friends quest metric")
            }
        }
          , W = (e, t) => {
            switch (e) {
            case "LESSONS":
            case "NINETY_ACCURACY_LESSONS":
                return (0,
                w._i)(35909, {
                    num: t
                });
            case "PERFECT_LESSONS":
                return (0,
                w._i)(35759, {
                    num: t
                });
            case "XP":
                return (0,
                w._i)(28544, {
                    num: t
                });
            default:
                throw (0,
                I.RJ)(e),
                Error("Unsupported friends quest metric")
            }
        }
          , q = ({isActive: e=!0, isDark: t=!1, nudgeType: a}) => {
            switch (a) {
            case "hiAllStar":
                return e ? u : t ? c : d;
            case "hiDreamTeam":
                return e ? m : t ? g : p;
            case "hiFlex":
            case "nudgeFlex":
                return e ? r : t ? s : n;
            case "hiHighFive":
            case "nudgeHighFive":
                return e ? l : t ? i : o;
            case "nudgeClaws":
                return e ? v : t ? h : _;
            case "nudgeSadDuo":
                return e ? y : t ? f : S;
            default:
                return (0,
                I.RJ)(a),
                ""
            }
        }
          , Q = e => (0,
        T.VY)(e) && !(e.privacySettings || []).includes("DISABLE_FRIENDS_QUESTS")
    }
    ,
    94358: (e, t, a) => {
        "use strict";
        a.d(t, {
            IM: () => u,
            JI: () => l,
            nP: () => d,
            sT: () => g
        });
        var s = a(41461)
          , n = a(67116)
          , r = a(79465);
        let i, o = !1, l = !1;
        const c = new Promise((e => {
            i = e
        }
        ));
        window._fs_ready = () => i();
        const d = () => {
            var e;
            try {
                return null !== (e = s.Hr(!0)) && void 0 !== e ? e : ""
            } catch {
                return ""
            }
        }
          , u = async e => {
            s.S1({
                debug: !1,
                devMode: !1,
                orgId: "QZHJ3"
            }),
            o = !0,
            s.yV(`${e}`, {
                ui_language_str: n.h9
            }),
            s.ur(),
            l = !0,
            await c;
            const t = s.Hr();
            t && (0,
            r.track)("fullstory_record_start", {
                url: t
            })
        }
          , g = () => {
            o && (s.IG(),
            l = !1)
        }
    }
    ,
    41831: (e, t, a) => {
        "use strict";
        a.d(t, {
            nU: () => R,
            bf: () => T,
            xD: () => C,
            Ch: () => O,
            Oj: () => L,
            oh: () => P,
            VR: () => Z,
            gl: () => x,
            wh: () => F,
            ng: () => N,
            uT: () => U,
            FF: () => A,
            cV: () => Q,
            Ul: () => K,
            Oy: () => Y,
            wU: () => z,
            iL: () => W,
            n0: () => D,
            ie: () => M,
            B_: () => J,
            i3: () => V
        });
        var s = a(80254)
          , n = a(73520);
        const r = a.p + "images/goals/39f13d2de304cad2ac2f88b31a7e2ff4.svg"
          , i = a.p + "images/goals/2b5a211d830a24fab92e291d50f65d1d.svg"
          , o = a.p + "images/goals/8787ab04a1279f1c7ca12201834e90f7.svg"
          , l = a.p + "images/goals/1cadcf84c054b52aa7eaaa794a7d64bf.svg"
          , c = a.p + "images/goals/a0cb3348a6747c752f7c8270b0af0b69.svg"
          , d = a.p + "images/goals/974e284761265b0eb6c9fd85243c5c4b.svg"
          , u = a.p + "images/goals/b519a0beabb2deedd5767f987e3f0a74.svg"
          , g = a.p + "images/goals/62bb241121ae018b28240eebffb9fc4a.svg";
        var p = a(17135)
          , m = a(64115)
          , h = a(68903)
          , _ = a(95940)
          , v = a(58576)
          , f = a(23275)
          , S = a(89260)
          , y = a(79465)
          , E = a(11811)
          , b = a(81621)
          , I = a(97106);
        const w = ["daily_goal_daily_quest", "perfect_lessons_core_daily_quest", "perfect_lessons_hard_daily_quest", "ninety_accuracy_lessons_core_daily_quest", "ninety_accuracy_lessons_hard_daily_quest", "eighty_accuracy_lessons_core_daily_quest", "eighty_accuracy_lessons_hard_daily_quest", "combo_xp_core_daily_quest", "combo_xp_hard_daily_quest", "five_in_a_row_core_daily_quest", "five_in_a_row_hard_daily_quest", "ten_in_a_row_hard_daily_quest", "speak_challenges_hard_daily_quest", "listen_challenges_hard_daily_quest", "time_spent_core_daily_quest", "time_spent_hard_daily_quest", "extend_streak_daily_quest"]
          , k = ["XP", "LESSONS", "NINETY_ACCURACY_LESSONS", "PERFECT_LESSONS", "QUESTS", "EIGHTY_ACCURACY_LESSONS", "COMBO_XP", "FIVE_CORRECT_IN_A_ROW", "TEN_CORRECT_IN_A_ROW", "SPEAK_CHALLENGES", "LISTEN_CHALLENGES", "EXTEND_STREAK", "START_STREAK", "SECONDS_SPENT_LEARNING"]
          , T = ["DAILY_QUEST_FIRST", "DAILY_QUEST_SECOND", "DAILY_QUEST_THIRD"]
          , C = ["DAILY", "CORE", "HARD"]
          , R = "2023_11_monthly_challenge"
          , L = (e, t) => {
            const a = {
                metricUpdates: []
            };
            return k.forEach((s => {
                const n = ( (e, t, a) => {
                    const s = e.challenges.filter((e => !e.skipped))
                      , n = (r = s).reduce(( (e, t) => e + (t.correct ? 1 : 0)), 0) / r.length * 100;
                    var r;
                    switch (t) {
                    case "XP":
                    case "QUESTS":
                        return;
                    case "LESSONS":
                        return [E.FF.SectionTest, E.FF.UnitTest].includes(e.type) && e.failed ? void 0 : {
                            metric: t,
                            quantity: 1
                        };
                    case "NINETY_ACCURACY_LESSONS":
                        return n >= 90 ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "EIGHTY_ACCURACY_LESSONS":
                        return n >= 80 ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "PERFECT_LESSONS":
                        return n >= 100 ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "COMBO_XP":
                        return e.maxInLessonStreak ? {
                            metric: t,
                            quantity: (0,
                            I.CT)(e.challenges.length, e.maxInLessonStreak)
                        } : void 0;
                    case "FIVE_CORRECT_IN_A_ROW":
                        return e.maxInLessonStreak && e.maxInLessonStreak >= 5 ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "TEN_CORRECT_IN_A_ROW":
                        return e.maxInLessonStreak && e.maxInLessonStreak >= 10 ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "SPEAK_CHALLENGES":
                        {
                            const e = (0,
                            S.bc)();
                            return {
                                metric: t,
                                quantity: s.filter((t => e.includes(t.type) && t.correct)).length
                            }
                        }
                    case "LISTEN_CHALLENGES":
                        {
                            const e = (0,
                            S.tq)();
                            return {
                                metric: t,
                                quantity: s.filter((t => e.includes(t.type) && t.correct)).length
                            }
                        }
                    case "EXTEND_STREAK":
                        return a.streakExtended ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "START_STREAK":
                        return a.streakStarted ? {
                            metric: t,
                            quantity: 1
                        } : void 0;
                    case "SECONDS_SPENT_LEARNING":
                        return a.timeSpent ? {
                            metric: t,
                            quantity: a.timeSpent
                        } : void 0;
                    default:
                        return void (0,
                        h.RJ)(t)
                    }
                }
                )(e, s, t);
                n && a.metricUpdates.push(n)
            }
            )),
            a
        }
          , P = (e, t) => {
            const a = {
                metricUpdates: []
            }
              , s = e.score / e.maxScore * 100;
            return a.metricUpdates = k.map((e => {
                switch (e) {
                case "LESSONS":
                    return {
                        metric: e,
                        quantity: 1
                    };
                case "EIGHTY_ACCURACY_LESSONS":
                    return {
                        metric: e,
                        quantity: s >= 80 ? 1 : 0
                    };
                case "NINETY_ACCURACY_LESSONS":
                    return {
                        metric: e,
                        quantity: s >= 90 ? 1 : 0
                    };
                case "PERFECT_LESSONS":
                    return {
                        metric: e,
                        quantity: s >= 100 ? 1 : 0
                    };
                case "EXTEND_STREAK":
                    return t.streakExtended ? {
                        metric: e,
                        quantity: 1
                    } : void 0;
                case "START_STREAK":
                    return t.streakStarted ? {
                        metric: e,
                        quantity: 1
                    } : void 0;
                case "SECONDS_SPENT_LEARNING":
                    return t.timeSpent ? {
                        metric: e,
                        quantity: t.timeSpent
                    } : void 0;
                case "XP":
                case "QUESTS":
                case "COMBO_XP":
                case "FIVE_CORRECT_IN_A_ROW":
                case "TEN_CORRECT_IN_A_ROW":
                case "SPEAK_CHALLENGES":
                case "LISTEN_CHALLENGES":
                    return;
                default:
                    return void (0,
                    h.RJ)(e)
                }
            }
            )).filter(h.$K),
            a
        }
          , A = e => {
            if (void 0 !== e.period.oneOff) {
                const t = (0,
                p.Ux)()
                  , a = (0,
                p.$$)(e.period.oneOff.start.year, e.period.oneOff.start.month - 1, e.period.oneOff.start.day)
                  , s = (0,
                p.$$)(e.period.oneOff.end.year, e.period.oneOff.end.month - 1, e.period.oneOff.end.day);
                if (a <= t && s > t)
                    return !0
            } else if (e.period.recurring) {
                const t = (0,
                p.Ux)()
                  , a = (0,
                p.$$)(e.period.recurring.start.year, e.period.recurring.start.month - 1, e.period.recurring.start.day)
                  , s = (0,
                p.$$)(e.period.recurring.until.year, e.period.recurring.until.month - 1, e.period.recurring.until.day);
                if (a <= t && s > t)
                    return !0
            }
            return !1
        }
          , D = (e, {includeListening: t, includeSpeaking: a, path: s, streak: n, xpSummaries: r}) => {
            var i, o;
            const l = (0,
            p.Ux)();
            switch (l.setDate(l.getDate() - 1),
            e.metric) {
            case "XP":
            case "LESSONS":
            case "PERFECT_LESSONS":
            case "NINETY_ACCURACY_LESSONS":
            case "EIGHTY_ACCURACY_LESSONS":
            case "COMBO_XP":
            case "FIVE_CORRECT_IN_A_ROW":
            case "TEN_CORRECT_IN_A_ROW":
            case "SECONDS_SPENT_LEARNING":
                return !0;
            case "SPEAK_CHALLENGES":
                return a && void 0 !== s && (0,
                f.U8)({
                    path: s
                }) > 0;
            case "LISTEN_CHALLENGES":
                return t;
            case "EXTEND_STREAK":
                return n >= 1 && null !== (o = null === (i = null == r ? void 0 : r[(0,
                p.cz)(l)]) || void 0 === i ? void 0 : i.frozen) && void 0 !== o && o;
            case "QUESTS":
            case "START_STREAK":
                return !1;
            default:
                return (0,
                h.RJ)(e.metric),
                !1
            }
        }
          , O = ({assignedQuestGoalIds: e, questEligibilityParams: t, schema: a, slotType: s}) => {
            const n = ( ({assignedQuestGoalIds: e, questEligibilityParams: t, schema: a, slotType: s}) => {
                const n = e.flatMap((e => H(e)));
                return a.filter((a => "DAILY_QUESTS" === a.category && D(a, t) && A(a) && !e.some((e => a.goalId === e)) && !n.some((e => e === a.goalId)) && G(s).some((e => e === a.goalId))))
            }
            )({
                assignedQuestGoalIds: e,
                questEligibilityParams: t,
                schema: a,
                slotType: s
            });
            if (0 === n.length)
                return void (0,
                v.Kp)(`No eligible quests found for slot type ${s}`);
            if ((0,
            m.gQ)("debugChooseSpecificDailyQuest")) {
                const e = (0,
                m.ky)("debugChooseSpecificDailyQuest");
                if (n.some((t => t.goalId === e)))
                    return e
            }
            let r = ( (e, t) => "DAILY" === e && void 0 !== t.find((e => "extend_streak_daily_quest" === e.goalId)) ? "extend_streak_daily_quest" : t[Math.floor(Math.random() * t.length)].goalId)(s, n);
            return r
        }
          , N = (e, t) => {
            var a, s;
            return null !== (s = null === (a = t.difficultyTiers) || void 0 === a ? void 0 : a[e].tiers[0]) && void 0 !== s ? s : t.threshold
        }
          , x = ({availableQuests: e, oldProgress: t, difficulty: a, updatedProgress: s}) => {
            const {newlyCompletedQuests: n, totalCompletedQuests: r} = B({
                difficulty: a,
                oldProgress: t,
                progress: s,
                quests: e
            })
              , i = {
                availableQuests: e,
                difficulty: a,
                oldProgress: t
            };
            return n > 0 ? {
                ...i,
                numQuestsCompleted: r,
                type: "dailyQuestComplete"
            } : e.some((e => {
                var n, r;
                const i = N(a, e);
                return M(e.goalId, null !== (n = s[e.goalId]) && void 0 !== n ? n : 0) >= i / 2 && M(e.goalId, null !== (r = t[e.goalId]) && void 0 !== r ? r : 0) < i / 2
            }
            )) ? {
                ...i,
                numQuestsCompleted: 0,
                type: "dailyQuestHalfway"
            } : e.every((e => {
                var a;
                return 0 === M(e.goalId, null !== (a = t[e.goalId]) && void 0 !== a ? a : 0)
            }
            )) && e.some((e => {
                var t;
                return M(e.goalId, null !== (t = s[e.goalId]) && void 0 !== t ? t : 0) > 0
            }
            )) ? {
                ...i,
                numQuestsCompleted: 0,
                type: "dailyQuestFirst"
            } : void 0
        }
          , M = (e, t) => ["time_spent_core_daily_quest", "time_spent_hard_daily_quest"].includes(e) ? Math.floor(t / 60) : t
          , F = e => {
            switch (e) {
            case "XP":
            case "COMBO_XP":
                return i;
            case "LESSONS":
                return l;
            case "FIVE_CORRECT_IN_A_ROW":
            case "TEN_CORRECT_IN_A_ROW":
                return d;
            case "PERFECT_LESSONS":
            case "NINETY_ACCURACY_LESSONS":
            case "EIGHTY_ACCURACY_LESSONS":
                return r;
            case "SPEAK_CHALLENGES":
                return u;
            case "LISTEN_CHALLENGES":
                return c;
            case "SECONDS_SPENT_LEARNING":
                return g;
            case "EXTEND_STREAK":
                return o;
            case "QUESTS":
            case "START_STREAK":
                return;
            default:
                return (0,
                h.RJ)(e)
            }
        }
          , U = (e, t) => {
            switch (e.metric) {
            case "XP":
                return (0,
                _._i)(35008, {
                    threshold: t
                });
            case "LESSONS":
                return (0,
                _._i)(30518, {
                    threshold: t
                });
            case "PERFECT_LESSONS":
                return (0,
                _._i)(35007, {
                    threshold: t
                });
            case "NINETY_ACCURACY_LESSONS":
                return (0,
                _._i)(35010, {
                    threshold: t
                });
            case "EIGHTY_ACCURACY_LESSONS":
                return (0,
                _._i)(38216, {
                    num: t,
                    threshold: t
                });
            case "COMBO_XP":
                return (0,
                _._i)(38217, {
                    num: t,
                    threshold: t
                });
            case "FIVE_CORRECT_IN_A_ROW":
                return (0,
                _._i)(38218, {
                    num: t,
                    threshold: t
                });
            case "TEN_CORRECT_IN_A_ROW":
                return (0,
                _._i)(38305, {
                    num: t,
                    threshold: t
                });
            case "SPEAK_CHALLENGES":
                return (0,
                _._i)(30522, {
                    threshold: t
                });
            case "LISTEN_CHALLENGES":
                return (0,
                _._i)(30521, {
                    threshold: t
                });
            case "SECONDS_SPENT_LEARNING":
                return (0,
                _._i)(39357, {
                    num: Math.floor(t / 60)
                });
            case "EXTEND_STREAK":
                return (0,
                _._i)(42618);
            case "QUESTS":
            case "START_STREAK":
                return;
            default:
                return void (0,
                v.vU)("Unsupported quest metric", {
                    data: {
                        metric: (0,
                        h.RJ)(e.metric)
                    },
                    once: !0
                })
            }
        }
          , H = e => {
            switch (e) {
            case "daily_goal_daily_quest":
            case "extend_streak_daily_quest":
            case "speak_challenges_hard_daily_quest":
            case "listen_challenges_hard_daily_quest":
                return [e];
            case "perfect_lessons_core_daily_quest":
            case "perfect_lessons_hard_daily_quest":
            case "ninety_accuracy_lessons_core_daily_quest":
            case "ninety_accuracy_lessons_hard_daily_quest":
            case "eighty_accuracy_lessons_core_daily_quest":
            case "eighty_accuracy_lessons_hard_daily_quest":
                return ["perfect_lessons_core_daily_quest", "perfect_lessons_hard_daily_quest", "ninety_accuracy_lessons_core_daily_quest", "ninety_accuracy_lessons_hard_daily_quest", "eighty_accuracy_lessons_core_daily_quest", "eighty_accuracy_lessons_hard_daily_quest"];
            case "combo_xp_core_daily_quest":
            case "combo_xp_hard_daily_quest":
            case "five_in_a_row_core_daily_quest":
            case "five_in_a_row_hard_daily_quest":
            case "ten_in_a_row_hard_daily_quest":
                return ["combo_xp_core_daily_quest", "combo_xp_hard_daily_quest", "five_in_a_row_core_daily_quest", "five_in_a_row_hard_daily_quest", "ten_in_a_row_hard_daily_quest"];
            case "time_spent_core_daily_quest":
            case "time_spent_hard_daily_quest":
                return ["time_spent_core_daily_quest", "time_spent_hard_daily_quest"];
            default:
                return (0,
                v.vU)("Unsupported quest", {
                    data: {
                        goalId: (0,
                        h.RJ)(e)
                    },
                    once: !0
                }),
                []
            }
        }
          , G = e => {
            switch (e) {
            case "DAILY":
                return ["daily_goal_daily_quest", "extend_streak_daily_quest"];
            case "CORE":
                return ["perfect_lessons_core_daily_quest", "ninety_accuracy_lessons_core_daily_quest", "eighty_accuracy_lessons_core_daily_quest", "combo_xp_core_daily_quest", "five_in_a_row_core_daily_quest", "time_spent_core_daily_quest"];
            case "HARD":
                return ["perfect_lessons_hard_daily_quest", "ninety_accuracy_lessons_hard_daily_quest", "eighty_accuracy_lessons_hard_daily_quest", "combo_xp_hard_daily_quest", "five_in_a_row_hard_daily_quest", "ten_in_a_row_hard_daily_quest", "speak_challenges_hard_daily_quest", "listen_challenges_hard_daily_quest", "time_spent_hard_daily_quest"];
            default:
                return (0,
                v.vU)("Unsupported daily quest slot type", {
                    data: {
                        slotType: (0,
                        h.RJ)(e)
                    },
                    once: !0
                }),
                []
            }
        }
          , V = ({difficulty: e, progress: t, oldProgress: a, quests: s}) => {
            s.forEach((s => {
                var n;
                const r = N(e, s);
                void 0 !== t && void 0 !== a && (null !== (n = t[s.goalId]) && void 0 !== n ? n : 0) >= r && a[s.goalId] < r && (0,
                y.track)("daily_quest_completed", {
                    daily_quest_difficulty: e,
                    daily_quest_name: s.goalId
                })
            }
            ))
        }
          , z = ({difficulty: e, oldProgress: t, progress: a, quest: s}) => {
            var n;
            const r = N(e, s);
            return void 0 !== a && void 0 !== t && (null !== (n = a[s.goalId]) && void 0 !== n ? n : 0) >= r && t[s.goalId] < r
        }
          , B = ({difficulty: e, progress: t, oldProgress: a, quests: s}) => s.reduce(( (s, n) => {
            var r, i, o;
            const l = N(e, n);
            return {
                newlyCompletedQuests: void 0 !== t && void 0 !== a && (null !== (r = t[n.goalId]) && void 0 !== r ? r : 0) >= l && a[n.goalId] < l ? s.newlyCompletedQuests + 1 : s.newlyCompletedQuests,
                totalCompletedQuests: (null !== (i = null == t ? void 0 : t[n.goalId]) && void 0 !== i ? i : 0) >= l || (null !== (o = null == a ? void 0 : a[n.goalId]) && void 0 !== o ? o : 0) >= l ? s.totalCompletedQuests + 1 : s.totalCompletedQuests
            }
        }
        ), {
            newlyCompletedQuests: 0,
            totalCompletedQuests: 0
        })
          , j = (e, t) => t ? e[t.goalId].metric : void 0
          , $ = (e, t) => e[t].quantity
          , Z = (e, t) => {
            const {dailyQuest: a, coreQuest: s, hardQuest: n} = e;
            return (W(t) ? [a, s, n] : [a]).filter(h.$K)
        }
          , W = e => {
            const t = (0,
            b.i5)(e)
              , a = (0,
            b.i5)(e) < 30;
            if ((0,
            m.ky)("debugAllDailyQuestsUnlocked", !1) || !a && !(0,
            b.EO)(e))
                return !0;
            const s = (0,
            b.pu)(e);
            return a ? t >= 6 : s >= 4
        }
          , q = e => (0,
        p.zM)(e).getUTCMonth() === (0,
        p.Ux)().getMonth() && (0,
        p.Ij)(e) < 4
          , Q = e => {
            if (!(0,
            b.EO)(e))
                return !1;
            const t = s.VO(e.xpSummaries).filter((e => void 0 !== e && e.gainedXp > 0)).sort(( (e, t) => t.date - e.date));
            if (t.length < 6)
                return !0;
            const a = t[5].date;
            return q(a)
        }
          , K = e => {
            if ((0,
            b.i5)(e) >= 30)
                return !1;
            if ((0,
            b.i5)(e) < 7)
                return !0;
            const t = (0,
            p.v4)((0,
            p.zM)(e.lastResurrectionTimestamp), 6)
              , a = s.VO(e.xpSummaries).filter((e => void 0 !== e && e.date >= t && e.gainedXp > 0)).sort(( (e, t) => e.date - t.date));
            if (a.length < 2)
                return !0;
            const n = a[1].date;
            return q(n)
        }
          , Y = e => !Q(e) && !K(e)
          , J = e => (t, a) => {
            const {dailyQuest: r, coreQuest: i, hardQuest: o} = (0,
            n.oV)(a())
              , l = (0,
            n.xm)(a())
              , c = ( ({currentProgress: e, dailyQuest: t, coreQuest: a, hardQuest: n, metricUpdatesWithXp: r, schema: i}) => {
                var o, l, c;
                const d = {}
                  , u = s.HK(r, "metric")
                  , g = j(i, t)
                  , p = j(i, a)
                  , m = j(i, n);
                return t && g && u[g] && (d[t.goalId] = $(u, g) + (null !== (o = null == e ? void 0 : e[t.goalId]) && void 0 !== o ? o : 0)),
                a && p && u[p] && (d[a.goalId] = $(u, p) + (null !== (l = null == e ? void 0 : e[a.goalId]) && void 0 !== l ? l : 0)),
                n && m && u[m] && (d[n.goalId] = $(u, m) + (null !== (c = null == e ? void 0 : e[n.goalId]) && void 0 !== c ? c : 0)),
                d
            }
            )({
                coreQuest: i,
                currentProgress: (0,
                n.EL)(a()),
                dailyQuest: r,
                hardQuest: o,
                metricUpdatesWithXp: e.metricUpdates,
                schema: l
            })
              , d = (0,
            n.D_)(a()).progressUpdate
              , u = ( () => {
                var e, t;
                const a = {};
                if (void 0 === d)
                    return c;
                for (const s of w)
                    void 0 === c[s] && void 0 !== d[s] || (a[s] = (null !== (e = d[s]) && void 0 !== e ? e : 0) + (null !== (t = c[s]) && void 0 !== t ? t : 0));
                return a
            }
            )();
            t({
                payload: {
                    timestamp: Date.now(),
                    updates: u
                },
                type: "SET_GOALS_PROGRESS_UPDATE"
            })
        }
    }
    ,
    8649: (e, t, a) => {
        "use strict";
        a.d(t, {
            EV: () => l,
            dH: () => c,
            hP: () => d
        });
        var s = a(80254)
          , n = a(98964);
        const r = "onGoogleLibraryLoad";
        let i, o = !1;
        const l = () => o
          , c = s.IH(( () => new Promise(( (e, t) => {
            window[r] = () => {
                try {
                    window.google.accounts.id.initialize({
                        callback: ({credential: e}) => {
                            null == i || i(e)
                        }
                        ,
                        client_id: "450298686065.apps.googleusercontent.com"
                    }),
                    o = !0,
                    e()
                } catch {
                    t(Error("Cannot initialize google sign in SDK"))
                }
            }
            ,
            (async () => {
                try {
                    await (0,
                    n.l)("https://accounts.google.com/gsi/client", r)
                } catch {
                    t(Error("Cannot load google sign in SDK"))
                }
            }
            )()
        }
        ))))
          , d = () => new Promise((e => {
            i = e
        }
        ))
    }
    ,
    67574: (e, t, a) => {
        "use strict";
        a.d(t, {
            F: () => g
        });
        var s = a(80231)
          , n = a(64184)
          , r = a(18867)
          , i = a(70326)
          , o = a(8649)
          , l = a(67899)
          , c = a(6986)
          , d = a(79465)
          , u = a(16086);
        const g = async ({allowLanguagelessUser: e=!1, disallowAutomaticRegister: t=!0, dispatch: a, history: g, onLoginSuccess: p, redirectPath: m, setSubmitting: h, via: _, age: v}) => {
            var f, S;
            const y = await (0,
            o.hP)();
            h && h();
            try {
                return await (async ({dispatch: e, googleIdToken: t, history: a, redirectPath: s, onLoginSuccess: r}) => {
                    await (0,
                    i.x4)({
                        googleIdToken: t
                    });
                    const o = e((0,
                    n.eY)({
                        onUserRetrieved: e => {
                            (0,
                            c.oV)("social", e)
                        }
                        ,
                        urlForStringsReload: s
                    }));
                    return await o,
                    r ? r() : a.push(s),
                    !0
                }
                )({
                    dispatch: a,
                    googleIdToken: y,
                    history: g,
                    onLoginSuccess: p,
                    redirectPath: m
                })
            } catch (o) {
                if (!(0,
                r.Hx)(o) || 401 !== (null === (f = o.response) || void 0 === f ? void 0 : f.status) && 403 !== (null === (S = o.response) || void 0 === S ? void 0 : S.status))
                    throw o;
                const c = (E = y,
                JSON.parse(s.DS.decode(E.split(".")[1])));
                if (t)
                    throw o;
                return (0,
                u.Pc)() ? (await a((0,
                n.DZ)({
                    age: v,
                    email: c.email,
                    googleIdToken: y,
                    name: c.name
                })),
                await a((0,
                n.eY)()),
                (0,
                d.track)("register", {
                    successful: !0,
                    through: "google",
                    via: _
                }),
                (0,
                l.SX)({
                    event: "sign_up"
                })) : e && (await (0,
                i.$C)({
                    age: v,
                    email: c.email,
                    googleIdToken: y,
                    name: c.name
                }),
                await a((0,
                n.eY)()),
                (0,
                d.track)("register", {
                    successful: !0,
                    through: "google",
                    via: _
                }),
                (0,
                l.SX)({
                    event: "sign_up"
                })),
                !1
            }
            var E
        }
    }
    ,
    67899: (e, t, a) => {
        "use strict";
        a.d(t, {
            KU: () => l,
            Nf: () => d,
            SX: () => r,
            dl: () => u,
            zu: () => g
        });
        var s = a(80254)
          , n = a(98964);
        window.dataLayer = window.dataLayer || [],
        window.dataLayer.push({
            event: "gtm.js",
            "gtm.start": Date.now()
        }),
        window.dataLayer.push({
            cookie_domain: window.location.hostname
        });
        const r = e => {
            window.dataLayer.push(e)
        }
          , i = window.setInterval(( () => {
            var e;
            const t = window;
            if (!(null === (e = t.ga) || void 0 === e ? void 0 : e.getAll))
                return;
            const [a] = t.ga.getAll().filter((e => "UA-21595814-1" === e.get("trackingId")));
            a && (window.clearInterval(i),
            new t.gaplugins.UrlChangeTracker(a))
        }
        ), 200)
          , o = ["card_entry_accept", "card_entry_reject", "plus_landing_page_load", "premium_ad_click", "premium_ad_dismiss", "premium_ad_show", "premium_purchase_cancel", "premium_purchase_failure", "premium_purchase_page_dismiss", "premium_purchase_page_show", "premium_purchase_start", "premium_purchase_success", "premium_trial_offer_click", "premium_trial_offer_dismiss", "premium_trial_offer_show", "registration_load", "sign_in_load", "web_to_app_store_tap"]
          , l = (e, t) => {
            if (!o.includes(e))
                return;
            const a = s.ei(t, ["free_trial_period", "iap_context", "subscription_tier"]);
            r({
                ...a,
                event: e
            })
        }
        ;
        let c;
        const d = () => c
          , u = async () => {
            try {
                await (0,
                n.l)("https://www.googletagmanager.com/gtm.js?id=GTM-TX6Z97C"),
                c = !!window.google_tag_manager
            } catch {
                c = !1
            }
        }
          , g = "gtm-attribution-link"
    }
    ,
    33037: (e, t, a) => {
        "use strict";
        a.d(t, {
            LN: () => _,
            tx: () => f,
            wM: () => S,
            zn: () => v
        });
        var s = a(56043)
          , n = a(83719)
          , r = a(78939)
          , i = a(37590)
          , o = a(68903)
          , l = a(95940)
          , c = a(67116)
          , d = a(58576)
          , u = a(43006)
          , g = a(79465)
          , p = a(11811);
        const m = {
            [n.Oj.Accent]: 18634,
            [n.Oj.ExtraSpace]: 4476,
            [n.Oj.MissingSpace]: 18757,
            [n.Oj.MissingWord]: 8435,
            [n.Oj.Typo]: 4081,
            [n.Oj.WrongWord]: 576
        }
          , h = e => {
            if (m[e])
                return (0,
                l.H8)(m[e])
        }
          , _ = e => {
            switch (e.type) {
            case p.Sm.Assist:
                {
                    const {correctIndex: t, options: a} = e;
                    return [a[t].text]
                }
            case p.Sm.CharacterIntro:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a]]
                }
            case p.Sm.CharacterPuzzle:
                return [e.correctSolutions[0]];
            case p.Sm.CharacterTrace:
            case p.Sm.CharacterWrite:
                return [e.prompt];
            case p.Sm.CharacterMatch:
            case p.Sm.FreeResponse:
            case p.Sm.ListenMatch:
            case p.Sm.Match:
            case p.Sm.ExtendedListenMatch:
            case p.Sm.ExtendedMatch:
                return [];
            case p.Sm.CharacterSelect:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a].character]
                }
            case p.Sm.CompleteReverseTranslation:
                {
                    const {displayTokens: t} = e;
                    return [t.map((e => e.text)).join("")]
                }
            case p.Sm.Definition:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a]]
                }
            case p.Sm.Dialogue:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a]]
                }
            case p.Sm.Form:
                {
                    const {options: t, correctIndex: a} = e;
                    return [t[a].text]
                }
            case p.Sm.GapFill:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a]]
                }
            case p.Sm.Judge:
                {
                    const {choices: t, correctIndices: a} = e;
                    return a.map((e => t[e]))
                }
            case p.Sm.Listen:
            case p.Sm.ListenComplete:
                return [e.prompt];
            case p.Sm.ListenComprehension:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a]]
                }
            case p.Sm.ListenIsolation:
                {
                    const {tokens: t} = e;
                    return [t.map((e => e.value)).join("")]
                }
            case p.Sm.ListenSpeak:
            case p.Sm.ListenTap:
                return [e.prompt];
            case p.Sm.Name:
                return e.correctSolutions;
            case p.Sm.OrderTapComplete:
            case p.Sm.PartialListen:
            case p.Sm.PartialReverseTranslate:
                return [e.displayTokens.map((e => e.text)).join("")];
            case p.Sm.PatternTapComplete:
                return [e.choices[e.correctIndex]];
            case p.Sm.ReadComprehension:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a]]
                }
            case p.Sm.ReverseAssist:
                {
                    const {correctIndex: t, options: a} = e;
                    return [a[t].text]
                }
            case p.Sm.SameDifferent:
                {
                    const {correctIndex: t, options: a} = e;
                    return [a[t]]
                }
            case p.Sm.Select:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a].phrase]
                }
            case p.Sm.SelectPronunciation:
            case p.Sm.SelectTranscription:
                {
                    const {choices: t, correctIndex: a} = e;
                    return [t[a].text]
                }
            case p.Sm.SvgPuzzle:
                return [e.correctSolutions[0]];
            case p.Sm.SyllableListenTap:
                return [e.correctIndices.map((t => e.choices[t].text)).join("")];
            case p.Sm.SyllableTap:
                return e.correctSolutions;
            case p.Sm.Speak:
                return [e.prompt];
            case p.Sm.TapCloze:
            case p.Sm.TapClozeTable:
                return [(0,
                i.Ub)(e).join("")];
            case p.Sm.TapComplete:
                {
                    const {displayTokens: t} = e;
                    return [t.map((e => e.text)).join("")]
                }
            case p.Sm.TapCompleteTable:
                return [(0,
                i.Ub)(e).join("")];
            case p.Sm.TapDescribe:
            case p.Sm.Translate:
            case p.Sm.Transliterate:
                return e.correctSolutions;
            case p.Sm.TransliterationAssist:
                {
                    const {correctIndex: t, options: a} = e;
                    return [a[t].text]
                }
            case p.Sm.TypeCloze:
            case p.Sm.TypeClozeTable:
                return [(0,
                i.Ub)(e).join("")];
            case p.Sm.TypeComplete:
                return [e.displayTokens.map((e => e.text)).join("")];
            case p.Sm.TypeCompleteTable:
                return [(0,
                i.Ub)(e).join("")];
            case p.Sm.WriteComprehension:
                return [e.exampleSolution];
            case p.Sm.RadioBinary:
            case p.Sm.RadioImageSelect:
            case p.Sm.RadioListenMatch:
            case p.Sm.RadioListenRecognize:
            case p.Sm.RadioSelect:
                return [];
            default:
                throw (0,
                o.RJ)(e),
                Error(`Unexpected challenge type: ${e.type}`)
            }
        }
          , v = e => {
            var t, a, s, n;
            switch (e.type) {
            case p.Sm.ListenTap:
                return e.promptTransliteration;
            case p.Sm.Select:
                return e.choices[e.correctIndex].phraseTransliteration;
            case p.Sm.Translate:
                return null === (t = e.correctSolutionTransliterations) || void 0 === t ? void 0 : t[0];
            case p.Sm.CharacterIntro:
                return null === (a = e.choiceTransliterations) || void 0 === a ? void 0 : a[e.correctIndex];
            case p.Sm.Form:
                return e.options[e.correctIndex].textTransliteration;
            case p.Sm.Judge:
                return null === (s = e.choiceTransliterations) || void 0 === s ? void 0 : s[e.correctIndices[0]];
            case p.Sm.SyllableListenTap:
                return e.promptTransliteration;
            case p.Sm.SyllableTap:
                return null === (n = e.correctSolutionTransliterations) || void 0 === n ? void 0 : n[0];
            default:
                return
            }
        }
          , f = (e, t, a, s) => (s.length && !s[0] && (0,
        d.Kp)("Trying to show correct solution when none are provided by the challenge", {
            data: {
                correctSolutions: s,
                length: s.length,
                text: s[0]
            }
        }),
        e && a && s.length && !s.includes(a) && s[0] && (0,
        u.Dg)(t) !== (0,
        u.Dg)(s[0]))
          , S = async ({challenge: e, guess: t, isTypingInLearningLanguage: a, allowTypoBlame: n}) => {
            var i;
            const o = Date.now()
              , l = null === (i = e.grader) || void 0 === i ? void 0 : i.language
              , c = await (0,
            r.C3)(l)
              , d = !!e.smartTipsGraderV2
              , u = (0,
            r.YK)({
                accentedCharacterMap: c.accentedCharacterMap,
                allowTypoBlame: n,
                compiledNormalizationData: c.normalizationData,
                gradingData: d ? e.smartTipsGraderV2 : e.grader,
                isTypingInLearningLanguage: a,
                submittedValue: t
            })
              , {blameType: g, closestSolution: m, correct: v, gradingMetadata: f, highlights: S} = u;
            let E;
            if (!1 !== e.grader.whitespaceDelimited && (e.type === p.Sm.Translate || e.type === p.Sm.PartialReverseTranslate)) {
                const a = (0,
                s.SK)(_(e)[0], t, .5);
                E = a ? [a] : void 0
            }
            return y(e, v, o, d),
            {
                blameMessage: g ? h(g) : void 0,
                blameType: g,
                closestSolution: m,
                correct: v,
                gradingMetadata: f,
                guess: t,
                highlights: S,
                mistakesRecyclingHighlights: E
            }
        }
          , y = async (e, t, a, s) => {
            Math.random() > .001 || await (0,
            g.track)("challenge_grade", {
                challenge_type: e.type,
                correct: t,
                from_language: c.h9,
                grading_method: s ? "client_library_smart_tips" : "client_library",
                sampling_rate: .001,
                target_language: e.grader.language,
                time_spent_grading: Date.now() - a
            })
        }
    }
    ,
    37590: (e, t, a) => {
        "use strict";
        a.d(t, {
            JH: () => g,
            Ub: () => u,
            Xh: () => c,
            ao: () => d,
            jL: () => l,
            tl: () => m,
            x6: () => o
        });
        var s = a(68903)
          , n = a(58576)
          , r = a(43006)
          , i = a(11811);
        const o = (e, t, a=( ({}, {}, e) => e.text)) => p(e, a).slice(t ? 1 : 0).flatMap((e => [", ", ...e.flatMap((e => [" ", e])).slice(1)])).slice(1)
          , l = e => e.flatMap(( (e, t) => void 0 === e.damageStart ? [] : {
            index: t
        }))
          , c = e => e.flatMap(( (e, t) => e.flatMap(( (e, a) => e.filter((e => "isBlank"in e && e.isBlank || "damageStart"in e)).length ? [{
            colIndex: a,
            rowIndex: t
        }] : []))))
          , d = e => {
            const t = c(e)[0];
            return {
                colIndex: t.colIndex,
                rowIndex: t.rowIndex
            }
        }
          , u = e => {
            switch (e.type) {
            case i.Sm.TapCloze:
            case i.Sm.TypeCloze:
                return e.displayTokens.map((e => e.text));
            case i.Sm.TapClozeTable:
            case i.Sm.TypeClozeTable:
            case i.Sm.TapCompleteTable:
            case i.Sm.TypeCompleteTable:
                {
                    const {displayTableTokens: t, headers: a} = e;
                    return o(t, a)
                }
            default:
                throw (0,
                s.RJ)(e),
                Error(`Tried to call getGrammarChallengeCorrectTexts on an unsupported challenge type: ${e.type}`)
            }
        }
          , g = e => {
            switch (e.type) {
            case i.Sm.TapCloze:
            case i.Sm.TypeCloze:
                return e.displayTokens.map((e => void 0 === e.damageStart ? e.text : `${e.text.slice(0, e.damageStart)}${r.qv}`)).join("");
            case i.Sm.TapClozeTable:
            case i.Sm.TypeClozeTable:
            case i.Sm.TapCompleteTable:
            case i.Sm.TypeCompleteTable:
                {
                    const {displayTableTokens: t, headers: a} = e;
                    return o(t, a).join("")
                }
            default:
                throw (0,
                s.RJ)(e),
                Error(`Tried to call getGrammarChallengePrompt on an unsupported challenge type: ${e.type}`)
            }
        }
          , p = (e, t=( ({}, {}, e) => e.text)) => e.map(( (e, a) => e.map(( (e, s) => e.map((e => t(s, a, e))).join("")))))
          , m = (e, t, a) => e.map(( (s, r) => s.map(( (s, i) => s.map(( (s, o) => {
            let l;
            try {
                l = t[r][i][o]
            } catch {
                (0,
                n.vU)("No matching token found for display token in table challenge", {
                    data: {
                        displayTableTokens: e
                    }
                })
            }
            return a({
                colIndex: i,
                rowIndex: r
            }, s, l, o)
        }
        ))))))
    }
    ,
    15670: (e, t, a) => {
        "use strict";
        a.d(t, {
            e: () => o
        });
        var s = a(50498)
          , n = a(79465);
        let r = !1;
        const i = e => new Promise((t => {
            var a, s;
            r || (r = !0,
            window.grecaptcha ? (0,
            n.track)("abuse_req_cls_init_success", {}) : (0,
            n.track)("abuse_req_cls_init_fail", {
                abuse_client_error_cause: "script_not_loaded"
            })),
            null === (s = null === (a = window.grecaptcha) || void 0 === a ? void 0 : a.enterprise) || void 0 === s || s.ready((async () => {
                var a, s;
                const n = await (null === (s = null === (a = window.grecaptcha) || void 0 === a ? void 0 : a.enterprise) || void 0 === s ? void 0 : s.execute("6LcLOdsjAAAAAFfwGusLLnnn492SOGhsCh-uEAvI", {
                    action: e
                }));
                t(n)
            }
            ))
        }
        ))
          , o = async e => {
            try {
                const t = await Promise.race([i(e), (async () => (await (0,
                s._v)(10100),
                null))()]);
                return t ? ((0,
                n.track)("abuse_req_cls_sig_measure_success", {}),
                {
                    siteKey: "6LcLOdsjAAAAAFfwGusLLnnn492SOGhsCh-uEAvI",
                    token: t,
                    vendor: 2
                }) : ((0,
                n.track)("abuse_req_cls_sig_measure_fail", {
                    abuse_client_error_cause: "report_timeout"
                }),
                null)
            } catch {
                (0,
                n.track)("abuse_req_cls_sig_measure_fail", {
                    abuse_client_error_cause: "report_error"
                })
            }
            return null
        }
    }
    ,
    1: (e, t, a) => {
        "use strict";
        a.d(t, {
            $E: () => g,
            Ef: () => p,
            In: () => y,
            PH: () => E,
            _u: () => v,
            c$: () => h,
            e_: () => S,
            is: () => _,
            mE: () => f,
            qv: () => b,
            vZ: () => m
        });
        var s = a(17135)
          , n = a(64115)
          , r = a(95940)
          , i = a(67116)
          , o = a(35160)
          , l = a(23275)
          , c = a(11811)
          , d = a(20028);
        const u = ["premium", "schools", "beta course", "revenue paused", "free"]
          , g = ["premium", "schools", "beta course", "revenue paused"]
          , p = (e, t, a, s) => {
            const r = (0,
            n.ky)("heartsGroupType");
            return r && (o = r,
            u.includes(o)) ? r : a ? "premium" : (0,
            d.Ye)(e) ? "schools" : t.unlimitedHeartsAvailable ? "revenue paused" : void 0 !== s && (0,
            i.TS)(s) ? "beta course" : "free";
            var o
        }
          , m = e => ["schools", "beta course", "revenue paused", "free"].includes(e)
          , h = e => e.hearts === e.maxHearts
          , _ = e => e.hearts <= 0
          , v = e => {
            const t = Date.now();
            if (t > e)
                return null;
            const {hours: a, minutes: n, seconds: i} = (0,
            s.zj)(e - t);
            return a > 0 ? (0,
            r._i)(25240, {
                num_hours: a
            }) : n > 0 ? (0,
            r._i)(25241, {
                num_minutes: n
            }) : (0,
            r._i)(25242, {
                num_seconds: i
            })
        }
          , f = {
            currencyType: "XGM",
            id: "health_refill",
            localizedDescription: "",
            name: "Health Refill",
            price: 0,
            type: "misc"
        }
          , S = {
            currencyType: "XGM",
            id: "health_refill",
            localizedDescription: "",
            name: "Health Refill",
            price: 350,
            type: "misc"
        }
          , y = {
            currencyType: "XGM",
            id: "health_refill_reactive",
            localizedDescription: "",
            name: "Health Refill Reactive",
            price: 450,
            type: "misc"
        }
          , E = e => e.sessionCount < 3 || (0,
        n.gQ)("debugFreeHeartRefill")
          , b = (e, t, a, s) => {
            var r, i;
            const d = null === (r = a.levelData) || void 0 === r ? void 0 : r.level;
            (t && 0 === e.sessionCount && void 0 !== d && !(0,
            l.qM)(d) && (null === (i = a.sessionParams) || void 0 === i ? void 0 : i.type) !== c.FF.Placement && 0 === a.currentIndex || (0,
            n.gQ)("debugHeartsIntro")) && s({
                options: {
                    name: o.t.HeartsIntro,
                    spotlightType: "heartsInSession"
                },
                type: "TOGGLE_MODAL"
            })
        }
    }
    ,
    14263: (e, t, a) => {
        "use strict";
        a.d(t, {
            $m: () => r,
            Il: () => n,
            cY: () => i,
            fs: () => s
        });
        const s = "/help/support-request"
          , n = "immediateCancel"
          , r = `${s}?${n}=1`
          , i = () => s
    }
    ,
    68903: (e, t, a) => {
        "use strict";
        a.d(t, {
            $K: () => l,
            LU: () => g,
            OM: () => r,
            RJ: () => n,
            bp: () => c,
            cY: () => i,
            gB: () => o,
            p: () => d,
            rw: () => u
        });
        var s = a(80254);
        const n = e => e
          , r = e => [e, e]
          , i = (e, t) => e.some((e => s.Xy(e, t)))
          , o = (e, t) => t.includes(e)
          , l = e => void 0 !== e
          , c = (e, t) => t.every((t => t in e && !!e[t]))
          , d = e => t => e.includes(t)
          , u = (e, t) => {
            let a;
            const s = (...s) => {
                void 0 === a && (a = window.setTimeout(( () => {
                    a = void 0,
                    e(...s)
                }
                ), t))
            }
            ;
            return s.cancel = () => window.clearTimeout(a),
            s
        }
          , g = e => {
            let t = !1;
            return (...a) => {
                if (t)
                    throw Error("Function was already called");
                return t = !0,
                e(...a)
            }
        }
    }
    ,
    50548: (e, t, a) => {
        "use strict";
        a.d(t, {
            Jk: () => i,
            TH: () => c,
            UO: () => d,
            cN: () => o,
            k6: () => l
        });
        var s = a(14935)
          , n = a(80254);
        let r;
        const i = () => {
            if (void 0 === r)
                throw Error("Global router not initialized");
            return r
        }
          , o = e => r = e
          , l = () => {
            const e = (0,
            s.s0)()
              , t = (t, a) => {
                "string" != typeof t && "state"in t ? e(n.CE(t, "state"), {
                    ...a,
                    state: t.state
                }) : e(t, a)
            }
            ;
            return {
                go: t => e(t),
                goBack: () => e(-1),
                goForward: () => e(1),
                push: (e, a) => t(e, {
                    state: a
                }),
                replace: (e, a) => t(e, {
                    replace: !0,
                    state: a
                })
            }
        }
          , c = () => (0,
        s.TH)()
          , d = () => (0,
        s.UO)()
    }
    ,
    11883: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => i
        });
        var s = a(27378)
          , n = a(1375)
          , r = a(64115);
        const i = (e=1e3) => {
            const [t,a] = s.useState(Date.now() + (0,
            r.nn)());
            return (0,
            n.Z)(( () => a(Date.now() + (0,
            r.nn)())), e),
            t
        }
    }
    ,
    59604: (e, t, a) => {
        "use strict";
        a.d(t, {
            O: () => i,
            Z: () => o
        });
        var s = a(72150)
          , n = a(43633)
          , r = a(28818);
        const i = (e, t, a) => {
            var r, i;
            return null !== (i = null === (r = (0,
            n.zJ)()) || void 0 === r ? void 0 : r.get((0,
            s.g8)(null == a ? void 0 : a.featureFlags))[e]) && void 0 !== i ? i : t
        }
          , o = (e, t) => {
            var a;
            return null !== (a = (0,
            r.Dv)(s.uA)[e]) && void 0 !== a ? a : t
        }
    }
    ,
    53229: (e, t, a) => {
        "use strict";
        a.d(t, {
            Fo: () => c,
            Lm: () => r,
            Vp: () => i,
            lV: () => o,
            qy: () => l,
            vl: () => n
        });
        var s = a(80254);
        const n = (e=window.location.search) => Object.fromEntries(new URLSearchParams(e).entries())
          , r = (e=window.location.search) => n(e.replace(/\+/g, "%2B"))
          , i = e => s.XP(e).sort().map((t => [t, e[t]].map(encodeURIComponent).join("="))).join("&")
          , o = e => encodeURIComponent(e.replace(/[!"#$%&'()*+,\-./:;<=>?@[\]^_`{|}~ \b\f\n\r\t\v¿]+/g, " ").trim().replace(" ", "-"))
          , l = e => e
          , c = e => new URL(e).hostname
    }
    ,
    95940: (e, t, a) => {
        "use strict";
        a.d(t, {
            WQ: () => f,
            lw: () => p,
            _i: () => _,
            H8: () => v,
            yL: () => C,
            ip: () => R,
            Q7: () => L,
            Hy: () => P,
            VG: () => A,
            mD: () => D,
            k8: () => F,
            Ti: () => N,
            KJ: () => b,
            k_: () => I,
            _E: () => w,
            sS: () => x,
            pu: () => U,
            to: () => M,
            T$: () => O
        });
        var s = a(97689)
          , n = a(37803)
          , r = a(80254);
        const i = (e, t) => Number(!t || t < 0 ? e.toString()[e.toString().length - 1] : e.toFixed(t)[e.toFixed(t).length - 1])
          , o = {
            ar: e => 0 === e ? "zero" : 1 === e ? "one" : 2 === e ? "two" : e % 100 >= 3 && e % 100 <= 10 ? "few" : e % 100 >= 11 ? "many" : "other",
            bn: e => 1 === e ? "one" : "other",
            cs: e => 1 === e ? "one" : 2 <= e && e <= 4 ? "few" : "other",
            de: e => 1 === e ? "one" : "other",
            el: e => 1 === e ? "one" : "other",
            en: e => 1 === e ? "one" : "other",
            es: e => 1 === e ? "one" : "other",
            fr: e => 0 <= e && e < 2 ? "one" : "other",
            hi: e => 1 === e ? "one" : "other",
            hu: e => 1 === e ? "one" : "other",
            id: e => "other",
            it: e => 1 === e ? "one" : "other",
            ja: e => "other",
            ko: e => "other",
            "nl-NL": e => 1 === e ? "one" : "other",
            pl: e => 1 === e ? "one" : 2 <= e % 10 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? "few" : "many",
            pt: e => 1 === e ? "one" : "other",
            ro: e => 1 === e ? "one" : 0 === e || e % 100 > 0 && e % 100 < 20 ? "few" : "other",
            ru: e => e % 10 == 1 && e % 100 != 11 ? "one" : 2 <= e % 10 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? "few" : "many",
            sv: e => 1 === e ? "one" : "other",
            ta: e => 1 === e ? "one" : "other",
            te: e => 1 === e ? "one" : "other",
            th: e => "other",
            tl: e => [9, 4, 6].includes(e % 10) ? "other" : "one",
            tr: e => 1 === e ? "one" : "other",
            uk: e => e % 10 == 1 && e % 100 != 11 ? "one" : 2 <= e % 10 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? "few" : "many",
            vi: e => "other",
            "zh-CN": e => "other",
            "zh-TW": e => "other"
        }
          , l = {
            ar: (e, t) => e % 100 < 1 && e >= 100 ? "dec_other" : e % 100 < 3 ? "dec_one" : e % 100 < 11 ? "dec_few" : "dec_many",
            bn: (e, t) => "one",
            cs: (e, t) => "many",
            de: (e, t) => "other",
            el: (e, t) => 1 === e ? "one" : "other",
            en: (e, t) => "other",
            es: (e, t) => 1 === e ? "one" : "other",
            fr: (e, t) => 0 <= e && e < 2 ? "one" : "other",
            hi: (e, t) => e <= 1 ? "one" : "other",
            hu: (e, t) => "one",
            id: (e, t) => "other",
            it: (e, t) => "other",
            ja: (e, t) => "other",
            ko: (e, t) => "other",
            "nl-NL": (e, t) => 1 === e || e < 2 && ( (e, t) => {
                var a = e.toString().split(".");
                return 2 === a.length && (t && (a[1] = a[1].slice(0, t)),
                ["2", "3", "4", "5", "6", "7", "8", "9"].every((e => !a[1].includes(e))))
            }
            )(e, t) ? "one" : "other",
            pl: (e, t) => "other",
            pt: (e, t) => 0 <= e && e < 2 ? "one" : "other",
            ro: (e, t) => 1 === e ? "one" : "few",
            ru: (e, t) => "other",
            sv: (e, t) => "other",
            ta: (e, t) => e <= 1 ? "one" : "other",
            te: (e, t) => 1 === e ? "one" : "other",
            th: (e, t) => "other",
            tl: (e, t) => e < 1 && [9, 4, 6].includes(i(e, t)) ? "few" : e <= 1 ? "one" : [9, 4, 6].includes(i(e, t)) ? "other" : "many",
            tr: (e, t) => "one",
            uk: (e, t) => "other",
            vi: (e, t) => "other",
            "zh-CN": (e, t) => "other",
            "zh-TW": (e, t) => "other"
        }
          , c = {
            ar: (e, t) => e / t % 100 < 1 && e / t >= 100 ? "dec_other" : e / t % 100 < 3 ? "dec_one" : e / t % 100 < 11 ? "dec_few" : "dec_many",
            bn: (e, t) => "other",
            cs: (e, t) => "many",
            de: (e, t) => 1 === e ? "one" : "other",
            el: (e, t) => e / t >= 2 ? "other" : e / t <= 1 && e / t != .5 ? "few" : "one",
            en: (e, t) => e / t <= 1 ? "one" : "other",
            es: (e, t) => e / t == .5 ? "one" : e / t <= 1 ? "few" : "other",
            fr: (e, t) => e / t >= 2 ? "other" : e / t <= 1 && e / t != .5 ? "few" : "one",
            hi: (e, t) => e / t <= 1 ? "one" : "other",
            hu: (e, t) => "other",
            id: (e, t) => "other",
            it: (e, t) => e / t >= 2 ? "other" : e / t <= 1 && e / t != .5 ? "few" : "one",
            ja: (e, t) => "other",
            ko: (e, t) => "other",
            "nl-NL": (e, t) => "other",
            pl: (e, t) => "other",
            pt: (e, t) => e / t >= 2 || 0 === e ? "other" : e / t < 1 && e / t != .5 ? "few" : "one",
            ro: (e, t) => e / t < 2 ? "one" : "other",
            ru: (e, t) => "other",
            sv: (e, t) => e / t > 2 ? "other" : "one",
            ta: (e, t) => e / t <= 1 ? "one" : "other",
            te: (e, t) => e / t <= 1 ? "one" : "other",
            th: (e, t) => "other",
            tl: (e, t) => e / t <= 1 && [9, 4, 6].includes(i(t, 0)) ? "few" : e / t <= 1 ? "one" : [9, 4, 6].includes(i(t, 0)) ? "other" : "many",
            tr: (e, t) => e / t > 1 ? "many" : t % 10 == 9 || [10, 30].includes(t % 100) ? "dec_other" : t % 10 == 6 ? "other" : [3, 4].includes(t % 10) || t % 100 == 0 ? "few" : [40, 90, 60].includes(t % 100) ? "zero" : [2, 7].includes(t % 10) || [50, 20].includes(t % 100) ? "two" : "one",
            uk: (e, t) => "other",
            vi: (e, t) => "other",
            "zh-CN": (e, t) => "other",
            "zh-TW": (e, t) => "other"
        };
        var d = a(64115)
          , u = a(67116)
          , g = a(58576);
        const p = "rtl" === ( () => {
            if (document.dir)
                return document.dir;
            return document.documentElement.getAttribute("dir") || "ltr"
        }
        )()
          , m = e => "number" == typeof e ? `${e}` : `placeholder_${e.project}`
          , h = r.HP((e => {
            (0,
            g.vU)(`Showing placeholder string for project ${e.project}`, {
                data: {
                    placeholderText: e.text
                }
            })
        }
        ), (e => e.project))
          , _ = (e, t={}, a={}) => {
            try {
                return ( (e, t, a) => {
                    var n, r;
                    const i = m(e);
                    if ((0,
                    d.gQ)("renderStringIds"))
                        return `string_${i}`;
                    const u = "number" == typeof e ? e : ((0,
                    d.Au)() || h(e),
                    e.text)
                      , _ = null !== (n = a.lang) && void 0 !== n ? n : window.duo.uiLanguage
                      , v = {
                        cardinalRules: o,
                        decimalRules: l,
                        fractionRules: c,
                        getFallback: () => {
                            var e;
                            return null !== (e = window.duo.l10n.strings.en) && void 0 !== e ? e : {}
                        }
                        ,
                        getGroupVariableTable: () => {
                            var e;
                            return null !== (e = window.duo.l10n.contextualVariableMapping) && void 0 !== e ? e : {}
                        }
                        ,
                        getStrings: () => {
                            var e;
                            return null !== (e = window.duo.l10n.strings[_]) && void 0 !== e ? e : {}
                        }
                        ,
                        uiLanguage: _
                    }
                      , f = {
                        addRightToLeftMark: null !== (r = a.addRightToLeftMark) && void 0 !== r ? r : p,
                        addStringIdToolTips: (0,
                        d.gQ)("stringIdTooltips"),
                        exportTags: a.exportTags,
                        invalidSampleRate: .01,
                        longStrings: (0,
                        d.gQ)("longStrings"),
                        postprocess: a.postprocess,
                        preprocess: a.preprocess,
                        stripTags: a.stripTags
                    };
                    return s.cz(v, g.vU, u, t, f)
                }
                )(e, t, a)
            } catch (e) {
                return (0,
                g.vU)("Localization failed", {
                    ex: e
                }),
                ""
            }
        }
          , v = (e, t={}, a={}) => {
            const s = _(e, t, a);
            if ("number" == typeof s || "string" == typeof s)
                return s.toString();
            try {
                const t = document.createElement("div");
                return t.innerHTML = n.uS(s),
                (0,
                d.gQ)("stringIdTooltips") ? `${t.innerText} (string_${m(e)})` : t.innerText
            } catch {
                return (0,
                g.vU)("Failed to convert ReactElement to string", {
                    data: {
                        stringId: e
                    }
                }),
                ""
            }
        }
          , f = {
            AT: "de",
            BE: "fr",
            BR: "pt",
            CH: "de",
            CN: "zh-CN",
            CZ: "cs",
            DE: "de",
            DK: "da",
            EG: "ar",
            ES: "es",
            FI: "fi",
            FR: "fr",
            GR: "el",
            HU: "hu",
            ID: "id",
            IN: "hi",
            IT: "it",
            JP: "ja",
            PH: "tl",
            PT: "pt",
            RU: "ru",
            TR: "tr",
            TW: "zh",
            VN: "vi"
        }
          , S = ["AT", "BE", "BG", "CY", "CZ", "DK", "DE", "EE", "EL", "ES", "FI", "FR", "GB", "HR", "HU", "IE", "IT", "LT", "LU", "LV", "MT", "NL", "PL", "PT", "RO", "SE", "SI", "SK", "UK"]
          , y = ["US", "CA", "GB", "AU", "NZ", "SG", "KR", "JP", ...S]
          , E = ["US", "CA", "GB", "AU", "NZ"]
          , b = e => y.includes(e)
          , I = e => !!e.ipCountry && S.includes(e.ipCountry)
          , w = e => !!e.ipCountry && E.includes(e.ipCountry);
        var k;
        !function(e) {
            e.DEFAULT = ", ",
            e.zh = "、",
            e.ar = "، ",
            e.ja = "・"
        }(k || (k = {}));
        const T = ["ar", "el", "en", "hi", "ko", "zh"]
          , C = e => T.includes(u.h9) ? `${e % 12 || 12}${e < 12 ? "am" : "pm"}` : `${e}:00`
          , R = () => [v(18415), v(11602), v(667), v(974), v(21780), v(19860), v(14040)]
          , L = () => [v(30377), v(30378), v(30379), v(30380), v(30381), v(30382), v(30383)]
          , P = () => [v(34912), v(34913), v(34914), v(34915), v(34916), v(34917), v(34918)]
          , A = () => [v(36297), v(36298), v(36299), v(36300), v(36301), v(36302), v(36303), v(36304), v(36305), v(36306), v(36307), v(36308)]
          , D = () => [v(30384), v(30385), v(30386), v(30387), v(30388), v(30389), v(30390), v(30391), v(30392), v(30393), v(30394), v(30395)]
          , O = (e, t={
            day: "numeric",
            month: "long"
        }) => new Intl.DateTimeFormat((0,
        u.M$)(window.duo.uiLanguage),t).format(e)
          , N = ["zh-CN", "zh-TW", "ja", "ko", "th"].includes(window.duo.uiLanguage)
          , x = async (e, t) => {
            const s = await a(55081)(`./${e}.duostrings`);
            window.duo.l10n.strings[e] = {
                ...window.duo.l10n.strings[e],
                ...t ? r.ei(s.sources, t) : s.sources
            }
        }
          , M = (e, t, a) => e.replace(/<a href="(.*?)">/g, `<a class="${t}" href="$1"${void 0 === a ? "" : `target="${a}"`}>`)
          , F = () => {
            var e, t;
            const a = (0,
            u.BE)()
              , s = /^([a-z]{2,3})(?:-([a-z]{3})(?=$|-))?(?:-([a-z]{4})(?=$|-))?(?:-([a-z]{2}|\d{3})(?=$|-))?/i.exec(a);
            return ( (e, t) => {
                const a = "AEAFBHDJDZEGIQIRJOKWLYOMQASDSY".match(/../g)
                  , s = "AGARASAUBDBRBSBTBWBZCACNCODMDOETGTGUHKHNIDILINJMJPKEKHKRLAMHMMMOMTMXMZNINPPAPEPHPKPRPTPYSASGSVTHTTTWUMUSVEVIWSYEZAZW".match(/../g)
                  , n = "amasbndzengnguhehiidjajvkmknkolomhmlmrmtmyneomorpapssdsmsnsutatethtnurzhzu".match(/../g);
                return e ? (null == s ? void 0 : s.includes(e)) ? 0 : (null == a ? void 0 : a.includes(e)) ? 6 : 1 : (null == n ? void 0 : n.includes(t)) ? 0 : ["ar", "arq", "arz", "fa"].includes(t) ? 6 : 1
            }
            )(null !== (e = null == s ? void 0 : s[4]) && void 0 !== e ? e : null, null !== (t = null == s ? void 0 : s[1]) && void 0 !== t ? t : "en")
        }
          , U = e => {
            let t;
            return null === (t = /(.*)<([\w]+)>(.*)<\/\2>(.*)/g.exec(e)) || void 0 === t ? ["", "", ""] : [t[1], t[3], t[4]]
        }
    }
    ,
    60752: (e, t, a) => {
        "use strict";
        a.d(t, {
            b: () => p
        });
        var s = a(47987)
          , n = a(50498)
          , r = a(58576)
          , i = a(18804)
          , o = a(79465);
        const l = "duolingo";
        let c, d = !1;
        const u = () => (0,
        i.globalDispatch)({
            type: "UNMOUNT"
        })
          , g = (e, t) => {
            switch (t) {
            case 0:
                {
                    const t = e;
                    t.createObjectStore("prefetchedSessions"),
                    t.createObjectStore("submittableSessions", {
                        keyPath: "id"
                    })
                }
            case 1:
                e.deleteObjectStore("prefetchedSessions"),
                e.createObjectStore("prefetchedSessions");
            case 2:
                {
                    const t = e;
                    t.deleteObjectStore("submittableSessions"),
                    t.createObjectStore("submittableRequests", {
                        autoIncrement: !0
                    })
                }
            case 3:
                e.deleteObjectStore("prefetchedSessions"),
                e.createObjectStore("prefetchedSessions");
            case 4:
                e.deleteObjectStore("submittableRequests"),
                e.createObjectStore("submittableRequests", {
                    autoIncrement: !0
                });
            case 5:
                e.deleteObjectStore("prefetchedSessions"),
                e.createObjectStore("prefetchedSessions");
            case 6:
            case 7:
                e.deleteObjectStore("submittableRequests"),
                e.createObjectStore("submittableRequests", {
                    autoIncrement: !0
                });
            case 8:
                e.deleteObjectStore("prefetchedSessions"),
                e.createObjectStore("prefetchedSessions")
            }
        }
          , p = async () => (c || (c = m()),
        c)
          , m = async () => {
            try {
                const e = await (0,
                s.X3)(l, 9, {
                    blocked: (e, t) => {
                        (0,
                        o.track)("indexeddb_connection_blocked", {
                            indexeddb_requested_version: t,
                            indexeddb_version: e
                        })
                    }
                    ,
                    blocking: (t, a) => {
                        e.close(),
                        d || ((0,
                        o.track)("indexeddb_connection_blocking", {
                            indexeddb_requested_version: a,
                            indexeddb_version: t
                        }),
                        d = !0,
                        u())
                    }
                    ,
                    terminated: () => {
                        (0,
                        r.Kp)("IndexedDB connection was terminated abnormally", {
                            once: !0
                        }),
                        c = void 0
                    }
                    ,
                    upgrade: g
                });
                return e
            } catch (e) {
                if ("VersionError" === e.name) {
                    const e = (await indexedDB.databases()).find((e => e.name === l));
                    (0,
                    o.track)("indexeddb_version_conflict", {
                        indexeddb_requested_version: 9,
                        indexeddb_version: null == e ? void 0 : e.version
                    }),
                    u(),
                    await (0,
                    n.f)()
                }
                throw e
            }
        }
    }
    ,
    795: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dp: () => l,
            JH: () => p,
            TS: () => c,
            Vx: () => g,
            qj: () => o,
            t8: () => d,
            tP: () => u,
            zu: () => m
        });
        var s = a(5188)
          , n = a(98784)
          , r = a.n(n)
          , i = a(27378);
        const o = (e, t) => ((null == t ? void 0 : t.deep) ? r().cloneDeepWith : r().cloneWith)(e, (e => {
            if (i.isValidElement(e))
                return e
        }
        ))
          , l = e => (0,
        s.vV)(e, !0)
          , c = (e, t, a) => (0,
        s.Uy)(null != e ? e : {}, (e => {
            (null == a ? void 0 : a.deep) ? r().merge(e, t) : Object.assign(e, t)
        }
        ))
          , d = (e, t, a) => (0,
        s.Uy)(e, (e => {
            e[t] = a
        }
        ))
          , u = (e, t, a) => (0,
        s.Uy)(e, (e => {
            r().set(e, t, a)
        }
        ))
          , g = (e, t, a) => (0,
        s.Uy)(e, (e => {
            e[t] = a(e[t])
        }
        ))
          , p = (e, t, a) => u(e, t, a(r().get(e, t)))
          , m = (e, t) => (0,
        s.Uy)(e, (e => {
            delete e[t]
        }
        ))
    }
    ,
    48469: (e, t, a) => {
        "use strict";
        a.d(t, {
            R: () => i
        });
        var s = a(43633)
          , n = a(19172);
        const r = new WeakMap
          , i = e => {
            let t = r.get(e);
            return void 0 === t && (t = (0,
            n.f)(`atomFromReduxSelector(${e.name})`).derived((t => e(t(s.er)))).build(),
            r.set(e, t)),
            t
        }
    }
    ,
    20716: (e, t, a) => {
        "use strict";
        a.d(t, {
            IM: () => i,
            XV: () => o,
            bI: () => n,
            it: () => r
        });
        const s = e => (t, a) => {
            if (e in t)
                throw Error(`Property ${e} already exists`);
            t[e] = a
        }
          , n = s("isInitialized")
          , r = s("mount")
          , i = s("selfNetworkStatus")
          , o = s("refetch")
    }
    ,
    1930: (e, t, a) => {
        "use strict";
        a.d(t, {
            cn: () => n,
            kv: () => i,
            w0: () => r
        });
        var s = a(59737);
        const n = a(2407).cn
          , r = s.w0
          , i = s.kv
    }
    ,
    72150: (e, t, a) => {
        "use strict";
        a.d(t, {
            g8: () => i,
            kc: () => l,
            tD: () => d,
            uA: () => c,
            xT: () => o
        });
        var s = a(48469)
          , n = a(19172)
          , r = a(74901);
        const i = e => (0,
        n.f)("featureFlags").derived((t => ({
            ...null != e ? e : t(o),
            ...t(l)
        }))).build()
          , o = (0,
        s.R)((e => e.config.featureFlags))
          , l = (0,
        r.u)("featureFlagOverrides").build()
          , c = i()
          , d = ( (e, t) => {
            const a = (0,
            n.f)(`featureFlag.${e}.random`).primitive(Math.random()).build();
            return (0,
            n.f)(`featureFlag.${e}`).derived((t => {
                var s;
                return t(a) < (null !== (s = t(c)[e]) && void 0 !== s ? s : 0)
            }
            )).write(( ({}, e, {}) => {
                e(a, Math.random())
            }
            )).build()
        }
        )("web_fetch_leaderboard_streak")
    }
    ,
    43633: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z0: () => d,
            er: () => g,
            gh: () => m,
            h0: () => l,
            ok: () => p,
            zJ: () => o
        });
        var s = a(2407)
          , n = a(60106)
          , r = a(19172);
        let i;
        const o = () => i
          , l = () => {
            const e = o();
            if (void 0 === e)
                throw Error("Global Jotai store not initialized");
            return e
        }
          , c = (0,
        r.f)("globalStore").primitive(null).build()
          , d = () => c
          , u = (0,
        r.f)("globalRedux").primitive(null).build()
          , g = u
          , p = (0,
        r.f)("globalJotaiPersister").primitive(null).build()
          , m = e => {
            if (void 0 !== i)
                throw Error("configureGlobalStore called twice");
            i = ( ({persister: e, reduxStore: t}) => {
                var a;
                const r = (0,
                s.MT)();
                r.set(c, r),
                r.set(u, t.getState()),
                t.subscribe(( () => {
                    r.set(u, t.getState())
                }
                ));
                const i = new n.Z(null !== (a = e.get()) && void 0 !== a ? a : {});
                return i.subscribe(( () => {
                    e.set(( () => i.getAll()))
                }
                )),
                r.set(p, i),
                r
            }
            )(e)
        }
    }
    ,
    28818: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dv: () => d,
            KO: () => g,
            YV: () => p,
            b9: () => u,
            oR: () => c,
            tj: () => m,
            wq: () => l
        });
        var s = a(27378)
          , n = a(70644)
          , r = a(43633)
          , i = a(7515);
        const o = s.createContext(void 0)
          , l = ({children: e, storeOverride: t}) => s.createElement(o.Provider, {
            value: null != t ? t : (0,
            r.zJ)()
        }, e)
          , c = () => {
            const e = s.useContext(o);
            if (void 0 === e)
                throw Error("useStore must be used within a JotaiProvider");
            return e
        }
          , d = e => {
            const t = c();
            return (0,
            n.useSyncExternalStore)(s.useCallback((a => {
                let s = !1;
                const n = t.sub(e, ( () => {
                    s || a()
                }
                ));
                return () => {
                    s = !0,
                    setTimeout(( () => n()), 0)
                }
            }
            ), [t, e]), s.useCallback(( () => t.get(e)), [t, e]))
        }
          , u = e => {
            const t = c();
            return s.useCallback(( (...a) => {
                t.set(e, ...a)
            }
            ), [t, e])
        }
          , g = e => [d(e), u(e)]
          , p = () => {
            const e = c();
            return s.useCallback(( (t, ...a) => {
                e.set(t, ...a)
            }
            ), [e])
        }
          , m = e => d((0,
        i.P)(e, "value"))
    }
    ,
    87443: (e, t, a) => {
        "use strict";
        a.d(t, {
            br: () => z,
            iW: () => V,
            ju: () => A,
            BW: () => L,
            K0: () => N,
            RT: () => H,
            QR: () => M,
            Kx: () => F,
            iV: () => U,
            zV: () => O,
            gz: () => D
        });
        var s = a(30427)
          , n = a(80254)
          , r = a(40893)
          , i = a(42659)
          , o = a(96195)
          , l = a(75532)
          , c = a(18867)
          , d = a(1897)
          , u = a(53396)
          , g = a(20821)
          , p = a(12125);
        const m = (0,
        g.Q)((0,
        u.S)({
            classroomLeaderboard: ({userId: e}) => [{
                userId: e
            }, {}],
            leagueAndTournamentLeaderboard: ({userId: e, ...t}) => [{
                userId: e
            }, {
                ...t
            }],
            reaction: ({userId: e}) => [{
                userId: e
            }, {}]
        }, {
            classroomLeaderboard: () => ({}),
            leagueAndTournamentLeaderboard: (e, t) => ({
                wasUnlocked: e.wasUnlocked || t.wasUnlocked
            }),
            reaction: () => ({})
        }, (0,
        d.g)((async ({batch: e, batchKey: {userId: t}, resolveField: a}) => {
            const s = void 0 === e.leagueAndTournamentLeaderboard ? Promise.resolve(void 0) : c.dQ.get(c.dQ.getLeaguesLeaderboardId(), t, e.leagueAndTournamentLeaderboard.params.wasUnlocked)
              , n = void 0 === e.leagueAndTournamentLeaderboard ? Promise.resolve(void 0) : c.dQ.get(c.dQ.getTournamentLeaderboardId(), t, e.leagueAndTournamentLeaderboard.params.wasUnlocked)
              , r = void 0 === e.classroomLeaderboard ? [Promise.resolve(void 0), Promise.resolve(void 0)] : [c.dQ.get(c.dQ.SCHOOLS_CLASSROOM_LEADERBOARD_ID, t), c.bu.getUserClassroomLeaderboardInfo(t)]
              , [i,o,l,d] = await Promise.all([s, n, ...r])
              , u = await (async () => {
                var a, s;
                if (void 0 === e.reaction)
                    return;
                const n = (null == o ? void 0 : o.active) ? o : i || void 0
                  , r = null === (a = null != l ? l : n) || void 0 === a ? void 0 : a.active
                  , d = null === (s = null == r ? void 0 : r.cohort.rankings.find((e => e.userId === t))) || void 0 === s ? void 0 : s.reaction;
                return void 0 !== d ? d : c.dQ.getReactionUncohorted(c.dQ.getLeaguesLeaderboardId(), t)
            }
            )();
            a("classroomLeaderboard", ( () => {
                if (void 0 !== l && void 0 !== d) {
                    if (l.active) {
                        const e = l.active.cohort.rankings.reduce(( (e, t) => (e[t.userId] = t,
                        e)), {});
                        l.active.cohort.rankings = (0,
                        p.Y)(d.eligible_students.map((t => {
                            var a, s, n, r, i, o;
                            return {
                                avatarUrl: t.avatar_url,
                                displayName: t.display_name,
                                hasRecentActivity: null !== (s = null === (a = e[t.user_id]) || void 0 === a ? void 0 : a.hasRecentActivity) && void 0 !== s && s,
                                reaction: null !== (r = null === (n = e[t.user_id]) || void 0 === n ? void 0 : n.reaction) && void 0 !== r ? r : "NONE",
                                score: null !== (o = null === (i = e[t.user_id]) || void 0 === i ? void 0 : i.score) && void 0 !== o ? o : 0,
                                userId: t.user_id
                            }
                        }
                        )))
                    }
                    return {
                        alias: "classroom",
                        classroomId: d.classroom_id,
                        classroomName: d.classroom_name,
                        learningLanguageId: d.learning_language_id,
                        socialDisabledUsers: d.eligible_students.flatMap((e => e.social_enabled ? [] : [e.user_id])),
                        state: l
                    }
                }
            }
            )(), void 0),
            a("leagueAndTournamentLeaderboard", void 0 === i || void 0 === o ? void 0 : {
                leagues: i,
                tournament: o
            }, void 0),
            a("reaction", u, void 0)
        }
        ))))
          , h = ( () => {
            const e = (0,
            g.Q)((0,
            u.S)(( () => [null, null]), ( () => null), (0,
            d.g)((async ({batch: e, resolveIndexField: t}) => {
                const a = e => parseInt(e, 10);
                (await Promise.all(Object.keys(e).map((async e => {
                    var t;
                    try {
                        return [e, (await c.Vi.userInfoPartial(a(e), ["streak"])).streak, void 0]
                    } catch (a) {
                        return (0,
                        c.Hx)(a) && 404 === (null === (t = a.response) || void 0 === t ? void 0 : t.status) ? [e, null, void 0] : [e, void 0, a]
                    }
                }
                )))).forEach(( ([e,s,n]) => {
                    t(a(e), s, n)
                }
                ))
            }
            ))));
            return ({userId: t}) => e([t, null])
        }
        )();
        var _ = a(68903)
          , v = a(795)
          , f = a(48469)
          , S = a(72150)
          , y = a(19172)
          , E = a(74901)
          , b = a(87471)
          , I = a(95941)
          , w = a(58576);
        const k = (0,
        f.R)((e => e.user.classroomLeaderboardsEnabled))
          , T = (0,
        f.R)(s.P1(i.np, b.ud))
          , C = (0,
        _.p)(["network-result", "override"])
          , R = e => (t, a) => {
            if (!(e => {
                if ("object" != typeof e || null === e)
                    return !1;
                const {type: t} = e;
                return "string" == typeof t && C(t)
            }
            )(a))
                return e(t, a);
            switch (a.type) {
            case "override":
                {
                    const s = "function" == typeof a.value ? a.value(t) : a.value;
                    return e(t, {
                        type: "new-value",
                        value: s
                    })
                }
            case "network-result":
                return "network-failure" === a.result.type ? ((0,
                w.Kp)("Failed to fetch leaderboard", {
                    ex: a.result.ex,
                    sample: .01
                }),
                t) : e(t, {
                    type: "new-value",
                    value: a.result.value
                });
            default:
                throw (0,
                _.RJ)(a),
                Error(`Unhandled action type ${a.type}`)
            }
        }
          , L = ( () => {
            const e = (0,
            E.u)("classroomLeaderboard").withReducer(R(( (e, t) => {
                switch (t.type) {
                case "new-value":
                    return t.value;
                case "clear-ended":
                    return void 0 === e ? ((0,
                    w.Kp)("Attempting to clear ended leaderboard with no state"),
                    e) : (0,
                    v.tP)(e, ["state", "ended"], []);
                default:
                    throw (0,
                    _.RJ)(t),
                    Error(`Unhandled action type ${t.type}`)
                }
            }
            ))).build();
            return (0,
            o.d)("classroomLeaderboard", e, (e => {
                const t = e.untracked(r.DW);
                return void 0 !== t && e.untracked(k) ? [{
                    queryFn: m,
                    queryKey: ["classroomLeaderboard", {
                        userId: t
                    }]
                }] : []
            }
            ), {
                fetchOnMount: !1
            })
        }
        )()
          , P = e => {
            var t, a, s, n, r, i;
            if (void 0 === e)
                return;
            const o = (null === (t = e.leagues) || void 0 === t ? void 0 : t.ended) ? null === (a = null == e ? void 0 : e.leagues) || void 0 === a ? void 0 : a.ended[0] : void 0
              , l = (null === (s = null == e ? void 0 : e.tournament) || void 0 === s ? void 0 : s.ended) ? null === (n = null == e ? void 0 : e.tournament) || void 0 === n ? void 0 : n.ended[0] : void 0;
            return l && !o ? {
                alias: "tournament",
                status: l
            } : o && !l ? {
                alias: "leagues",
                status: o
            } : o && l ? (null === (r = null == o ? void 0 : o.contest) || void 0 === r ? void 0 : r.contestEnd) > (null === (i = null == l ? void 0 : l.contest) || void 0 === i ? void 0 : i.contestEnd) ? {
                alias: "leagues",
                status: o
            } : {
                alias: "tournament",
                status: l
            } : void 0
        }
          , A = ( () => {
            const e = (0,
            E.u)("baseLeaguesLeaderboard").withReducer(R(( (e, t) => {
                switch (t.type) {
                case "clear-ended":
                    {
                        if (void 0 === e)
                            return (0,
                            w.Kp)("Attempting to clear ended leaderboard with no state"),
                            e;
                        let t = e;
                        return t = (0,
                        v.tP)(t, ["leagues", "ended"], []),
                        t = (0,
                        v.tP)(t, ["tournament", "ended"], []),
                        t
                    }
                case "new-value":
                    {
                        const a = t.value;
                        return void 0 === a ? e : {
                            lastKnownEndedLeaderboard: ( () => {
                                var t, s, n;
                                const r = P(a);
                                return void 0 !== (null == r ? void 0 : r.status) && void 0 !== (null === (t = null == e ? void 0 : e.lastKnownEndedLeaderboard) || void 0 === t ? void 0 : t.status) && (null === (s = null == r ? void 0 : r.status.contest) || void 0 === s ? void 0 : s.contestEnd) > (null === (n = null == e ? void 0 : e.lastKnownEndedLeaderboard) || void 0 === n ? void 0 : n.status.contest.contestEnd) || void 0 === (null == e ? void 0 : e.lastKnownEndedLeaderboard) ? r : null == e ? void 0 : e.lastKnownEndedLeaderboard
                            }
                            )(),
                            leagues: ( () => {
                                const t = null == e ? void 0 : e.leagues.numSessionsRemainingToUnlock
                                  , s = a.leagues.numSessionsRemainingToUnlock;
                                return (0,
                                v.t8)(a.leagues, "numSessionsRemainingToUnlock", void 0 === t || void 0 === s ? s : Math.max(0, Math.min(t, s)))
                            }
                            )(),
                            tournament: a.tournament
                        }
                    }
                default:
                    throw (0,
                    _.RJ)(t),
                    Error(`Unhandled action type ${t.type}`)
                }
            }
            ))).build();
            return (0,
            o.d)("baseLeaguesLeaderboard", e, (e => {
                const t = e.untracked(T)
                  , a = e.untracked(r.DW);
                if (!t || void 0 === a)
                    return [];
                const s = e.untracked(x);
                return [{
                    queryFn: m,
                    queryKey: ["leagueAndTournamentLeaderboard", {
                        userId: a,
                        wasUnlocked: s
                    }]
                }]
            }
            ), {
                fetchOnMount: !1,
                queryKeyHasher: ([e,t]) => [e, n.CE(t, "wasUnlocked")]
            })
        }
        )()
          , D = (0,
        y.f)("tournamentState").derivedTracked((e => {
            var t;
            return null === (t = e(A)) || void 0 === t ? void 0 : t.tournament
        }
        )).build()
          , O = (0,
        y.f)("leaguesLeaderboard").derivedTracked((e => (e => {
            if (void 0 === e)
                return;
            const {leagues: t, tournament: a, lastKnownEndedLeaderboard: s} = e;
            if (null == a ? void 0 : a.active)
                return {
                    alias: "tournament",
                    state: a
                };
            if (t.active)
                return {
                    alias: "leagues",
                    state: t
                };
            const n = "leagues" === (null == s ? void 0 : s.alias) && (null == s ? void 0 : s.status.cohort.tier) === I.WP.length - 1 && (null == s ? void 0 : s.status.isPromoted);
            return a && n ? {
                alias: "tournament",
                state: {
                    ...a,
                    tier: 0
                }
            } : "tournament" !== (null == s ? void 0 : s.alias) || !0 !== (null == s ? void 0 : s.status.isLoser) && !0 !== (null == s ? void 0 : s.status.isDemoted) && !0 !== (null == s ? void 0 : s.status.isWinner) || !t ? "tournament" === (null == s ? void 0 : s.alias) && (null == s ? void 0 : s.status.isPromoted) && a ? {
                alias: "tournament",
                state: a
            } : (null == s || s.alias,
            {
                alias: "leagues",
                state: t
            }) : {
                alias: "leagues",
                state: t
            }
        }
        )(e(A)))).build()
          , N = (0,
        y.f)("endedLeaderboard").derivedTracked((e => P(e(A)))).build()
          , x = (0,
        y.f)("leaguesLeaderboard.isUnlocked").selected(O, ( ({value: e}) => 0 === (null == e ? void 0 : e.state.numSessionsRemainingToUnlock))).build()
          , M = (0,
        o.d)("leaderboardReaction", (0,
        E.u)("leaderboardReaction").withReducer(R(( (e, t) => {
            if ("new-value" === t.type)
                return t.value;
            throw (0,
            _.RJ)(t.type),
            Error(`Unhandled action type ${t.type}`)
        }
        ))).build(), (e => {
            const t = e.untracked(r.DW);
            return void 0 === t ? [] : [{
                queryFn: m,
                queryKey: ["reaction", {
                    userId: t
                }]
            }]
        }
        ))
          , F = (0,
        E.u)("leaderboardSessionEndData").withReducer(( (e, t) => {
            const a = "leaderboardMoveUpPrompt" !== t.slideType ? (void 0 !== (null === (s = null == e ? void 0 : e.moveUpPrompts) || void 0 === s ? void 0 : s.numShown) && e.moveUpPrompts.numShown > 0 && t.cohortId !== e.moveUpPrompts.cohortId && (0,
            w.um)("Cohort changed, but move-up prompt count did not reset", {
                data: {
                    numShown: null === (n = null == e ? void 0 : e.moveUpPrompts) || void 0 === n ? void 0 : n.numShown,
                    slideType: t.slideType
                },
                sample: .1
            }),
            null !== (i = null === (r = null == e ? void 0 : e.moveUpPrompts) || void 0 === r ? void 0 : r.numShown) && void 0 !== i ? i : 0) : void 0 === e || t.cohortId !== e.moveUpPrompts.cohortId ? 1 : e.moveUpPrompts.numShown + 1;
            var s, n, r, i;
            return {
                lastShownDate: t.shownDate,
                moveUpPrompts: {
                    cohortId: t.cohortId,
                    numShown: a
                }
            }
        }
        )).build()
          , U = ( () => {
            const e = (0,
            E.u)("leaderboardStreaks").withReducer(( (e, t) => {
                if ("network-failure" === t.result.type)
                    return (0,
                    w.Kp)("Failed to fetch leaderboard streak", {
                        ex: t.result.ex
                    }),
                    e;
                const {cohortId: a, userId: s} = t.queryKey;
                return a !== (null == e ? void 0 : e.cohortId) ? {
                    cohortId: a,
                    streakLengths: {
                        [t.queryKey.userId]: t.result.value
                    }
                } : (0,
                v.tP)(e, ["streakLengths", s], t.result.value)
            }
            )).build();
            return (0,
            o.d)("leaderboardStreaks", e, (t => {
                const a = t(V)
                  , s = t(G);
                if (void 0 === a || void 0 === s || !t.untracked(S.tD))
                    return [];
                const n = t.untracked(e);
                return s.flatMap((e => (null == n ? void 0 : n.cohortId) === a && void 0 !== n.streakLengths[e] ? [] : [{
                    queryFn: h,
                    queryKey: {
                        cohortId: a,
                        userId: e
                    }
                }]))
            }
            ), {
                blockOnDependencies: !1
            })
        }
        )()
          , H = (0,
        y.f)("leaderboard").derivedTracked((e => e.untracked(k) ? e(L) : e(O))).write(( (e, t, {}, a, s) => {
            const n = e(k) ? "classroom" : "leagues";
            a.alias !== n && (0,
            w.Kp)("Attempted to set unexpected leaderboard", {
                data: {
                    expectedLeaderboard: n,
                    newLeaderboard: a.alias
                }
            }),
            "classroom" === a.alias ? t(...(0,
            l.p)(L, a, s)) : t(...(0,
            l.p)(A, (e => {
                if (void 0 !== e)
                    return {
                        ...e,
                        [a.alias]: a.state
                    }
            }
            ), s))
        }
        )).build()
          , G = (0,
        y.f)("activeCohortUserIds").selectedTracked(H, (e => {
            var t;
            return null === (t = null == e ? void 0 : e.state.active) || void 0 === t ? void 0 : t.cohort.rankings.map((e => e.userId))
        }
        ), n.Xy).build()
          , V = (0,
        y.f)("activeCohortId").selectedTracked(H, (e => {
            var t;
            return null === (t = null == e ? void 0 : e.state.active) || void 0 === t ? void 0 : t.cohort.id
        }
        )).build()
          , z = [A, L, M, U]
    }
    ,
    33124: (e, t, a) => {
        "use strict";
        a.d(t, {
            Fh: () => _,
            Bp: () => h,
            PD: () => v,
            hO: () => m
        });
        var s = a(40893)
          , n = a(42659)
          , r = a(18867)
          , i = a(75532)
          , o = a(795)
          , l = a(48469)
          , c = a(87443)
          , d = a(19172)
          , u = a(7515)
          , g = a(87471)
          , p = a(81621);
        const m = (0,
        d.f)("setLeaderboardReaction").write(( (e, t, a) => {
            const n = e(s.DW)
              , i = e((0,
            u.P)(c.iW, "value"));
            if (void 0 === n)
                throw Error("Cannot set reaction without user ID");
            t(c.QR, {
                applyOptimisticUpdate: () => a,
                execute: async ({update: e}) => {
                    void 0 === i ? await r.dQ.setReactionUncohorted(r.dQ.getLeaguesLeaderboardId(), n, a) : await r.dQ.setReactionCohorted(i, n, a),
                    e({
                        type: "override",
                        value: a
                    })
                }
                ,
                resolveMutationConflict: () => "race",
                resolveQueryConflict: () => "superseded"
            })
        }
        )).build()
          , h = (0,
        d.f)("recordedSessionForLeaderboard").write(( (e, t) => {
            t(...(0,
            i.p)(c.ju, (e => {
                if (void 0 === (null == e ? void 0 : e.leagues))
                    return e;
                const {numSessionsRemainingToUnlock: t} = e.leagues;
                return void 0 === t ? e : (0,
                o.tP)(e, ["leagues", "numSessionsRemainingToUnlock"], t - 1)
            }
            ), "unaffected"))
        }
        )).build()
          , _ = (0,
        d.f)("completeLeaderboard").write(( (e, t, a) => {
            if ("leagues" === a) {
                const t = e((0,
                l.R)(n.np));
                if (!(0,
                p.Ud)(t) || !(0,
                g.ud)(t))
                    return
            }
            const i = e(s.DW);
            var o, d;
            t(...(o = "classroom" === a ? c.BW : c.ju,
            d = {
                execute: async ({update: e}) => {
                    e({
                        type: "clear-ended"
                    }),
                    await r.dQ.patch("classroom" === a ? r.dQ.SCHOOLS_CLASSROOM_LEADERBOARD_ID : "tournament" === a ? r.dQ.getTournamentLeaderboardId() : r.dQ.getLeaguesLeaderboardId(), i)
                }
                ,
                resolveMutationConflict: () => "race",
                resolveQueryConflict: () => "invalidated"
            },
            [o, d]))
        }
        )).build()
          , v = (0,
        d.f)("refetchLeaderboardData").write(( (e, t) => {
            t(c.ju.refetch, "refetch"),
            t(c.BW.refetch, "refetch"),
            t(c.QR.refetch, "refetch")
        }
        )).build()
    }
    ,
    71752: (e, t, a) => {
        "use strict";
        a.d(t, {
            q: () => r
        });
        var s = a(1930)
          , n = a(1965);
        const r = e => t => {
            const {addComments: a, build: r} = (0,
            n.r)(t)
              , i = (...n) => {
                const i = i => {
                    const o = o => {
                        const l = e => o(0 === n.length || null != e ? e : n[0]);
                        return a({
                            ...r(( () => e(t, i, (e => (0,
                            s.cn)(l(e)))))),
                            withReducer: a => r(( () => e(t, i, (e => (0,
                            s.w0)(l(e), a)))))
                        })
                    }
                    ;
                    return a({
                        transformInitialValue: o,
                        ...o((e => e)),
                        withBaseAtom: a => r(( () => e(t, i, a)))
                    })
                }
                ;
                return a({
                    selectPersistedValue: i,
                    ...i((e => e))
                })
            }
            ;
            return a({
                withDefault: i,
                ...i(void 0)
            })
        }
    }
    ,
    33956: (e, t, a) => {
        "use strict";
        a.d(t, {
            M: () => r
        });
        var s = a(1930)
          , n = a(19172);
        const r = e => (t, a, r=s.cn) => {
            const i = a => (0,
            n.f)(`${e.debugLabel}.${t}.${a}`)
              , o = i("substate").derived((a => a(e).substate(t))).build()
              , l = i("baseAtom").derived((e => r(e(o).get()))).build();
            return i("persistedAtom").derived((e => e(e(l)))).write(( (e, t, s) => {
                const n = e(l);
                t(n, s);
                const r = a(e(n));
                e(o).set(( () => r))
            }
            )).build()
        }
    }
    ,
    1965: (e, t, a) => {
        "use strict";
        a.d(t, {
            r: () => s
        });
        const s = e => {
            const t = e => e;
            return {
                addComments: t,
                build: t => ({
                    build: () => {
                        return a = t(),
                        s = e,
                        a.debugLabel = s,
                        a;
                        var a, s
                    }
                })
            }
        }
    }
    ,
    19172: (e, t, a) => {
        "use strict";
        a.d(t, {
            f: () => o
        });
        var s = a(80254)
          , n = a(1930)
          , r = a(1965)
          , i = a(2670);
        const o = e => {
            const {addComments: t, build: a} = (0,
            r.r)(e)
              , l = e => t({
                ...a(e),
                onMount: s => t({
                    build: () => {
                        const t = a(e).build();
                        return t.onMount = s,
                        t
                    }
                })
            })
              , c = (e, a) => {
                const s = s => {
                    const n = t => d((t => s(e(t)))).write(( (e, s, ...n) => a(e, s, ...t(...n))));
                    return t({
                        ...n(( (...e) => e)),
                        transformWriteArgs: n
                    })
                }
                ;
                return t({
                    ...s((e => e)),
                    transformValue: s
                })
            }
              , d = e => t({
                ...a(( () => (0,
                n.cn)(e))),
                write: t => l(( () => (0,
                n.cn)(e, t)))
            });
            return t({
                deref: t => c((e => {
                    const a = t(e);
                    if (void 0 !== a)
                        return e(a)
                }
                ), ( (a, s, ...n) => {
                    const r = t(a);
                    if (void 0 === r)
                        throw Error(`Attempted to write to a deref atom with no sub-atom (atom: ${e})`);
                    s(r, ...n)
                }
                )),
                derefTracked: a => {
                    const s = c((0,
                    i.wI)((e => {
                        const t = a(e);
                        if (void 0 !== t)
                            return e(t)
                    }
                    )), ( (t, s, ...n) => {
                        const r = (0,
                        i.wI)(a)(t).value;
                        if (void 0 === r)
                            throw Error(`Attempted to write to a deref atom with no sub-atom (atom: ${e})`);
                        s(r, ...n)
                    }
                    ));
                    return t({
                        ...s,
                        transformValue: e => s.transformValue((t => ({
                            deps: t.deps,
                            value: e(t.value)
                        })))
                    })
                }
                ,
                derived: d,
                derivedTracked: e => d((0,
                i.wI)(e)),
                primitive: e => {
                    if ("function" == typeof e)
                        throw Error("primitive atom cannot be a function");
                    return t({
                        ...l(( () => (0,
                        n.cn)(e))),
                        reducer: t => l(( () => (0,
                        n.w0)(e, t))),
                        write: t => l(( () => (0,
                        n.cn)(e, t)))
                    })
                }
                ,
                primitiveLazy: a => {
                    const n = s.IH(( () => o(e).primitive(a()).build()))
                      , r = o(`${e}.lazy`).derived((e => e(n())));
                    return t({
                        ...r,
                        reducer: e => r.write(( (t, a, s) => a(n(), e(t(n()), s))))
                    })
                }
                ,
                selected: (e, t, s=Object.is) => a(( () => (0,
                n.kv)(e, (e => t(e)), s))),
                selectedTracked: (e, t, s=Object.is) => a(( () => (0,
                n.kv)(e, ( ({value: a}) => {
                    const s = t(a);
                    return {
                        deps: [e],
                        value: s
                    }
                }
                ), ( (e, t) => s(e.value, t.value))))),
                write: e => l(( () => (0,
                n.cn)(null, e)))
            })
        }
    }
    ,
    7515: (e, t, a) => {
        "use strict";
        a.d(t, {
            P: () => i
        });
        var s = a(80254)
          , n = a(1930);
        const r = s.HP((e => t => t[e]))
          , i = (e, t) => {
            const a = r(t)
              , s = (0,
            n.kv)(e, a);
            return void 0 === s.debugLabel && (s.debugLabel = `${e.debugLabel}["${t}"]`),
            s
        }
    }
    ,
    2670: (e, t, a) => {
        "use strict";
        a.d(t, {
            wI: () => i,
            xQ: () => o
        });
        var s = a(1930)
          , n = a(7515)
          , r = a(73573);
        const i = e => t => {
            const a = []
              , s = e => (a.push(e),
            t((0,
            n.P)(e, "value")));
            s.record = e => a.push(e),
            s.untracked = t;
            const r = e(s);
            return {
                deps: a,
                value: r
            }
        }
          , o = (0,
        r.V)(( (e, t, a=Object.is) => {
            const r = (0,
            s.kv)((0,
            n.P)(e, "value"), ( (s, n) => {
                const r = t(s);
                return void 0 === n ? {
                    deps: [e],
                    value: r
                } : a(r, n.value) ? n : {
                    deps: n.deps,
                    value: r
                }
            }
            ), ( (e, t) => a(e.value, t.value)));
            return r.debugLabel = `${e.debugLabel}.select(${t.name})`,
            r
        }
        ))
    }
    ,
    74901: (e, t, a) => {
        "use strict";
        a.d(t, {
            u: () => i
        });
        var s = a(43633)
          , n = a(71752);
        const r = (0,
        a(33956).M)(s.ok)
          , i = (0,
        n.q)(r)
    }
    ,
    67116: (e, t, a) => {
        "use strict";
        a.d(t, {
            h9: () => O,
            Py: () => f,
            vI: () => c,
            yu: () => m,
            M$: () => u,
            b7: () => g,
            Jl: () => E,
            lx: () => w,
            vY: () => I,
            BE: () => p,
            Ux: () => k,
            l: () => d,
            k4: () => x,
            D3: () => S,
            TS: () => b,
            zp: () => P,
            nV: () => A,
            jO: () => T,
            OK: () => R,
            vx: () => D,
            Dz: () => y
        });
        var s = a(80254);
        const n = JSON.parse('{"ar":{"abbrev":"ar","label":"العربية","name":"Arabic","script_direction":"rtl","status":{"localization_status":"live"}},"bn":{"abbrev":"bn","label":"বাংলা","name":"Bengali","script_direction":"ltr","status":{"localization_status":"live"}},"ca":{"abbrev":"ca","label":"català","name":"Catalan","script_direction":"ltr","status":{"localization_status":"limited_use"}},"cs":{"abbrev":"cs","label":"Čeština","name":"Czech","script_direction":"ltr","status":{"localization_status":"live"}},"cy":{"abbrev":"cy","label":"Cymraeg","name":"Welsh","script_direction":"ltr","status":{"localization_status":"limited_use"}},"da":{"abbrev":"da","label":"dansk","name":"Danish","script_direction":"ltr","status":{"localization_status":"limited_use"}},"de":{"abbrev":"de","label":"Deutsch","name":"German","script_direction":"ltr","status":{"localization_status":"live"}},"el":{"abbrev":"el","label":"Ελληνικά","name":"Greek","script_direction":"ltr","status":{"localization_status":"live"}},"en":{"abbrev":"en","label":"English","name":"English","script_direction":"ltr","status":{"localization_status":"live"}},"eo":{"abbrev":"eo","label":"Esperanto","name":"Esperanto","script_direction":"ltr","status":{"localization_status":"limited_use"}},"es":{"abbrev":"es","label":"Español","name":"Spanish","script_direction":"ltr","status":{"localization_status":"live"}},"fi":{"abbrev":"fi","label":"suomen kieli","name":"Finnish","script_direction":"ltr","status":{"localization_status":"limited_use"}},"fr":{"abbrev":"fr","label":"Français","name":"French","script_direction":"ltr","status":{"localization_status":"live"}},"ga":{"abbrev":"ga","label":"Gaeilge","name":"Irish","script_direction":"ltr","status":{"localization_status":"limited_use"}},"gd":{"abbrev":"gd","label":"Gàidhlig","name":"Scottish Gaelic","script_direction":"ltr","status":{"localization_status":"limited_use"}},"gn":{"abbrev":"gn","label":"Avañe\'ẽ","name":"Guarani","script_direction":"ltr","status":{"localization_status":"limited_use"}},"he":{"abbrev":"he","label":null,"name":"Hebrew","script_direction":"rtl","status":{"localization_status":"limited_use"}},"hi":{"abbrev":"hi","label":"हिंदी","name":"Hindi","script_direction":"ltr","status":{"localization_status":"live"}},"ht":{"abbrev":"ht","label":"Kreyòl ayisyen","name":"Haitian Creole","script_direction":"ltr","status":{"localization_status":"limited_use"}},"hu":{"abbrev":"hu","label":"Magyar","name":"Hungarian","script_direction":"ltr","status":{"localization_status":"live"}},"hv":{"abbrev":"hv","label":"Valyria","name":"High Valyrian","script_direction":"ltr","status":{"localization_status":"limited_use"}},"hw":{"abbrev":"hw","label":"Ōlelo Hawaiʻi","name":"Hawaiian","script_direction":"ltr","status":{"localization_status":"limited_use"}},"id":{"abbrev":"id","label":"Bahasa Indonesia","name":"Indonesian","script_direction":"ltr","status":{"localization_status":"live"}},"it":{"abbrev":"it","label":"Italiano","name":"Italian","script_direction":"ltr","status":{"localization_status":"live"}},"ja":{"abbrev":"ja","label":"日本語","name":"Japanese","script_direction":"ltr","status":{"localization_status":"live"}},"ko":{"abbrev":"ko","label":"한국어","name":"Korean","script_direction":"ltr","status":{"localization_status":"live"}},"la":{"abbrev":"la","label":"Lingua latīna","name":"Latin","script_direction":"ltr","status":{"localization_status":"limited_use"}},"nl-NL":{"abbrev":"dn","label":"Nederlands","name":"Dutch","script_direction":"ltr","status":{"localization_status":"live"}},"no-BO":{"abbrev":"nb","label":"bokmål","name":"Norwegian (Bokmål)","script_direction":"ltr","status":{"localization_status":"limited_use"}},"nv":{"abbrev":"nv","label":"Diné bizaad","name":"Navajo","script_direction":"ltr","status":{"localization_status":"limited_use"}},"pl":{"abbrev":"pl","label":"Polski","name":"Polish","script_direction":"ltr","status":{"localization_status":"live"}},"pt":{"abbrev":"pt","label":"Português","name":"Portuguese","script_direction":"ltr","status":{"localization_status":"live"}},"ro":{"abbrev":"ro","label":"Română","name":"Romanian","script_direction":"ltr","status":{"localization_status":"live"}},"ru":{"abbrev":"ru","label":"Русский","name":"Russian","script_direction":"ltr","status":{"localization_status":"live"}},"sv":{"abbrev":"sv","label":"svenska","name":"Swedish","script_direction":"ltr","status":{"localization_status":"live"}},"sw":{"abbrev":"sw","label":"Kiswahili","name":"Swahili","script_direction":"ltr","status":{"localization_status":"limited_use"}},"ta":{"abbrev":"ta","label":"தமிழ்","name":"Tamil","script_direction":"ltr","status":{"localization_status":"live"}},"te":{"abbrev":"te","label":"తెలుగు","name":"Telugu","script_direction":"ltr","status":{"localization_status":"live"}},"th":{"abbrev":"th","label":"ภาษาไทย","name":"Thai","script_direction":"ltr","status":{"localization_status":"live"}},"tl":{"abbrev":"tl","label":"Tagalog","name":"Tagalog","script_direction":"ltr","status":{"localization_status":"live"}},"tlh":{"abbrev":"kl","label":"tlhIngan Hol","name":"Klingon","script_direction":"ltr","status":{"localization_status":"limited_use"}},"tr":{"abbrev":"tr","label":"Türkçe","name":"Turkish","script_direction":"ltr","status":{"localization_status":"live"}},"uk":{"abbrev":"uk","label":"Українською","name":"Ukrainian","script_direction":"ltr","status":{"localization_status":"live"}},"vi":{"abbrev":"vi","label":"Tiếng Việt","name":"Vietnamese","script_direction":"ltr","status":{"localization_status":"live"}},"xx-ZB":{"abbrev":"xz","label":"Español","name":"Spanish","script_direction":"ltr","status":{"localization_status":"not_supported"}},"yi":{"abbrev":"yi","label":"ייִדיש","name":"Yiddish","script_direction":"rtl","status":{"localization_status":"limited_use"}},"zh":{"abbrev":"zs","label":"中文","name":"Chinese","script_direction":"ltr","status":{"localization_status":"live"}},"zh-HK":{"abbrev":"zc","label":"廣東話","name":"Chinese (Cantonese)","script_direction":"ltr","status":{"localization_status":"limited_use"}},"zu":{"abbrev":"zu","label":"isiZulu","name":"Zulu","script_direction":"ltr","status":{"localization_status":"limited_use"}}}');
        var r = a(49695)
          , i = a(86500)
          , o = a(68903)
          , l = a(58576);
        const c = (e, t) => "zh" === e ? t ? "zh-TW" : "zh-CN" : R(e) ? e : "en"
          , d = e => {
            const {pathname: t, search: a, hash: s} = window.location;
            return `//${c(e, !1).toLowerCase()}.duolingo.com${t}${a}${s}`
        }
          , u = e => e.startsWith("zh") ? "zh" : e.startsWith("nl") ? "nl" : C(e) ? e : ((0,
        l.vU)("UI language not able to be converted to LanguageId.", {
            data: {
                languageId: e
            }
        }),
        "en")
          , g = e => ["bn", "hi", "pa", "ta", "te", "tl", "uk"].includes(e) ? "auto" : "nl-NL" === e ? "nl" : "zh-CN" === e ? "zh" : e
          , p = () => {
            var e;
            return (null === (e = navigator.languages) || void 0 === e ? void 0 : e[0]) || navigator.language || "en"
        }
          , m = e => {
            const t = e.split("-")[0].toLowerCase();
            return "zh" === t ? e.includes("TW") || e.includes("Hant") ? "zh-TW" : "zh-CN" : "nl" === t ? "nl-NL" : R(t) ? t : "en"
        }
          , h = s.Xc(n, (e => e.abbrev))
          , _ = s.U_(h)
          , v = s.jj(Object.entries(n).filter(( ([,e]) => ["live", "visible"].includes(e.status.localization_status))).flatMap(( ([e]) => "zh" === e ? ["zh-CN", "zh-TW"] : e)))
          , f = e => _[e]
          , S = e => h[e]
          , y = Object.keys(n)
          , E = s.Xc(s.vM(r.W.filter((e => !(0,
        i.H)(e.fromLanguageId, e.learningLanguageId) && e.status.supportsUserActivity)), "fromLanguageId"), (e => s.jg(e, "learningLanguageId").sort()))
          , b = e => {
            if (void 0 === e)
                throw Error("Course is undefined when checking if it is a beta course. It could be caused by the user being languageless.");
            return "BETA" === e.status
        }
          , I = e => n[e].name
          , w = e => n[e].label
          , k = e => n[e].script_direction
          , T = (0,
        o.p)(y)
          , C = ((0,
        o.p)(s.XP(_)),
        (0,
        o.p)(["ar", "bn", "cs", "de", "el", "en", "es", "fr", "hi", "hu", "id", "it", "ja", "ko", "nl", "pa", "pl", "pt", "ro", "ru", "sv", "ta", "te", "th", "tl", "tr", "uk", "vi", "zh"]))
          , R = (0,
        o.p)(v)
          , L = s.Xc(s.vM(r.W, "fromLanguageId"), (e => s.jg(e, "learningLanguageId").sort()))
          , P = (e, t) => {
            var a;
            return !0 === (null === (a = L[t]) || void 0 === a ? void 0 : a.includes(e))
        }
          , A = (e, t) => {
            var a;
            return !0 === (null === (a = E[t]) || void 0 === a ? void 0 : a.includes(e))
        }
          , D = e => ["zh-CN", "zh-TW", "zs"].includes(e)
          , O = (N = window.duo.uiLanguage).startsWith("zh") ? "zh" : T(N) ? N : ((0,
        l.vU)("UI language not able to be converted to LanguageId.", {
            data: {
                languageId: N
            }
        }),
        "en");
        var N;
        const x = (e, t) => !(["ja", "th", "zh", "zh-HK"].includes(e) && t.every((e => 1 === e.value.length)))
    }
    ,
    1398: (e, t, a) => {
        "use strict";
        a.d(t, {
            $6: () => i,
            NL: () => r,
            ZP: () => o
        });
        var s = a(27378)
          , n = a(61429);
        const r = e => "preload"in e
          , i = e => (0,
        n.Z)(e.hasLoaded, (async () => (await e.preload(),
        !0)), [])
          , o = e => {
            let t, a, n = "uninitialized";
            const r = async () => {
                t = e(),
                n = "pending";
                try {
                    a = (await t).default,
                    n = "resolved"
                } catch (e) {
                    a = e,
                    n = "rejected"
                }
            }
              , i = s.forwardRef(( (e, i) => {
                if ("uninitialized" === n && r(),
                "resolved" === n)
                    return s.createElement(a, {
                        ...e,
                        ref: i
                    });
                throw null != a ? a : t
            }
            ));
            return i.hasLoaded = () => "resolved" === n,
            i.getError = () => "rejected" === n ? a : void 0,
            i.isLoading = () => "pending" === n,
            i.preload = async () => {
                "uninitialized" === n && r(),
                await t
            }
            ,
            i
        }
    }
    ,
    87471: (e, t, a) => {
        "use strict";
        a.d(t, {
            Cv: () => D,
            Ep: () => b,
            NO: () => E,
            PR: () => v,
            TL: () => C,
            Tm: () => T,
            XU: () => k,
            Yw: () => h,
            ZL: () => S,
            c$: () => I,
            d0: () => L,
            em: () => w,
            fY: () => R,
            hn: () => f,
            pW: () => A,
            u4: () => y,
            ud: () => P,
            vl: () => _
        });
        var s = a(65908)
          , n = a(66586)
          , r = a(25324)
          , i = a(18867)
          , o = a(80388)
          , l = a(17135)
          , c = a(64115)
          , d = a(95940)
          , u = a(795)
          , g = a(95941)
          , p = a(81621)
          , m = a(20028);
        const h = (e, t) => t.filter((t => "CURRENCY" === t.rewardType && (t.tier === e || null === t.tier))).reduce(( (e, t) => (e[t.rank] = t.itemQuantity,
        e)), {})
          , _ = (e, t, a) => e.filter((e => e.tier === t && (e.rankRange && e.rankRange.length > 1 ? a >= e.rankRange[0] && a <= e.rankRange[1] : e.rank === a)))
          , v = (e, t) => {
            if (!(null === t || e >= t.length))
                return t[e]
        }
          , f = (e, t) => {
            if (null !== t && 0 !== e)
                return t[e - 1]
        }
          , S = (e, t) => !!t && e < t
          , y = (e, t, a) => !!a && t - e - 1 < a
          , E = (e, t) => {
            var a, s, n;
            const r = t.map(( ({cohort: {rankings: e}}) => e.map(( ({userId: e}) => e))))
              , i = t.map(( ({cohort: {tier: e}}) => e))
              , o = t.map(( ({contest: {ruleset: {rewards: e}}}) => e))
              , l = r.map((t => t.indexOf(e)))
              , c = l[l.length - 1]
              , d = i[i.length - 1]
              , u = t[t.length - 1]
              , g = u.contest.ruleset
              , p = g.cohortSize
              , m = v(d, g.numPromoted)
              , _ = f(d, g.numDemoted)
              , E = null !== (a = u.isPromoted) && void 0 !== a ? a : S(c, m)
              , b = null !== (n = null !== (s = u.isDemoted) && void 0 !== s ? s : u.isLoser) && void 0 !== n ? n : y(c, p, _);
            return {
                lingots: t.map(( ({}, e) => h(i[e], o[e])[l[e]] || 0)).reduce(( (e, t) => e + t), 0),
                rank: E ? "PROMOTED" : b ? "DEMOTED" : "STAY"
            }
        }
          , b = (e, t, a, s, n, r) => {
            if (r) {
                if (S(e, s))
                    return "DIAMOND_TOP";
                if (y(e, t, a))
                    return "DIAMOND_BOTTOM"
            }
            return 0 === e ? "GOLD" : 1 === e ? "SILVER" : 2 === e ? "BRONZE" : S(e, s) ? "GREEN" : y(e, t, a) ? "RED" : n ? "GRAY" : "WHITE"
        }
          , I = (e, t, a) => {
            var s, n, r, i;
            if ((null === (s = null == e ? void 0 : e.leaderboard) || void 0 === s ? void 0 : s.activeContest) && e.active) {
                const {cohortSize: s, numDemoted: o, numPromoted: c, numLosers: d, numWinners: u} = e.leaderboard.activeContest.ruleset
                  , g = null !== (n = e.active.cohort.tier) && void 0 !== n ? n : e.tier
                  , p = e.active.cohort.rankings
                  , m = T(p, e.active.userId)
                  , h = g !== e.tier
                  , _ = Date.now()
                  , E = h && g === (null == c ? void 0 : c.length) ? u : v(g, c)
                  , b = h && 0 === g ? d : f(g, o);
                if (e.ended && e.ended.length >= 1 && e.active.cohort.rankings.length >= 5)
                    return {
                        lastPositionSeen: void 0,
                        lastScoreSeen: void 0,
                        type: "leaderboardJoin"
                    };
                if (t && t.placesMoved >= 1) {
                    if (m <= 2 && t.lastPositionSeen >= 3)
                        return {
                            lastPositionSeen: t.lastPositionSeen,
                            lastScoreSeen: t.lastScoreSeen,
                            type: "leaderboardTopThree"
                        };
                    if (!S(t.lastPositionSeen, E) && S(m, E))
                        return {
                            lastPositionSeen: t.lastPositionSeen,
                            lastScoreSeen: t.lastScoreSeen,
                            type: "leaderboardPromoZone"
                        };
                    if (y(t.lastPositionSeen, s, b) && !y(m, s, b))
                        return {
                            lastPositionSeen: t.lastPositionSeen,
                            lastScoreSeen: t.lastScoreSeen,
                            type: "leaderboardDemoZone"
                        };
                    if (t.placesMoved >= 3)
                        return {
                            lastPositionSeen: t.lastPositionSeen,
                            lastScoreSeen: t.lastScoreSeen,
                            type: "leaderboardRankIncreaseLarge"
                        };
                    if (t.placesMoved > 0 && t.placesMoved < 3)
                        return {
                            lastPositionSeen: t.lastPositionSeen,
                            lastScoreSeen: t.lastScoreSeen,
                            type: "leaderboardRankIncreaseSmall"
                        }
                } else if (m >= 1 && p[m - 1].score - p[m].score <= 10 && p[m - 1].score - p[m].score > 0 && (0,
                l.aW)(e.active.cohort.creationDate, _) >= 1 && (0,
                l.aW)(null !== (r = null == a ? void 0 : a.lastShownDate) && void 0 !== r ? r : 0, _) >= 1 && (null !== (i = null == a ? void 0 : a.moveUpPrompts.numShown) && void 0 !== i ? i : 0) < 4)
                    return {
                        lastPositionSeen: void 0,
                        lastScoreSeen: void 0,
                        type: "leaderboardMoveUpPrompt"
                    }
            }
        }
          , w = e => {
            if (!e)
                return "default";
            const t = (0,
            c.ky)("debugLeaderboards");
            if (t && ["wait", "register", "maintenance", "locked"].includes(t))
                return t;
            const {active: a, ended: s, leaderboard: n, numSessionsRemainingToUnlock: r, tier: i} = e;
            if (!(null == n ? void 0 : n.activeContest) || !(null == a ? void 0 : a.contest) && !(null == s ? void 0 : s.length) && 0 === r && -1 === i)
                return "maintenance";
            const {activeContest: {registrationState: o}} = n;
            if (void 0 !== r && r > 0)
                return "locked";
            if (!a && "CLOSED" === o)
                return "wait";
            if (!a && "OPEN" === o)
                return "register";
            if (a)
                return "contest";
            throw Error("No view applicable for current league state")
        }
          , k = e => {
            switch (e) {
            case 0:
                return n;
            case 1:
                return r;
            case 2:
                return s;
            default:
                return
            }
        }
          , T = (e, t) => e.findIndex((e => e.userId === t))
          , C = ({forceFinalRank: e, rankings: t, score: a, userId: s}) => {
            const n = T(t, s)
              , r = (0,
            u.tP)(t, [n, "score"], a)
              , i = (0,
            u.qj)(r);
            if (void 0 !== e && e >= 0 && e < t.length) {
                if (e === n)
                    return i;
                const t = Math.min(e, n)
                  , a = Math.max(e, n)
                  , s = e === t ? -1 : 1;
                return i.map(( (i, o) => o === e ? r[n] : o < t || o > a ? i : r[o + s]))
            }
            return i.sort(( (e, t) => e.score > t.score ? -1 : e.score < t.score ? 1 : 0))
        }
          , R = e => (0,
        m.jq)(e) && !(0,
        p.VY)(e)
          , L = (e, t) => !(0,
        o.J9)() && (0,
        m.jq)(e) && (!(0,
        p.VY)(e) || void 0 !== t.ipCountry && (0,
        d.KJ)(t.ipCountry)) && !e.classroomLeaderboardsEnabled
          , P = e => (0,
        p.Ud)(e) && !e.classroomLeaderboardsEnabled
          , A = (e, t) => {
            var a;
            return null === (a = null == e ? void 0 : e.state.active) || void 0 === a ? void 0 : a.cohort.rankings.find((e => e.userId === t))
        }
          , D = e => {
            var t, a, s, n, r;
            return {
                can_advance_to_tournament: "leagues" === (null == e ? void 0 : e.alias) && (null === (t = e.state.active) || void 0 === t ? void 0 : t.cohort.tier) === g.WP.length - 1 && (null !== (n = null === (s = null === (a = null == e ? void 0 : e.state.leaderboard) || void 0 === a ? void 0 : a.activeContest) || void 0 === s ? void 0 : s.ruleset.numWinners) && void 0 !== n ? n : 0) > 0,
                leaderboard_id: ( () => {
                    if (void 0 !== (null == e ? void 0 : e.state.active) && "classroom" !== (null == e ? void 0 : e.alias))
                        return "tournament" === (null == e ? void 0 : e.alias) ? i.dQ.getTournamentLeaderboardId() : i.dQ.getLeaguesLeaderboardId()
                }
                )(),
                leaderboard_tier: null === (r = null == e ? void 0 : e.state.active) || void 0 === r ? void 0 : r.cohort.tier,
                tournament_wins: "tournament" === (null == e ? void 0 : e.alias) ? e.state.numWins : void 0
            }
        }
    }
    ,
    95941: (e, t, a) => {
        "use strict";
        a.d(t, {
            gj: () => P,
            WP: () => T,
            Vq: () => L,
            L: () => C,
            nw: () => R,
            lf: () => A,
            Ri: () => D,
            aZ: () => O
        });
        const s = a.p + "images/leagues/7f895707cd44583692d20481dcd9e0d0.svg";
        var n = a(39631);
        const r = a.p + "images/leagues/192181672ada150becd83a74a4266ae9.svg";
        var i = a(80869)
          , o = a(83577)
          , l = a(92902);
        const c = a.p + "images/leagues/820dca5575baaae67e9654bcd9cabb13.svg"
          , d = a.p + "images/leagues/7b8eb902b285be6a592cbdc45d781460.svg"
          , u = a.p + "images/leagues/da3da435ad26e5c57d4c5235406ff938.svg"
          , g = a.p + "images/leagues/f480e032c5222395e73dac88ce3592bb.svg";
        var p = a(83831);
        const m = a.p + "images/leagues/0e249b5f869b806da7406b815f4d60c6.svg";
        var h = a(8466);
        const _ = a.p + "images/leagues/57f0c6b260d33493a0cddc4ab38d6833.svg";
        var v = a(8146);
        const f = a.p + "images/leagues/f902954eeaa88fd2cb12f9168b4f68cb.svg";
        var S = a(79815);
        const y = a.p + "images/leagues/74d6ab6e5b6f92e7d16a4a6664d1fafd.svg";
        var E = a(9175);
        const b = a.p + "images/leagues/3ced84eb1f0274ec0f02b24ae6e3d29b.svg";
        var I = a(40301);
        const w = a.p + "images/leagues/8148b17e32d8706a82c02688f559e9ef.svg";
        var k = a(26858);
        const T = ["bronze", "silver", "gold", "sapphire", "ruby", "emerald", "amethyst", "pearl", "obsidian", "diamond"]
          , C = [r, w, m, b, y, g, s, f, _, o]
          , R = [i, k, h, I, E, p, n, S, v, l]
          , L = [321, 21153, 6276, 10705, 2028, 3777, 23232, 11453, 14693, 9894]
          , P = [3726, 2804, 10599, 2970, 9356, 5746, 16491, 19007, 12827, 10357]
          , A = [c, d, u]
          , D = [30969, 31162, 31163]
          , O = [31162, 31163, 31165]
    }
    ,
    37825: (e, t, a) => {
        "use strict";
        a.d(t, {
            Hl: () => o,
            M_: () => r,
            b2: () => l,
            d: () => n,
            lZ: () => i
        });
        var s = a(23275);
        const n = e => ["practice", "skill", "story"].includes(e)
          , r = e => e.includes("/legendary")
          , i = e => (0,
        s.Ol)({
            levelType: "unit_review",
            path: e
        }).some((e => e.finishedSessions > 0))
          , o = e => {
            switch (e) {
            case "practice":
                return "path_practice";
            case "skill":
                return "path_skill";
            case "story":
                return "path_story";
            default:
                return "path_level"
            }
        }
          , l = e => {
            switch (e) {
            case "practice":
                return "promo_practice";
            case "skill":
                return "promo_skill";
            default:
                return "session_end"
            }
        }
    }
    ,
    26506: (e, t, a) => {
        "use strict";
        a.d(t, {
            U: () => n,
            _: () => r
        });
        class s {
            constructor() {
                this.disabled = !1,
                this.handlers = new WeakMap
            }
            addListener(e, t, a, s) {
                var n;
                const r = null !== (n = this.handlers.get(a)) && void 0 !== n ? n : e => {
                    this.disabled || a(e)
                }
                ;
                this.handlers.set(a, r),
                e.addEventListener(t, r, s)
            }
            removeListener(e, t, a, s) {
                const n = this.handlers.get(a);
                n && (this.handlers.delete(a),
                e.removeEventListener(t, n, s))
            }
            enableListeners() {
                this.disabled = !1
            }
            disableListeners() {
                this.disabled = !0
            }
        }
        const n = new s
          , r = new s
    }
    ,
    41364: (e, t, a) => {
        "use strict";
        a.d(t, {
            U: () => o,
            p: () => c
        });
        var s = a(80254);
        let n, r = 0;
        const i = e => {
            null == n || n(e),
            r = e
        }
          , o = e => {
            n = e
        }
          , l = {
            GET_USER: 1e4,
            SYNC_STORED_PROGRESS: 2e4
        }
          , c = e => t => async (...a) => {
            let n, o;
            const c = s.IH(( () => {
                n && window.clearInterval(n),
                o && window.clearTimeout(o),
                i(0)
            }
            ))
              , d = Date.now()
              , u = !r;
            if (u) {
                i(.001);
                const t = l[e];
                n = window.setInterval(( () => {
                    const e = (Date.now() - d) / t
                      , a = 1 - Math.exp(-e);
                    i(a)
                }
                ), 200),
                o = window.setTimeout(c, 2e4)
            }
            let g;
            try {
                g = {
                    type: "value",
                    value: await t(...a)
                }
            } catch (e) {
                g = {
                    error: e,
                    type: "error"
                }
            }
            u && c();
            const p = Date.now() - d;
            if (l[e] = p,
            "error" === g.type)
                throw g.error;
            return g.value
        }
    }
    ,
    58729: (e, t, a) => {
        "use strict";
        a.d(t, {
            cj: () => o,
            JE: () => i
        });
        var s = a(72398)
          , n = a(58576);
        const r = (e, t=1) => {
            if (e && "object" == typeof e) {
                if (Array.isArray(e)) {
                    if (t > 0) {
                        const a = e.map((e => r(e, t - 1)));
                        return a.length ? `[${a.join(", ")}]` : "[]"
                    }
                    return e.length ? `Array(${e.length})` : "[]"
                }
                if (t > 0) {
                    const a = Object.entries(e).map(( ([e,a]) => (/^[a-zA-Z$_][a-zA-Z$_\d]*$/.test(e) || (e = `'${e}'`),
                    [e, r(a, t - 1)])));
                    return a.length ? `{ ${a.map(( ([e,t]) => `${e}: ${t}`)).join(", ")} }` : "{}"
                }
                return Object.keys(e).length ? "{…}" : "{}"
            }
            return "string" == typeof e ? `'${e}'` : `${e}`
        }
          , i = () => s.JE(l)
          , o = (e, t, a, i) => {
            if ((0,
            s.ar)(e, t, a, i),
            !n.o.includes(t.type))
                try {
                    const e = "QUEUE_ANIMATIONS" === t.type && t.animations.some((e => e.name.startsWith("PATH_"))) ? 3 : 1;
                    (0,
                    n.gp)({
                        level: "debug",
                        message: `dispatch(${r(t, e)})`
                    })
                } catch {}
        }
          , l = (e, t, ...a) => (0,
        n.gp)({
            level: e,
            message: t,
            ...a.length > 0 ? {
                data: {
                    args: a
                }
            } : {}
        })
    }
    ,
    58576: (e, t, a) => {
        "use strict";
        a.d(t, {
            WH: () => P,
            VR: () => E,
            o: () => _,
            BH: () => y,
            iZ: () => v,
            fZ: () => S,
            vU: () => $,
            c2: () => G,
            um: () => W,
            cM: () => q,
            bP: () => Q,
            si: () => K,
            gp: () => H,
            D_: () => D,
            yB: () => N,
            av: () => O,
            Kp: () => Z
        });
        var s = a(72398)
          , n = a(51629)
          , r = a(60074)
          , i = a(98784)
          , o = a.n(i)
          , l = a(18867)
          , c = a(17135)
          , d = a(64115)
          , u = a(94358)
          , g = a(68903)
          , p = a(30839)
          , m = a(79465)
          , h = a(59815);
        const _ = ["CHALLENGE_GUESS_CHANGE", "MODAL_MOUNTED", "MODAL_UNMOUNTED"]
          , v = {
            debug: "debug",
            error: "error",
            group: "info",
            groupCollapsed: "info",
            info: "info",
            log: "info",
            warn: "warning"
        }
          , f = Object.fromEntries(Object.entries(v).map(( ([e,t]) => [t, e])))
          , S = [429, 500, 502, 503, 504];
        class y extends h.pY {
            constructor(e, t) {
                super(e),
                this.fingerprint = t
            }
        }
        const E = Symbol("EXCLUDE_FROM_TELEMETRY")
          , b = ["d35aaqx5ub95lt.cloudfront.net", "duolingo.com", "localhost", "webpack://", "webpack-internal://"]
          , I = [401, 403, /5\d\d/]
          , w = e => e / 100
          , k = (e, t) => {
            var a, s;
            const n = null !== (s = null === (a = e.extra) || void 0 === a ? void 0 : a.error) && void 0 !== s ? s : t.originalException;
            return n instanceof Error ? n : void 0
        }
          , T = (e, t) => {
            const a = k(e, t);
            return null != a && (0,
            l.Hx)(a) ? a : void 0
        }
          , C = (e, t) => {
            var a;
            const s = T(e, t);
            return null === (a = null == s ? void 0 : s.response) || void 0 === a ? void 0 : a.status
        }
          , R = [{
            groupAll: !0,
            matcher: {
                mode: "CONTAINS",
                property: "message",
                string: "Dummy rule",
                type: "STRING"
            },
            message: "Dummy rule",
            name: "dummy-rule",
            sample: .9
        }, {
            groupAll: !0,
            matcher: {
                mode: "CONTAINS",
                property: "message",
                string: "file://",
                type: "STRING"
            },
            message: "Local file error (probably extension)",
            name: "local-file-error",
            sample: w(.01)
        }, {
            fingerprint: e => [...e, "status-500"],
            level: "warning",
            matcher: {
                function: (e, t) => {
                    const a = C(e, t);
                    return void 0 !== a && 500 === a
                }
                ,
                type: "FUNCTION"
            },
            name: "status-code-500",
            sample: w(.01)
        }, {
            fingerprint: (e, t, a) => {
                var s;
                return [...e, `status-${null !== (s = C(t, a)) && void 0 !== s ? s : "unknown"}`]
            }
            ,
            matcher: {
                function: (e, t) => {
                    const a = C(e, t);
                    return void 0 !== a && S.includes(a)
                }
                ,
                type: "FUNCTION"
            },
            message: "Unactionable status code",
            name: "status-code-unactionable",
            sample: w(.01)
        }, {
            fingerprint: (e, t, a) => {
                var s;
                return [...e, `status-${null !== (s = C(t, a)) && void 0 !== s ? s : "unknown"}`]
            }
            ,
            level: "warning",
            matcher: {
                function: (e, t) => {
                    const a = C(e, t);
                    return void 0 !== a && I.some((e => "number" == typeof e ? e === a : e.test(a.toString())))
                }
                ,
                type: "FUNCTION"
            },
            name: "status-code-warning"
        }, {
            fingerprint: (e, t, a) => {
                var s;
                return [...e, `status-${null !== (s = C(t, a)) && void 0 !== s ? s : "unknown"}`]
            }
            ,
            matcher: {
                function: (e, t) => void 0 !== C(e, t),
                type: "FUNCTION"
            },
            name: "status-code-other"
        }, {
            groupAll: !0,
            matcher: {
                mode: "EQUALS",
                property: "message",
                string: "Cannot load google sign in SDK",
                type: "STRING"
            },
            message: "Google Sign In SDK load error",
            name: "google-sdk-load-error",
            sample: w(.001)
        }, {
            groupAll: !0,
            matcher: {
                mode: "REGEX",
                property: "message",
                regex: /Loading( CSS)? chunk .+? failed\./,
                type: "STRING"
            },
            message: "CSS chunk load error",
            name: "chunk-load-error",
            onMatch: e => {
                var t, a, s;
                return (0,
                m.track)("chunk_download_failure", {
                    offline: !navigator.onLine,
                    path: null !== (s = null === (a = /\n\((error: )?(.*?)\)$/.exec(null !== (t = e.message) && void 0 !== t ? t : "")) || void 0 === a ? void 0 : a.slice(-1)[0]) && void 0 !== s ? s : ""
                })
            }
            ,
            sample: w(.01)
        }, {
            groupAll: !0,
            matcher: {
                mode: "EQUALS",
                property: "name",
                string: "UnhandledRejection",
                type: "STRING"
            },
            message: "Unhandled promise rejection",
            name: "unhandled-promise-rejection",
            sample: w(.01)
        }, {
            matcher: {
                function: (e, t) => {
                    var a;
                    return "Failed to fetch" === (null === (a = T(e, t)) || void 0 === a ? void 0 : a.message)
                }
                ,
                type: "FUNCTION"
            },
            name: "failed-to-fetch",
            sample: w(.01)
        }, {
            matcher: {
                function: (e, t) => {
                    var a;
                    const s = T(e, t);
                    return !1 === (null === (a = t.mechanism) || void 0 === a ? void 0 : a.handled) && void 0 !== e.message && !["Cannot load facebook SDK", "Cannot load google SDK", "Cannot load google sign in SDK"].includes(e.message) && void 0 === s
                }
                ,
                type: "FUNCTION"
            },
            name: "app-crash",
            onMatch: (e, t) => {
                const a = k(e, t);
                void 0 !== a && (0,
                m.track)("app_crash", {
                    crash_message: a.message,
                    crash_type: null == a ? void 0 : a.name,
                    sentry_event_id: e.event_id
                })
            }
        }];
        let L = 0;
        const P = "{{ default }}"
          , A = (e, t) => {
            if (!navigator.onLine)
                return null;
            if (( () => {
                if ((0,
                d.NY)())
                    return !1;
                try {
                    let e = (0,
                    p.rV)(p.Qt.SentryThrottling);
                    return void 0 === e || e.firstErrorTimestamp < (0,
                    c.HR)(-300) ? e = {
                        errorCount: 1,
                        firstErrorTimestamp: Date.now()
                    } : e.errorCount++,
                    (0,
                    p.LS)(p.Qt.SentryThrottling, e),
                    e.errorCount > 10
                } catch {
                    try {
                        (0,
                        p.cl)(p.Qt.SentryThrottling)
                    } catch {}
                    return !1
                }
            }
            )())
                return null;
            const a = T(e, t);
            if (void 0 !== a && void 0 === (null == a ? void 0 : a.response))
                return null;
            const s = ( (e, t, a) => {
                var s, n;
                const r = null !== (n = null === (s = t.extra) || void 0 === s ? void 0 : s.error) && void 0 !== n ? n : a.originalException;
                return e.find(( ({matcher: e}) => {
                    var s;
                    switch (e.type) {
                    case "FUNCTION":
                        return e.function(t, a);
                    case "STRING":
                        {
                            const {property: t="message"} = e
                              , a = "string" == typeof r && "message" === t ? r : null !== (s = null == r ? void 0 : r[t]) && void 0 !== s ? s : "";
                            switch (e.mode) {
                            case "CONTAINS":
                                return a.includes(e.string);
                            case "ENDS_WITH":
                                return a.endsWith(e.string);
                            case "EQUALS":
                                return a === e.string;
                            case "STARTS_WITH":
                                return a.startsWith(e.string);
                            case "REGEX":
                                return e.regex.test(a);
                            default:
                                return (0,
                                g.RJ)(e)
                            }
                        }
                    default:
                        return (0,
                        g.RJ)(e)
                    }
                }
                ))
            }
            )(R, e, t);
            if (void 0 !== s) {
                const a = ( (e, t, a) => {
                    var s, n, r;
                    const i = {};
                    if (null === (s = e.onMatch) || void 0 === s || s.call(e, t, a),
                    void 0 !== e.sample && e.sample < 1) {
                        if (null === (n = t.tags) || void 0 === n ? void 0 : n.sample_rate)
                            return console.log("Ignoring event rule sample value due to already being sampled", t.message),
                            t;
                        const a = (0,
                        d.oj)() || (0,
                        d.NY)() ? Math.min(1, e.sample / w(.1)) : e.sample;
                        if (Math.random() > a)
                            return console.log("Ignoring due to sampling:", t.message),
                            null;
                        i.originalErrorMessage = z(t.message),
                        i.sample_rate = a,
                        i.webEventRuleSampled = !0,
                        t.message = `[WebEventRule] ${null !== (r = e.message) && void 0 !== r ? r : t.message}${void 0 === a ? "" : ` (sampled at ${100 * a}%)`}`
                    }
                    if (!0 === e.groupAll || void 0 !== e.fingerprint) {
                        let s = [...e.groupAll ? [] : [P], `event-rule-${e.name}`];
                        void 0 !== e.fingerprint && (s = e.fingerprint(s, t, a)),
                        t.fingerprint = s
                    }
                    return t.tags = {
                        ...t.tags,
                        ...i
                    },
                    t
                }
                )(s, e, t);
                if (null === a)
                    return null;
                e = a
            }
            return L >= 20 ? null : (L += 1,
            e)
        }
          , D = () => {
            var e;
            n.S({
                allowUrls: b,
                attachStacktrace: !0,
                beforeSend: A,
                dsn: "https://c5ab8b73d726e87132e8e0502de636e0@o4506106988134400.ingest.sentry.io/4506139970502656",
                enabled: !!(null === (e = window.duo.l10n) || void 0 === e ? void 0 : e.strings),
                environment: (0,
                d.oj)() ? "preview" : (0,
                d.NY)() ? "staging" : "production",
                normalizeDepth: 4,
                release: window.duo.versionHash
            })
        }
          , O = (e, t) => {
            r.av({
                id: e.id,
                username: e.username
            }),
            r.v("experiments", null != t ? t : null),
            void 0 !== t && V(t).forEach(( ([e,t]) => r.YA(e, t)))
        }
          , N = e => {
            r.YA("isZombieMode", e.toString())
        }
          , x = "[duolingo-web-redacted]"
          , M = ["Accept", "Accept-Language", "Cache-Control", "Content-Type", "Referer", "traceparent", "X-Amzn-Trace-Id", "X-Requested-With"].map((e => e.toLowerCase()))
          , F = ["Set-Cookie"].map((e => e.toLowerCase()))
          , U = e => {
            var t, a;
            return o().merge({}, e, {
                message: e.message,
                name: e.name,
                request: {
                    body: x,
                    headers: void 0 === e.request.headers ? {} : Object.fromEntries(Object.entries(e.request.headers).map(( ([e,t]) => [e, M.includes(e.toLowerCase()) ? t : x])))
                },
                response: void 0 === e.response ? void 0 : {
                    data: void 0 === e.response.data ? void 0 : x,
                    headers: void 0 === (null === (t = e.response) || void 0 === t ? void 0 : t.headers) ? {} : Object.fromEntries(Object.entries(null === (a = e.response) || void 0 === a ? void 0 : a.headers).map(( ([e,t]) => [e, F.includes(e.toLowerCase()) ? x : t])))
                }
            })
        }
          , H = ({category: e, data: t, level: a="info", message: s, type: n="default"}) => r.n_({
            category: e,
            data: t,
            level: a,
            message: s,
            type: n
        })
          , G = () => r.nZ().getScopeData().breadcrumbs
          , V = ( () => {
            const e = Math.ceil(29)
              , t = Math.floor(29)
              , a = a => `exp.${a.length <= 60 ? a : `${a.slice(0, e)}..${a.slice(-t)}`}`;
            return e => Object.entries(e).map(( ([e,t]) => [a(e), t]))
        }
        )()
          , z = e => void 0 !== e && (null == e ? void 0 : e.length) > 200 ? `${e.slice(0, 199)}…` : e
          , B = {}
          , j = (e, t, a={}) => {
            let n = t instanceof Error ? [t.name, t.message].filter((e => e)).join(": ") : t;
            const {ex: i, once: o=!1, sample: c=1} = a
              , d = t instanceof Error ? t : i;
            if (s.ji(f[e], "other", n, {
                data: d
            }),
            o) {
                if (B[n])
                    return void window.console.log("Ignoring because reported already:", n);
                B[n] = !0
            }
            if (c < 1) {
                if (Math.random() > c)
                    return void window.console.log("other", `Ignoring due to sampling: ${n}`);
                n = `${n} (sampled at ${100 * c}%)`
            }
            return ( (e, t, a, s) => {
                const {data: n, once: i, sample: o} = s
                  , [c,d] = ( () => {
                    var e, t;
                    if (void 0 === a || !(0,
                    l.Hx)(a))
                        return [];
                    const [s,n] = null !== (e = null == a ? void 0 : a.request.url.split("?")) && void 0 !== e ? e : [];
                    return [{
                        error: U(a),
                        queryString: n,
                        url: s
                    }, {
                        "error.code": a.code,
                        ...void 0 === a.duration ? {} : {
                            "error.duration": a.duration
                        },
                        "error.method": a.request.method,
                        "error.status": null === (t = a.response) || void 0 === t ? void 0 : t.status,
                        "error.url": z(s)
                    }]
                }
                )()
                  , g = {
                    extra: {
                        ...c,
                        ..."object" == typeof n ? n : {
                            data: n
                        }
                    },
                    fingerprint: void 0 !== s.fingerprint ? s.fingerprint : void 0 !== a && (e => {
                        try {
                            return "fingerprint"in e
                        } catch {
                            return !1
                        }
                    }
                    )(a) && void 0 !== a.fingerprint ? a.fingerprint : [t, ...void 0 === a ? [] : [a.name, a.message]],
                    level: e,
                    tags: {
                        limit_once_per_page: i,
                        originalErrorHasStackTrace: void 0 !== (null == a ? void 0 : a.stack),
                        originalErrorMessage: z(null == a ? void 0 : a.message),
                        sample_rate: o,
                        ...d,
                        ...(p = (0,
                        u.nP)(),
                        p && {
                            fullStoryUrl: p
                        })
                    }
                };
                var p;
                if (void 0 === a)
                    return r.uT(t, g);
                const m = Error(t);
                return m.name = a.name,
                void 0 !== a.stack && (m.stack = a.stack),
                r.Tb(m, g)
            }
            )(e, n, d, a)
        }
          , $ = (e, t={}) => j("error", e, t)
          , Z = (e, t={}) => j("warning", e, t)
          , W = (e, t={}) => j("info", e, t)
          , q = (e, t, a={}) => {
            s.ji("log", "other", t, {
                excludeFromTelemetry: !0,
                ...a
            }),
            H({
                data: {
                    ...void 0 === (null == a ? void 0 : a.data) ? {} : {
                        data: a.data
                    },
                    ...void 0 === $ ? {} : {
                        ex: $
                    }
                },
                level: v.log,
                message: `[${e}] ${t}`
            })
        }
          , Q = (e, t, a, n) => {
            s.bP(e, t, a, n),
            (null == n ? void 0 : n.excludeFromTelemetry) || H({
                level: v.info,
                message: `[${e}] ${t}`
            })
        }
          , K = (e, t) => {
            s.si(e, t),
            H({
                data: {
                    from: e,
                    to: t
                },
                type: "navigation"
            })
        }
    }
    ,
    76578: (e, t, a) => {
        "use strict";
        a.d(t, {
            J6: () => i,
            KH: () => s,
            TE: () => n,
            t7: () => r,
            vN: () => o
        });
        const s = (e, t) => ({
            x: e.x + t.x,
            y: e.y + t.y
        })
          , n = (e, t) => Math.sqrt((t.x - e.x) ** 2 + (t.y - e.y) ** 2)
          , r = (e, t, a) => e + (t - e) * a
          , i = e => e.reduce(( (e, t) => e + t), 0) / e.length
          , o = (e, t) => (e % t + t) % t
    }
    ,
    73573: (e, t, a) => {
        "use strict";
        a.d(t, {
            V: () => s
        });
        const s = e => {
            const t = new WeakMap
              , a = new WeakMap;
            return (...s) => {
                let n = t;
                for (const e of s)
                    n.has(e) || n.set(e, new WeakMap),
                    n = n.get(e);
                if (a.has(n))
                    return a.get(n);
                const r = e(...s);
                return a.set(n, r),
                r
            }
        }
    }
    ,
    64865: (e, t, a) => {
        "use strict";
        a.d(t, {
            A: () => h,
            Ir: () => v,
            JN: () => u,
            TI: () => p,
            VF: () => m,
            WV: () => S,
            ci: () => f,
            fi: () => g,
            fy: () => _
        });
        var s = a(80388)
          , n = a(53229)
          , r = a(95940)
          , i = a(67116)
          , o = a(79465)
          , l = a(74597);
        const c = "https://af4a.adj.st/?adjust_t=mfg8p8a"
          , d = "https://af4a.adj.st/?adjust_t=ewm3ujy"
          , u = "https://app.adjust.com/u0fwvk3"
          , g = "https://app.adjust.com/hwy9on0"
          , p = (...e) => l.Z.android ? h(...e) : l.Z.ios ? (0,
        r.H8)(22504, void 0, {
            addRightToLeftMark: !1
        }) : l.Z.windowsPhone ? (0,
        r.H8)(14998) : void 0
          , m = ({via: e}) => l.Z.android ? v({
            via: e
        }) : l.Z.ios ? _({
            via: e
        }) : l.Z.windowsPhone ? (0,
        r.H8)(14998) : void 0
          , h = ({isAndroidBanner: e, utmCampaign: t, utmContent: a}={
            isAndroidBanner: !1,
            utmCampaign: "",
            utmContent: ""
        }) => e ? (0,
        s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : `${c}&adjust_label=android_banner` : (0,
        s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : `//play.google.com/store/apps/details?${(0,
        n.Vp)({
            hl: i.h9,
            id: "com.duolingo",
            referrer: `utm_source=duolingo.com&utm_medium=duolingo_web&utm_content=${a}&utm_campaign=${t}`
        })}`
          , _ = ({via: e}) => (0,
        s.J9)() ? `https://app.adjust.com/u0fwvk3?&redirect=http%3A%2F%2Fa.app.qq.com%2Fo%2Fsimple.jsp%3Fpkgname%3Dcom.duolingo&campaign=${e}` : l.Z.hasMobileApp || "mobile_web_to_app_conversion" === e ? "share_profile" === e ? `${d}` : `${c}&adjust_label=${e}` : (0,
        r.H8)(22504, void 0, {
            addRightToLeftMark: !1
        })
          , v = ({isAndroidBanner: e, via: t}) => e ? (0,
        s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : `${c}&adjust_label=android_banner` : (0,
        s.J9)() ? "http://zhushou.360.cn/detail/index/soft_id/361348" : l.Z.hasMobileApp ? "share_profile" === t ? `${d}` : `${c}&adjust_label=${t}` : h({
            utmCampaign: t,
            utmContent: "download_button"
        })
          , f = e => {
            const t = document.createElement("a");
            t.href = "https://android-release.duolingo.cn/Duo.latest.apk",
            t.download = "duolingo.apk",
            t.click(),
            (0,
            o.track)("china_apk_download", {
                via: e
            }),
            window.URL.revokeObjectURL(t.href)
        }
          , S = e => !e && (l.Z.ios || l.Z.android)
    }
    ,
    35160: (e, t, a) => {
        "use strict";
        var s, n;
        a.d(t, {
            W: () => n,
            t: () => s
        }),
        function(e) {
            e.Achievement = "ACHIEVEMENT",
            e.AgeRestrictedLeaderboardsIntro = "AGE_RESTRICTED_LEADERBOARDS_INTRO",
            e.AlreadyOnPremium = "ALREADY_ON_PREMIUM",
            e.Alert = "ALERT",
            e.AllowMicrophone = "ALLOW_MICROPHONE",
            e.AvatarsIntroduction = "AVATARS_INTRODUCTION",
            e.AvatarsSaveConfirm = "AVATARS_SAVE_CONFIRM",
            e.B2bDownloadCodes = "B2B_DOWNLOAD_CODES",
            e.B2bRemoveLearner = "B2B_REMOVE_LEARNER",
            e.B2bSendCodes = "B2B_SEND_CODES",
            e.CardUpdate = "CARD_UPDATE",
            e.ChangeUiLanguage = "CHANGE_UI_LANGUAGE",
            e.CharacterExpandedView = "CHARACTER_EXPANDED_VIEW",
            e.Confirm = "CONFIRM",
            e.ConfirmSetting = "CONFIRM_SETTING",
            e.Debug = "DEBUG",
            e.DiamondTournamentEliminate = "DIAMOND_TOURNAMENT_ELIMINATE",
            e.DiamondTournamentEntry = "DIAMOND_TOURNAMENT_ENTRY",
            e.DiamondTournamentWin = "DIAMOND_TOURNAMENT_WIN",
            e.DownloadText = "DOWNLOAD_TEXT",
            e.DuoRadioTranscript = "DUO_RADIO_TRANSCRIPT",
            e.EasierLessonNudge = "EASIER_LESSON_NUDGE",
            e.EditFamily = "EDIT_FAMILY",
            e.EfficacyPageMenu = "EFFICACY_PAGE_MENU",
            e.EmailVerification = "EMAIL_VERIFICATION",
            e.EmptyHearts = "EMPTY_HEARTS",
            e.FriendsQuestComplete = "FRIENDS_QUEST_COMPLETE",
            e.FriendsQuestGift = "FRIENDS_QUEST_GIFT",
            e.FriendsQuestIntro = "FRIENDS_QUEST_INTRO",
            e.FriendStreakInvite = "FRIEND_STREAK_INVITE",
            e.FriendStreakViewAllInvites = "FRIEND_STREAK_VIEW_ALL_INVITES",
            e.HeartsIntro = "HEARTS_INTRO",
            e.HomeMessage = "HOME_MESSAGE",
            e.InviteFamily = "INVITE_FAMILY",
            e.InviteFriends = "INVITE_FRIENDS",
            e.JoinClassroomConfirmation = "JOIN_CLASSROOM_CONFIRMATION",
            e.LeaveClassroomConfirmation = "LEAVE_CLASSROOM_CONFIRMATION",
            e.LegendaryPurchase = "LEGENDARY_PURCHASE",
            e.LegendarySplash = "LEGENDARY_SPLASH",
            e.LinkedInRemoveScore = "LINKEDIN_REMOVE_SCORE",
            e.MessageUser = "MESSAGE_USER",
            e.MonthlyBadges = "MONTHLY_BADGES",
            e.MonthlyChallengeIntro = "MONTHLY_CHALLENGE_INTRO",
            e.NewCourseFork = "NEW_COURSE_FORK",
            e.NetworkError = "NETWORK_ERROR",
            e.PickUiLanguage = "PICK_UI_LANGUAGE",
            e.PremiumChange = "PLUS_CHANGE",
            e.PremiumCancelConfirm = "PREMIUM_CANCEL_CONFIRM",
            e.PremiumPurchase = "PLUS_PURCHASE",
            e.PremiumUnlimitedHearts = "PREMIUM_UNLIMITED_HEARTS",
            e.ProfileCourses = "PROFILE_COURSES",
            e.ProfileFollowSuggestions = "PROFILE_FOLLOW_SUGGESTIONS",
            e.ProfileFriends = "PROFILE_FRIENDS",
            e.ProfileFriendsInCommon = "PROFILE_FRIENDS_IN_COMMON",
            e.ReportProfileUser = "REPORT_PROFILE_USER",
            e.ReportSentence = "REPORT_SENTENCE",
            e.SendNudge = "SEND_NUDGE",
            e.SessionReview = "SESSION_REVIEW",
            e.ShadowbanList = "SHADOWBAN_LIST",
            e.ShadowbanUser = "SHADOWBAN_USER",
            e.ShakeToReport = "SHAKE_TO_REPORT",
            e.SignInUp = "SIGN_IN_UP",
            e.StreakEarnback = "STREAK_EARNBACK",
            e.StreakPanelExpanded = "STREAK_PANEL_EXPANDED",
            e.TestingTools = "TESTING_TOOLS",
            e.TournamentAdvance = "TOURNAMENT_ADVANCE",
            e.TransliterationSettings = "TRANSLITERATION_SETTINGS",
            e.TrialWall = "TRIAL_WALL"
        }(s || (s = {})),
        function(e) {
            e.Custom = "style-custom",
            e.Super = "style-super",
            e.White = "style-white"
        }(n || (n = {}))
    }
    ,
    16689: (e, t, a) => {
        "use strict";
        a.d(t, {
            $A: () => n,
            R8: () => o,
            br: () => l,
            oe: () => r,
            oo: () => i,
            te: () => d,
            uP: () => c
        });
        var s = a(41831);
        const n = e => {
            var t;
            return null === (t = e.filter((e => "MONTHLY_CHALLENGES" === e.category && (0,
            s.FF)(e)))[0]) || void 0 === t ? void 0 : t.goalId
        }
          , r = e => {
            const t = null == e ? void 0 : e.images.find((e => "CHALLENGE_HEADER" === e.component));
            return null == t ? void 0 : t.image.lightMode.svg
        }
          , i = e => e.illustrations.challengeSessionEnd.lightMode.svg
          , o = e => {
            const t = null == e ? void 0 : e.text.find((e => "CHALLENGE_HEADER" === e.component));
            return null == t ? void 0 : t.options[0].text.uiString
        }
          , l = e => {
            var t;
            return null === (t = e.icon) || void 0 === t ? void 0 : t.enabled.lightMode.svg
        }
          , c = e => null == e ? void 0 : e.displayTexts.challengeIntro.uiString
          , d = e => null == e ? void 0 : e.illustrations.challengeIntro.lightMode.svg
    }
    ,
    20041: (e, t, a) => {
        "use strict";
        a.d(t, {
            Iu: () => n,
            Qd: () => i,
            WZ: () => d,
            Z3: () => m,
            dS: () => p,
            fu: () => r,
            ky: () => g,
            oI: () => o,
            pC: () => u
        });
        var s = a(68903);
        const n = ["charactersTabCallout", "dogfoodingPreview", "dynamic", "emailVerified", "friendsStreakLoss", "friendsStreakOffer", "guidebookCallout", "immersivePlusPromo", "kudosOffer", "kudosReceive", "leaderboardsIntro", "legendaryRebrandGoldColor", "maintenanceBreak", "marketingOptIn", "mobileWebToAppConversion", "mobileWebToAppConversionAggressive", "newYearsDiscount", "pathChange", "pathMigration", "pathSectionsCallout", "pathSkipping", "plusBadge", "plusBadgeFamily", "plusBadgeMigration", "schoolsJoinedClassroom", "shakeToReportAlert", "skillTreeMigration", "streakFreezeRecurringOffer", "streakFreezeUsed", "streakRepairOffer", "superFamilyPlanInvite", "superPreviewEndingCallout", "turningNotificationsOn", "webToAppConversion", "webToAppConversionAggressive"]
          , r = ["dogfoodingPreview", "superPreviewEndingCallout"]
          , i = {
            emailVerified: "EMAIL_VERIFIED",
            leaderboardsIntro: "WEB_LEADERBOARDS_INTRODUCTION",
            skillTreeMigration: "NEW_TREE_CHANGE_V2",
            streakFreezeUsed: "STREAK_FREEZE_USED"
        }
          , o = (0,
        s.p)(["AVATARS_INTRODUCTION", "AVATARS_SAVE_CONFIRM", "CONFIRM", "CONFIRM_SKIP_ALPHABET_GATE", "EASIER_LESSON_NUDGE", "FRIENDS_QUEST_GIFT", "GENERIC_NOTIFICATION", "LEGENDARY_WITH_GEMS", "PRACTICE_HUB_SESSION_NOTIFICATION", "REACTIONS", "SEND_NUDGE", "STREAK_EARNBACK", "STREAK_PANEL_EXPANDED", "SUPER_OFFBOARDING", "dogfoodingPreview", "dynamic", "emailVerified", "friendsStreakLoss", "friendsStreakOffer", "immersivePlusPromo", "legendaryRebrandGoldColor", "kudosOffer", "kudosReceive", "maintenanceBreak", "marketingOptIn", "mobileWebToAppConversion", "mobileWebToAppConversionAggressive", "newYearsDiscount", "pathChange", "shakeToReportAlert", "schoolsJoinedClassroom", "skillTreeMigration", "streakFreezeRecurringOffer", "streakFreezeUsed", "streakRepairOffer", "superFamilyPlanInvite", "turningNotificationsOn", "webToAppConversion", "webToAppConversionAggressive"])
          , l = (0,
        s.p)(["friendsStreakLoss", "friendsStreakOffer", "kudosOffer", "kudosReceive", "legendaryRebrandGoldColor", "marketingOptIn", "pathChange", "streakFreezeRecurringOffer", "streakFreezeUsed", "streakRepairOffer", "turningNotificationsOn", "webToAppConversion", "webToAppConversionAggressive", "newYearsDiscount", "superFamilyPlanInvite"])
          , c = (0,
        s.p)(["emailVerified"])
          , d = (0,
        s.p)(["pathChange", "pathMigration"])
          , u = e => !r.includes(e)
          , g = e => e.every((e => u(e)))
          , p = (e, t) => {
            if (!o(e) || !l(e) || !t)
                return !1;
            switch (e) {
            case "friendsStreakLoss":
            case "friendsStreakOffer":
            case "kudosOffer":
            case "kudosReceive":
            case "legendaryRebrandGoldColor":
            case "pathChange":
            case "streakFreezeRecurringOffer":
            case "streakFreezeUsed":
            case "streakRepairOffer":
            case "turningNotificationsOn":
            case "webToAppConversion":
            case "webToAppConversionAggressive":
            case "newYearsDiscount":
            case "marketingOptIn":
            case "superFamilyPlanInvite":
                return !0;
            default:
                return !1
            }
        }
          , m = (e, t) => !!(o(e) && c(e) && t) && "emailVerified" === e
    }
    ,
    18201: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => $
        });
        var s = a(68903)
          , n = a(1398)
          , r = a(58576);
        const i = e => {
            const t = (0,
            n.ZP)(e);
            t.preload();
            const a = window.performance.now();
            return e => (t.hasLoaded() || (0,
            r.Kp)(`Drawer ${e} was not preloaded at time of use`, {
                data: {
                    isLoading: t.isLoading(),
                    timeSincePreloadMS: window.performance.now() - a
                },
                ex: t.getError(),
                once: !0
            }),
            t)
        }
          , o = (0,
        n.ZP)(( () => a.e(3271).then(a.bind(a, 23470))))
          , l = (0,
        n.ZP)(( () => a.e(1177).then(a.bind(a, 67469))))
          , c = i(( () => a.e(1118).then(a.bind(a, 35137))))
          , d = i(( () => a.e(2231).then(a.bind(a, 82882))))
          , u = (0,
        n.ZP)(( () => a.e(4586).then(a.bind(a, 21325))))
          , g = (0,
        n.ZP)(( () => a.e(3700).then(a.bind(a, 60515))))
          , p = (0,
        n.ZP)(( () => a.e(1060).then(a.bind(a, 85102))))
          , m = (0,
        n.ZP)(( () => a.e(1798).then(a.bind(a, 29169))))
          , h = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(3361)]).then(a.bind(a, 30512))))
          , _ = (0,
        n.ZP)(( () => a.e(3289).then(a.bind(a, 40711))))
          , v = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(9969)]).then(a.bind(a, 19071))))
          , f = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(1876)]).then(a.bind(a, 36204))))
          , S = i(( () => a.e(8186).then(a.bind(a, 8159))))
          , y = (0,
        n.ZP)(( () => Promise.all([a.e(5931), a.e(4048), a.e(3980)]).then(a.bind(a, 962))))
          , E = i(( () => a.e(4800).then(a.bind(a, 71347))))
          , b = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(8405)]).then(a.bind(a, 51526))))
          , I = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(9006)]).then(a.bind(a, 88964))))
          , w = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(3207)]).then(a.bind(a, 91295))))
          , k = (0,
        n.ZP)(( () => a.e(5472).then(a.bind(a, 65472))))
          , T = (0,
        n.ZP)(( () => a.e(7810).then(a.bind(a, 17810))))
          , C = (0,
        n.ZP)(( () => Promise.all([a.e(6935), a.e(1743)]).then(a.bind(a, 97091))))
          , R = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(2513)]).then(a.bind(a, 48497))))
          , L = (0,
        n.ZP)(( () => a.e(3304).then(a.bind(a, 49346))))
          , P = (0,
        n.ZP)(( () => a.e(394).then(a.bind(a, 40394))))
          , A = (0,
        n.ZP)(( () => Promise.all([a.e(6935), a.e(6126)]).then(a.bind(a, 32708))))
          , D = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(1686)]).then(a.bind(a, 17709))))
          , O = (0,
        n.ZP)(( () => a.e(9479).then(a.bind(a, 67087))))
          , N = (0,
        n.ZP)(( () => a.e(9522).then(a.bind(a, 59522))))
          , x = (0,
        n.ZP)(( () => a.e(6958).then(a.bind(a, 68820))))
          , M = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(7200)]).then(a.bind(a, 92463))))
          , F = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(7631)]).then(a.bind(a, 39555))))
          , U = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(5571)]).then(a.bind(a, 22095))))
          , H = (0,
        n.ZP)(( () => Promise.all([a.e(5747), a.e(1024)]).then(a.bind(a, 77792))))
          , G = (0,
        n.ZP)(( () => a.e(4077).then(a.bind(a, 44993))))
          , V = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(2479)]).then(a.bind(a, 95414))))
          , z = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(5944)]).then(a.bind(a, 62379))))
          , B = (0,
        n.ZP)(( () => Promise.all([a.e(1475), a.e(8123)]).then(a.bind(a, 96867))))
          , j = (0,
        n.ZP)(( () => a.e(4420).then(a.bind(a, 86480))))
          , $ = e => {
            switch (e) {
            case "AVATARS_INTRODUCTION":
                return o;
            case "AVATARS_SAVE_CONFIRM":
                return l;
            case "CONFIRM":
                return c(e);
            case "CONFIRM_SKIP_ALPHABET_GATE":
                return d(e);
            case "EASIER_LESSON_NUDGE":
                return p;
            case "FRIENDS_QUEST_GIFT":
                return _;
            case "GENERIC_NOTIFICATION":
                return S(e);
            case "LEGENDARY_WITH_GEMS":
                return E(e);
            case "PRACTICE_HUB_SESSION_NOTIFICATION":
                return L;
            case "REACTIONS":
                return P;
            case "SEND_NUDGE":
                return N;
            case "STREAK_EARNBACK":
                return x;
            case "STREAK_PANEL_EXPANDED":
                return H;
            case "SUPER_OFFBOARDING":
                return G;
            case "charactersTabCallout":
                return;
            case "dogfoodingPreview":
                return u;
            case "dynamic":
                return g;
            case "emailVerified":
                return m;
            case "friendsStreakLoss":
                return v;
            case "friendsStreakOffer":
                return f;
            case "guidebookCallout":
                return;
            case "immersivePlusPromo":
                return y;
            case "kudosOffer":
            case "kudosReceive":
                return V;
            case "leaderboardsIntro":
                return;
            case "legendaryRebrandGoldColor":
                return I;
            case "maintenanceBreak":
                return j;
            case "marketingOptIn":
                return w;
            case "mobileWebToAppConversion":
                return k;
            case "mobileWebToAppConversionAggressive":
                return T;
            case "newYearsDiscount":
                return R;
            case "pathChange":
                return b;
            case "pathMigration":
            case "pathSectionsCallout":
            case "pathSkipping":
            case "plusBadge":
            case "plusBadgeFamily":
            case "plusBadgeMigration":
                return;
            case "schoolsJoinedClassroom":
                return O;
            case "shakeToReportAlert":
                return A;
            case "skillTreeMigration":
                return C;
            case "streakFreezeRecurringOffer":
                return M;
            case "streakFreezeUsed":
                return F;
            case "streakRepairOffer":
                return U;
            case "superFamilyPlanInvite":
                return h;
            case "superPreviewEndingCallout":
                return;
            case "turningNotificationsOn":
                return D;
            case "webToAppConversion":
                return B;
            case "webToAppConversionAggressive":
                return z;
            case void 0:
                return;
            default:
                throw (0,
                s.RJ)(e),
                Error()
            }
        }
    }
    ,
    25447: (e, t, a) => {
        "use strict";
        a.d(t, {
            c: () => s
        });
        const s = e => {
            const t = Object.entries(e.message)[0]
              , a = t[0]
              , s = t[1];
            return {
                displayText: e.displayText,
                id: a,
                payload: s
            }
        }
    }
    ,
    99644: (e, t, a) => {
        "use strict";
        a.d(t, {
            _u: () => o,
            g2: () => l,
            yY: () => i
        });
        var s = a(68903)
          , n = a(795)
          , r = a(11811);
        const i = (e, t, a, s, r, i) => {
            const o = e[a.unitIndex].levels[a.levelIndex];
            if ("active" !== o.state)
                return {
                    updatedPath: e,
                    updatedPathSectioned: i
                };
            let l = e
              , c = i;
            if (t && (l = (0,
            n.tP)(l, [a.unitIndex, "levels", a.levelIndex, "finishedSessions"], o.totalSessions),
            void 0 !== c && void 0 !== r && (c = (0,
            n.tP)(c, [r, "units", a.unitNumber - 1, "levels", a.levelIndex, "finishedSessions"], o.totalSessions))),
            l = (0,
            n.tP)(l, [a.unitIndex, "levels", a.levelIndex, "state"], "passed"),
            void 0 !== c && void 0 !== r && (c = (0,
            n.tP)(c, [r, "units", a.unitNumber - 1, "levels", a.levelIndex, "state"], "passed")),
            s && "duo_radio" === o.type) {
                const t = e[a.unitIndex].levels.findIndex((e => "locked" === e.state));
                if (t >= 0 || a.unitIndex + 1 < e.length) {
                    const e = t >= 0 ? a.unitIndex : a.unitIndex + 1
                      , s = Math.max(t, 0);
                    l = (0,
                    n.tP)(l, [e, "levels", s, "state"], "active"),
                    void 0 !== c && void 0 !== r && (c = (0,
                    n.tP)(c, [r, "units", a.unitNumber - 1, "levels", s, "state"], "active"))
                }
                return {
                    updatedPath: l,
                    updatedPathSectioned: c
                }
            }
            const d = e[a.unitIndex].levels.length - 1 === a.levelIndex
              , u = a.unitIndex + (d ? 1 : 0);
            if (u < e.length) {
                const e = d ? 0 : a.levelIndex + 1;
                l = (0,
                n.tP)(l, [u, "levels", e, "state"], "active"),
                void 0 !== c && void 0 !== r && (c = (0,
                n.tP)(c, [r, "units", a.unitNumber - 1, "levels", e, "state"], "active"))
            }
            return {
                updatedPath: l,
                updatedPathSectioned: c
            }
        }
          , o = (e, t, a, o, l) => {
            if (void 0 === t)
                return [a, o];
            let c = a
              , d = o;
            switch (e) {
            case r.FF.AlphabetLesson:
            case r.FF.AlphabetPractice:
            case r.FF.Legendary:
            case r.FF.LegendaryLevel:
            case r.FF.LegendaryLexemePractice:
            case r.FF.Lesson:
            case r.FF.LexemePractice:
            case r.FF.LevelReview:
            case "story":
                {
                    const a = Math.min(t.level.totalSessions, Math.max(t.level.finishedSessions, t.level.finishedSessions + 1));
                    if (a === t.level.totalSessions)
                        if ((0,
                        s.gB)(e, [r.FF.Legendary, r.FF.LegendaryLevel, r.FF.LegendaryLexemePractice]))
                            c = (0,
                            n.tP)(c, [t.unitIndex, "levels", t.levelIndex, "state"], "legendary"),
                            d = (0,
                            n.tP)(d, [l, "units", t.unitNumber - 1, "levels", t.levelIndex, "state"], "legendary");
                        else {
                            const {updatedPath: e, updatedPathSectioned: a} = i(c, !0, t, !1, l, d);
                            c = e,
                            d = null != a ? a : d
                        }
                    else
                        c = (0,
                        n.tP)(c, [t.unitIndex, "levels", t.levelIndex, "finishedSessions"], a),
                        d = (0,
                        n.tP)(d, [l, "units", t.unitNumber - 1, "levels", t.levelIndex, "finishedSessions"], a);
                    break
                }
            case r.FF.UnitReview:
                {
                    const {updatedPath: e, updatedPathSectioned: a} = i(c, !0, t, !1, l, d);
                    c = e,
                    void 0 !== a && (d = a);
                    break
                }
            default:
                throw Error(`Offline path update not implemented for session type ${e}`)
            }
            return [c, d]
        }
          , l = (e, t, a) => {
            if (void 0 === e.skillId)
                return a;
            let s = a[e.skillId];
            return void 0 === s ? a : (t && t.level.finishedSessions + 1 === t.level.totalSessions ? (s = (0,
            n.t8)(s, "finishedLevels", s.finishedLevels + 1),
            s = (0,
            n.t8)(s, "finishedLessons", 0)) : s = (0,
            n.t8)(s, "finishedLessons", s.finishedLessons + 1),
            {
                ...a,
                [e.skillId]: s
            })
        }
    }
    ,
    93890: (e, t, a) => {
        "use strict";
        a.d(t, {
            KA: () => l,
            m3: () => d,
            ul: () => r,
            zK: () => o
        });
        var s = a(80254)
          , n = a(17135);
        const r = (e, t, a) => {
            const s = c(a.xpSummaries)
              , n = []
              , r = t.inventory.society_streak_freeze
              , i = u(r, s, a.timezoneOffset)
              , o = Math.min(i, e);
            void 0 !== r && o > 0 && n.push({
                ...r,
                quantity: r.quantity - o
            });
            const l = e - o
              , d = t.inventory.streak_freeze
              , g = u(d, s, a.timezoneOffset)
              , p = Math.min(g, l);
            if (void 0 !== d && p > 0 && n.push({
                ...d,
                quantity: d.quantity - p
            }),
            o + p !== e)
                throw Error("Streak freezes consumed does not match streak freezes to use");
            return n
        }
          , i = (e, t) => {
            const a = (0,
            n.zM)(e, t);
            return (0,
            n.VV)(a) / 1e3
        }
          , o = (e, t, a) => {
            const s = c(a.xpSummaries);
            if (void 0 === s)
                return 0;
            const r = i(e, a.timezoneOffset)
              , o = Math.max(0, (0,
            n.aW)(1e3 * s, 1e3 * r) - 1)
              , l = u(t.inventory.society_streak_freeze, s, a.timezoneOffset)
              , d = u(t.inventory.streak_freeze, s, a.timezoneOffset);
            return Math.min(o, l + d)
        }
          , l = (e, t, a) => {
            const {streakData: s, xpSummaries: r} = a;
            if (!s.currentStreak)
                return {
                    streakData: s,
                    xpSummaries: r
                };
            const o = c(r);
            if (void 0 === o)
                return {
                    streakData: s,
                    xpSummaries: r
                };
            const l = (0,
            n.zM)(o)
              , d = {
                dailyGoalXp: a.xpGoal,
                frozen: !1,
                gainedXp: 0,
                numSessions: 0,
                repaired: !1,
                streakExtended: !1,
                userId: a.id
            }
              , u = {};
            for (let e = 0; e < t; e++) {
                l.setDate(l.getDate() + 1);
                const e = {
                    ...d,
                    date: (0,
                    n.g8)(l),
                    frozen: !0
                };
                u[(0,
                n.zK)(e.date)] = e
            }
            const g = i(e, a.timezoneOffset);
            return {
                streakData: Math.max(0, (0,
                n.aW)(1e3 * (0,
                n.g8)(l), 1e3 * g) - 1) < 1 ? {
                    currentStreak: {
                        ...s.currentStreak,
                        endDate: (0,
                        n.zK)((0,
                        n.g8)(l))
                    },
                    longestStreak: s.longestStreak,
                    previousStreak: s.previousStreak
                } : {
                    currentStreak: null,
                    longestStreak: s.longestStreak,
                    previousStreak: s.currentStreak
                },
                xpSummaries: {
                    ...r,
                    ...u
                }
            }
        }
          , c = e => {
            const t = s.VO(e).filter((e => void 0 !== e && (e.frozen || e.repaired || e.streakExtended)));
            if (0 !== t.length)
                return Math.max(...t.map((e => e.date)))
        }
          , d = (e, t) => {
            var a, s;
            const {streakData: r, xpSummaries: o} = t
              , l = c(o)
              , d = i(e.time, t.timezoneOffset)
              , u = Math.max(0, (0,
            n.aW)(1e3 * (null != l ? l : 0), 1e3 * d))
              , g = (0,
            n.zK)(d)
              , p = o[g]
              , m = void 0 === p ? {
                dailyGoalXp: t.xpGoal,
                date: d,
                frozen: !1,
                gainedXp: e.xp,
                numSessions: 0,
                repaired: !1,
                streakExtended: !0,
                userId: t.id
            } : {
                ...p,
                gainedXp: (null !== (a = null == p ? void 0 : p.gainedXp) && void 0 !== a ? a : 0) + e.xp
            }
              , h = {
                ...o,
                [g]: m
            };
            return {
                streakData: u > 1 || null === r.currentStreak ? {
                    currentStreak: {
                        endDate: g,
                        length: 1,
                        startDate: g
                    },
                    longestStreak: r.longestStreak,
                    previousStreak: r.currentStreak
                } : u > 0 ? {
                    currentStreak: {
                        ...r.currentStreak,
                        endDate: g,
                        length: (null === (s = r.currentStreak) || void 0 === s ? void 0 : s.length) + 1
                    },
                    longestStreak: r.longestStreak,
                    previousStreak: r.previousStreak
                } : r,
                xpSummaries: h
            }
        }
          , u = (e, t, a) => {
            if (void 0 === e)
                return 0;
            const s = i(e.purchaseDate, a);
            return t && s > t ? 0 : e.quantity
        }
    }
    ,
    36914: (e, t, a) => {
        "use strict";
        a.d(t, {
            Av: () => g,
            BA: () => c,
            hF: () => S,
            iR: () => y,
            id: () => p,
            kL: () => u,
            lE: () => m,
            qB: () => f,
            u$: () => d,
            uv: () => _,
            x$: () => v,
            xc: () => h
        });
        var s = a(68903)
          , n = a(95940)
          , r = a(67116)
          , i = a(58576)
          , o = a(79465)
          , l = a(41631);
        const c = ["hi", "getStarted", "coursePicker", "hdyhau", "learningReason", "proficiency", "courseOverview", "dailyGoal", "notificationPrimer", "accountLink", "choosePath", "pathReactionOptional", "pathReaction"]
          , d = (0,
        s.p)(["hi", "getStarted", "pathReactionOptional", "pathReaction"]);
        var u;
        !function(e) {
            e[e.Casual = 10] = "Casual",
            e[e.Intense = 50] = "Intense",
            e[e.Regular = 20] = "Regular",
            e[e.Serious = 30] = "Serious"
        }(u || (u = {}));
        const g = (e, t) => {
            if (t <= 1)
                return {
                    level: e[0].units[0].levels[0],
                    levelIndex: 0,
                    unitIndex: 0,
                    unitNumber: e[0].units[0].unitNumber
                };
            const a = e[t - 2];
            if (void 0 === a)
                return;
            const s = a.units.flatMap((e => e.levels.map(( (t, a) => ({
                level: t,
                levelIndex: a,
                unitIndex: e.unitIndex,
                unitNumber: e.unitNumber
            }))))).filter((e => "unit_review" === e.level.type));
            return 0 !== s.length ? s[s.length - 1] : void 0
        }
          , p = (e, t) => {
            if (void 0 === e)
                return (0,
                i.vU)("getRecommendedSectionFromProficiency called with undefined pathSectioned"),
                0;
            if (void 0 === t)
                return (0,
                i.vU)("getRecommendedSectionFromProficiency called with undefined proficiency"),
                0;
            const a = e.filter((e => ![l.t.CHAMPION, l.t.DAILY_REFRESH].includes(e.type))).length
              , s = ( () => {
                switch (t) {
                case 1:
                case 2:
                    return 2;
                case 3:
                    return 3;
                case 4:
                    return 4;
                default:
                    return 1
                }
            }
            )();
            return Math.min(s, a)
        }
          , m = "welcomeStep"
          , h = (e, t={}) => {
            var a, r, i, o, l, c, d;
            switch (e) {
            case "hi":
                return (0,
                n.H8)(38600);
            case "getStarted":
                return (0,
                n.H8)(38601);
            case "coursePicker":
                return (0,
                n.H8)(38599);
            case "hdyhau":
                return (0,
                n.H8)(25725);
            case "learningReason":
                switch (t.learningReason) {
                case void 0:
                    return (0,
                    n.H8)(34656, {
                        language_name: null !== (a = t.languageName) && void 0 !== a ? a : ""
                    });
                case "brain":
                    return (0,
                    n.H8)(38581);
                case "fun":
                    return (0,
                    n.H8)(38585);
                case "family":
                    return (0,
                    n.H8)(38580);
                case "school":
                    return (0,
                    n.H8)(38582);
                case "travel":
                    return (0,
                    n.H8)(38584);
                case "work":
                    return (0,
                    n.H8)(38583);
                default:
                    return (0,
                    n.H8)(38586)
                }
            case "proficiency":
                switch (t.proficiency) {
                case void 0:
                    return (0,
                    n.H8)(29828, {
                        language_name: null !== (r = t.languageName) && void 0 !== r ? r : ""
                    });
                case 1:
                case 2:
                    return (0,
                    n.H8)(38590);
                case 3:
                case 4:
                    return (0,
                    n.H8)(38591);
                default:
                    return (0,
                    n.H8)(38589)
                }
            case "courseOverview":
                return (0,
                n.H8)(38587);
            case "dailyGoal":
                switch (t.dailyGoal) {
                case void 0:
                    return (0,
                    n.H8)(38579);
                case u.Regular:
                    return (0,
                    n.H8)(43420, {
                        num: 50
                    }, {
                        exportTags: !0
                    });
                case u.Serious:
                    return (0,
                    n.H8)(43420, {
                        num: 75
                    }, {
                        exportTags: !0
                    });
                case u.Intense:
                    return (0,
                    n.H8)(43420, {
                        num: 100
                    }, {
                        exportTags: !0
                    });
                default:
                    return (0,
                    n.H8)(43420, {
                        num: 25
                    }, {
                        exportTags: !0
                    })
                }
            case "notificationPrimer":
                return (0,
                n.H8)(38578);
            case "accountLink":
                return (0,
                n.H8)(20676);
            case "choosePath":
                return (0,
                n.H8)(38572);
            case "pathReactionOptional":
                return (0,
                n.H8)(38866);
            case "pathReaction":
                {
                    if ("start" === t.pathChoice)
                        return (0,
                        n.H8)(38867);
                    const e = p(t.pathSectioned, t.proficiency);
                    switch (t.proficiency) {
                    case 1:
                        return (0,
                        n.H8)(51459, {
                            language_name: null !== (i = t.languageName) && void 0 !== i ? i : "",
                            section: e
                        }, {
                            exportTags: !0
                        });
                    case 2:
                        return (0,
                        n.H8)(51460, {
                            language_name: null !== (o = t.languageName) && void 0 !== o ? o : "",
                            section: e
                        }, {
                            exportTags: !0
                        });
                    case 3:
                        return (0,
                        n.H8)(51461, {
                            language_name: null !== (l = t.languageName) && void 0 !== l ? l : "",
                            section: e
                        }, {
                            exportTags: !0
                        });
                    case 4:
                        return (0,
                        n.H8)(51464, {
                            language_name: null !== (c = t.languageName) && void 0 !== c ? c : "",
                            section: e
                        }, {
                            exportTags: !0
                        });
                    default:
                        return (0,
                        n.H8)(45525, {
                            language_name: null !== (d = t.languageName) && void 0 !== d ? d : "",
                            section: e
                        }, {
                            exportTags: !0
                        })
                    }
                }
            default:
                return (0,
                s.RJ)(e),
                ""
            }
        }
          , _ = e => e <= 1 ? "/lesson" : `/onboarding/placement/${e}`
          , v = e => {
            switch (e) {
            case "accountLink":
                return (0,
                n._i)(7827);
            case "dailyGoal":
            case "choosePath":
            case "courseOverview":
            case "coursePicker":
            case "getStarted":
            case "hdyhau":
            case "hi":
            case "learningReason":
            case "notificationPrimer":
            case "pathReaction":
            case "pathReactionOptional":
            case "proficiency":
                return (0,
                n._i)(4906);
            default:
                return (0,
                s.RJ)(e),
                (0,
                n._i)(4906)
            }
        }
          , f = (e, t, a) => {
            if ("en" === t)
                return (0,
                n._i)(43008);
            const s = a.find((a => a.fromLanguageId === e && a.learningLanguageId === t));
            if (!s)
                return;
            const i = (0,
            r.vY)(t)
              , o = s.numLearners;
            if (o < 1e6)
                return (0,
                n._i)(42628, {
                    language_name: i,
                    num: (1e3 * Math.floor(o / 1e3)).toLocaleString()
                });
            const l = Math.floor(o / 1e6);
            return l < 10 ? (0,
            n._i)(42665, {
                language_name: i,
                num: l
            }) : l < 100 ? (0,
            n._i)(42666, {
                language_name: i,
                num: l
            }) : (0,
            n._i)(42667, {
                language_name: i,
                num: l
            })
        }
          , S = e => {
            var t;
            return "placement" === (null === (t = e.sessionRouteParams) || void 0 === t ? void 0 : t.type) && e.numChallengesAnswered >= 5 && e.coachDuo.currentIncorrectStreak >= 1 && e.numChallengesCorrect / e.numChallengesAnswered <= .5 && !e.hasShownEasierLessonNudge
        }
          , y = (e, t, a={}) => {
            switch (e) {
            case "hi":
                (0,
                o.track)("duo_introduction_tap", {
                    target: t
                });
                break;
            case "getStarted":
                (0,
                o.track)("journey_introduction_tap", {
                    target: t
                });
                break;
            case "coursePicker":
                (0,
                o.track)("course_picker_tap", {
                    target: t,
                    via: "onboarding"
                });
                break;
            case "hdyhau":
                (0,
                o.track)("acquisition_survey_reason_tap", "continue" === t ? {
                    selected_value: a.surveyChoice,
                    target: t
                } : {
                    target: t
                });
                break;
            case "learningReason":
                (0,
                o.track)("learning_reason_tap", "continue" === t ? {
                    selected_value: a.learningReason,
                    target: t
                } : {
                    target: t
                });
                break;
            case "proficiency":
                (0,
                o.track)("prior_proficiency_tap", {
                    target: t
                });
                break;
            case "courseOverview":
                (0,
                o.track)("continue" === t ? "course_preview_next_click" : "course_preview_back_click", {});
                break;
            case "dailyGoal":
                (0,
                o.track)("daily_goal_tap", "continue" === t ? {
                    selected_value: a.dailyGoal,
                    target: t
                } : {
                    target: t
                });
                break;
            case "notificationPrimer":
                (0,
                o.track)("notification_primer_tap", {
                    target: t
                });
                break;
            case "accountLink":
                (0,
                o.track)("welcome_signup_tap", {
                    target: "continue" === t ? "skip" : "back"
                });
                break;
            case "choosePath":
                (0,
                o.track)("welcome_fork_tap", "continue" === t ? {
                    selected_value: "start" === a.pathChoice ? "basics" : "placement",
                    target: t
                } : {
                    target: t
                });
                break;
            case "pathReactionOptional":
            case "pathReaction":
                break;
            default:
                (0,
                s.RJ)(e)
            }
        }
    }
    ,
    89803: (e, t, a) => {
        "use strict";
        a.d(t, {
            Bf: () => g,
            VB: () => d,
            o7: () => u,
            u6: () => p,
            vi: () => c
        });
        var s = a(80254)
          , n = a(54412)
          , r = a(53229)
          , i = a(67116)
          , o = a(79465)
          , l = a(16086);
        const c = s.IH(( () => {
            if ((0,
            n.d8)(n.Vj.TimeSiteLoaded, Date.now().toString()),
            (0,
            l.Pc)())
                (0,
                n.ej)(n.Vj.LandingPage) || (0,
                n.d8)(n.Vj.LandingPage, n.m_),
                (0,
                n.ej)(n.Vj.LandingURL) || (0,
                n.d8)(n.Vj.LandingURL, n.m_),
                (0,
                n.ej)(n.Vj.InitialReferrer) || (0,
                n.d8)(n.Vj.InitialReferrer, n.m_);
            else if ((0,
            n.ej)(n.Vj.LandingURL) || (0,
            n.d8)(n.Vj.LandingURL, window.location.href),
            (0,
            n.ej)(n.Vj.InitialReferrer) || (0,
            n.d8)(n.Vj.InitialReferrer, window.document.referrer || "$direct"),
            !(0,
            n.ej)(n.Vj.LastReferrer)) {
                const e = document.referrer;
                /duolingo\.(cn|com)/.test(e) || (0,
                n.d8)(n.Vj.LastReferrer, document.referrer)
            }
        }
        ))
          , d = e => {
            let t = !0;
            (0,
            n.ej)(n.Vj.LandingPage) ? t = !1 : (0,
            n.d8)(n.Vj.LandingPage, e),
            (0,
            o.track)("landing_page_load", {
                initial_landing: t,
                page: e,
                ui_language: (0,
                i.D3)(i.h9)
            })
        }
          , u = e => {
            const t = (0,
            r.vl)(e.search)
              , a = t.email_type;
            if (a) {
                const e = t.day_offset;
                (0,
                o.track)("email_tap", {
                    day_offset: e ? parseInt(e, 10) : void 0,
                    email_type: a,
                    target: t.target
                })
            }
        }
          , g = (e, t) => {
            (0,
            o.track)("splash load", {
                ...(0,
                o.getCampaignInfo)("acquisition_"),
                ...(0,
                o.getCampaignInfo)("latest_"),
                has_cookie: !!(0,
                n.ej)(n.Vj.LoggedOutUUID),
                subpage: t,
                use_nweb: !0
            }),
            d(t),
            u(e)
        }
          , p = s.IH(( () => {
            const e = (0,
            n.ej)(n.Vj.TimeSiteLoaded)
              , t = {};
            if (e)
                try {
                    const a = parseInt(e, 10);
                    t.time_since_open = Math.round((Date.now() - a) / 1e3)
                } catch {}
            (0,
            o.track)("app_close", t)
        }
        ))
    }
    ,
    74971: (e, t, a) => {
        "use strict";
        a.d(t, {
            JZ: () => p,
            U9: () => i,
            Xb: () => g,
            ZX: () => m,
            wQ: () => u
        });
        var s = a(79465)
          , n = a(74597)
          , r = a(16086);
        const i = void 0 !== window.OptanonWrapper
          , o = "onetrust-banner-sdk";
        let l;
        const c = () => {
            var e, t, a;
            return !((0,
            r.Pc)() || null !== (a = null === (t = null === (e = window.OneTrust) || void 0 === e ? void 0 : e.IsAlertBoxClosed) || void 0 === t ? void 0 : t.call(e)) && void 0 !== a && a)
        }
        ;
        i && (l = new class {
            constructor() {
                this.updateBannerVisibility = () => {
                    const e = !n.Z.desktop && window.location.pathname.startsWith("/year-in-review/")
                      , t = !n.Z.desktop && window.location.pathname.startsWith("/weekly-report")
                      , a = (0,
                    r.Pc)() || e || t;
                    void 0 === this.hidingStyleComponent ? a && (this.hidingStyleComponent = (e => {
                        const t = document.createElement("style");
                        return t.textContent = e,
                        document.head.append(t),
                        t
                    }
                    )(`#${o} { display: none !important; }`)) : a || (this.hidingStyleComponent.remove(),
                    this.hidingStyleComponent = void 0)
                }
                ,
                this.updateBannerHeight = () => {
                    var e;
                    const t = document.getElementById(o)
                      , a = null !== (e = null == t ? void 0 : t.clientHeight) && void 0 !== e ? e : 0;
                    document.body.style.setProperty("--onetrust-banner-height", `${a}px`)
                }
                ,
                this.startWatchingForBannerUpdates = (e=!1) => {
                    if (window.clearInterval(this.bannerUpdateInterval),
                    !c() && !e)
                        return;
                    let t = 20;
                    this.bannerUpdateInterval = window.setInterval(( () => {
                        this.updateBannerHeight(),
                        t -= 1,
                        0 === t && window.clearInterval(this.bannerUpdateInterval)
                    }
                    ), 100)
                }
                ,
                window.OptanonWrapper = () => {
                    this.startWatchingForBannerUpdates(!0),
                    window.OnetrustActiveGroups && (0,
                    s.track)("cookie_consent_updated", {
                        cookie_consent_groups: window.OnetrustActiveGroups
                    })
                }
                ,
                window.addEventListener("resize", ( () => this.startWatchingForBannerUpdates())),
                this.updateBannerVisibility(),
                this.startWatchingForBannerUpdates()
            }
        }
        );
        const d = {
            targeting: "C0004"
        }
          , u = () => null == l ? void 0 : l.updateBannerVisibility()
          , g = e => {
            var t, a;
            return !i || null !== (a = null === (t = window.OnetrustActiveGroups) || void 0 === t ? void 0 : t.includes(`,${d[e]},`)) && void 0 !== a && a
        }
          , p = () => {
            var e, t;
            null === (t = null === (e = window.OneTrust) || void 0 === e ? void 0 : e.ToggleInfoDisplay) || void 0 === t || t.call(e)
        }
          , m = () => {
            var e, t, a;
            return null !== (a = null === (t = null === (e = window.OneTrust) || void 0 === e ? void 0 : e.GetDomainData) || void 0 === t ? void 0 : t.call(e).CookieSettingButtonText) && void 0 !== a ? a : "Cookie Settings"
        }
    }
    ,
    23275: (e, t, a) => {
        "use strict";
        a.d(t, {
            $: () => z,
            B9: () => b,
            Bm: () => _,
            E0: () => G,
            EH: () => x,
            Eb: () => X,
            G7: () => $,
            II: () => S,
            Ib: () => Y,
            Kq: () => H,
            Mj: () => j,
            Nc: () => Z,
            Nk: () => h,
            OE: () => P,
            Ol: () => E,
            P6: () => A,
            TH: () => B,
            Tw: () => K,
            U8: () => I,
            Wc: () => V,
            aw: () => se,
            cy: () => U,
            d$: () => v,
            dN: () => Q,
            e4: () => J,
            eK: () => M,
            f: () => ae,
            f2: () => O,
            kL: () => F,
            m8: () => R,
            mH: () => W,
            mo: () => k,
            pG: () => D,
            qM: () => te,
            tX: () => N,
            tr: () => C,
            u6: () => T,
            w1: () => L,
            xV: () => ee,
            xY: () => q,
            yK: () => w,
            yP: () => m
        });
        var s = a(80254)
          , n = a(18867)
          , r = a(64115)
          , i = a(68903)
          , o = a(95940)
          , l = a(67116)
          , c = a(37825)
          , d = a(53171)
          , u = a(12125)
          , g = a(11811)
          , p = a(97106);
        const m = 500
          , h = (e, t) => e.unitIndex !== t.unitIndex ? e.unitIndex - t.unitIndex : e.levelIndex - t.levelIndex
          , _ = e => R(e, (e => "active" === e.state))
          , v = e => R(e, (e => ["active", "passed"].includes(e.state) && f(e)), void 0, {
            findLast: !0
        })
          , f = e => ["skill", "story", "practice"].includes(e.type) || "unit_review" === e.type && !V(e.state)
          , S = ({levelType: e, path: t}) => t.flatMap((e => e.levels)).some((t => t.type === e))
          , y = ({levelType: e, path: t}) => t.flatMap(( (e, t) => e.levels.map((e => ({
            unitIndex: t,
            ...e
        }))))).filter((t => !e || t.type === e))
          , E = ({levelType: e, path: t}) => {
            const a = _(t)
              , s = null == a ? void 0 : a.unitIndex
              , n = t.slice(0, void 0 === s ? -1 : s + 1);
            return y({
                levelType: e,
                path: n
            }).filter((e => V(e.state)))
        }
          , b = ({section: e}) => y({
            path: e
        }).filter((e => V(e.state))).length
          , I = ({levelType: e, path: t}) => {
            const a = _(t)
              , s = null == a ? void 0 : a.unitIndex
              , n = t.slice(0, void 0 === s ? -1 : s + 1);
            return y({
                levelType: e,
                path: n
            }).map((e => e.finishedSessions)).reduce(( (e, t) => e + t), 0)
        }
          , w = (e, t) => {
            const a = E({
                levelType: "skill",
                path: e
            }).map((e => {
                const t = e.pathLevelClientData;
                return {
                    finishedSessions: e.finishedSessions,
                    levelId: e.id,
                    skillId: t.skillId,
                    state: e.state,
                    subtype: e.subtype,
                    type: e.type,
                    unitIndex: e.unitIndex
                }
            }
            ))
              , n = _(e)
              , r = n && "skill" === n.level.type ? [...a, {
                finishedSessions: n.level.finishedSessions,
                levelId: n.level.id,
                skillId: n.level.pathLevelClientData.skillId,
                state: n.level.state,
                subtype: n.level.subtype,
                type: n.level.type,
                unitIndex: n.unitIndex
            }] : a;
            if (!0 === t)
                return s.jj(r, !1, s.Cb("skillId")).reverse();
            const i = [...r].reverse();
            return s.jj(i, !1, s.Cb("skillId"))
        }
          , k = (e, t=-1, a=[]) => {
            const n = w(e).filter((e => !a.includes(e.type) && !a.includes(e.subtype) && !!e.skillId)).slice(0, t);
            return n[s.MX(0, n.length - 1)]
        }
          , T = (e, {alignment: t, blocksHomeMessages: a, focus: s, id: n, isPathVisible: r, offset: i}={}) => {
            const o = [{
                alignment: t,
                behavior: r ? "smooth" : void 0,
                blocksHomeMessages: null == a || a,
                id: n,
                ignoreBlocker: !r,
                levelId: e,
                name: "PATH_LEVEL_CENTER",
                offset: i
            }];
            return s && o.push({
                blocksHomeMessages: !0,
                levelId: e,
                name: "PATH_LEVEL_FOCUS"
            }),
            o
        }
          , C = e => R(e, (e => "passed" === e.state && (0,
        c.d)(e.type)))
          , R = (e, t, a, s) => {
            var n;
            if (a) {
                const s = null === (n = e[a.unitIndex]) || void 0 === n ? void 0 : n.levels[a.levelIndex];
                if (s && t(s))
                    return {
                        ...a,
                        level: e[a.unitIndex].levels[a.levelIndex],
                        unitNumber: e[a.unitIndex].unitNumber
                    }
            }
            if (null == s ? void 0 : s.findLast) {
                for (let a = e.length - 1; a >= 0; a--)
                    for (let s = e[a].levels.length - 1; s >= 0; s--)
                        if (t(e[a].levels[s]))
                            return {
                                level: e[a].levels[s],
                                levelIndex: s,
                                unitIndex: a,
                                unitNumber: e[a].unitNumber
                            }
            } else
                for (let a = 0; a < e.length; a++)
                    for (let s = 0; s < e[a].levels.length; s++)
                        if (t(e[a].levels[s]))
                            return {
                                level: e[a].levels[s],
                                levelIndex: s,
                                unitIndex: a,
                                unitNumber: e[a].unitNumber
                            }
        }
          , L = e => {
            var t;
            const a = W(e);
            if ((0,
            r.gQ)("lessonIndex"))
                return parseInt(null !== (t = (0,
                r.ky)("lessonIndex")) && void 0 !== t ? t : "", 10);
            if ((0,
            u.R0)(null == a ? void 0 : a.status) && void 0 !== (null == a ? void 0 : a.lessonsCompleted))
                return Math.min(a.lessonsCompleted, e.totalSessions);
            if (("grammar" === e.subtype || ["alphabet", "practice"].includes(e.type)) && V(ee(e))) {
                const t = e.totalSessions - (e.hasLevelReview ? 1 : 0);
                return s.MX(t - 1)
            }
            return e.finishedSessions
        }
          , P = (e, t) => {
            const a = e[t.unitIndex].levels[t.levelIndex + 1]
              , s = e[t.unitIndex].unitNumber;
            if (a)
                return {
                    level: a,
                    levelIndex: t.levelIndex + 1,
                    unitIndex: t.unitIndex,
                    unitNumber: s
                };
            const n = e[t.unitIndex + 1];
            return n ? {
                level: n.levels[0],
                levelIndex: 0,
                unitIndex: t.unitIndex + 1,
                unitNumber: n.unitNumber
            } : void 0
        }
          , A = (e, t, a={}) => {
            const s = [...T(e.id, a), {
                blocksHomeMessages: !0,
                delay: a.isPathVisible ? void 0 : m,
                levelId: e.id,
                name: "PATH_LEVEL_STATE",
                prevState: "active"
            }];
            return t && (s.push(...T(t.id, {
                focus: !0,
                isPathVisible: !0
            })),
            s.push({
                blocksHomeMessages: !0,
                levelId: t.id,
                name: "PATH_LEVEL_STATE",
                prevState: "locked"
            }),
            "practice" !== t.type && "skill" !== t.type && "alphabet" !== t.type || s.push({
                blocksHomeMessages: !0,
                levelId: t.id,
                name: "PATH_LEVEL_PROGRESS_FADE"
            }),
            s.push({
                blocksHomeMessages: !0,
                levelId: t.id,
                name: "PATH_LEVEL_TOOLTIP_FADE"
            })),
            s
        }
          , D = (e, t, a={}) => {
            const s = [...T(e.id, a), {
                blocksHomeMessages: !0,
                delay: a.isPathVisible ? void 0 : m,
                levelId: e.id,
                name: "PATH_LEVEL_STATE",
                prevIsActiveAssignment: !0,
                prevState: "active"
            }];
            return t && (s.push(...T(t.id, {
                focus: !0,
                isPathVisible: !0
            })),
            "skill" === t.type && s.push({
                blocksHomeMessages: !0,
                levelId: t.id,
                name: "PATH_LEVEL_PROGRESS_FADE"
            }),
            s.push({
                blocksHomeMessages: !0,
                levelId: t.id,
                name: "PATH_LEVEL_TOOLTIP_FADE"
            })),
            s
        }
          , O = e => [...T(e.levels[0].id, {
            alignment: "top"
        }), {
            blocksHomeMessages: !0,
            delay: m,
            name: "PATH_UNIT_STATE",
            prevState: "passed",
            unitIndex: e.unitIndex
        }, ...e.levels.map((e => ({
            blocksHomeMessages: !0,
            levelId: e.id,
            name: "PATH_LEVEL_STATE",
            prevState: "passed"
        })))]
          , N = ({level: e, levelIndex: t, unitIndex: a, isEarnbackSession: s=!1, isLegendary: n=!1, isSectionTest: i=!1, sectionIndex: o=0, storyMode: l}) => {
            if ("alphabet_gate" === e.type)
                return "/characters";
            const c = (0,
            r.gQ)("debugPath")
              , d = void 0 !== W(e);
            if (n)
                return `/lesson/unit/${a + 1}/legendary/${t + 1}`;
            if (i && void 0 !== o)
                return `/lesson/section/${o + 1}/test`;
            if (c || V(e.state) || d || s)
                return `/lesson/unit/${a + 1}/level/${t + 1}${c ? "?debugPath=1" : ""}`;
            switch (e.state) {
            case "active":
                return l ? `/lesson?mode=${l}` : "/lesson";
            case "unit_test":
                return `/lesson/unit/${a + 1}/test`;
            default:
                throw Error(`Unable to retrieve URL for ${e.state} level.`)
            }
        }
          , x = (e, t, a) => {
            var s, n, r, i, o;
            const l = H(null !== (s = null == t ? void 0 : t.unitIndex) && void 0 !== s ? s : 0, e)
              , c = e[l]
              , d = e.length
              , u = null === (n = null == c ? void 0 : c.units) || void 0 === n ? void 0 : n.length
              , p = a !== g.FF.SectionTest && void 0 !== (null == t ? void 0 : t.unitIndex) ? null === (i = null === (r = null == c ? void 0 : c.units[null == t ? void 0 : t.unitIndex]) || void 0 === r ? void 0 : r.levels) || void 0 === i ? void 0 : i.length : void 0
              , m = ![g.FF.UnitTest, g.FF.SectionTest].includes(a) && (null == t ? void 0 : t.level) ? t.level.totalSessions : void 0;
            return {
                absolute_unit_index: null == t ? void 0 : t.unitIndex,
                num_nodes_in_unit: p,
                num_sections: d,
                num_sessions_in_node: m,
                num_units_in_section: u,
                path_level_id: null === (o = null == t ? void 0 : t.level) || void 0 === o ? void 0 : o.id,
                section_index: l,
                unit_in_section_index: (null == t ? void 0 : t.unitNumber) ? (null == t ? void 0 : t.unitNumber) - 1 : void 0,
                unit_index: null == t ? void 0 : t.unitIndex
            }
        }
          , M = e => {
            let t = 0
              , a = 0
              , s = 0
              , n = 0
              , r = 0
              , i = !1;
            for (const o of e) {
                n++;
                let e = !0
                  , l = !0;
                for (const s of o.levels) {
                    const n = V(s.state);
                    i || void 0 === s.dailyRefreshInfo || (i = !0),
                    n && (t++,
                    "skill" === s.type && a++),
                    e = e && n,
                    l = l && "legendary" === s.state
                }
                e && s++,
                l && r++
            }
            return {
                num_levels_completed: t,
                num_skill_levels_completed: a,
                num_units_completed: s,
                num_units_legendary: r,
                path_complete: i ? s >= n - 1 : s === n
            }
        }
          , F = e => {
            var t, a;
            return null !== (a = null !== (t = _(e)) && void 0 !== t ? t : C(e)) && void 0 !== a ? a : (e => {
                const t = e[e.length - 1]
                  , a = t.levels.length - 1;
                return {
                    level: t.levels[a],
                    levelIndex: a,
                    unitIndex: e.length - 1,
                    unitNumber: t.unitNumber
                }
            }
            )(e)
        }
          , U = e => [...T(e.id, {
            focus: !0
        }), {
            blocksHomeMessages: !0,
            delay: m,
            levelId: e.id,
            name: "PATH_LEVEL_STATE",
            prevState: "unit_test"
        }, {
            blocksHomeMessages: !0,
            levelId: e.id,
            name: "PATH_LEVEL_PROGRESS_FADE"
        }, {
            blocksHomeMessages: !0,
            levelId: e.id,
            name: "PATH_LEVEL_TOOLTIP_FADE"
        }]
          , H = (e, t) => t.findIndex((t => t.units.some((t => t.unitIndex === e))))
          , G = e => e.levels.findIndex((e => "unit_test" === e.state))
          , V = e => !!e && ["legendary", "passed"].includes(e)
          , z = e => e.hasLevelReview && L(e) === e.totalSessions - 1
          , B = e => "unit_test" === e.state
          , j = e => e ? "isPathExtension"in e.pathLevelClientData && e.pathLevelClientData.isPathExtension : void 0
          , $ = e => "skill" === (null == e ? void 0 : e.type) ? e.pathLevelClientData.crownLevelIndex : void 0
          , Z = (e, t, a) => {
            if (V(a.level.state))
                return !1;
            const n = ( (e, t) => {
                const a = []
                  , {unitIndex: s, levelIndex: n} = t;
                for (let r = s; r < e.length; r++)
                    for (let i = r === s ? n : 0; i < e[r].levels.length; i++) {
                        const s = e[r].levels[i];
                        if (s.id !== t.level.id) {
                            if (s.isInProgressSequence)
                                return a;
                            a.push(s.id)
                        }
                    }
                return a
            }
            )(e, a);
            if (0 === n.length)
                return !1;
            const r = E({
                path: e
            }).map((e => e.id))
              , i = E({
                path: t
            }).map((e => e.id))
              , o = s.e5(i, r)
              , l = [a.level.id, ...n];
            return !!s.Xy(o, l)
        }
          , W = e => {
            let t;
            switch (e.type) {
            case "skill":
            case "story":
                t = e.pathLevelClientData.assignmentInfo
            }
            return null != t ? t : void 0
        }
          , q = e => {
            const t = W(e);
            return !(void 0 === t || !(0,
            u.R0)(t.status)) && 0 !== t.lessonsCompleted && t.lessonsCompleted < t.lessonsToComplete
        }
          , Q = e => {
            const t = W(e);
            return !(void 0 === t || !(0,
            u.R0)(t.status) || t.type !== n.bu.AssignmentType.SKILL) && t.lessonsCompleted === t.lessonsToComplete - 1
        }
          , K = e => e[0].toLocaleUpperCase(l.h9) + e.slice(1)
          , Y = (e, t) => void 0 !== t && void 0 !== e && t.assignmentId === e.assignmentId
          , J = (e, t, a, s) => {
            var n;
            switch (e.type) {
            case "alphabet":
                return e.pathLevelClientData.title;
            case "alphabet_gate":
            case "chest":
                return;
            case "duo_radio":
                return e.pathLevelClientData.duoRadioSummary.name;
            case "practice":
                if ("unit_practice" === e.subtype && s) {
                    const t = null === (n = e.pathLevelClientData) || void 0 === n ? void 0 : n.skillIds[0]
                      , a = s.levels.find((e => "skill" === e.type && e.pathLevelClientData.skillId === t && void 0 !== e.pathLevelClientData.teachingObjective));
                    if (void 0 === a)
                        return (0,
                        o.H8)(39844);
                    const r = a.pathLevelClientData.teachingObjective;
                    return K(r)
                }
                return (0,
                o.H8)(39844);
            case "skill":
                {
                    const t = "teachingObjective"in e.pathLevelClientData ? e.pathLevelClientData.teachingObjective : void 0;
                    return t ? K(t) : V(e.state) ? (0,
                    o.H8)(36805) : (0,
                    o.H8)(39121)
                }
            case "story":
                return "storyName"in e.pathLevelClientData ? e.pathLevelClientData.storyName : void 0;
            case "unit_review":
                return a ? (0,
                o.H8)(43037) : (0,
                o.H8)(38614, {
                    unit_num: t
                });
            default:
                return void (0,
                i.RJ)(e.type)
            }
        }
          , X = e => {
            const t = W(e);
            return (0,
            u.Zv)(null == t ? void 0 : t.status) && !["unit_test", "active"].includes(e.state)
        }
          , ee = (e, t) => {
            const a = W(e)
              , s = (0,
            u.R0)(null == a ? void 0 : a.status)
              , n = (0,
            u.Zv)(null == a ? void 0 : a.status);
            if ("duo_radio" === e.type && t && (0,
            d.yf)(t))
                return "legendary";
            const r = n && !["unit_test", "active"].includes(e.state);
            return s ? "assigned" : r ? "passed" : e.state
        }
          , te = e => "unit_test" === e.state
          , ae = e => "unit_review" === e.type ? p.mX : "alphabet" === e.type ? V(ee(e)) ? p.t1 : p.ct : "duo_radio" === e.type ? e.finishedSessions < e.totalSessions ? p.dY : p.tL : V(ee(e)) ? p.ix : "story" === e.type && "fixedXpAward"in e.pathLevelClientData ? e.pathLevelClientData.fixedXpAward : z(e) ? p.pu : p.Lu
          , se = e => "INTRO" === e ? "A1" : e
    }
    ,
    89065: (e, t, a) => {
        "use strict";
        a.d(t, {
            Fz: () => l,
            U_: () => c,
            df: () => d,
            uu: () => o,
            y2: () => u
        });
        var s = a(68903)
          , n = a(95940)
          , r = a(23275)
          , i = a(41631);
        const o = [i.t.ROOKIE, i.t.EXPLORER, i.t.TRAVELER, i.t.TRAILBLAZER, i.t.ADVENTURER, i.t.DISCOVERER, i.t.DAREDEVIL, i.t.NAVIGATOR, i.t.CHAMPION, i.t.DAILY_REFRESH]
          , l = 6
          , c = e => {
            var t;
            return "personalized_practice" === e.type ? i.t.CHAMPION : "daily_refresh" === e.type ? i.t.DAILY_REFRESH : null !== (t = o[e.index]) && void 0 !== t ? t : i.t.CHAMPION
        }
          , d = e => {
            const t = e.units.flatMap((e => e.levels.map((e => e.state))));
            return t.includes("active") ? "active" : t.every((e => (0,
            r.Wc)(e))) ? "complete" : "locked"
        }
          , u = (e, t) => {
            switch (e) {
            case i.t.ROOKIE:
                return (0,
                n.H8)(40024);
            case i.t.EXPLORER:
                return (0,
                n.H8)(40025);
            case i.t.TRAVELER:
                return (0,
                n.H8)(40026);
            case i.t.TRAILBLAZER:
                return (0,
                n.H8)(40027);
            case i.t.ADVENTURER:
                return (0,
                n.H8)(40028);
            case i.t.DISCOVERER:
                return (0,
                n.H8)(40029);
            case i.t.DAREDEVIL:
                return (0,
                n.H8)(40030);
            case i.t.NAVIGATOR:
                return (0,
                n.H8)(40031);
            case i.t.DAILY_REFRESH:
                return (0,
                n.H8)(42996);
            case i.t.CHAMPION:
                return (0,
                n.H8)(40032, {
                    language_name: t
                });
            default:
                throw (0,
                s.RJ)(e),
                Error(`Unexpected Path Section type: ${e}`)
            }
        }
    }
    ,
    53171: (e, t, a) => {
        "use strict";
        a.d(t, {
            $V: () => _,
            Hi: () => o,
            L4: () => r,
            YP: () => i,
            Zi: () => l,
            b1: () => h,
            in: () => m,
            lg: () => d,
            lo: () => u,
            qM: () => c,
            wM: () => p,
            wP: () => s,
            yf: () => v
        });
        var s, n = a(5768);
        !function(e) {
            e[e.Left = 0] = "Left",
            e[e.CenterLeft = .1794] = "CenterLeft",
            e[e.Center = .5] = "Center",
            e[e.CenterRight = .8206] = "CenterRight",
            e[e.Right = 1] = "Right"
        }(s || (s = {}));
        const r = {
            height: 93,
            width: 98
        }
          , i = {
            height: 83,
            width: 99
        }
          , o = {
            height: 90,
            width: 80
        }
          , l = {
            height: 80,
            width: 100
        }
          , c = {
            height: 93,
            width: 112
        }
          , d = {
            height: 65,
            width: 70
        }
          , u = {
            height: 89,
            width: 105
        }
          , g = [{
            assets: [n.Z.DUO_TWIRL, n.Z.DUO_WHISTLING, n.Z.DUO_JUMPFLAP],
            character: "duo"
        }, {
            assets: [n.Z.LILY_SHIRTS, n.Z.LILY_RAINCLOUD, n.Z.LILY_DOOMSCROLL],
            character: "lily"
        }, {
            assets: [n.Z.OSCAR_FLOWER, n.Z.OSCAR_COMB, n.Z.OSCAR_BONSAI],
            character: "oscar"
        }, {
            assets: [n.Z.DUO_GLOBE, n.Z.DUO_BALL, n.Z.DUO_GEM],
            character: "duo"
        }, {
            assets: [n.Z.JUNIOR_ICECREAM, n.Z.JUNIOR_SLEEP, n.Z.JUNIOR_FROG],
            character: "junior"
        }, {
            assets: [n.Z.ZARI_KICK, n.Z.ZARI_LOLLIPOP, n.Z.ZARI_GAMING],
            character: "zari"
        }, {
            assets: [n.Z.DUO_JUMPFLAP, n.Z.DUO_HEADPHONES, n.Z.DUO_POTION],
            character: "duo"
        }, {
            assets: [n.Z.LUCY_WALKIETALKIE, n.Z.LUCY_CAT, n.Z.LUCY_WALKIETALKIE],
            character: "lucy"
        }, {
            assets: [n.Z.EDDY_BASKETBALL, n.Z.EDDY_JUMPROPE, n.Z.EDDY_BASKETBALL],
            character: "eddy"
        }, {
            assets: [n.Z.DUO_BOOKS, n.Z.DUO_GEM, n.Z.DUO_WHISTLING],
            character: "duo"
        }, {
            assets: [n.Z.BEA_SMORES, n.Z.BEA_TENNIS, n.Z.BEA_SMORES],
            character: "bea"
        }, {
            assets: [n.Z.VIKRAM_GRILL, n.Z.VIKRAM_PANSIES, n.Z.VIKRAM_NOODLES],
            character: "vikram"
        }, {
            assets: [n.Z.DUO_POTION, n.Z.DUO_SUNGLASSES, n.Z.DUO_TWIRL],
            character: "duo"
        }, {
            assets: [n.Z.LIN_BIKE, n.Z.LIN_BIKEKISS, n.Z.LIN_BIKE],
            character: "lin"
        }, {
            assets: [n.Z.FALSTAFF_EATING, n.Z.FALSTAFF_SNOOZE, n.Z.FALSTAFF_SNEEZING],
            character: "falstaff"
        }, {
            assets: [n.Z.DUO_BUTTERFLY, n.Z.DUO_CHEER, n.Z.DUO_HEADPHONES],
            character: "duo"
        }, {
            assets: [n.Z.LILY_DOOMSCROLL, n.Z.LILY_SHIRTS, n.Z.LILY_RAINCLOUD],
            character: "lily"
        }, {
            assets: [n.Z.OSCAR_PAINTING, n.Z.OSCAR_BONSAI, n.Z.OSCAR_FLOWER],
            character: "oscar"
        }, {
            assets: [n.Z.DUO_GLOBE, n.Z.DUO_BALL, n.Z.DUO_BOOKS],
            character: "duo"
        }, {
            assets: [n.Z.JUNIOR_FROG, n.Z.JUNIOR_POGO, n.Z.JUNIOR_ICECREAM],
            character: "junior"
        }, {
            assets: [n.Z.ZARI_GAMING, n.Z.ZARI_KICK, n.Z.ZARI_LOLLIPOP],
            character: "zari"
        }, {
            assets: [n.Z.DUO_JUMPFLAP, n.Z.DUO_HEADPHONES, n.Z.DUO_POTION],
            character: "duo"
        }, {
            assets: [n.Z.LUCY_WALKIETALKIE, n.Z.LUCY_CAT, n.Z.LUCY_WALKIETALKIE],
            character: "lucy"
        }, {
            assets: [n.Z.EDDY_BASKETBALL, n.Z.EDDY_JUMPROPE, n.Z.EDDY_BASKETBALL],
            character: "eddy"
        }, {
            assets: [n.Z.DUO_BOOKS, n.Z.DUO_GEM, n.Z.DUO_WHISTLING],
            character: "duo"
        }, {
            assets: [n.Z.BEA_SMORES, n.Z.BEA_TENNIS, n.Z.BEA_SMORES],
            character: "bea"
        }, {
            assets: [n.Z.VIKRAM_NOODLES, n.Z.VIKRAM_PANCAKES, n.Z.VIKRAM_GRILL],
            character: "vikram"
        }, {
            assets: [n.Z.DUO_POTION, n.Z.DUO_SUNGLASSES, n.Z.DUO_GLOBE],
            character: "duo"
        }, {
            assets: [n.Z.LIN_BIKE, n.Z.LIN_BIKEKISS, n.Z.LIN_BIKE],
            character: "lin"
        }, {
            assets: [n.Z.FALSTAFF_FISHING, n.Z.FALSTAFF_SNEEZING, n.Z.FALSTAFF_SNOOZE],
            character: "falstaff"
        }, {
            assets: [n.Z.DUO_WHISTLING, n.Z.DUO_TWIRL, n.Z.DUO_JUMPFLAP],
            character: "duo"
        }]
          , p = (e, t) => e.reduce(( (e, a, s) => e + (s < t ? a.height + a.marginBottom + a.marginTop : s === t ? a.marginTop : 0)), 0)
          , m = e => 0 === e ? g[0] : g[(e - 1) % (g.length - 1) + 1]
          , h = () => [{
            assets: [n.Z.DUO_BOOKS],
            character: "duo"
        }]
          , _ = e => e.levels.every((e => "passed" === e.state))
          , v = e => e.levels.every((e => "legendary" === e.state || "duo_radio" === e.type))
    }
    ,
    71371: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => _
        });
        var s = a(64115)
          , n = a(59604)
          , r = a(58576)
          , i = a(2064)
          , o = a(18804)
          , l = a(79465);
        const c = {
            challenge_continue: 800,
            challenge_grade: 300,
            challenge_typing: 60,
            character_animation_play: 300,
            explanation_open: 3e3,
            first_render: 1e3,
            language_switch: 1e3,
            lesson_start: 3e3,
            login_success_or_fail: 1e3,
            open_leaderboard_profile: 300,
            open_profile: 300,
            pre_init: 2e3,
            purchase_item_in_shop: 1e3,
            registration_success_or_fail: 3e3,
            session_end_grade: 1e3,
            speech_grade: 300,
            splash_to_home: 3e3,
            splash_to_intro: 5e3,
            story_completion_delay: 3e3,
            story_start: 3e3,
            stripe_elements_load: 3e3,
            subscription_delivery: 3e3,
            trial_user_creation: 3e3,
            tts_play: 50,
            welcome_fork_to_session_start: 3e3
        }
          , d = {
            stripe_elements_load: 1,
            subscription_delivery: 1
        }
          , u = {}
          , g = e => {
            if (!m(e))
                return void ((0,
                s.Au)() && console.warn(`Timer event "${e}" finished but it was never started. Please make sure you start the timer on all relevant code paths. If the timer was intentionally removed or you reloaded the page you can ignore this warning.`));
            const t = window.performance.now()
              , a = t - u[e];
            a >= 0 ? p(e, a) : (0,
            r.Kp)(`Performance timer negative for ${e}`, {
                data: {
                    duration: a,
                    endTime: t,
                    startTime: u[e]
                }
            }),
            h(e)
        }
          , p = (e, t) => {
            var a, u;
            t = Math.round(t),
            (0,
            s.Au)() && t > c[e] && ((0,
            r.cM)("timer", `${e}`, {
                duration: t
            }),
            console.warn(`Timer event "${e}" took ${t}ms. This exceeds the allowed event duration of ${c[e]}ms.`));
            try {
                const s = null !== (a = d[e]) && void 0 !== a ? a : (0,
                n.O)("web_timer_tracker_sampling_rate", 0);
                if (Math.random() < s) {
                    const a = null === (u = (0,
                    o.globalGetState)()) || void 0 === u ? void 0 : u.player
                      , n = i.q.getPersistedStateVersion();
                    (0,
                    l.track)("app_performance_timer", {
                        challenge_index: (null == a ? void 0 : a.session) ? a.currentIndex : void 0,
                        challenge_type: (null == a ? void 0 : a.session) ? a.session.challenges[a.currentIndex].type : void 0,
                        millisecond_duration: t,
                        performance_timer_subtype: e,
                        restored_state_version: "state-persisted" === n.type ? `${n.version}` : void 0,
                        sampling_rate: s
                    })
                }
            } catch (t) {
                (0,
                r.vU)(`Failed to track performance timer for ${e}`, {
                    ex: t
                })
            }
        }
          , m = e => void 0 !== u[e]
          , h = e => delete u[e]
          , _ = {
            finish: g,
            finishOptional: e => {
                m(e) && g(e)
            }
            ,
            has: m,
            remove: h,
            start: (e, {startTime: t}={}) => u[e] = null != t ? t : window.performance.now(),
            track: (e, t) => p(e, t)
        }
    }
    ,
    97755: (e, t, a) => {
        "use strict";
        a.d(t, {
            n: () => i
        });
        var s = a(60106)
          , n = a(68903)
          , r = a(96786);
        class i {
            constructor(e, t) {
                this.initialize = (0,
                n.LU)((async (e, t) => {
                    const a = t => (console.log(`${t}; using new blank state`),
                    this.didUsePersistedState = !1,
                    e())
                      , i = await (async () => {
                        const e = await this.storage.get();
                        if (!e)
                            return a("No local state found");
                        if (e.version !== this.supportedVersion)
                            return a("Local state outdated");
                        const s = null == t ? void 0 : t(e.state);
                        return void 0 !== s ? a(s) : (console.log("Using locally persisted state"),
                        this.didUsePersistedState = !0,
                        e.state)
                    }
                    )();
                    this.substateCache = new s.Z(i);
                    const o = (0,
                    r.n)(( () => this.storage.set(( () => ({
                        state: this.getSubstateCache().getAll(),
                        version: this.supportedVersion
                    })))), {
                        replace: !0,
                        size: 1
                    })
                      , l = (0,
                    n.rw)((async () => {
                        try {
                            await o()
                        } catch (e) {
                            if (e instanceof r.k)
                                return void console.error(e);
                            throw e
                        }
                    }
                    ), 100);
                    this.substateCache.subscribe(l)
                }
                )),
                this.bindSubstate = e => this.getSubstateCache().substate(e),
                this.getCurrentState = () => this.getSubstateCache().getAll(),
                this.getPersistedStateVersion = () => void 0 === this.didUsePersistedState ? {
                    type: "unknown"
                } : this.didUsePersistedState ? {
                    type: "state-persisted",
                    version: this.supportedVersion
                } : {
                    type: "state-was-reset"
                },
                this.persistState = (e, t) => {
                    this.getSubstateCache().substate(e).set(t)
                }
                ,
                this.getSubstateCache = () => {
                    if (void 0 === this.substateCache)
                        throw Error("Persister not initialized");
                    return this.substateCache
                }
                ,
                this.supportedVersion = e,
                this.storage = t
            }
        }
    }
    ,
    2064: (e, t, a) => {
        "use strict";
        a.d(t, {
            q: () => r
        });
        var s = a(97755)
          , n = a(30839);
        const r = new s.n(80,{
            get: () => (0,
            n.pn)(n.Qt.State),
            set: e => (0,
            n.HJ)(n.Qt.State, e())
        })
    }
    ,
    44637: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dk: () => b,
            GR: () => y,
            Ks: () => I,
            L1: () => S,
            SB: () => T,
            UV: () => f,
            ct: () => E,
            gZ: () => C,
            vx: () => R,
            yn: () => k
        });
        var s = a(80254)
          , n = a(42659)
          , r = a(93540)
          , i = a(50888)
          , o = a(4368)
          , l = a(95332)
          , c = a(70732)
          , d = a(17135)
          , u = a(37971)
          , g = a(68903)
          , p = a(23275)
          , m = a(89260)
          , h = a(79465)
          , _ = a(34704)
          , v = a(11811);
        const f = 1e3 * parseFloat(o.Z["duration-slide"])
          , S = (e, t) => {
            let a = 0
              , s = 0;
            for (let n = 0; n < e.session.challenges.length; n++) {
                const r = {
                    challenge: e.session.challenges[n],
                    challengeIndex: n,
                    sectionChallengeIndex: s,
                    sectionIndex: a
                };
                if (t(r))
                    return r;
                s < e.challengeIdSections[a].length - 1 ? s++ : (a++,
                s = 0)
            }
            return {
                challenge: void 0,
                challengeIndex: void 0,
                sectionChallengeIndex: void 0,
                sectionIndex: void 0
            }
        }
          , y = e => {
            const [t] = b(e)
              , a = []
              , s = e.sessionParams.isFinalLevel && !e.session.failed && !e.session.shouldLearnThings;
            return S(e, ( ({challenge: e, sectionIndex: n}) => !(void 0 !== e.gradingResult && (!s || void 0 === t || t > n) && (a.push(e),
            1)))),
            a
        }
          , E = (e, t) => (0,
        c.j4)({
            challenge: e,
            challengeState: t
        }) ? u.c.Guessing : u.c.Showing
          , b = e => {
            const {sectionIndex: t, sectionChallengeIndex: a} = S(e, ( ({challengeIndex: t}) => t === e.currentIndex));
            return [t, a]
        }
          , I = e => {
            const t = (0,
            n.jv)(e)
              , a = (0,
            i.mu)(e, Date.now())
              , s = (0,
            n.Oz)(e).placementTestAvailable
              , o = (0,
            r.HF)(e)
              , c = (0,
            r.DN)(e)
              , u = (0,
            n.lA)(e)
              , g = (0,
            _.hg)(e)
              , {coachDuo: h, completedWithHeartsRemaining: f, numInLessonTipOpens: S, levelData: y, session: {challenges: E, startTime: b}, sessionParams: {alphabetId: I, isFinalLevel: k}, sessionPrefetchedTimestamp: T, speakIneligibleReasons: C=[], via: R} = u
              , L = E.some((e => (0,
            m.tq)().includes(e.type)))
              , P = E.some((e => (0,
            m.bc)().includes(e.type)));
            return {
                ...w({
                    path: o,
                    pathSectioned: c,
                    player: u
                }),
                alphabet_id: I,
                already_completed: (0,
                p.Wc)(null == y ? void 0 : y.level.state),
                coach_shown: h.allShowReasons.length > 0,
                contained_listen_challenge: L,
                contained_speak_challenge: P,
                did_complete_all_segments: k ? f : void 0,
                disabled_listen_challenges: b < t.listenDisabledUntil && L,
                disabled_speak_challenges: b < t.speakDisabledUntil && P,
                is_first_session_in_course: s,
                num_challenges_skipped: E.filter((e => e.skipped)).length,
                num_characters_shown: E.map((e => l.yH.includes(e.type) ? e.type === v.Sm.Dialogue ? e.dialogue.filter((e => {
                    var t;
                    return void 0 !== (null === (t = e.character) || void 0 === t ? void 0 : t.avatarIconImage)
                }
                )).length : e.character ? 1 : 0 : 0)).reduce(( (e, t) => e + t), 0),
                num_explanation_opens: S,
                num_placement_starts: 0,
                num_times_transliteration_toggled: u.numTimesTransliterationToggled,
                offlined_session: void 0 !== T,
                offlined_session_timestamp: T,
                speak_count: (0,
                m.A2)(E),
                speak_ineligible: C.length > 0,
                speak_ineligible_reasons: C.join(","),
                time: (0,
                d.Zo)(),
                transliteration_setting: g ? g.enabled ? g.trackingName : "off" : void 0,
                upload_timestamp: 0,
                via: R,
                xp_boost_equipped: a
            }
        }
          , w = ({path: e, pathSectioned: t, player: a}) => {
            var n, r, i, o, l;
            const {currentIndex: c, levelData: d, sessionParams: u, session: {adaptiveChallenges: m, challenges: h}} = a
              , _ = h.slice(0, c + 1)
              , v = m ? s.ZP.intersection(m.map((e => e.id)), _.map((e => e.id))).length : 0
              , f = null !== (n = null == u ? void 0 : u.generatorIdentifiersOfRecentMistakes) && void 0 !== n ? n : []
              , S = _.filter((e => {
                var t;
                return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
            }
            )).filter((e => e.challengeGeneratorIdentifier)).map((e => e.challengeGeneratorIdentifier))
              , y = f.filter((e => (0,
            g.cY)(S, e))).length;
            return {
                ...s.ZP.pick((0,
                p.eK)(e), "num_levels_completed", "num_skill_levels_completed", "num_units_completed", "path_complete"),
                ...s.ZP.pick((0,
                p.EH)(t, d, u.type), "absolute_unit_index", "path_level_id", "section_index", "unit_in_section_index", "unit_index", "num_sections", "num_units_in_section", "num_nodes_in_unit", "num_sessions_in_node"),
                contained_adaptive_challenge: v > 0,
                level_index: u.levelIndex,
                level_index_in_unit: null === (r = a.levelData) || void 0 === r ? void 0 : r.levelIndex,
                level_session_index: u.levelSessionIndex,
                num_adaptive_challenges: v,
                num_mistakes_completed: y,
                path_extension: !!(0,
                p.Mj)(null === (i = a.levelData) || void 0 === i ? void 0 : i.level),
                session_is_legendary: u.isFinalLevel,
                session_subtype: u.isGrammarSkill ? "grammar" : void 0,
                skill_id: u.skillId,
                skill_ids: null === (o = u.skillIds) || void 0 === o ? void 0 : o.join(","),
                unit_index: null === (l = a.levelData) || void 0 === l ? void 0 : l.levelIndex
            }
        }
          , k = ({challenge: e, challengeState: t, isDesktop: a, session: s, sessionParams: n}) => {
            switch (s.type) {
            case v.FF.AlphabetLesson:
            case v.FF.AlphabetPractice:
            case v.FF.GlobalPractice:
            case v.FF.MistakesReview:
            case v.FF.Legendary:
            case v.FF.LegendaryLevel:
            case v.FF.LegendaryLexemePractice:
            case v.FF.LegendaryUnitPractice:
            case v.FF.Lesson:
            case v.FF.LevelReview:
            case v.FF.LexemePractice:
            case v.FF.LexemeSkillLevelPractice:
            case v.FF.Placement:
            case v.FF.SectionTest:
            case v.FF.SpecifiedMatchPractice:
            case v.FF.TargetPractice:
            case v.FF.UnitReview:
            case v.FF.UnitRewind:
            case v.FF.UnitTest:
            case v.FF.UnitPractice:
                if (t.hasBrokenTts)
                    return "broken-tts";
                if ((0,
                m.bc)().includes(e.type))
                    return "cant-speak";
                if ((0,
                m.tq)().includes(e.type) && !s.disableCantListenOverride)
                    return "cant-listen";
                if (!0 === n.isGrammarSkill || n.isFinalLevel || s.type === v.FF.Legendary || s.type === v.FF.LegendaryLevel || s.type === v.FF.LegendaryLexemePractice || s.type === v.FF.LegendaryUnitPractice || s.type === v.FF.SectionTest || s.type === v.FF.SpecifiedMatchPractice || s.type === v.FF.TargetPractice || s.type === v.FF.UnitTest || s.type === v.FF.UnitReview || s.type === v.FF.UnitRewind)
                    return;
                if (a)
                    return "skip";
                break;
            case v.FF.DuoRadio:
            case v.FF.ListeningPractice:
            case v.FF.SpeakingPractice:
            case v.FF.Story:
                return;
            default:
                return (0,
                g.RJ)(s.type)
            }
        }
          , T = e => e >= 11 ? "fox" : e >= 6 ? "bee" : "owl"
          , C = (e, t) => {
            var a;
            const s = ( () => {
                if (e.response) {
                    switch (e.response.status) {
                    case 401:
                        return "authentication_error";
                    case 403:
                        return "forbidden_error";
                    case 404:
                        return "not_found_error";
                    case 410:
                        return "route_gone_error"
                    }
                    return e.response.status >= 500 && e.response.status < 600 ? "server_error" : "unknown_error"
                }
                return "ECONNABORTED" === e.code ? "timeout_error" : "network_error"
            }
            )();
            (0,
            h.track)("session_end_fail", {
                http_status_code: null === (a = e.response) || void 0 === a ? void 0 : a.status,
                request_error_type: s,
                type: t
            })
        }
          , R = ({hasXpBoost: e, isFirstSessionInCourse: t, path: a, pathSectioned: s, player: n, transliterationSetting: r}) => {
            const {currentIndex: i, levelData: o, session: l, session: {challenges: c, challengeTimeTakenCutoff: d}, sessionParams: {alphabetId: u}, speakIneligibleReasons: g=[]} = n
              , _ = c.map((e => e.timeTaken ? Math.min(d, e.timeTaken) / 1e3 : 0)).reduce(( (e, t) => e + t))
              , v = c.slice(0, i + 1);
            (0,
            h.track)("session_quit", {
                ...w({
                    path: a,
                    pathSectioned: s,
                    player: n
                }),
                ...l.trackingProperties,
                alphabet_id: u,
                already_completed: (0,
                p.Wc)(null == o ? void 0 : o.level.state),
                is_first_session_in_course: t,
                num_challenges_at: c.length,
                num_challenges_ct: n.session.challenges.filter((e => {
                    var t;
                    return null === (t = e.gradingResult) || void 0 === t ? void 0 : t.correct
                }
                )).length,
                num_challenges_skipped: c.filter((e => e.skipped)).length,
                num_placement_starts: 0,
                num_times_transliteration_toggled: n.numTimesTransliterationToggled,
                speak_count: (0,
                m.A2)(v),
                speak_ineligible: g.length > 0,
                speak_ineligible_reasons: g.join(","),
                sum_time_taken: _,
                transliteration_setting: r ? r.enabled ? r.trackingName : "off" : void 0,
                xp_boost_equipped: e
            })
        }
    }
    ,
    84401: (e, t, a) => {
        "use strict";
        a.d(t, {
            GU: () => L,
            O0: () => P,
            dY: () => f,
            Fb: () => v,
            Am: () => G,
            Dk: () => p,
            g3: () => A,
            hz: () => K,
            Br: () => M,
            $7: () => S,
            pj: () => E,
            az: () => m,
            sU: () => h,
            tL: () => j,
            qv: () => k,
            W7: () => W,
            Jk: () => ee,
            gw: () => Z,
            a8: () => y,
            d0: () => $,
            FG: () => x,
            w: () => F,
            gv: () => V,
            rK: () => B,
            Mn: () => J,
            z8: () => I,
            Hk: () => H,
            yi: () => U,
            Lf: () => b,
            qL: () => w,
            PH: () => D,
            fN: () => O,
            J_: () => T,
            T8: () => q
        });
        var s = a(80254)
          , n = a(17135)
          , r = a(64115)
          , i = a(59815)
          , o = a(68903)
          , l = a(95940)
          , c = a(23275)
          , d = a(11811)
          , u = a(18867)
          , g = a(79465);
        const p = "READ"
          , m = e => {
            const t = e ? (0,
            c.Ol)({
                levelType: "story",
                path: e
            }) : [];
            return s.jj(t.map((e => e.pathLevelClientData.storyId)))
        }
          , h = async (e, t, a, n) => {
            var r, i;
            const o = W(n);
            if (void 0 === o)
                throw Error("Tried to update practice hub stories without practice hub data.");
            const l = null === (r = null == o ? void 0 : o.featuredStory) || void 0 === r ? void 0 : r.storyId;
            if (void 0 !== l) {
                const n = await (async ({featuredStoryId: e, fromLanguage: t, learningLanguage: a}) => {
                    try {
                        return await u.Mw.getPracticeHubStories(e, t, a)
                    } catch (e) {
                        (0,
                        g.trackAndLogApiError)("stories_listing_update", "Failed to fetch practice hub stories", e)
                    }
                }
                )({
                    featuredStoryId: l,
                    fromLanguage: t,
                    learningLanguage: a
                })
                  , r = s.HK(null !== (i = null == n ? void 0 : n.stories) && void 0 !== i ? i : [], "id");
                if (void 0 !== n)
                    return {
                        featuredStory: n.featuredStory,
                        featuredStoryId: l,
                        libraryStories: e.flatMap((e => {
                            const t = r[e];
                            return void 0 === t ? [] : [t]
                        }
                        ))
                    }
            }
            return {
                featuredStory: void 0,
                featuredStoryId: "",
                libraryStories: []
            }
        }
        ;
        var _ = a(58576);
        const v = 10
          , f = 30
          , S = async ({countLimit: e, courseId: t, includeListening: a, includeSpeaking: s}) => {
            if (void 0 === t)
                return [];
            const n = await u.wO.getMistakes({
                countLimit: e,
                courseId: t,
                includeListening: a,
                includeSpeaking: s
            });
            return null != n ? n : []
        }
          , y = async ({countLimit: e, courseId: t, cutOffTimestamp: a, includeListening: s, includeSpeaking: n}) => void 0 !== t ? (await u.wO.getMistakes({
            countLimit: e,
            courseId: t,
            includeListening: s,
            includeSpeaking: n
        })).filter((e => e.inInboxSinceTimestamp / 1e3 > a)) : []
          , E = e => {
            const t = e.challengeIdentifier.specificType
              , a = e.prompt;
            switch (t) {
            case "assist":
                return (0,
                l._i)(19598, {
                    word: a
                });
            case "character_intro":
                return (0,
                l._i)(15437);
            case "character_select":
                return (0,
                l._i)(25329, {
                    string_1: a
                });
            case "complete_reverse_translation":
                return (0,
                l._i)(21271);
            case "definition":
                return (0,
                l._i)(1831, {
                    string_1: a
                });
            case "form":
                return (0,
                l._i)(20300);
            case "judge":
                return (0,
                l._i)(8914);
            case "listen":
                return (0,
                l._i)(6961);
            case "listen_comprehension":
                return (0,
                l._i)(8769);
            case "listen_tap":
                return (0,
                l._i)(10461);
            case "name":
                return (0,
                l._i)(24291, {
                    word: a
                });
            case "select":
                return (0,
                l._i)(28895);
            case "select_pronunciation":
            case "select_transcription":
                return (0,
                l._i)(21070);
            case "speak":
                return (0,
                l._i)(11803);
            case "tap":
            case "tap_gap":
            case "translate":
            case "reverse_tap":
            case "reverse_translate":
                return (0,
                l._i)(9221);
            case "transliterate":
                return (0,
                l._i)(20190);
            default:
                return void (0,
                _.Kp)(`Unsupported mistakes challenge specific type ${t} was returned`, {
                    once: !0
                })
            }
        }
          , b = e => {
            const t = e.challengeIdentifier.specificType;
            return !["assist", "character_select", "definition", "name"].includes(t)
        }
          , I = e => {
            switch (e.challengeIdentifier.specificType) {
            case "assist":
            case "character_select":
            case "definition":
            case "form":
            case "name":
            case "select":
            case "select_pronunciation":
            case "select_transcription":
                return void 0 !== E(e);
            case "character_intro":
            case "complete_reverse_translation":
            case "judge":
            case "listen":
            case "listen_comprehension":
            case "listen_tap":
            case "speak":
            case "tap":
            case "tap_gap":
            case "translate":
            case "reverse_tap":
            case "reverse_translate":
                return void 0 !== E(e) && null !== e.prompt;
            default:
                return !1
            }
        }
          , w = (e, t) => {
            const a = 1e3 * t;
            return 0 !== a && a < e.inInboxSinceTimestamp
        }
          , k = ({isListenEnabled: e, isSpeakEnabled: t, sessionType: a}) => {
            switch (a) {
            case d.FF.ListeningPractice:
                if (!e)
                    return "listen-disabled";
                break;
            case d.FF.SpeakingPractice:
                if (!t)
                    return "speak-disabled";
            case d.FF.TargetPractice:
            case d.FF.UnitRewind:
            }
        }
          , T = ({dispatch: e, isListenEnabled: t, isSpeakEnabled: a, sessionName: s}) => {
            const n = k({
                isListenEnabled: t,
                isSpeakEnabled: a,
                sessionType: $(s)
            });
            return void 0 !== n && (e({
                options: {
                    allowSwitchSession: !1,
                    name: "PRACTICE_HUB_SESSION_NOTIFICATION",
                    sessionName: s,
                    type: n
                },
                type: "TOGGLE_DRAWER"
            }),
            !0)
        }
        ;
        var C = a(67116)
          , R = a(97106);
        const L = 16
          , P = 8
          , A = 5 + L + P
          , D = ({fromLanguage: e, hasActiveNYPDiscount: t, learningLanguage: a, supportedCoursesInfo: s}) => !t && N(e, a, null == s ? void 0 : s.wordsListView)
          , O = (e, t, a) => N(e, t, null == a ? void 0 : a.wordsPracticeSession)
          , N = (e, t, a) => {
            const s = null == a ? void 0 : a.supportedCourses;
            if (void 0 === s)
                return !1;
            const n = (0,
            C.vI)(t, !1)
              , r = (0,
            C.vI)(e, !1);
            return n in s && s[n].includes(r)
        }
          , x = e => void 0 === e ? [] : (0,
        c.yK)(e, !0).reverse().filter((e => e.skillId)).map((e => (["locked", "unit_test"].includes(e.state) && (0,
        _.vU)("Unexpected locked level when fetching words list lexeme data.", {
            data: e,
            once: !0
        }),
        {
            finishedLevels: "active" === e.state ? 0 : 1,
            finishedSessions: e.finishedSessions,
            skillId: {
                id: e.skillId
            }
        })))
          , M = e => {
            var t, a;
            const s = W(e)
              , n = null !== (a = null === (t = null == s ? void 0 : s.wordsList) || void 0 === t ? void 0 : t.sessionLexemePairs) && void 0 !== a ? a : [];
            0 === n.length && (0,
            _.vU)("Words list lexeme data was not fetched before requesting a practice session.", {
                data: s,
                once: !0
            });
            const r = n.map((e => {
                var t;
                return {
                    lexemeId: null !== (t = e.lexemeId) && void 0 !== t ? t : "",
                    translation: e.translation,
                    word: e.word
                }
            }
            ));
            return {
                specifiedWordTranslationPairs: r,
                type: d.FF.SpecifiedMatchPractice
            }
        }
          , F = e => {
            const t = e.wordsListSessionCompleteTimeStampMs;
            return t && (0,
            n.zk)((0,
            n.Gz)(t)) ? R.KM : R.ZS
        }
          , U = (e, t, a) => void 0 !== e && (!!(0,
        r.gQ)("forceShowPracticeHub") || !(!a.hasPlus && !t) && (0,
        c.Ol)({
            levelType: "skill",
            path: e
        }).length >= 1)
          , H = (e, t) => t && void 0 !== e
          , G = ["listen-up", "perfect-pronunciation", "target-practice", "unit-rewind"]
          , V = (0,
        o.p)(G)
          , z = (0,
        o.p)(["listening-practice", "speaking-practice"])
          , B = e => [d.FF.ListeningPractice, d.FF.SpeakingPractice, d.FF.SpecifiedMatchPractice, d.FF.TargetPractice, d.FF.UnitRewind].includes(e)
          , j = e => {
            switch (e) {
            case d.FF.ListeningPractice:
                return "listen-up";
            case d.FF.SpeakingPractice:
                return "perfect-pronunciation";
            case d.FF.TargetPractice:
                return "target-practice";
            case d.FF.UnitRewind:
                return "unit-rewind";
            default:
                throw Error(`Unrecognized practice hub session type: ${e}`)
            }
        }
          , $ = e => {
            switch (e) {
            case "listen-up":
            case "listening-practice":
                return d.FF.ListeningPractice;
            case "perfect-pronunciation":
            case "speaking-practice":
                return d.FF.SpeakingPractice;
            case "target-practice":
                return d.FF.TargetPractice;
            case "unit-rewind":
                return d.FF.UnitRewind;
            default:
                throw (0,
                o.RJ)(e),
                Error(`Unrecognized practice hub session path name: ${e}`)
            }
        }
          , Z = e => {
            switch (e) {
            case "listen-up":
                return "listening_practice";
            case "perfect-pronunciation":
                return "speaking_practice";
            case "target-practice":
                return "target_practice";
            case "unit-rewind":
                return "unit_rewind";
            case "mistakes-review":
                return "mistakes_review_collections";
            case "listening-practice":
                return "listening_practice_collections";
            case "speaking-practice":
                return "speaking_practice_collections";
            default:
                throw (0,
                o.RJ)(e),
                Error(`Unrecognized practice hub session path name: ${e}`)
            }
        }
          , W = e => {
            var t;
            const a = e.currentCourseId;
            return null === (t = e.practiceHubInfo) || void 0 === t ? void 0 : t[null != a ? a : ""]
        }
          , q = ({dispatch: e, forceRefresh: t, includeListening: a, includeSpeaking: r, path: i, user: o}) => {
            const l = o.currentCourseId
              , d = W(o)
              , u = null == d ? void 0 : d.timestampGenerated;
            if (!t && u && (0,
            n.zk)((0,
            n.zM)(u)))
                return;
            if (void 0 === l || void 0 === i || (0,
            c.U8)({
                levelType: "skill",
                path: i
            }) < 1)
                return;
            const g = Q({
                includeListening: a,
                includeSpeaking: r,
                path: i
            })
              , p = Y({
                includeListening: a,
                includeSpeaking: r,
                path: i,
                practiceType: g
            });
            if (void 0 === g || void 0 === p)
                throw Error("Tried to refresh practice hub featured session when no practice types are eligible");
            var h;
            e({
                courseId: l,
                practiceHubCourseInfo: {
                    courseId: l,
                    featuredSession: {
                        completed: !1,
                        sessionParams: p
                    },
                    featuredStory: {
                        completed: !1,
                        storyId: (h = m(i),
                        s.UP(h.slice(Math.max(h.length - 30, 0))))
                    },
                    timestampGenerated: Date.now() / 1e3
                },
                type: "REFRESH_PRACTICE_HUB"
            })
        }
          , Q = ({excludedSessions: e, includeListening: t, includeSpeaking: a, path: n}) => {
            const r = G.filter((s => !(null == e ? void 0 : e.includes(s)) && J({
                includeListening: t,
                includeSpeaking: a,
                path: n,
                sessionType: $(s)
            })));
            return s.UP(r)
        }
          , K = ({dispatch: e, includeListening: t, includeSpeaking: a, path: s, practiceType: n, user: r}) => {
            if (!r.hasPlus)
                throw new i.w(`Non subscriber user tried to load ${n} session`);
            if (z(n)) {
                const e = Y({
                    includeListening: t,
                    includeSpeaking: a,
                    path: s,
                    practiceType: n
                });
                if (void 0 === e)
                    throw Error(`Tried to load ${n} session when unavailable`);
                return e
            }
            q({
                dispatch: e,
                includeListening: t,
                includeSpeaking: a,
                path: s,
                user: r
            });
            const o = W(r);
            if (void 0 === o)
                throw Error("Failed to update and save practice hub sessions for the current course");
            const l = o.featuredSession;
            if (void 0 === l)
                throw Error(`Tried to load ${n} featured session when unavailable`);
            if (n !== j(l.sessionParams.type))
                throw Error("Tried to load a non-featured practice hub session type");
            return l.sessionParams
        }
          , Y = ({includeListening: e, includeSpeaking: t, path: a, practiceType: s}) => {
            if (J({
                includeListening: e,
                includeSpeaking: t,
                path: a,
                sessionType: $(s)
            }))
                switch (s) {
                case "listen-up":
                case "listening-practice":
                    return {
                        skillId: (0,
                        c.mo)(a, 10, ["grammar"]).skillId,
                        type: d.FF.ListeningPractice
                    };
                case "perfect-pronunciation":
                case "speaking-practice":
                    return {
                        skillId: (0,
                        c.mo)(a, 10, ["grammar"]).skillId,
                        type: d.FF.SpeakingPractice
                    };
                case "target-practice":
                    {
                        const e = (0,
                        c.mo)(a, 10, ["grammar"]);
                        return {
                            skillIds: [e.skillId],
                            type: d.FF.TargetPractice,
                            unitIndex: e.unitIndex
                        }
                    }
                case "unit-rewind":
                    return X(a);
                default:
                    throw (0,
                    o.RJ)(s),
                    Error(`Unrecognized practice hub session type: ${s}`)
                }
        }
          , J = ({includeListening: e, includeSpeaking: t, path: a, sessionType: s}) => {
            const n = (0,
            c.Bm)(a)
              , r = null == n ? void 0 : n.unitIndex;
            switch (s) {
            case d.FF.ListeningPractice:
                return e;
            case d.FF.SpeakingPractice:
                return t;
            case d.FF.TargetPractice:
                return !0;
            case d.FF.UnitRewind:
                return void 0 !== r && r >= 1 || (0,
                c.Ol)({
                    path: a
                }).length > 1;
            default:
                throw Error(`Unrecognized practice hub session type: ${s}`)
            }
        }
          , X = e => {
            var t, a;
            const n = (0,
            c.Ol)({
                path: e
            })
              , r = null !== (a = null === (t = n[n.length - 1]) || void 0 === t ? void 0 : t.unitIndex) && void 0 !== a ? a : 0
              , i = s.MX(Math.max(r - 3, 0), r - 1)
              , o = e[i].levels;
            return {
                skillIds: o[o.length - 1].pathLevelClientData.skillIds,
                type: d.FF.UnitRewind,
                unitIndex: i
            }
        }
          , ee = e => {
            switch (e) {
            case d.FF.ListeningPractice:
                return (0,
                l._i)(39413, {
                    num: 10
                });
            case d.FF.SpeakingPractice:
                return (0,
                l._i)(31472, {
                    num: 10
                });
            case d.FF.SpecifiedMatchPractice:
                return (0,
                l._i)(37048);
            case d.FF.TargetPractice:
                return (0,
                l._i)(39368, {
                    num: 10
                });
            case d.FF.UnitRewind:
                return (0,
                l._i)(39371, {
                    num: 10
                });
            default:
                throw Error(`Unrecognized practice hub session type: ${e}`)
            }
        }
    }
    ,
    2439: (e, t, a) => {
        "use strict";
        a.d(t, {
            jF: () => r,
            qj: () => o,
            uN: () => i
        });
        var s = a(35160)
          , n = a(79465);
        const r = (e, t) => {
            (0,
            n.track)("premium_ad_click", e.trackingProps),
            o(e, t)
        }
          , i = (e, t, a=!1, s) => {
            o({
                customStartStep: s,
                hideCancelPlanButton: a,
                isCrossgrade: !0,
                trackingProps: {
                    iap_context: t
                }
            }, e)
        }
          , o = (e, t) => {
            t({
                options: {
                    ...e,
                    name: s.t.PremiumPurchase
                },
                type: "TOGGLE_MODAL"
            })
        }
    }
    ,
    67280: (e, t, a) => {
        "use strict";
        a.d(t, {
            Ay: () => l,
            p4: () => o
        });
        var s = a(64115)
          , n = a(68903)
          , r = a(11811);
        const i = e => void 0 !== e && (0,
        n.gB)(e.discountType, r.SP)
          , o = (e, t) => {
            const a = (e => (0,
            s.gQ)("debugNypDisabled") || null == e ? void 0 : e.filter(i))(e)
              , n = null == a ? void 0 : a.find((e => e.isActivated && t < e.expirationTime))
              , r = null == a ? void 0 : a.find((e => !e.isActivated));
            return null != n ? n : r
        }
          , l = (e, t=Date.now()) => void 0 !== o(e, t)
    }
    ,
    9832: (e, t, a) => {
        "use strict";
        a.d(t, {
            Lm: () => v,
            fQ: () => f,
            uS: () => G,
            eH: () => E,
            sK: () => y,
            N2: () => O,
            h: () => N,
            z: () => U,
            dS: () => D,
            Pr: () => H,
            Eq: () => V,
            ZQ: () => R,
            UZ: () => P,
            Sz: () => b,
            ew: () => A,
            r: () => x,
            Nh: () => F
        });
        var s = a(27378)
          , n = a(1375)
          , r = a(33467)
          , i = a(18867)
          , o = a(58576)
          , l = a(80164)
          , c = a(50498)
          , d = a(17135)
          , u = a(64115)
          , g = a(95940)
          , p = a(2439)
          , m = a(67280)
          , h = a(18804)
          , _ = a(11811);
        const v = 60
          , f = 2025
          , S = ["debugNypExpiresAt", "debugNypExpiresIn"]
          , y = () => !(0,
        u.gQ)("debugNypDisabled") && S.some((e => (0,
        u.gQ)(e)))
          , E = () => async e => {
            const t = ( () => {
                if ((0,
                u.gQ)("debugNypExpiresAt")) {
                    const e = (0,
                    u.ky)("debugNypExpiresAt");
                    return void 0 !== e ? Date.parse(e) - Date.now() : NaN
                }
                if ((0,
                u.gQ)("debugNypExpiresIn")) {
                    const e = (0,
                    u.ky)("debugNypExpiresIn");
                    return e ? (0,
                    d.iN)(e) : void 0
                }
            }
            )();
            var a;
            void 0 !== t && ((isNaN(t) || t < 0) && (0,
            o.vU)(`Invalid expiration when trying to create fake NYP discount with ${a = S.find((e => (0,
            u.gQ)(e))),
            a && `${a}: ${(0,
            u.ky)(a)}`}`, {
                once: !0
            }),
            e({
                apiDiscount: {
                    discountType: _.tm.NewYears2024Fake,
                    isActivated: !0,
                    secondsUntilExpiration: t / 1e3
                },
                type: "ADD_SUPER_DISCOUNT"
            }),
            await (0,
            c._v)(100))
        }
          , b = () => {
            const [e,t] = s.useState(Date.now() + (0,
            u.nn)())
              , a = () => t(Date.now() + (0,
            u.nn)());
            return s.useEffect(( () => (T(a),
            () => C(a))), []),
            e
        }
        ;
        let I, w, k = [];
        const T = e => {
            k.push(e),
            I || w || (w = setTimeout(( () => {
                I = setInterval(( () => k.forEach((e => e()))), 1e3)
            }
            ), 1e3 - (0,
            d.Ux)().getMilliseconds()))
        }
          , C = e => {
            k = k.filter((t => t !== e)),
            0 === k.length && (w && (clearTimeout(w),
            w = void 0),
            I && (clearInterval(I),
            I = void 0))
        }
          , R = e => {
            const t = (0,
            h.Fx)(l.I9)
              , a = (0,
            h.Fx)(l.tE)
              , r = "registration_soft_wall" === e || "redeem" === e
              , [i,o] = s.useState(( () => a ? (0,
            m.p4)(t, Date.now()) : void 0));
            if ((0,
            n.Z)(( () => {
                i && i.expirationTime < Date.now() && o(void 0)
            }
            ), void 0 === i ? void 0 : 5e3),
            s.useEffect(( () => {
                o(a ? (0,
                m.p4)(t, Date.now()) : void 0)
            }
            ), [t, a]),
            !r)
                return i
        }
          , L = (e, t) => {
            const a = e.expirationTime - t;
            return a < d.Mb || a < 2 * d.Mb && a < 1e3 * (0,
            d.dz)({
                hours: 48
            })
        }
          , P = e => {
            const t = R(e)
              , [a,r] = s.useState(( () => void 0 !== t && L(t, Date.now())));
            return s.useEffect(( () => {
                void 0 === t && r(!1)
            }
            ), [t]),
            (0,
            n.Z)(( () => {
                r(void 0 !== t && L(t, Date.now()))
            }
            ), t ? 5e3 : void 0),
            a
        }
          , A = e => void 0 !== R(e)
          , D = (e, t, a) => e && t && a
          , O = ({discount: e, product: t, step: a, withPlusContext: s, hasUsNypPlan: n}) => {
            const i = a && [r.K.Packages, r.K.BillingInfo].includes(a);
            switch (e ? i ? "package-selection" : "default-new-years" : "default-plus") {
            case "package-selection":
                return (null == t ? void 0 : t.isNewYears) ? (0,
                g._i)(34149, {
                    discount: G(n)
                }) : (0,
                g._i)(34199);
            case "default-new-years":
                return s ? (0,
                g._i)(34149, {
                    discount: G(n)
                }) : (0,
                g._i)(1819, {
                    discount: G(n)
                });
            default:
                return (0,
                g._i)(34199)
            }
        }
          , N = (e, t, a) => {
            if (!e)
                return null;
            const {hoursTotal: s, minutes: n, seconds: r} = M(e, t)
              , i = s <= 0 && n <= 0 ? (0,
            g.H8)(27121, {
                minutes: n,
                seconds: r
            }) : (0,
            g.H8)(2519, {
                hours: s,
                minutes: n
            });
            return ["PF", "Package"].includes(a) ? (0,
            g._i)(49290, {
                remaining: i
            }) : (0,
            g._i)(27637, {
                duration: i
            })
        }
          , x = e => {
            const t = b()
              , a = (0,
            h.Fx)(l.I9);
            return ( (e, t, a) => ["HM" === a ? (0,
            g._i)(49288) : (0,
            g._i)(49289), N(e, t, a)])((0,
            m.p4)(a, t), t, e)
        }
          , M = (e, t) => (0,
        d.zj)(e.expirationTime - t)
          , F = () => {
            const e = (0,
            h.Fx)(l.I9)
              , t = b()
              , a = (0,
            m.p4)(e, t);
            return a ? ( (e, t) => {
                const {hoursTotal: a, minutes: s, seconds: n} = (0,
                d.zj)(e.expirationTime - t);
                return `${a < 10 ? "0" : ""}${a}:${s < 10 ? "0" : ""}${s}:${n < 10 ? "0" : ""}${n}`
            }
            )(a, t) : ""
        }
          , U = () => r.K.FeaturesLongScroll
          , H = (e, t) => () => {
            (0,
            p.jF)({
                customStartStep: U(),
                trackingProps: {
                    iap_context: t
                }
            }, e)
        }
          , G = e => v
          , V = e => {
            const t = (0,
            h.tX)()
              , a = (0,
            h.Fx)(l.I9)
              , n = null == a ? void 0 : a.find((e => e.discountType === _.tm.NewYears2025 && !e.isActivated))
              , r = (a, s) => {
                a.isActivated || s.signal.aborted || document.hidden || setTimeout(( () => {
                    var e;
                    s.signal.aborted || document.hidden || t((e = a.discountType,
                    async t => {
                        try {
                            t({
                                apiDiscount: await i.Vi.createUserSuperDiscount(e),
                                type: "ACTIVATE_SUPER_DISCOUNT"
                            })
                        } catch (t) {
                            (0,
                            o.vU)("Error when creating super discount", {
                                data: {
                                    discountType: e,
                                    exception: t
                                },
                                sample: .05
                            })
                        }
                    }
                    ))
                }
                ), e ? 3e3 : 0)
            }
            ;
            s.useEffect(( () => {
                if (void 0 === n)
                    return () => {}
                    ;
                const e = new AbortController
                  , t = () => {
                    r(n, e)
                }
                ;
                return document.addEventListener("visibilitychange", t),
                r(n, e),
                () => {
                    e.abort(),
                    document.removeEventListener("visibilitychange", t)
                }
            }
            ), [n])
        }
    }
    ,
    25062: (e, t, a) => {
        "use strict";
        a.d(t, {
            B5: () => I,
            G$: () => S,
            H7: () => s,
            Rg: () => y,
            T4: () => b,
            XL: () => n,
            eV: () => m,
            hp: () => _,
            k0: () => E,
            kJ: () => h,
            kk: () => p,
            uJ: () => f
        });
        var s, n, r = a(39900), i = a(80254), o = a(18867), l = a(64115), c = a(67116), d = a(58576), u = a(79465);
        !function(e) {
            e.AmericanExpress = "AMERICAN_EXPRESS",
            e.DinersClub = "DINERS_CLUB",
            e.Discover = "DISCOVER",
            e.JCB = "JCB",
            e.MasterCard = "MASTERCARD",
            e.Unknown = "UNKNOWN",
            e.Visa = "VISA"
        }(s || (s = {})),
        function(e) {
            e.StripeVendor = "STRIPE"
        }(n || (n = {}));
        const g = {
            AT: "EUR",
            AU: "AUD",
            BE: "EUR",
            BR: "BRL",
            CA: "CAD",
            CY: "EUR",
            DE: "EUR",
            EE: "EUR",
            ES: "EUR",
            FI: "EUR",
            FR: "EUR",
            GB: "GBP",
            GR: "EUR",
            IE: "EUR",
            IT: "EUR",
            JP: "JPY",
            LT: "EUR",
            LU: "EUR",
            LV: "EUR",
            MX: "MXN",
            NL: "EUR",
            PT: "EUR",
            SI: "EUR",
            SK: "EUR",
            US: "USD"
        }
          , p = e => {
            var t;
            return null !== (t = g[e]) && void 0 !== t ? t : "USD"
        }
          , m = (s.AmericanExpress,
        s.DinersClub,
        s.Discover,
        s.JCB,
        s.MasterCard,
        s.Visa,
        {
            [s.AmericanExpress]: "amex",
            [s.DinersClub]: "diners",
            [s.Discover]: "discover",
            [s.JCB]: "jcb",
            [s.MasterCard]: "mastercard",
            [s.Visa]: "visa"
        })
          , h = e => {
            switch (e) {
            case s.AmericanExpress:
                return "American Express";
            case s.DinersClub:
                return "Diners Club";
            case s.Discover:
                return "Discover";
            case s.JCB:
                return "JCB";
            case s.MasterCard:
                return "MasterCard";
            case s.Visa:
                return "Visa";
            default:
                return (0,
                d.vU)(`Unknown card brand: ${e}`, {
                    once: !0,
                    sample: .01
                }),
                e
            }
        }
        ;
        var _;
        !function(e) {
            e.Schools = "DUOLINGO_SCHOOLS",
            e.Duolingo = "DUOLINGO"
        }(_ || (_ = {}));
        const v = async (e, t) => {
            const a = (0,
            l.gQ)("debugStripe") ? t : e;
            r.loadStripe.setLoadParameters({
                advancedFraudSignals: !1
            });
            const s = await (0,
            r.loadStripe)(a, {
                betas: ["elements_enable_deferred_intent_beta_1"]
            });
            if (null === s)
                throw Error("stripe could not be loaded");
            return s
        }
          , f = i.IH((async () => await v("pk_live_wGV2ziRFq7KJLNaVUAJgrzDf", "pk_test_bpwxgxXy49mckw94PW2hhVnS")))
          , S = i.IH((async () => await v("pk_live_51LsRThCLCQAemjDAxnfWuDhC82PfhQ4l7iOkoytUPpkDEiNEpDge4l8umm5BZHtCTTfAtBjIULU5ft0G3MNVSlk000nW3pIJse", "pk_test_51LsRThCLCQAemjDAJSRyXRbH24iEVGIUBnK5VKr34QEO5MTwJn9Cub0RLzJ3jC7nXXky2Ie8KT5dhxTVh1jCGfEM005g2c0iKg")))
          , y = i.IH((async () => {
            const e = await f()
              , t = window.ApplePaySession;
            if (t && (t.canMakePaymentsWithActiveCard = () => Promise.resolve(t.canMakePayments())),
            e) {
                const t = e.paymentRequest({
                    country: "US",
                    currency: "usd",
                    total: {
                        amount: 1e3,
                        label: "Test Amount"
                    }
                })
                  , a = await t.canMakePayment();
                (0,
                u.track)("supported_web_payment_options", {
                    supported_web_payment_options: a ? a.applePay ? "ApplePay" : "PaymentRequestAPI" : "None"
                })
            }
        }
        ))
          , E = async (e, t, a) => {
            var s;
            if (!e)
                throw Error("no cardNumberElement provided");
            {
                const n = await f()
                  , {token: r, error: i} = await n.createToken(e, {
                    name: t,
                    ...a && {
                        address_zip: a
                    }
                });
                if (i)
                    throw Error(null !== (s = i.code) && void 0 !== s ? s : "unknown error creating token");
                if (r)
                    return r.id
            }
            throw Error("unknown error creating token")
        }
          , b = (e, t, a, s, n) => {
            const r = `${(0,
            c.M$)(window.duo.uiLanguage)}-${null != a ? a : "US"}`
              , i = Intl.NumberFormat.supportedLocalesOf(r, {
                localeMatcher: "lookup"
            }).length > 0 ? r : (0,
            c.BE)()
              , o = s ? {
                maximumFractionDigits: 0,
                minimumFractionDigits: 0
            } : {};
            if ("" === t)
                return (0,
                d.Kp)("formatPrice called with empty currency", {
                    data: {
                        country: a,
                        price: e
                    },
                    once: !0
                }),
                `$${new Intl.NumberFormat(i,{
                    currency: "USD",
                    style: "currency",
                    ...o
                }).format(e / 100).replace(/[A-Z]*/, "")}`;
            const l = new Intl.NumberFormat(i,{
                currency: t,
                style: "currency",
                ...o
            }).format(e / 100);
            if (!n) {
                if ("AUD" === t && !l.includes("A"))
                    return `${l} AUD`;
                if ("CAD" === t && !l.includes("CA"))
                    return `${l} CAD`;
                if ("MXN" === t && !l.includes("MX"))
                    return `${l} MXN`;
                if ("USD" === t && !l.includes("US"))
                    return `${l} USD`
            }
            return l
        }
          , I = e => [o.qF.LE.Admin, o.qF.LE.IOS, o.qF.LE.Android].includes(e)
    }
    ,
    74541: (e, t, a) => {
        "use strict";
        a.d(t, {
            $M: () => i,
            KX: () => r,
            l1: () => n
        });
        var s = a(18867);
        const n = (e, t, a) => {
            switch (null == e ? void 0 : e.itemName) {
            case s.qF.lV.SUPER:
            case s.qF.lV.IMMERSIVE_SUPER:
                return t;
            case s.qF.lV.MAX:
                return a;
            default:
                return
            }
        }
          , r = e => {
            switch (null == e ? void 0 : e.itemName) {
            case s.qF.lV.SUPER:
                return s.qF.lV.SUPER;
            case s.qF.lV.IMMERSIVE_SUPER:
                return s.qF.lV.IMMERSIVE_SUPER;
            case s.qF.lV.MAX:
                return s.qF.lV.MAX;
            default:
                return
            }
        }
          , i = e => (null == e ? void 0 : e.itemName) === s.qF.lV.MAX
    }
    ,
    32499: (e, t, a) => {
        "use strict";
        a.d(t, {
            $2: () => j,
            DK: () => $,
            G4: () => k,
            Jc: () => E,
            Nf: () => v,
            RD: () => C,
            SY: () => p,
            V8: () => B,
            Wt: () => m,
            X0: () => h,
            XH: () => P,
            XZ: () => Z,
            Xq: () => A,
            _A: () => N,
            _C: () => S,
            _r: () => f,
            ae: () => L,
            b1: () => I,
            dR: () => O,
            dY: () => D,
            eA: () => _,
            ek: () => F,
            fE: () => y,
            gD: () => x,
            hJ: () => M,
            jF: () => b,
            kY: () => R,
            kk: () => w,
            mm: () => W,
            tA: () => U,
            tJ: () => T,
            vM: () => H,
            z4: () => z
        });
        var s = a(33467)
          , n = a(9249)
          , r = a(18867)
          , i = a(17135)
          , o = a(68903)
          , l = a(67116)
          , c = a(58576)
          , d = (a(2439),
        a(25062))
          , u = (a(88868),
        a(79465),
        a(16086))
          , g = a(20028);
        const p = (e, t) => {
            var a;
            if (!e)
                return !1;
            const s = null !== (a = e.subscriptionInfo) && void 0 !== a ? a : {
                renewer: void 0,
                renewing: void 0
            }
              , i = s.renewer
              , o = i && (i !== r.qF.LE.Stripe || void 0 !== s.renewing);
            return o || t(n.w4(e.purchaseId)),
            !!o
        }
          , m = (e, t) => !e.inventory.premium_subscription && !e.inventory.gold_subscription && !(0,
        g.pN)(t)
          , h = (e, t) => {
            var a;
            return m(e, t) && !(0,
            g.Ye)(t) && !e.inventory.schools_pro_subscription && !e.inventory.immersive_subscription && !window.duo.disableMonetization && ((null === (a = e.subscriptions) || void 0 === a ? void 0 : a.subscriptionPlans) ? e.subscriptions.subscriptionPlans.length > 0 : void 0)
        }
          , _ = "com.duolingo.subscription.premium.prepaid"
          , v = "com.duolingo.subscription.premium.b2b_universal_clock";
        var f;
        !function(e) {
            e[e.OneMonth = 0] = "OneMonth",
            e[e.TwelveMonth = 1] = "TwelveMonth",
            e[e.FamilyPlan = 2] = "FamilyPlan"
        }(f || (f = {}));
        const S = (e, t) => (0,
        d.T4)(e.priceInCents, e.planCurrency, t)
          , y = 7
          , E = 1
          , b = (e, t) => {
            var a;
            return null !== (a = e.find((e => e.planType === (null != t ? t : f.TwelveMonth)))) && void 0 !== a ? a : e[0]
        }
          , I = e => void 0 === e ? 0 : e.length
          , w = e => void 0 !== e && ["Max", "Max Family"].includes(e.packageName)
          , k = e => void 0 !== e && ["PREPAID", "B2B_UNIVERSAL_CLOCK"].includes(e.type)
          , T = "com.duolingo.immersive_free_trial_subscription"
          , C = e => e === T
          , R = e => "USD" !== e.planCurrency
          , L = e => e.isFamilyPlan
          , P = e => e.planType === f.TwelveMonth
          , A = e => e.planType === f.OneMonth
          , D = e => {
            var t, a, s, n, r, o, l, d;
            if (void 0 !== (null === (t = e.subscriptionInfo) || void 0 === t ? void 0 : t.isFreeTrialPeriod))
                return e.subscriptionInfo.isFreeTrialPeriod;
            const u = null !== (s = null === (a = e.subscriptionInfo) || void 0 === a ? void 0 : a.expectedExpiration) && void 0 !== s ? s : i.wD
              , g = null !== (r = null === (n = e.subscriptionInfo) || void 0 === n ? void 0 : n.extendedFreeTrialLength) && void 0 !== r ? r : (0,
            i.dz)({
                days: y
            })
              , p = e.purchaseDate + g <= u;
            return p !== (null === (o = e.subscriptionInfo) || void 0 === o ? void 0 : o.isFreeTrialPeriod) && (0,
            c.Kp)("Unexpected difference between isFreeTrialPeriod and manually calculated free trial period", {
                data: {
                    subscription: e
                },
                once: !0
            }),
            null !== (d = null === (l = e.subscriptionInfo) || void 0 === l ? void 0 : l.isFreeTrialPeriod) && void 0 !== d ? d : p
        }
          , O = e => !!e.subscriptionInfo && e.subscriptionInfo.renewer === r.qF.LE.Stripe
          , N = e => !!e.familyPlanInfo
          , x = e => e.subscriptionInfo ? (0,
        i.zM)(e.subscriptionInfo.expectedExpiration).toLocaleString((0,
        l.M$)(window.duo.uiLanguage), {
            day: "numeric",
            month: "long",
            year: "numeric"
        }) : ""
          , M = (e, t) => {
            if (!t.subscriptionInfo)
                return 0;
            const a = t.subscriptionInfo.expectedExpiration;
            return (0,
            i.t8)(e, 1e3 * a, "ceil")
        }
          , F = (e, t) => {
            if (!t.subscriptionInfo)
                return;
            const a = (0,
            i.zM)(t.subscriptionInfo.expectedExpiration);
            return (0,
            i.J8)(e, a)
        }
          , U = async (e, t) => {
            await r.Vi.patchUserShopItem(e.purchaseId, {
                subscriptionInfo: {
                    renewing: !0
                }
            }),
            await t(n.w4(e.purchaseId))
        }
          , H = e => {
            switch (e.periodLengthInMonths) {
            case 1:
                return "one_month";
            case 6:
                return "six_month";
            case 12:
                return "twelve_month";
            default:
                throw Error(`Unknown premium product period length ${(0,
                o.RJ)(e.periodLengthInMonths)}`)
            }
        }
          , G = e => {
            switch (e.type) {
            case "gold":
                return "gold";
            case "premium":
                return "premium";
            default:
                throw (0,
                o.RJ)(e.type),
                Error(`Unknown product type: ${e.type}`)
            }
        }
          , V = e => e.isFamilyPlan ? "family" : "individual"
          , z = e => ({
            subscription_level: void 0 === e.type ? void 0 : G(e),
            subscription_tier: void 0 === e.periodLengthInMonths ? void 0 : H(e),
            subscription_type: void 0 === e.isFamilyPlan ? void 0 : V(e)
        })
          , B = e => ({
            previous_subscription_level: void 0 === e.type ? void 0 : G(e),
            previous_subscription_tier: void 0 === e.periodLengthInMonths ? void 0 : H(e),
            previous_subscription_type: void 0 === e.isFamilyPlan ? void 0 : V(e)
        })
          , j = e => (0,
        u.Pc)() ? s.K.FeaturesLongScroll : e
          , $ = 2
          , Z = (e, t) => e && t && t.length > 0
          , W = e => {
            switch (e.planType) {
            case f.TwelveMonth:
                return "gold" === e.type ? 65333 : 65330;
            case f.FamilyPlan:
                return "gold" === e.type ? 65334 : 65332;
            case f.OneMonth:
                return "gold" === e.type ? 42060 : 64220;
            default:
                throw (0,
                o.RJ)(e.planType),
                Error(`Unknown subscription plan type: ${e.planType}`)
            }
        }
    }
    ,
    88787: (e, t, a) => {
        "use strict";
        a.d(t, {
            Hd: () => S,
            S1: () => f,
            ZK: () => v,
            eV: () => y,
            og: () => E,
            r1: () => _
        });
        var s = a(18867)
          , n = a(50498)
          , r = a(58576)
          , i = a(79465)
          , o = a(74597)
          , l = a(16086);
        let c, d = !1, u = null;
        const g = e => {
            const t = e.endpoint;
            return t.startsWith("https://android.googleapis.com/gcm/send") && e.subscriptionId && !t.includes(e.subscriptionId) ? e.subscriptionId : t.split("/").pop()
        }
          , p = () => {
            if (void 0 === c)
                throw Error("Push notifications not initialized yet");
            return c
        }
          , m = async e => {
            try {
                return void await h()
            } catch (e) {
                (0,
                r.Kp)("Failed to subscribe to push notifications", {
                    ex: e
                })
            }
            try {
                if (await _(!1),
                null == e ? void 0 : e.aborted)
                    return;
                await h()
            } catch (e) {
                (0,
                r.Kp)("Failed to update notification subscription", {
                    ex: e
                })
            }
        }
          , h = async () => {
            const e = p()
              , t = (e => {
                const t = (e + "=".repeat(1)).replace(/-/g, "+").replace(/_/g, "/")
                  , a = atob(t)
                  , s = new Uint8Array(a.length);
                for (let e = 0; e < a.length; ++e)
                    s[e] = a.charCodeAt(e);
                return s
            }
            )("BOfu40JfHSmIGu-08T0bvngwcoDkpA3hwdQiQnQxyCHQTpZjI5v_bNND-ERl5UYNZ9l4S2VCmEjKSgTeZxDsHgk")
              , a = await e.pushManager.subscribe({
                applicationServerKey: t,
                userVisibleOnly: !0
            });
            console.log("Subscribed to push notifications"),
            s._s.registerDevice(g(a), JSON.stringify(a)),
            u = a
        }
          , _ = async e => {
            if (null === u)
                return;
            const t = p()
              , a = await t.pushManager.getSubscription();
            a && (await a.unsubscribe(),
            console.log("Unsubscribed from push notifications"),
            e || s._s.unregisterDevice(g(a)).catch((e => (0,
            i.trackAndLogApiError)("unregister_device_failed", "Failed to unregister device", e))),
            u = null)
        }
          , v = async e => {
            (0,
            i.track)("chrome_notification_dialog_load", {
                via: e
            });
            const t = (async () => {
                const t = await new Promise((e => {
                    try {
                        Notification.requestPermission().then(e)
                    } catch {
                        Notification.requestPermission(e)
                    }
                }
                ));
                (0,
                i.track)("chrome_notification_dialog_tap", {
                    target: {
                        default: "close",
                        denied: "deny",
                        granted: "allow"
                    }[t],
                    via: e
                }),
                m()
            }
            )();
            if (!o.Z.safari) {
                const a = new AbortController
                  , s = a.signal;
                (0,
                n._v)(1e4).then(( () => {
                    s.aborted || (0,
                    r.Kp)("requestPermission is taking a long time (10+ seconds)", {
                        data: {
                            userAgent: navigator.userAgent,
                            via: e
                        }
                    })
                }
                )),
                await t,
                a.abort()
            }
        }
          , f = async e => {
            if (null === u) {
                if (!("serviceWorker"in navigator))
                    throw Error("Browser doesn't support service workers");
                c = await navigator.serviceWorker.getRegistration(),
                await navigator.serviceWorker.ready,
                e.aborted || await (async e => {
                    if (!("showNotification"in window.ServiceWorkerRegistration.prototype))
                        throw Error("Notifications unsupported");
                    const t = window.Notification.permission;
                    if ("denied" !== t) {
                        if (!("PushManager"in window))
                            throw Error("Push messaging unsupported");
                        console.log("Push notifications initialized"),
                        d = !0,
                        "granted" === t && (0,
                        l.Pc)() && await m(e)
                    } else
                        console.log("User denied notification permission")
                }
                )(e)
            } else
                console.log("Push notifications already initialized")
        }
          , S = () => d
          , y = async e => {
            e({
                isVisible: !0,
                type: "TOGGLE_REQUEST_NOTIFICATION_PERMISSION"
            });
            try {
                await v("notification_primer")
            } catch (e) {
                console.error(e)
            }
            e({
                isVisible: !1,
                type: "TOGGLE_REQUEST_NOTIFICATION_PERMISSION"
            })
        }
          , E = e => e && S() && "default" === window.Notification.permission
    }
    ,
    96786: (e, t, a) => {
        "use strict";
        a.d(t, {
            k: () => r,
            n: () => i
        });
        var s = a(50498)
          , n = a(59815);
        class r extends n.pY {
            constructor() {
                super("Function was removed from queue")
            }
        }
        const i = (e, {replace: t=!1, size: a=1 / 0}={}) => {
            let n = !1;
            const i = []
              , o = (...o) => {
                var l;
                const {promise: c, reject: d, resolve: u} = (0,
                s.Bw)()
                  , g = async t => {
                    if (void 0 === t)
                        try {
                            u(await e(...o))
                        } catch (e) {
                            d(e)
                        }
                    else
                        d(t)
                }
                ;
                if (i.length < a)
                    i.push(g);
                else {
                    if (!t)
                        return Promise.reject(Error("Maximum queue length reached"));
                    null === (l = i.shift()) || void 0 === l || l(new r),
                    i.push(g)
                }
                return n || (async () => {
                    var e;
                    for (n = !0; i.length; )
                        await (null === (e = i.shift()) || void 0 === e ? void 0 : e(void 0));
                    n = !1
                }
                )(),
                c
            }
            ;
            return Object.defineProperty(o, "queueLength", {
                get: () => i.length
            }),
            o
        }
    }
    ,
    90110: (e, t, a) => {
        "use strict";
        a.d(t, {
            G1: () => A,
            GH: () => F,
            Gq: () => U,
            OC: () => G,
            Pe: () => N,
            Se: () => O,
            Sk: () => b,
            Zp: () => y,
            be: () => x,
            f7: () => M,
            gW: () => E,
            kl: () => I,
            vI: () => H
        });
        var s = a(80254)
          , n = a(64184)
          , r = a(42659)
          , i = a(73520)
          , o = a(54174)
          , l = a(50888)
          , c = a(18867)
          , d = a(17135)
          , u = a(41831)
          , g = a(68903)
          , p = a(60752)
          , m = a(51551)
          , h = a(6947)
          , _ = a(79465)
          , v = a(97106);
        const f = ({goals: e, monthlyChallengeThreshold: t, progress: a, user: s}) => (n, r) => {
            n({
                payload: {
                    updates: a
                },
                type: "SET_MONTHLY_CHALLENGE_PROGRESS_UPDATE"
            });
            const o = e.progress && e.monthlyQuest ? e.progress[e.monthlyQuest] : void 0
              , l = void 0 === o ? void 0 : o + a
              , c = (0,
            i.gD)(r());
            void 0 !== o && o < t && void 0 !== l && a >= t && c && n({
                earnedBadges: [...e.earnedBadges, {
                    badgeId: c,
                    earned: !0,
                    earnedTimestamp: (0,
                    d.Ux)().toISOString(),
                    earnedTimezone: s.timezone
                }],
                type: "SET_EARNED_BADGES"
            })
        }
          , S = async ({isZombieMode: e, progress: t, user: a}) => {
            if (e) {
                const e = await (0,
                p.b)();
                await e.add("submittableRequests", {
                    request: {
                        batchUpdate: {
                            metricUpdates: [{
                                metric: "QUESTS",
                                quantity: t
                            }]
                        },
                        timestamp: (0,
                        d.Ux)(),
                        timezone: a.timezone
                    },
                    type: "goals-progress"
                })
            } else
                await c.JV.sendBatchUpdate(a.id, {
                    metricUpdates: [{
                        metric: "QUESTS",
                        quantity: t
                    }]
                }, (0,
                d.Ux)(), a.timezone)
        }
          , y = (e, t) => e.rewardBundles.find((e => e.rewardBundleType === t))
          , E = e => {
            const t = y(e, "DAILY_GOAL_DOUBLE");
            if (void 0 !== t && t.rewards.length > 0)
                return t.rewards[0]
        }
          , b = (e, t, a) => {
            c.Vi.consumeReward(t, a.id),
            e({
                gems: a.amount,
                type: "UPDATE_USER_GEMS"
            }),
            e({
                type: "CONSUME_DAILY_GOAL_REWARD"
            })
        }
          , I = ({availableQuests: e, goals: t, items: a, monthlyChallengeThreshold: s, updateLocally: n=!0, user: r}) => (i, c) => {
            var d;
            const g = c()
              , p = (0,
            o.d)(g)
              , m = (0,
            l.mu)(g, Date.now())
              , h = null === (d = t.progressUpdate) || void 0 === d ? void 0 : d.updates;
            (0,
            u.i3)({
                difficulty: t.difficulty,
                oldProgress: t.progress,
                progress: h,
                quests: e
            });
            const v = e.flatMap(( (e, a) => (0,
            u.wU)({
                difficulty: t.difficulty,
                oldProgress: t.progress,
                progress: h,
                quest: e
            }) ? [u.xD[a]] : []))
              , S = k({
                hasXpBoost: m,
                items: a,
                slotsCompleted: v,
                user: r
            });
            i({
                dailyQuestRewards: S,
                type: "SET_PENDING_DAILY_QUEST_REWARDS"
            });
            const y = S.map((e => e.reward));
            y.forEach((e => {
                const t = O(e) ? "gems" : N(e) ? "streak_freeze" : x(e) ? "xp_boost" : void 0;
                t && (0,
                _.track)("daily_quest_reward_claim", {
                    context: "session_end",
                    reward_amount: O(e) ? e.amount : void 0,
                    reward_type: t
                })
            }
            )),
            n && y.forEach((e => {
                i(A(e))
            }
            ));
            const E = y.length;
            i(f({
                goals: t,
                monthlyChallengeThreshold: s,
                progress: E,
                user: r
            })),
            w({
                dispatch: i,
                isZombieMode: p,
                rewards: y,
                user: r
            })
        }
          , w = async ({dispatch: e, isZombieMode: t, rewards: a, user: s}) => {
            if (t) {
                const e = await (0,
                p.b)();
                for (const t of a)
                    await e.add("submittableRequests", {
                        rewardRequest: {
                            rewardId: t.id,
                            source: "daily-quest",
                            userPartial: {
                                fromLanguage: s.fromLanguage,
                                id: s.id,
                                learningLanguage: s.learningLanguage
                            }
                        },
                        type: "reward"
                    })
            } else
                await Promise.all(a.map((e => c.Vi.consumeReward(s, e.id)))),
                a.some((e => x(e) || N(e))) && e((0,
                n.J0)());
            a.length > 0 && S({
                isZombieMode: t,
                progress: a.length,
                user: s
            })
        }
          , k = ({hasXpBoost: e, items: t, slotsCompleted: a, user: s}) => {
            const n = []
              , r = [];
            for (const i of a) {
                let a;
                switch (i) {
                case "DAILY":
                    a = y(s, u.bf[0]);
                    break;
                case "CORE":
                    a = y(s, u.bf[1]);
                    break;
                case "HARD":
                    a = y(s, u.bf[2]);
                    break;
                default:
                    (0,
                    g.RJ)(i)
                }
                if (a) {
                    const o = T(a, {
                        hasXpBoost: e,
                        items: t,
                        rewardsSoFar: n,
                        user: s
                    });
                    o && (n.push(o),
                    r.push({
                        reward: o,
                        slotType: i
                    }))
                }
            }
            return r
        }
          , T = (e, {hasXpBoost: t, items: a, rewardsSoFar: s, user: n}) => {
            const r = e.rewardBundleType;
            switch (r) {
            case "DAILY_QUEST_FIRST":
                {
                    const t = R(e, {
                        items: a,
                        rewardsSoFar: s,
                        user: n
                    });
                    return void 0 !== t ? t : C(e)
                }
            case "DAILY_QUEST_SECOND":
                return C(e);
            case "DAILY_QUEST_THIRD":
                {
                    const r = R(e, {
                        ignoreProbability: !0,
                        items: a,
                        rewardsSoFar: s,
                        user: n
                    });
                    if (void 0 !== r)
                        return r;
                    if (!t) {
                        const t = P(e);
                        if (void 0 !== t)
                            return t
                    }
                    return C(e)
                }
            default:
                return void (0,
                g.RJ)(r)
            }
        }
          , C = e => s.MR(e.rewards.filter(O), (e => e.amount))[0]
          , R = (e, {ignoreProbability: t, items: a, rewardsSoFar: s, user: n}) => {
            var r, i;
            const o = L(e);
            if (o && !s.find((e => D(e) && "STREAK_FREEZE" === e.itemId)) && !(0,
            h.pS)(null !== (i = null === (r = n.streakData.currentStreak) || void 0 === r ? void 0 : r.length) && void 0 !== i ? i : 0) && (0,
            m.RB)(a, n, t))
                return o
        }
          , L = e => {
            const t = e.rewards.filter((e => D(e) && "STREAK_FREEZE" === e.itemId));
            return t.length > 0 ? t[0] : void 0
        }
          , P = e => {
            const t = e.rewards.filter((e => D(e) && e.itemId === v.zL.ITEM_NAME_15_MIN));
            return t.length > 0 ? t[0] : void 0
        }
          , A = e => t => {
            O(e) && t({
                gems: e.amount,
                type: "UPDATE_USER_GEMS"
            }),
            t({
                rewardId: e.id,
                type: "CONSUME_DAILY_QUEST_REWARD"
            })
        }
          , D = e => "itemId"in e
          , O = e => (e => "currency"in e)(e)
          , N = e => D(e) && "STREAK_FREEZE" === e.itemId
          , x = e => "itemId"in e && Object.values(v.zL).some((t => t === e.itemId))
          , M = e => y(e, "SKILL_COMPLETION")
          , F = ({receivingBoost: e, user: t}) => async (a, s) => {
            if ((0,
            l.mu)(s(), Date.now()) || e) {
                const e = y(s().user, "SKILL_COMPLETION");
                if (e) {
                    const s = e.rewards[0];
                    await c.Vi.consumeReward(t, s.id),
                    a({
                        gems: s.amount,
                        type: "UPDATE_USER_GEMS"
                    })
                }
            } else
                try {
                    await c.Vi.purchaseUserShopItem(v.zL.ITEM_NAME_15_MIN, {
                        isFree: !0,
                        learningLanguage: t.learningLanguage
                    }),
                    await a((0,
                    n.J0)())
                } catch (e) {
                    (0,
                    _.trackAndLogApiError)("purchase_user_shop_item_failed", `Failed to purchase xp boost item ${v.zL.ITEM_NAME_15_MIN}`, e)
                }
        }
          , U = () => (e, t) => {
            var a;
            const s = (0,
            i.D_)(t())
              , l = (0,
            i.Ap)(t())
              , u = (0,
            r.np)(t())
              , g = u.rewardBundles.find((e => "FRIENDS_QUEST_GEMS" === e.rewardBundleType))
              , m = u.rewardBundles.find((e => "FRIENDS_QUEST_XP_BOOST" === e.rewardBundleType))
              , h = (0,
            o.d)(t())
              , _ = H(u);
            if (!(null === (a = s.friendsQuest) || void 0 === a ? void 0 : a.details) || !(null == g ? void 0 : g.rewards.length) || !(null == m ? void 0 : m.rewards.length) || g.rewards.some((e => e.consumed)) || m.rewards.some((e => e.consumed)) || void 0 === _)
                return;
            const {goalId: v, questId: y, questPoints: E} = s.friendsQuest.details;
            e({
                type: "ACKNOWLEDGE_FRIENDS_QUEST_COMPLETE"
            }),
            e({
                gems: _,
                type: "UPDATE_USER_GEMS"
            }),
            e(f({
                goals: s,
                monthlyChallengeThreshold: l,
                progress: E,
                user: u
            })),
            S({
                isZombieMode: h,
                progress: E,
                user: u
            }),
            h ? (async () => {
                const e = await (0,
                p.b)();
                await e.add("submittableRequests", {
                    rewardRequest: {
                        rewardId: g.rewards[0].id,
                        source: "friends-quest",
                        userPartial: {
                            fromLanguage: u.fromLanguage,
                            id: u.id,
                            learningLanguage: u.learningLanguage
                        }
                    },
                    type: "reward"
                }),
                await e.add("submittableRequests", {
                    rewardRequest: {
                        rewardId: m.rewards[0].id,
                        source: "friends-quest",
                        userPartial: {
                            fromLanguage: u.fromLanguage,
                            id: u.id,
                            learningLanguage: u.learningLanguage
                        }
                    },
                    type: "reward"
                })
            }
            )() : (c.Vi.consumeReward(u, g.rewards[0].id),
            c.JV.postQuestComplete({
                goalId: v,
                questId: y,
                questSlot: "FRIENDS",
                timestamp: (0,
                d.Ux)(),
                timezone: u.timezone,
                userId: u.id
            }),
            (async () => {
                await G((0,
                r.__)(t()), "Friends Quest Reward"),
                await c.Vi.consumeReward(u, m.rewards[0].id),
                e((0,
                n.J0)())
            }
            )(),
            e({
                type: "CONSUME_FRIENDS_QUEST_GEMS"
            }),
            e({
                type: "CONSUME_FRIENDS_QUEST_XP_BOOST"
            }))
        }
          , H = e => {
            var t, a, s;
            const n = null === (s = null === (a = null === (t = e.rewardBundles.find((e => "FRIENDS_QUEST_GEMS" === e.rewardBundleType))) || void 0 === t ? void 0 : t.rewards[0]) || void 0 === a ? void 0 : a.items) || void 0 === s ? void 0 : s[0];
            if (void 0 !== n && "GEM" === n.itemType)
                return n.count
        }
          , G = async (e, t) => {
            for (const a of Object.values(v.zL))
                if (void 0 !== e.inventory[a])
                    try {
                        await c.Vi.useUserShopItem(a)
                    } catch (e) {
                        (0,
                        _.trackAndLogApiError)("use_user_shop_item_failed", `Failed to delete xp boost item ${a} from ${t}`, e)
                    }
        }
    }
    ,
    56366: (e, t, a) => {
        "use strict";
        a.d(t, {
            Lm: () => E,
            H_: () => b,
            Sf: () => y
        });
        var s = a(40893)
          , n = a(19172);
        const r = (e, t, a) => {
            const s = (0,
            n.f)(`${t.keyString}.entry`).selected(e, (e => e.entries.get(t.keyString))).build();
            return (0,
            n.f)(t.keyString).derived((e => {
                var n;
                const r = e(s);
                return null !== (n = r ? t.deserializeValue(r.value) : null) && void 0 !== n ? n : a
            }
            )).write(( (a, s, n) => {
                s(e, a(e).setValue(t, n))
            }
            )).build()
        }
        ;
        var i = a(18867)
          , o = a(68903)
          , l = a(20716)
          , c = a(74901)
          , d = a(96786);
        const u = e => "zero"in e;
        class g {
            constructor(e, t, a=0, s=null) {
                this.dirtyValue = a,
                this.key = e,
                this.value = t,
                this.versionIdentifier = s
            }
            get isDirty() {
                return this.dirtyValue > 0
            }
            static fromJSON(e) {
                return new g(e.key,e.value,e.dirtyValue,e.version)
            }
            clean() {
                return new g(this.key,this.value,0,this.versionIdentifier)
            }
            clearVersion() {
                return new g(this.key,this.value,this.dirtyValue)
            }
            doesConflictWith(e) {
                var t, a;
                return this.isDirty && this.versionIdentifier !== (null !== (a = null === (t = e.entries.get(this.key)) || void 0 === t ? void 0 : t.versionIdentifier) && void 0 !== a ? a : null)
            }
            setValue(e, t) {
                return new g(this.key,e,t,this.versionIdentifier)
            }
            toJSON() {
                return {
                    dirtyValue: this.dirtyValue,
                    key: this.key,
                    value: this.value,
                    version: this.versionIdentifier
                }
            }
        }
        class p {
            constructor(e) {
                this.keyString = e
            }
            deserializeValue(e) {
                return e
            }
            resolveConflict(e, t) {
                return t
            }
            serializeValue(e) {
                return e
            }
        }
        class m {
            constructor(e=new Map, t=null) {
                if (Array.isArray(e)) {
                    const t = e.find(( (t, a) => e.findIndex((e => e.key === t.key)) !== a));
                    if (t)
                        throw Error(`Rocks: All entries should have unique keys: ${t.key}`);
                    this.entries = new Map(e.map((e => [e.key, e])))
                } else
                    this.entries = new Map(e);
                this.generation = t
            }
            get allEntries() {
                return [...this.entries.values()]
            }
            get isDirty() {
                for (const e of this.entries.values())
                    if (e.isDirty)
                        return !0;
                return !1
            }
            get isEmpty() {
                return 0 === this.entries.size
            }
            get maximumDirtyValue() {
                let e = 0;
                for (const t of this.entries.values())
                    t.dirtyValue > e && (e = t.dirtyValue);
                return e
            }
            get modifiedEntries() {
                return [...this.entries.values()].filter((e => e.isDirty))
            }
            static fromJSON(e) {
                return new m(e.entries.map((e => g.fromJSON(e))),e.generation_id)
            }
            canMergeChanges(e) {
                return this.generation === e.generation || null === this.generation
            }
            async deleteFrom(e) {
                const t = await e.deleteContainer();
                return new m(new Map,t)
            }
            getValue(e) {
                var t, a;
                return e.deserializeValue(null !== (a = null === (t = this.entries.get(e.keyString)) || void 0 === t ? void 0 : t.value) && void 0 !== a ? a : null)
            }
            mergeEntries(e, t) {
                var a, s;
                for (const t of e.entries.values()) {
                    if (t.isDirty)
                        throw Error("Rocks: Backend entries contain a dirty value");
                    if (void 0 === t.versionIdentifier)
                        throw Error("Rocks: Missing version identifier from backend")
                }
                if (!this.canMergeChanges(e))
                    return new m(e.entries,e.generation);
                const n = new Map(this.entries);
                for (const r of e.entries.values()) {
                    const e = this.entries.get(r.key);
                    if (null == e ? void 0 : e.isDirty)
                        e.dirtyValue <= t && n.set(r.key, r);
                    else {
                        const t = null !== (a = null == e ? void 0 : e.versionIdentifier) && void 0 !== a ? a : 0
                          , i = null !== (s = r.versionIdentifier) && void 0 !== s ? s : 0;
                        if (e && "number" == typeof t && "number" == typeof i && t > i)
                            continue;
                        n.set(r.key, r)
                    }
                }
                return new m(n,e.generation)
            }
            resetEntries(e) {
                const t = this.maximumDirtyValue + 1
                  , a = new Map(this.entries);
                for (const [s,n] of a) {
                    const r = e.get(s);
                    r && u(r) && a.set(s, n.setValue(r.serializeValue(r.zero), t))
                }
                return new m(a,this.generation)
            }
            resolveConflicts(e, t) {
                var a;
                const s = new Map(this.entries);
                for (const n of this.entries.values()) {
                    if (!n.doesConflictWith(e))
                        continue;
                    const r = e.entries.get(n.key);
                    if (r) {
                        const e = null !== (a = t.get(n.key)) && void 0 !== a ? a : new p(n.key)
                          , i = e.deserializeValue(n.value)
                          , o = e.deserializeValue(r.value)
                          , l = e.serializeValue(e.resolveConflict(i, o));
                        s.set(n.key, r.setValue(l, n.dirtyValue))
                    } else
                        t.get(n.key) ? s.set(n.key, n.clearVersion()) : s.delete(n.key)
                }
                return new m(s,this.generation)
            }
            setValue(e, t) {
                var a;
                const s = e.serializeValue(t)
                  , n = this.maximumDirtyValue + 1
                  , r = this.entries.get(e.keyString);
                return new m(new Map(this.entries).set(e.keyString, null !== (a = null == r ? void 0 : r.setValue(s, n)) && void 0 !== a ? a : new g(e.keyString,s,n)),this.generation)
            }
            async syncWith(e, t=100) {
                if (!this.isDirty)
                    return {
                        box: await e.getContainer(),
                        success: !0
                    };
                let a;
                for (const s of function*(e, t) {
                    for (let a = 0; a < e.length; a += t)
                        yield e.slice(a, a + t)
                }(this.modifiedEntries, t)) {
                    const {box: t, success: n} = await e.updateContainer(new m(s,this.generation));
                    if (!n)
                        return {
                            box: t,
                            success: !this.canMergeChanges(t)
                        };
                    a = t
                }
                if (!a)
                    throw Error("Rocks: Didn't receive a backend container");
                return {
                    box: a,
                    success: !0
                }
            }
            toJSON() {
                return {
                    entries: [...this.entries.values()].map((e => e.toJSON())),
                    generation_id: this.generation
                }
            }
        }
        class h {
            constructor(e, t, a) {
                this.throwOnError = e => {
                    if (!(e.status >= 200 && e.status <= 299))
                        switch (e.status) {
                        case 401:
                            throw Error("Rocks: Unauthorized");
                        case 404:
                            throw Error("Rocks: Container not found");
                        case 409:
                            return;
                        default:
                            throw Error(`Rocks: HTTP error ${e.status}`)
                        }
                }
                ,
                this.client = e,
                this.namespace = t,
                this.userId = a
            }
            get url() {
                return `/1/containers/${this.namespace}/users/${this.userId}`
            }
        }
        class _ extends h {
            async deleteContainer() {
                const e = await this.client.delete(this.url);
                return this.throwOnError(e),
                e.data.generation_id
            }
            async getContainer() {
                const e = await this.client.get(this.url);
                return this.throwOnError(e),
                m.fromJSON(e.data)
            }
            async updateContainer(e) {
                const t = await this.client.patch(this.url, e.toJSON());
                return this.throwOnError(t),
                {
                    box: m.fromJSON(t.data),
                    success: 200 === t.status
                }
            }
        }
        var v = a(30839);
        const f = {
            deserializeValue: e => null === e ? null : JSON.parse(e),
            keyString: "coachEnabled",
            resolveConflict: (e, t) => t,
            serializeValue: e => JSON.stringify(e),
            zero: !0
        }
          , S = {
            deserializeValue: e => e,
            keyString: "darkModeWeb",
            resolveConflict: (e, t) => t,
            serializeValue: e => e,
            zero: "system"
        }
          , y = ( (e, t, a, r={}) => ( (e, t, a, r, {autoSync: c=!0, fetchOnMount: u=!0, getMigrations: g}={}) => {
            let p, m, h = 0;
            const v = (0,
            n.f)(e).derived((e => e(t))).write(( (e, a, s) => {
                a(t, s),
                c && S()
            }
            )).build()
              , f = (0,
            n.f)(`${e}.isInitialized`).primitive(!1).build()
              , S = (0,
            o.rw)(( () => b()), 500)
              , y = async () => {
                var e;
                if (!m)
                    throw Error("Sync shouldn't happen when atom isn't mounted");
                const n = p.signal
                  , o = (0,
                i.Np)("/rocks").dontThrowOnError()
                  , l = m.get(s.DW);
                if (void 0 === l)
                    throw Error("Cannot sync without a user ID");
                const c = new _(o,a,l)
                  , d = m.get(t)
                  , {box: u, success: g} = await d.syncWith(c);
                if (n.aborted)
                    throw null !== (e = n.reason) && void 0 !== e ? e : new DOMException("The operation was aborted");
                if (g)
                    m.set(t, m.get(t).mergeEntries(u, d.maximumDirtyValue)),
                    m.set(f, !0),
                    h = 0;
                else {
                    if (m.set(t, m.get(t).resolveConflicts(u, r)),
                    m.set(f, !0),
                    2 === h)
                        throw h = 0,
                        Error("Too many conflict resolution retries");
                    h++,
                    await y()
                }
            }
              , E = (0,
            d.n)(y, {
                replace: !0,
                size: 1
            })
              , b = async () => {
                try {
                    await E()
                } catch (e) {
                    if (e instanceof d.k)
                        return void console.error(e);
                    throw e
                }
            }
            ;
            return (0,
            l.bI)(v, f),
            (0,
            l.it)(v, (e => {
                if (void 0 !== m)
                    throw Error("coordinatedRocksAtom cannot be shared between multiple stores");
                h = 0,
                p = new AbortController,
                m = e;
                let a = m.get(t);
                if (void 0 !== g) {
                    const e = g(m.get.bind(m));
                    r.forEach((t => {
                        if (!a.entries.has(t.keyString)) {
                            const s = e.find((e => e.key.keyString === t.keyString));
                            s && (a = a.setValue(t, s.value),
                            s.cleanUp())
                        }
                    }
                    )),
                    m.set(t, a)
                }
                return [...r.values()].every((e => a.entries.has(e.keyString))) && m.set(f, !0),
                u && b(),
                () => {
                    S.cancel(),
                    p.abort(),
                    m = void 0
                }
            }
            )),
            (0,
            l.XV)(v, (0,
            n.f)(`${e}.refetch`).write(( () => b())).build()),
            v
        }
        )(`boxAtom.${e}`, (0,
        c.u)(t).selectPersistedValue((e => e.toJSON())).transformInitialValue((e => e ? m.fromJSON(e) : new m)).build(), e, a, r))("learning_app_ui_preferences", "uiPreferences", new Map([["coachEnabled", f], ["darkModeWeb", S]]), {
            getMigrations: e => {
                const t = e(s.DW);
                if (void 0 === t)
                    throw Error("Cannot run migrations when logged out");
                if ((0,
                v.No)(v.Qt.REDUX_DarkMode)) {
                    const e = (0,
                    v.rV)(v.Qt.REDUX_DarkMode)[t];
                    if (void 0 !== e)
                        return [{
                            cleanUp: () => {
                                if ((0,
                                v.No)(v.Qt.REDUX_DarkMode)) {
                                    const e = (0,
                                    v.rV)(v.Qt.REDUX_DarkMode);
                                    delete e[t],
                                    (0,
                                    v.LS)(v.Qt.REDUX_DarkMode, e)
                                }
                            }
                            ,
                            key: S,
                            value: "boolean" == typeof e ? e ? "on" : "off" : e
                        }]
                }
                return []
            }
        })
          , E = r(y, f, f.zero)
          , b = r(y, S, S.zero)
    }
    ,
    88868: (e, t, a) => {
        "use strict";
        a.d(t, {
            $R: () => b,
            AA: () => O,
            B6: () => g,
            Eg: () => y,
            Eq: () => S,
            Gk: () => l,
            KE: () => w,
            Oy: () => R,
            PG: () => h,
            Ql: () => c,
            UG: () => E,
            Vb: () => d,
            Z2: () => u,
            Zs: () => L,
            a9: () => f,
            a_: () => C,
            cd: () => A,
            gJ: () => p,
            gg: () => P,
            o_: () => D,
            op: () => _,
            sg: () => m,
            v$: () => T,
            wl: () => v
        });
        var s = a(46403)
          , n = a(50498)
          , r = a(53229)
          , i = a(58576)
          , o = a(16086);
        const l = "/settings/avatar"
          , c = {
            de: "https://blog.duolingo.com/de",
            en: "https://blog.duolingo.com",
            es: "https://blog.duolingo.com/es",
            pt: "https://blog.duolingo.com/pt"
        }[window.duo.uiLanguage]
          , d = "incubator-testbed.duolingo.com"
          , u = "www.duolingo.com"
          , g = "/learn"
          , p = "/settings/courses"
          , m = "/sections"
          , h = "/welcome?welcomeStep=choosePath"
          , _ = "/settings/super"
          , v = "/super"
          , f = ["/plus", "/getplus", "/youtubeplus", v]
          , S = "/practice-hub"
          , y = "/practice-hub/stories"
          , E = "/practice-hub/mistakes"
          , b = "/practice-hub/words"
          , I = [...f, _, "/family-plan", "/redeem", "/welcome", "/classroom/:classroomCode", "/bango/:reseller/:token", "/family", "/business/checkout", "/business/admin/:page", "/lesson", "/lesson/unit/:pathUnitNumber/level/:pathLevelNumber", "/stories/:storyId"]
          , w = e => I.some((t => (0,
        s.LX)({
            path: t
        }, e)))
          , k = [...f, "/attribution", "/auto-renewal-agreement", "/bango/:reseller/:token", "/classroom/:classroomCode", "/cookies", "/cross-border-data-transfer-agreement", "/family", "/family-plan", "/logout", "/privacy", "/redeem", "/register", "/terms", "/welcome", "/business/checkout", "/business/admin/:page"]
          , T = e => k.some((t => (0,
        s.LX)({
            path: t
        }, e)))
          , C = "preview.duolingo.com"
          , R = ["", "/errors/404.html"].join("")
          , L = async (e, t) => {
            void 0 === e ? window.location.reload(!0) : t ? window.location.replace(e) : window.location.href = e,
            await (0,
            n.f)()
        }
          , P = e => e.replace(window.location.host, C)
          , A = (e=(0,
        o.Pc)()) => e ? g : "/"
          , D = (e, t=!0) => {
            let {pathname: a} = e
              , s = new URLSearchParams(e.search);
            const n = a
              , l = e.hash;
            if (l && "/" === a && (a = l.replace(/^#\/*(.*)/, "/$1"),
            console.log("Removed # from URL"),
            t && (0,
            i.um)("Removed # from URL", {
                data: {
                    hash: l,
                    originalPathname: n,
                    pathname: a,
                    searchParams: s
                }
            })),
            a.includes("$") && a.includes("=") && !a.includes("?") && (a = a.replace("$", "?"),
            console.log("Replaced $ with ? in URL"),
            t && (0,
            i.um)("Replaced $ with ? in URL", {
                data: {
                    hash: l,
                    originalPathname: n,
                    pathname: a,
                    searchParams: s
                }
            })),
            a.includes("?")) {
                const e = a.split("?");
                a = e[0],
                s = new URLSearchParams((0,
                r.Lm)(e[1])),
                t && (0,
                i.um)("Split ? from new path", {
                    data: {
                        hash: l,
                        originalPathname: n,
                        pathname: a,
                        searchParams: s
                    }
                })
            }
            (0,
            o.Pc)() && s.delete("isLoggingIn");
            const c = s.toString();
            return {
                pathname: a,
                search: 0 === c.length ? "" : `?${c}`
            }
        }
          , O = ["ios-super-purchase-flow", "ios-max-purchase-flow"]
    }
    ,
    12125: (e, t, a) => {
        "use strict";
        a.d(t, {
            wn: () => c,
            Qs: () => h,
            YN: () => p,
            XU: () => m,
            Nx: () => d,
            R0: () => _,
            Zv: () => v,
            S2: () => u,
            Y: () => g
        });
        var s = a(80254);
        const n = a.p + "images/schools/leaderboards/0e0f9617bdef7c1e2e6f82363e093eb7.svg"
          , r = a.p + "images/schools/leaderboards/7417a8ffc61c46d8ea49c3a209f2bf81.svg"
          , i = a.p + "images/schools/leaderboards/8d3ba3746a937cee2a89b1b71b586980.svg";
        var o = a(17135)
          , l = a(95940);
        const c = 6
          , d = (e, t, a) => s.MR(t.map((t => t.userId === e ? {
            ...t,
            score: t.score + a
        } : t)), "score").reverse()
          , u = (e, t, a) => {
            if (!(null == t ? void 0 : t.active) || a <= 0)
                return !1;
            const s = g(t.active.cohort.rankings)
              , n = s.findIndex((t => t.userId === e));
            return 0 !== n && -1 !== n && s[n].score + a > s[n - 1].score
        }
          , g = e => [...e].sort(( (e, t) => e.score === t.score ? e.displayName.localeCompare(t.displayName, void 0, {
            sensitivity: "base"
        }) : e.score < t.score ? 1 : -1))
          , p = e => {
            switch (e) {
            case 0:
                return "GOLD";
            case 1:
                return "SILVER";
            case 2:
                return "BRONZE";
            default:
                return "GREEN"
            }
        }
          , m = e => {
            switch (e) {
            case 0:
                return n;
            case 1:
                return r;
            case 2:
                return i;
            default:
                return
            }
        }
          , h = e => {
            const t = (0,
            o.pY)(e)
              , a = (0,
            o.Gz)(e);
            if (t)
                return (0,
                l._i)(30308, {
                    date: a.getDate(),
                    day: (0,
                    l.Q7)()[a.getDay()],
                    month: (0,
                    l.mD)()[a.getMonth()]
                });
            const {days: s, hours: n} = (0,
            o.zj)(e - Date.now());
            return s > 0 ? (0,
            l._i)(30308, {
                date: a.getDate(),
                day: (0,
                l.Q7)()[a.getDay()],
                month: (0,
                l.mD)()[a.getMonth()]
            }) : (0,
            l._i)(30309, {
                num: n
            })
        }
          , _ = e => void 0 !== e && "completed" !== e && "late" !== e
          , v = e => void 0 !== e && ("completed" === e || "late" === e)
    }
    ,
    89260: (e, t, a) => {
        "use strict";
        a.d(t, {
            A2: () => q,
            HI: () => A,
            LJ: () => P,
            TD: () => te,
            Uj: () => H,
            VC: () => W,
            Xd: () => Z,
            Z6: () => ee,
            ZX: () => N,
            bc: () => O,
            kL: () => X,
            mi: () => L,
            oT: () => Y,
            tq: () => D,
            u4: () => x
        });
        var s = a(80254)
          , n = a(98980)
          , r = a(42659)
          , i = a(54174)
          , o = a(93540)
          , l = a(40387)
          , c = a(18867)
          , d = a(70732)
          , u = a(16970)
          , g = a(95351)
          , p = a(17135)
          , m = a(64115)
          , h = a(94786)
          , _ = a(68903)
          , v = a(53229)
          , f = a(43633)
          , S = a(58576)
          , y = a(23275)
          , E = a(84401)
          , b = a(80820)
          , I = a(59096)
          , w = a(68564)
          , k = a(36571)
          , T = a(39837)
          , C = a(79465)
          , R = a(11811);
        const L = e => {
            const [,t,a,s,n,r] = e.split("/");
            return {
                lessonType: n,
                levelNumber: r,
                pathType: t,
                scopeType: a,
                unitOrSectionNumber: s
            }
        }
          , P = e => (e => e === R.FF.SectionTest)(e) || (e => e === R.FF.UnitTest)(e)
          , A = e => [R.FF.LegendaryLevel, R.FF.LegendaryLexemePractice].includes(e)
          , D = () => [R.Sm.ExtendedListenMatch, R.Sm.Listen, R.Sm.ListenComplete, R.Sm.ListenComprehension, R.Sm.ListenMatch, R.Sm.ListenIsolation, R.Sm.ListenSpeak, R.Sm.ListenTap, R.Sm.SameDifferent, R.Sm.SelectPronunciation, R.Sm.SelectTranscription]
          , O = () => [R.Sm.Speak, R.Sm.ListenSpeak]
          , N = e => [R.FF.GlobalPractice, R.FF.Lesson, R.FF.LevelReview, R.FF.LexemePractice, R.FF.LexemeSkillLevelPractice, R.FF.ListeningPractice, R.FF.SectionTest, R.FF.TargetPractice, R.FF.UnitTest, R.FF.UnitRewind].includes(e)
          , x = async ({dispatch: e, getState: t, includeFreeform: a, includeListening: s, includeSmartTips: n, includeSpeaking: d, params: u, levelData: h, sessionWillStartRightAway: _}) => {
            var v, f;
            const y = t()
              , E = (0,
            r.Oz)(y)
              , I = (0,
            r.B8)(y)
              , w = (0,
            i.d)(y)
              , T = (0,
            r.oe)(y)
              , L = (0,
            r.np)(y)
              , {fromLanguage: P, learningLanguage: A} = L
              , N = (0,
            p.Zo)()
              , x = (0,
            o.DN)(y)
              , V = (0,
            o.HF)(y)
              , z = "mistakes-review" === u.type ? (await c.wO.getMistakes({
                countLimit: 10,
                courseId: E.id,
                includeListening: s,
                includeSpeaking: d
            })).map((e => e.challengeIdentifier)) : void 0;
            let B;
            "practice" === u.type ? B = (0,
            g.K)({
                currentCourseHistory: I,
                sessionType: R.FF.GlobalPractice,
                timestamp: N
            }) : "path-level" === u.type && (B = (0,
            g.K)({
                currentCourseHistory: I,
                levelData: h,
                sessionType: R.FF.LevelReview
            }));
            let j = !1;
            if (h && "skill" === h.level.type) {
                const {skillId: e} = h.level.pathLevelClientData;
                j = H(L, e)
            }
            const Z = M()
              , W = await F(Z)
              , q = U()
              , Q = (0,
            m.ky)("levelIndex")
              , K = (0,
            m.ky)("skillId")
              , Y = G({
                alphabetsPathProgressKey: E.alphabetsPathProgressKey,
                crowns: E.crowns,
                debugChallengeTypes: Z,
                debugChallenges: W,
                debugGeneratorIds: q,
                debugLevelIndex: Q,
                debugSkillId: K,
                dispatch: e,
                flattenedPath: V,
                fromLanguage: P,
                generatorIdentifiersOfRecentMistakes: B,
                includeListening: s,
                includeSmartTips: n,
                includeSpeaking: d,
                isExplanationSeen: j,
                learningLanguage: A,
                levelData: h,
                mistakeGeneratorIds: z,
                params: u,
                pathExperiments: E.pathExperiments,
                sectionedPath: x,
                skills: T,
                treeId: E.treeId,
                user: L
            })
              , J = Z.length > 0 || W.length > 0 || q.length > 0 || void 0 !== Q || void 0 !== K || (0,
            m.gQ)("latest") || (0,
            m.gQ)("debugShowAllStoryChallenges") || (0,
            m.gQ)("debugShowStoriesOnboarding")
              , X = !h || !(0,
            b.tr)(h.level) || "isEarnbackSession"in u && u.isEarnbackSession ? void 0 : (0,
            b.gL)({
                currentStoryMode: "story" === Y.type ? Y.mode : void 0,
                generatorIdsOfRecentMistakes: null == B ? void 0 : B.map((e => e.generatorId)),
                includeSmartTips: n,
                isExplanationSeen: j,
                pathLevel: h.level
            });
            let ee, te;
            if (X && !J)
                try {
                    te = await (0,
                    b.vS)(X)
                } catch (e) {
                    (0,
                    S.Kp)("Unable to retrieve cached session", {
                        ex: e
                    })
                }
            if ((null == te ? void 0 : te.stale) && !w && (te = void 0),
            te)
                void 0 !== X && !te.stale && _ && await (0,
                b.yI)(X);
            else {
                if (w)
                    throw Error("Cannot fetch a new session in Zombie mode");
                try {
                    const t = "story" === Y.type ? c.Mw.getStory(Y) : c.Vi.sessionCreate(Y);
                    _ || !X || J ? ee = await t : (te = await (0,
                    b.fB)(X, t, (0,
                    p.Zo)(), e),
                    ee = te.session),
                    "type"in ee && ee.type === R.FF.SectionTest && Y.type === R.FF.SectionTest && void 0 !== Y.sectionIndex ? ee.sectionIndex = Y.sectionIndex - 1 : "type"in ee && ee.type === R.FF.Placement && Y.type === R.FF.Placement && void 0 !== Y.sectionIndex && (ee.sectionIndex = Y.sectionIndex),
                    "type"in ee && ee.type === R.FF.MistakesReview && c.wO.clearUngeneratableMistakes({
                        courseId: E.id,
                        expectedMistakes: z,
                        session: ee
                    })
                } catch (e) {
                    throw "story" === Y.type ? (0,
                    C.trackAndLogApiError)("stories_load_story", "Failed to load story", e) : ((0,
                    C.trackAndLogApiError)("create_session_failed", "Failed to create session", e),
                    "mistakes-review" === u.type && c.wO.clearUngeneratableMistakes({
                        courseId: E.id,
                        expectedMistakes: z,
                        session: void 0
                    }),
                    "practice-hub" === u.type && (0,
                    S.Kp)("Failed to create practice hub session", {
                        data: {
                            sessionParams: Y,
                            sessionRouteParams: u
                        }
                    })),
                    e
                }
            }
            const ae = "story" === Y.type ? {
                cacheType: null == te ? void 0 : te.cacheType,
                session: null !== (v = null == te ? void 0 : te.session) && void 0 !== v ? v : ee,
                sessionParams: Y,
                sessionPrefetchedTimestamp: null == te ? void 0 : te.prefetchTimestamp,
                type: "story"
            } : {
                cacheType: null == te ? void 0 : te.cacheType,
                session: null !== (f = null == te ? void 0 : te.session) && void 0 !== f ? f : ee,
                sessionParams: Y,
                sessionPrefetchedTimestamp: null == te ? void 0 : te.prefetchTimestamp,
                type: "regular"
            };
            return "regular" === ae.type ? (s || ae.session.disableCantListenOverride || (ae.session = (0,
            l.qz)(ae.session, D())),
            d || (ae.session = (0,
            l.qz)(ae.session, O())),
            ae.session.type === R.FF.GlobalPractice && (null == B ? void 0 : B.length) && (ae.session.isMistakesGlobalPractice = !0),
            await $({
                debugChallengeTypes: Z,
                debugChallenges: W,
                debugGeneratorIds: q,
                levelData: h,
                session: ae.session,
                sessionParams: ae.sessionParams
            })) : "story" !== ae.type || a && !w || (ae.session.elements = ae.session.elements.filter((e => !(0,
            k.Eo)(e)))),
            ae
        }
          , M = () => {
            let e = [];
            return (0,
            m.gQ)("type") && (e = (0,
            v.vl)().type.split(",").filter((e => d.KT.includes(e))),
            e.length || console.warn("Unknown debug challenge type(s)")),
            e
        }
          , F = async e => {
            var t;
            const s = (0,
            m.ky)("sampleSession");
            return s ? (await a(63198)(`./sampleChallenges${null !== (t = {
                ar_puzzle: "PuzzleArabic",
                es: "Spanish",
                ja: "Japanese",
                ko: "Korean",
                ko_puzzle: "PuzzleKorean",
                speak: "Speak",
                svg_puzzle: "SvgPuzzle",
                trace: "Trace",
                write: "CharacterWrite"
            }[s]) && void 0 !== t ? t : ""}.json`)).default.filter((t => 0 === e.length || e.includes(t.type))) : []
        }
          , U = () => {
            const e = (0,
            m.ky)("generatorId");
            return e ? e.split(",") : []
        }
          , H = (e, t) => {
            const {explanationsSeen: a} = e;
            return !!(null == a ? void 0 : a[t])
        }
          , G = ({alphabetsPathProgressKey: e, crowns: t, debugChallengeTypes: a, debugChallenges: s, debugGeneratorIds: r, debugLevelIndex: i, debugSkillId: o, dispatch: l, flattenedPath: c, fromLanguage: g, generatorIdentifiersOfRecentMistakes: p, includeListening: m, includeSmartTips: h, includeSpeaking: v, isExplanationSeen: S, learningLanguage: b, levelData: w, mistakeGeneratorIds: k, params: C, pathExperiments: L, sectionedPath: P, skills: A, treeId: D, user: O}) => {
            var N;
            const x = (0,
            y.Wc)(null == w ? void 0 : w.level.state);
            let M;
            switch (void 0 !== P && P.length > 0 && (c = P.flatMap((e => e.units))),
            C.type) {
            case "alphabets":
                {
                    const t = C.groupId ? (0,
                    u.i_)(C.alphabetSessionId, C.groupId) : C.alphabetSessionId;
                    M = {
                        alphabetId: C.alphabetSessionId,
                        alphabetSessionId: t,
                        alphabetsPathProgressKey: e,
                        groupId: C.groupId,
                        type: R.FF.AlphabetLesson
                    };
                    break
                }
            case "legendary":
                {
                    const e = j(t, null == w ? void 0 : w.level);
                    if ("story" === e.type)
                        return e;
                    M = e;
                    break
                }
            case "mistakes-review":
                M = {
                    generatorIdentifiersOfRecentMistakes: k,
                    type: R.FF.MistakesReview
                };
                break;
            case "practice":
                M = {
                    generatorIdentifiersOfRecentMistakes: p,
                    type: R.FF.GlobalPractice
                };
                break;
            case "practice-hub":
                if (!c)
                    throw Error("Missing path information for practice hub session request.");
                if ("words" === C.practiceType) {
                    M = (0,
                    E.Br)(O);
                    break
                }
                M = (0,
                E.hz)({
                    dispatch: l,
                    includeListening: m,
                    includeSpeaking: v,
                    path: c,
                    practiceType: C.practiceType,
                    user: O
                });
                break;
            case "preview":
                M = {
                    lessonIndex: C.lesson ? parseInt(C.lesson, 10) : 0,
                    levelIndex: 0,
                    skillId: C.skillId,
                    type: R.FF.Lesson
                };
                break;
            case "path-level":
                if (!w)
                    throw Error("Missing level information for V2 session request.");
                if ("story" === w.level.type) {
                    const {mode: e, storyId: a} = w.level.pathLevelClientData;
                    return B({
                        crowns: t,
                        mode: e.toUpperCase(),
                        storyId: a
                    })
                }
                M = V({
                    alphabetsPathProgressKey: e,
                    debugLevelIndex: i ? parseInt(i, 10) : void 0,
                    flattenedPath: c,
                    fromLanguage: g,
                    generatorIdentifiersOfRecentMistakes: p,
                    isEarnbackSession: C.isEarnbackSession,
                    isExplanationSeen: S,
                    isRedoingPassedNode: x,
                    learningLanguage: b,
                    levelData: w,
                    pathExperiments: L,
                    sectionedPath: P,
                    skills: A
                });
                break;
            case "placement":
                if (!w)
                    throw Error("Missing level information for placement session.");
                if (!P)
                    throw Error("Missing path information for placement session.");
                M = z({
                    levelData: w,
                    sectionedPath: P
                });
                break;
            case "story":
                return B({
                    crowns: t,
                    mode: C.mode,
                    storyId: C.storyId
                });
            default:
                throw (0,
                _.RJ)(C),
                Error("Unknown session type.")
            }
            const F = /^zh-(hant|hk|mo|tw)/.test(navigator.language.toLowerCase()) ? "zt" : /^zh-(cn|hans|my|sg)/.test(navigator.language.toLowerCase()) ? "zs" : void 0
              , U = null === (N = (0,
            f.zJ)()) || void 0 === N ? void 0 : N.get(n.Q).value
              , H = {};
            return !s.length && r.length && (H.challengeIds = r,
            H.forceChallengeTypes = !0),
            !s.length && a.length && (H.challengeTypes = a,
            H.forceChallengeTypes = !0),
            !s.length && o && (H.skillId = o),
            {
                challengeTypes: "duo_radio" === (null == w ? void 0 : w.level.type) ? d.fM : d.KT,
                fromLanguage: g,
                isFinalLevel: !1,
                isV2: !0,
                juicy: !0,
                learningLanguage: b,
                locale: F,
                shakeToReportEnabled: void 0 !== U,
                smartTipsVersion: h ? I.fH : void 0,
                streakEarnbackLessonLength: "isEarnbackSession"in C && C.isEarnbackSession ? T.Av : void 0,
                treeId: D,
                ...M,
                ...H
            }
        }
          , V = ({alphabetsPathProgressKey: e, debugLevelIndex: t, flattenedPath: a, fromLanguage: s, generatorIdentifiersOfRecentMistakes: n, isEarnbackSession: r, isExplanationSeen: i, isRedoingPassedNode: o, learningLanguage: l, levelData: c, pathExperiments: d, sectionedPath: u, skills: g}) => {
            var p, m;
            const h = c.level
              , v = (0,
            y.w1)(h)
              , f = "assigned" === (0,
            y.xV)(h);
            let S;
            if ((0,
            y.TH)(h) && !f && a) {
                const {skillIds: e} = h.pathLevelClientData;
                if (u && u.length > 0 && "locked" === u[(0,
                y.Kq)(c.unitIndex, u)].status) {
                    const t = (0,
                    y.Kq)(c.unitIndex, u);
                    S = {
                        sectionIndex: t,
                        sectionType: u[t].type,
                        skillIds: e,
                        type: R.FF.SectionTest
                    }
                } else
                    S = {
                        skillIds: e,
                        type: R.FF.UnitTest
                    }
            } else
                switch (h.type) {
                case "alphabet_gate":
                case "chest":
                case "story":
                    throw Error(`Tried to create regular session params for unsupported level type: ${h.type}`);
                case "alphabet":
                    {
                        const {alphabetId: t, alphabetSessionId: a, explanationUrl: s} = h.pathLevelClientData;
                        S = {
                            alphabetId: t,
                            alphabetSessionId: a,
                            alphabetsPathProgressKey: e,
                            showAlphabetTipSplash: null !== s,
                            type: (0,
                            y.Wc)((0,
                            y.xV)(c.level)) ? R.FF.AlphabetPractice : R.FF.AlphabetLesson
                        };
                        break
                    }
                case "duo_radio":
                    S = {
                        duoRadioEpisodeId: h.pathLevelClientData.duoRadioSummary.episode_id,
                        duoRadioSessionId: h.pathLevelClientData.duoRadioSummary.id,
                        pathExperiments: d,
                        type: R.FF.DuoRadio
                    };
                    break;
                case "practice":
                    {
                        const {finishedSessions: e, hasLevelReview: t, pathLevelClientData: a, subtype: s, totalSessions: r} = h
                          , {skillIds: i} = a;
                        S = {
                            generatorIdentifiersOfRecentMistakes: n,
                            lexemePracticeType: t && e === r - 1 ? "practice_level_review" : "practice_level",
                            pathExperiments: d,
                            skillIds: i,
                            type: "unit_practice" === s ? R.FF.UnitPractice : R.FF.LexemePractice
                        };
                        break
                    }
                case "skill":
                    {
                        const {skillId: e, crownLevelIndex: a} = h.pathLevelClientData
                          , u = null != t ? t : a
                          , _ = g[e]
                          , v = "custom_intro" === h.subtype
                          , E = "grammar" === h.subtype
                          , b = o && E
                          , I = (0,
                        y.Eb)(h);
                        S = (0,
                        y.$)(h) ? {
                            generatorIdentifiersOfRecentMistakes: n,
                            levelIndex: u,
                            pathExperiments: d,
                            skillId: e,
                            type: R.FF.LevelReview
                        } : !E && (o && !f || I || r) ? {
                            levelIndex: u,
                            pathExperiments: d,
                            skillIds: [e],
                            type: R.FF.LexemeSkillLevelPractice
                        } : {
                            isCustomIntroSkill: v,
                            isGrammarSkill: E,
                            levelIndex: u,
                            pathExperiments: d,
                            showGrammarSkillSplash: Q({
                                hasExplanation: !!(null === (p = _.explanation) || void 0 === p ? void 0 : p.url),
                                isExplanationSeen: i,
                                isGrammarSkill: E,
                                isRedoingGrammarSkill: b,
                                pathLevelState: h.state
                            }) || K({
                                fromLanguage: s,
                                hasExplanation: !!(null === (m = _.explanation) || void 0 === m ? void 0 : m.url),
                                isCustomIntroSkill: v,
                                isExplanationSeen: i,
                                learningLanguage: l,
                                levelData: c
                            }),
                            skillId: e,
                            type: R.FF.Lesson
                        };
                        break
                    }
                case "unit_review":
                    {
                        const {skillIds: e} = h.pathLevelClientData;
                        if ("passed" === h.state)
                            throw Error("Tried to create session for passed unit_review level");
                        S = {
                            skillIds: e,
                            type: R.FF.UnitReview
                        };
                        break
                    }
                default:
                    throw (0,
                    _.RJ)(h.type),
                    Error(`Unrecognized level type: ${h.type}`)
                }
            return {
                ...S,
                levelSessionIndex: v
            }
        }
          , z = ({levelData: e, sectionedPath: t}) => {
            const {skillIds: a} = e.level.pathLevelClientData;
            return {
                sectionIndex: (0,
                y.Kq)(e.unitIndex, t),
                skillIds: a,
                type: R.FF.Placement
            }
        }
          , B = ({crowns: e, isLegendaryMode: t=!1, mode: a, storyId: s}) => ({
            crowns: e,
            debugShowAllChallenges: (0,
            m.gQ)("debugShowAllStoryChallenges"),
            debugShowOnboarding: (0,
            m.gQ)("debugShowStoriesOnboarding") ? "newUser" : void 0,
            illustrationFormat: "svg",
            isDesktop: !0,
            isLegendaryMode: t,
            masterVersion: "true" === (0,
            m.ky)("latest"),
            mode: a,
            storyId: s,
            supportedElements: (0,
            k.b5)().join(","),
            type: "story"
        })
          , j = (e, t) => {
            if (void 0 === t)
                throw Error("Tried to create legendary per node session params for undefined level");
            if ("passed" !== t.state)
                throw Error("Tried to create legendary per node session params for non-passed node");
            switch (t.type) {
            case "alphabet":
            case "alphabet_gate":
            case "chest":
            case "duo_radio":
            case "unit_review":
                throw Error(`Tried to create legendary per node session params for unsupported level type: ${t.type}`);
            case "practice":
                {
                    const {skillIds: e} = t.pathLevelClientData;
                    return {
                        isFinalLevel: !0,
                        skillIds: e,
                        type: "unit_practice" === t.subtype ? R.FF.LegendaryUnitPractice : R.FF.LegendaryLexemePractice
                    }
                }
            case "skill":
                {
                    const {skillId: e, crownLevelIndex: a} = t.pathLevelClientData;
                    return {
                        isFinalLevel: !0,
                        levelIndex: a,
                        skillId: e,
                        type: R.FF.LegendaryLevel
                    }
                }
            case "story":
                {
                    const {mode: a, storyId: s} = t.pathLevelClientData;
                    return B({
                        crowns: e,
                        isLegendaryMode: !0,
                        mode: a.toUpperCase(),
                        storyId: s
                    })
                }
            default:
                throw (0,
                _.RJ)(t.type),
                Error(`Unrecognized legendary per node level type: ${t.type}`)
            }
        }
          , $ = async ({debugChallengeTypes: e, debugChallenges: t, debugGeneratorIds: n, levelData: r, session: i, sessionParams: o}) => {
            var l, c, d;
            const u = t.length ? (0,
            m.gQ)("adaptiveChallenges") && "0" !== (0,
            m.ky)("adaptiveChallenges") ? "force" : "remove" : (0,
            m.gQ)("adaptiveChallenges") ? "0" === (0,
            m.ky)("adaptiveChallenges") ? "remove" : "force" : "preserve";
            let g, p = "force" === u ? (await a.e(1711).then(a.t.bind(a, 40430, 19))).default : [];
            switch (e.length && (p = p.filter((t => e.includes(t.type)))),
            t.length && (i.challenges = t),
            u) {
            case "force":
                i.adaptiveChallenges = p;
                break;
            case "preserve":
                break;
            case "remove":
                i.adaptiveChallenges = void 0
            }
            if (n.length && (i.challenges = i.challenges.filter((e => {
                var t;
                const a = null === (t = e.challengeGeneratorIdentifier) || void 0 === t ? void 0 : t.generatorId;
                return a && n.includes(a)
            }
            ))),
            e.length && (i.challenges.sort(( (t, a) => e.indexOf(t.type) - e.indexOf(a.type))),
            null === (l = i.adaptiveChallenges) || void 0 === l || l.sort(( (t, a) => e.indexOf(t.type) - e.indexOf(a.type)))),
            (0,
            m.gQ)("length")) {
                const e = parseInt(null !== (c = (0,
                m.ky)("length")) && void 0 !== c ? c : "-1", 10);
                e > 0 && (i.challenges = i.challenges.slice(0, o.isFinalLevel ? Math.max(2, e) : e))
            }
            if ((0,
            m.gQ)("debugCharacters"))
                if ("0" === (0,
                m.ky)("debugCharacters"))
                    i.challenges = i.challenges.map((e => e.type === R.Sm.Dialogue ? {
                        ...e,
                        dialogue: e.dialogue.map((e => ({
                            ...e,
                            character: void 0
                        })))
                    } : {
                        ...e,
                        character: void 0
                    }));
                else {
                    const e = (await a.e(1711).then(a.t.bind(a, 88877, 19))).default;
                    i.challenges = i.challenges.map(( (t, a) => ({
                        ...t,
                        character: e[a % e.length]
                    })))
                }
            if ([i.challenges,g] = s.uK(i.challenges, (e => (0,
            m.gQ)("sampleSession") ? e.type !== R.Sm.Speak || w.c : o.challengeTypes.includes(e.type))),
            g.length) {
                const e = s.jj(s.jg(g, "type")).sort();
                (0,
                S.vU)("Received unwanted challenge types", {
                    data: {
                        levelType: null === (d = null == r ? void 0 : r.level) || void 0 === d ? void 0 : d.type,
                        sessionType: i.type,
                        types: e
                    },
                    sample: .01
                })
            }
        }
          , Z = e => {
            switch (e) {
            case R.FF.AlphabetLesson:
                return h.Q.AlphabetLesson;
            case R.FF.AlphabetPractice:
                return h.Q.AlphabetPractice;
            case R.FF.DuoRadio:
                return h.Q.DuoRadio;
            case R.FF.GlobalPractice:
                return h.Q.GlobalPractice;
            case R.FF.Lesson:
                return h.Q.Lesson;
            case R.FF.MistakesReview:
                return h.Q.MistakesReview;
            case R.FF.SpeakingPractice:
                return h.Q.SpeakingPractice;
            case R.FF.Legendary:
                return h.Q.Legendary;
            case R.FF.LegendaryLevel:
                return h.Q.LegendaryLevel;
            case R.FF.LegendaryLexemePractice:
                return h.Q.LegendaryLexemePractice;
            case R.FF.LegendaryUnitPractice:
                return h.Q.LegendaryUnitPractice;
            case R.FF.LevelReview:
                return h.Q.LevelReview;
            case R.FF.LexemePractice:
                return h.Q.LexemePractice;
            case R.FF.LexemeSkillLevelPractice:
                return h.Q.LexemeSkillLevelPractice;
            case R.FF.ListeningPractice:
                return h.Q.ListeningPractice;
            case R.FF.Placement:
                return h.Q.Placement;
            case R.FF.SectionTest:
                return h.Q.SectionTest;
            case R.FF.SpecifiedMatchPractice:
                return h.Q.SpecifiedMatchPractice;
            case R.FF.Story:
                return h.Q.Stories;
            case R.FF.TargetPractice:
                return h.Q.TargetPractice;
            case R.FF.UnitPractice:
                return h.Q.UnitPractice;
            case R.FF.UnitReview:
                return h.Q.UnitReview;
            case R.FF.UnitRewind:
                return h.Q.UnitRewind;
            case R.FF.UnitTest:
                return h.Q.UnitTest;
            default:
                return (0,
                _.RJ)(e),
                h.Q.Lesson
            }
        }
          , W = e => e.type === R.FF.MistakesReview ? -e.challenges.filter((e => e.correct)).length : [R.FF.Lesson, R.FF.LexemePractice, R.FF.GlobalPractice, R.FF.LevelReview].includes(e.type) ? s.jj(e.challenges.filter((e => !e.correct)), !1, (e => e.id)).length : 0
          , q = e => s.jj(e.filter((e => !e.skipped && O().includes(e.type))), !1, (e => e.id)).length
          , Q = ({hasExplanation: e, isExplanationSeen: t, isGrammarSkill: a, isRedoingGrammarSkill: s, pathLevelState: n}) => a && e && !t && !(0,
        y.Wc)(n) && !s
          , K = ({fromLanguage: e, hasExplanation: t, isCustomIntroSkill: a, isExplanationSeen: s, learningLanguage: n, levelData: r}) => a && "ja" === n && "en" === e && t && 0 === r.level.finishedSessions && r.unitIndex < 7 && !s
          , Y = (e, t) => {
            const a = Math.floor(e.length / t)
              , s = new Array(t)
              , n = e.length % t;
            let r = t - 1
              , i = 0;
            for (let o = e.length - 1; o >= 0; o--) {
                const l = e[o];
                (s[r] = s[r] || []).unshift(l.id),
                i++,
                i >= a + (n > 0 && t - r >= n ? 1 : 0) && (r--,
                i = 0)
            }
            return s
        }
          , J = e => e.type === R.Sm.Match
          , X = e => [R.Sm.ExtendedListenMatch, R.Sm.ExtendedMatch].includes(e.type)
          , ee = (e, t) => {
            const a = e.filter(J)
              , n = a[0]
              , r = s.TV(a.slice(1));
            if (a.length < 6)
                throw Error("Not enough Match challenges provided to create words practice session");
            const i = [n]
              , o = n.pairs
              , l = s.TV(s.jj(r.map((e => e.pairs)).flat(), !1, s.Cb("fromToken")))
              , c = ( () => {
                if (!t || !n.pairs[0].tts)
                    return [];
                const e = s.jj(o.concat(l.slice(0, E.O0)), !1, s.Cb("fromToken"));
                return [r[0]].map((t => ({
                    ...t,
                    pairs: e.map((e => {
                        var t;
                        return {
                            translation: e.fromToken,
                            tts: null !== (t = e.tts) && void 0 !== t ? t : ""
                        }
                    }
                    )),
                    type: R.Sm.ExtendedListenMatch
                })))
            }
            )()
              , d = ( () => {
                const e = s.jj(o.concat(l.slice(0, E.GU)), !1, s.Cb("fromToken"));
                return [r[1]].map((t => ({
                    ...t,
                    pairs: e,
                    type: R.Sm.ExtendedMatch
                })))
            }
            )();
            return {
                challengeIdSections: [i.map((e => e.id)), ...c.length > 0 ? [c.map((e => e.id))] : [], d.map((e => e.id))],
                challenges: [i, c, d].flat()
            }
        }
          , te = e => {
            var t, a;
            return {
                activity_uuid: e.session.trackingProperties.activity_uuid,
                skill_id: e.session.skillId,
                skill_name: e.session.trackingProperties.skill_name,
                skill_tree_id: e.session.trackingProperties.skill_tree_id,
                type: "grammar" === (null === (t = e.session.sessionContext) || void 0 === t ? void 0 : t.contextType) ? "strength_practice" : Z(e.session.type),
                unit_index: null === (a = e.levelData) || void 0 === a ? void 0 : a.unitIndex
            }
        }
    }
    ,
    80820: (e, t, a) => {
        "use strict";
        a.d(t, {
            _x: () => m,
            fB: () => p,
            gL: () => v,
            rb: () => E,
            tr: () => f,
            vS: () => _,
            yI: () => S
        });
        var s = a(80715)
          , n = a(42659)
          , r = a(93540)
          , i = a(17135)
          , o = a(68903)
          , l = a(60752)
          , c = a(58576)
          , d = a(23275);
        const u = (0,
        i.dz)({
            days: 30
        })
          , g = {}
          , p = async (e, t, a, s) => {
            const n = t.then((async t => {
                const n = {
                    prefetchTimestamp: a,
                    session: t,
                    stale: !1
                };
                try {
                    const t = await (0,
                    l.b)();
                    return await t.put("prefetchedSessions", n, e),
                    s({
                        key: e,
                        type: "sessionCache/ADD"
                    }),
                    {
                        ...n,
                        cacheType: "fresh"
                    }
                } catch (e) {
                    return (0,
                    c.Kp)("Unable to store prefetched session", {
                        ex: e
                    }),
                    {
                        ...n,
                        cacheType: "error"
                    }
                } finally {
                    delete g[e]
                }
            }
            ));
            return g[e] = n,
            n
        }
          , m = async e => {
            const t = e.dispatch.bind(e)
              , a = (0,
            r.cb)(e.getState())
              , s = (0,
            n.Rv)(e.getState())
              , o = (0,
            n.iH)(e.getState())
              , c = (0,
            r.HF)(e.getState())
              , g = await (0,
            l.b)();
            let p = await g.transaction("prefetchedSessions").store.openCursor();
            const m = e => {
                if (!c)
                    throw Error("Cannot determine level position without path");
                if (!a)
                    return !0;
                const t = (0,
                d.m8)(c, (t => t.id === e));
                return !t || (0,
                d.Nk)(t, a) < 0
            }
              , _ = [];
            for (; p; )
                ((0,
                i.pY)(1e3 * (p.value.prefetchTimestamp + u)) || p.value.session.fromLanguage !== s || p.value.session.learningLanguage !== o || m(y(p.key).pathLevel.id)) && _.push(p.key),
                p = await p.continue();
            await Promise.all(_.map((e => h(e, t))))
        }
          , h = async (e, t) => {
            const a = await (0,
            l.b)();
            await a.delete("prefetchedSessions", e),
            t({
                key: e,
                type: "sessionCache/REMOVE"
            })
        }
          , _ = async e => {
            const t = g[e];
            if (void 0 !== t)
                return t;
            const a = await (0,
            l.b)()
              , s = await a.get("prefetchedSessions", e);
            return s ? {
                ...s,
                cacheType: "existing"
            } : void 0
        }
          , v = ({currentStoryMode: e, generatorIdsOfRecentMistakes: t, includeSmartTips: a, isExplanationSeen: s, pathLevel: n}) => JSON.stringify({
            currentStoryMode: e,
            generatorIdsOfRecentMistakes: t,
            includeSmartTips: a,
            isExplanationSeen: s,
            pathLevelFinishedSessions: n.finishedSessions,
            pathLevelId: n.id,
            pathLevelState: n.state
        })
          , f = e => "active" === e.state && (0,
        o.gB)(e.type, ["practice", "skill", "story", "unit_review", "alphabet"])
          , S = async e => {
            const t = await (0,
            l.b)()
              , a = await t.get("prefetchedSessions", e);
            a && await t.put("prefetchedSessions", {
                ...a,
                stale: !0
            }, e)
        }
          , y = e => {
            const {currentStoryMode: t, generatorIdsOfRecentMistakes: a, includeSmartTips: s, isExplanationSeen: n, pathLevelFinishedSessions: r, pathLevelId: i, pathLevelState: o} = JSON.parse(e);
            return {
                currentStoryMode: t,
                generatorIdsOfRecentMistakes: a,
                includeSmartTips: s,
                isExplanationSeen: n,
                pathLevel: {
                    finishedSessions: r,
                    id: i,
                    state: o
                }
            }
        }
          , E = async e => {
            const t = e.dispatch.bind(e)
              , a = e.getState().sessionCache.keys
              , n = await (0,
            l.b)()
              , r = await n.getAllKeys("prefetchedSessions");
            (0,
            s.dC)(( () => {
                const e = r.filter((e => !a.includes(e)));
                for (const a of e)
                    t({
                        key: a,
                        type: "sessionCache/ADD"
                    });
                const s = a.filter((e => !r.includes(e)));
                for (const e of s)
                    t({
                        key: e,
                        type: "sessionCache/REMOVE"
                    })
            }
            ))
        }
    }
    ,
    51551: (e, t, a) => {
        "use strict";
        a.d(t, {
            Fk: () => i,
            K: () => g,
            RB: () => c,
            SG: () => r,
            cy: () => u,
            sz: () => d
        });
        var s = a(64115)
          , n = a(6947);
        const r = 2
          , i = 200;
        var o;
        !function(e) {
            e[e.SUNDAY = 0] = "SUNDAY",
            e[e.MONDAY = 1] = "MONDAY",
            e[e.TUESDAY = 2] = "TUESDAY",
            e[e.WEDNESDAY = 3] = "WEDNESDAY",
            e[e.THURSDAY = 4] = "THURSDAY",
            e[e.FRIDAY = 5] = "FRIDAY",
            e[e.SATURDAY = 6] = "SATURDAY"
        }(o || (o = {}));
        const l = (e, t=1) => {
            const a = e.shop.misc.streak_freeze
              , s = a ? e.inventory[a.id] : void 0;
            return !!s && s.quantity >= t
        }
          , c = (e, t, a=!1) => {
            var n, i;
            return !l(e, r) && (!!(0,
            s.gQ)("dailyGoalStreakFreeze") || (null !== (i = null === (n = t.streakData.currentStreak) || void 0 === n ? void 0 : n.length) && void 0 !== i ? i : 0) >= 2 && (a || Math.random() < .75))
        }
          , d = (e, t) => !l(e) && 1 === t
          , u = e => e.shop.misc.final_level_attempt
          , g = (e, t) => {
            var a, s, i;
            if (!(0,
            n.pS)(e) || !(null === (a = t.shop.misc.streak_freeze) || void 0 === a ? void 0 : a.id) || l(t, r))
                return 0;
            const o = r - (null !== (i = null === (s = t.inventory.streak_freeze) || void 0 === s ? void 0 : s.quantity) && void 0 !== i ? i : 0);
            return Math.max(o, 0)
        }
    }
    ,
    6986: (e, t, a) => {
        "use strict";
        a.d(t, {
            MG: () => u,
            gT: () => d,
            oV: () => o,
            ub: () => i,
            vK: () => l,
            yI: () => g
        });
        var s = a(18867)
          , n = a(95940)
          , r = a(30839);
        const i = () => (0,
        r.cl)(r.Qt.LastLogin)
          , o = (e, t) => {
            const a = c(e, t);
            (0,
            r.LS)(r.Qt.LastLogin, a)
        }
          , l = e => {
            const t = u();
            t && (t.picture = e,
            (0,
            r.LS)(r.Qt.LastLogin, t))
        }
          , c = (e, t) => t.email ? {
            email: t.email,
            hasFacebook: "social" === e ? !!t.facebookId : void 0,
            hasGoogle: "social" === e ? !!t.googleId : void 0,
            name: "email" === e && t.email ? t.email : t.name,
            picture: t.picture,
            type: e
        } : null
          , d = async e => {
            var t, a;
            const n = await s.Vi.userSearchByEmail(e)
              , r = n && n.length > 0 ? n[0] : null;
            return r ? {
                hasFacebook: !!r.hasFacebookId,
                hasGoogle: !!r.hasGoogleId,
                name: null !== (a = null !== (t = r.name) && void 0 !== t ? t : r.username) && void 0 !== a ? a : "",
                picture: r.picture
            } : null
        }
          , u = () => (0,
        r.rV)(r.Qt.LastLogin)
          , g = (e, t, a) => a && !t && (0,
        n.k_)(e)
    }
    ,
    59096: (e, t, a) => {
        "use strict";
        a.d(t, {
            C8: () => y,
            P9: () => E,
            RZ: () => R,
            U: () => m,
            b0: () => S,
            cz: () => I,
            fH: () => p,
            pT: () => w,
            qj: () => b,
            r8: () => v,
            u5: () => C,
            vT: () => f
        });
        var s = a(80254)
          , n = a(18867)
          , r = a(83719)
          , i = a(18728)
          , o = a(17135)
          , l = a(68903)
          , c = a(43633)
          , d = a(58576)
          , u = a(79465)
          , g = a(11811);
        const p = 2
          , m = 86400
          , h = [g.Sm.CompleteReverseTranslation, g.Sm.Form, g.Sm.GapFill, g.Sm.Translate]
          , _ = (0,
        i.md)("smartTip", (e => n.s3.getSmartTip(e)))
          , v = e => w(e.identifier, e.trigger.smart_tip.variables)
          , f = e => {
            const t = _.getAtom(e);
            return (0,
            c.h0)().get(t).value
        }
          , S = e => ((0,
        i.Lv)(_, e.smartTips.map((e => e.url))),
        null)
          , y = (e, t, a, n, i, l, c) => {
            const {session: {type: p}, sessionParams: {levelIndex: m, skillId: _}, shownSmartTipIds: S} = i;
            if (!h.includes(t.type))
                return;
            if (!n || 0 === n.length)
                return;
            if (e && [r.Oj.MissingWord, r.Oj.WrongWord].includes(e))
                return void (0,
                u.track)("smart_tips_rules_fired", {
                    blame: e,
                    challenge_type: t.type,
                    did_match_any_rule: !1,
                    fired_rules: "[]",
                    has_content: !0,
                    number_of_matched_rules: 0,
                    probably_tap: t.type === g.Sm.Translate && t.choices.length > 0,
                    type: p
                });
            const y = n
              , E = y.map((e => {
                var t;
                const s = null === (t = a.smartTips) || void 0 === t ? void 0 : t.find((t => t.smartTipId === e.smart_tip.id))
                  , n = s ? f(s.url) : void 0;
                if (n)
                    return {
                        ...n,
                        correctSolution: w(n.correctSolution, e.smart_tip.variables),
                        trigger: e
                    };
                (0,
                u.track)("smart_tip_failure", {
                    reason: "no_content_was_fetched",
                    rule_id: e.smart_tip.id
                })
            }
            )).filter((e => void 0 !== e)).filter((e => k(e)));
            if ((0,
            u.track)("smart_tips_rules_fired", {
                blame: e,
                challenge_type: t.type,
                did_match_any_rule: y.length > 0,
                fired_rules: JSON.stringify(y.map((e => e.smart_tip.id))),
                has_content: E.length > 0,
                number_of_matched_rules: y.length,
                probably_tap: t.type === g.Sm.Translate && t.choices.length > 0,
                type: p
            }),
            0 === E.length || S.length > 3 || void 0 === m || void 0 === _)
                return;
            const b = l[_].row
              , I = E.filter((e => !S.includes(e.identifier))).filter((e => {
                var t, a;
                return e.policy.allowedSkillLevels.includes(m) && b >= (null !== (t = e.policy.earliestRow) && void 0 !== t ? t : 0) && b <= (null !== (a = e.policy.latestRow) && void 0 !== a ? a : Number.MAX_VALUE)
            }
            )).filter((e => {
                var t;
                const a = v(e);
                return !(null === (t = c.recentlySeenSmartTips) || void 0 === t ? void 0 : t[a]) || c.recentlySeenSmartTips[a] > (0,
                o.Zo)()
            }
            ));
            if (0 === I.length)
                return;
            const T = I[0]
              , C = T.elements.filter((e => "challenge" === e.type));
            if (1 !== C.length)
                return void (0,
                d.vU)("Smart Tip doesn't have exactly one challenge.", {
                    data: {
                        smartTipId: T.identifier
                    }
                });
            const R = C[0].element.options.map((e => w(e.text, T.trigger.smart_tip.variables)));
            if (2 === R.length)
                if (R.length === s.jj(R).length) {
                    if (T)
                        return (0,
                        u.track)("smart_tip_will_show", {
                            blame: e,
                            challenge_type: t.type,
                            for_rule_with_id: T.identifier,
                            level_index: m,
                            method: "graph_based",
                            num_tips_shown_so_far: S.length,
                            probably_tap: t.type === g.Sm.Translate && t.choices.length > 0,
                            smart_tip_id: T.identifier,
                            smart_tip_name: T.name,
                            tree_level: _ ? l[_].row : void 0,
                            type: p
                        }),
                        T
                } else
                    (0,
                    d.vU)("Smart Tip challenge options are not unique.", {
                        data: {
                            challengeId: t.id,
                            smartTipId: T.identifier
                        }
                    });
            else
                (0,
                d.vU)("Smart Tip challenge has incorrect number of options.", {
                    data: {
                        numOptions: R.length,
                        smartTipId: T.identifier
                    }
                })
        }
          , E = e => {
            const t = e.elements.filter((e => "challenge" === e.type));
            if (1 !== t.length)
                return (0,
                d.vU)("Smart Tip that doesn't have exactly one challenge", {
                    data: {
                        smartTipId: e.identifier
                    }
                }),
                0;
            const a = t[0].element.options.findIndex((e => e.isCorrect));
            return -1 === a ? ((0,
            d.vU)("Smart Tip that doesn't have a correct answer", {
                data: {
                    smartTipId: e.identifier
                }
            }),
            0) : a
        }
          , b = new RegExp("({{ .*? }})","g")
          , I = e => `{{ ${e.name} }}`
          , w = (e, t) => {
            if (void 0 === t)
                return e;
            let a = e;
            return t.forEach((e => {
                a = a.replace(new RegExp(I(e),"g"), e.value)
            }
            )),
            a
        }
          , k = e => {
            const t = e.trigger.smart_tip.variables.map((e => I(e)))
              , a = [e.correctSolution, ...e.elements.map((e => T(e))).flat()].every((e => {
                var a;
                return (null !== (a = e.match(b)) && void 0 !== a ? a : []).every((e => t.includes(e)))
            }
            ));
            return a || (0,
            u.track)("smart_tip_failure", {
                reason: "template_filling_failed",
                rule_id: e.identifier
            }),
            a
        }
          , T = e => {
            const t = e => {
                var t;
                return [e.text.styledString.text, ...e.subtext ? [null === (t = e.subtext) || void 0 === t ? void 0 : t.styledString.text] : []]
            }
            ;
            switch (e.type) {
            case "audioSample":
                return [e.element.sampleText.text, e.element.description.styledString.text];
            case "captionedImage":
                return [e.element.text.styledString.text];
            case "challenge":
                return e.element.options.map((e => e.text));
            case "dialogue":
                return e.element.phrases.flatMap((e => t(e)));
            case "example":
                return t(e.element);
            case "exampleCaptionedImage":
                return e.element.examples.map(t).flat();
            case "expandable":
                return e.element.elements.map(T).flat();
            case "pathSectionsCefrTable":
            case "lineBreak":
            case "verticalSpace":
                return [];
            case "table":
                return e.element.cells.map((e => e.map((e => e.styledString.text)))).flat();
            case "text":
                return [e.element.styledString.text];
            default:
                throw (0,
                l.RJ)(e),
                Error(`Unexpected explanation item type "${e.type}"`)
            }
        }
          , C = (e, t) => {
            var a, s;
            return null === (s = null === (a = e.options.find(( ({}, e) => t === e))) || void 0 === a ? void 0 : a.smartTips) || void 0 === s ? void 0 : s.map((e => ({
                smart_tip: e
            })))
        }
          , R = (e, t) => {
            switch (e) {
            case g.FF.LexemeSkillLevelPractice:
                return !0;
            case g.FF.GlobalPractice:
            case g.FF.Lesson:
            case g.FF.LexemePractice:
            case g.FF.MistakesReview:
            case g.FF.UnitReview:
                return !t.isFinalLevel;
            case g.FF.AlphabetLesson:
            case g.FF.AlphabetPractice:
            case g.FF.DuoRadio:
            case g.FF.LevelReview:
            case g.FF.Legendary:
            case g.FF.LegendaryLevel:
            case g.FF.LegendaryLexemePractice:
            case g.FF.LegendaryUnitPractice:
            case g.FF.ListeningPractice:
            case g.FF.Placement:
            case g.FF.SectionTest:
            case g.FF.SpeakingPractice:
            case g.FF.SpecifiedMatchPractice:
            case g.FF.Story:
            case g.FF.TargetPractice:
            case g.FF.UnitPractice:
            case g.FF.UnitTest:
            case g.FF.UnitRewind:
                return !1;
            default:
                return (0,
                l.RJ)(e),
                void (0,
                d.vU)("Received invalid session type", {
                    data: e
                })
            }
        }
    }
    ,
    419: (e, t, a) => {
        "use strict";
        a.d(t, {
            Q: () => s
        });
        const s = e => {
            const t = {
                link: "https://www.facebook.com/duolingo"
            }
              , a = {
                link: "https://www.instagram.com/duolingo"
            }
              , s = {
                link: "https://www.tiktok.com/@duolingo"
            }
              , n = {
                link: "https://twitter.com/duolingo"
            };
            switch (e) {
            case "de":
                return {
                    facebook: {
                        link: "https://www.facebook.com/DuolingoDeutschland"
                    },
                    instagram: {
                        link: "https://www.instagram.com/duolingodeutschland/"
                    },
                    tiktok: s,
                    twitter: n
                };
            case "es":
                return {
                    facebook: {
                        link: "https://www.facebook.com/duolingoespanol"
                    },
                    instagram: {
                        link: "https://www.instagram.com/duolingoespanol/"
                    },
                    tiktok: s,
                    twitter: {
                        link: "https://twitter.com/duolingoespanol"
                    }
                };
            case "fr":
                return {
                    facebook: {
                        link: "https://www.facebook.com/duolingofrance"
                    },
                    instagram: {
                        link: "https://www.instagram.com/duolingofrance"
                    },
                    tiktok: s,
                    twitter: {
                        link: "https://twitter.com/duolingofrance"
                    }
                };
            case "hi":
                return {
                    facebook: {
                        link: "https://www.facebook.com/Duolingo-India-108456034999544"
                    },
                    instagram: {
                        link: "https://www.instagram.com/duolingo_india/"
                    },
                    tiktok: s,
                    twitter: {
                        link: "https://twitter.com/duolingoindia"
                    }
                };
            case "ja":
                return {
                    facebook: t,
                    instagram: a,
                    tiktok: s,
                    twitter: {
                        link: "https://twitter.com/Duolingo_Japan"
                    }
                };
            case "pt":
                return {
                    facebook: {
                        link: "https://www.facebook.com/duolingobrasil"
                    },
                    instagram: {
                        link: "https://www.instagram.com/duolingobrasil"
                    },
                    tiktok: {
                        link: "https://www.tiktok.com/@duolingobrasil"
                    },
                    twitter: {
                        link: "https://twitter.com/duolingobrasil"
                    }
                };
            default:
                return {
                    facebook: t,
                    instagram: a,
                    tiktok: s,
                    twitter: n
                }
            }
        }
    }
    ,
    92209: (e, t, a) => {
        "use strict";
        a.d(t, {
            B: () => s,
            z: () => n
        });
        const s = 8
          , n = 24
    }
    ,
    68564: (e, t, a) => {
        "use strict";
        a.d(t, {
            c: () => n
        });
        var s = a(74597);
        const n = !!window.webkitSpeechRecognition && (s.Z.chrome || s.Z.edgeSupportedSpeaking)
    }
    ,
    14437: (e, t, a) => {
        "use strict";
        a.d(t, {
            r: () => n
        });
        const s = (0,
        a(73573).V)((e => JSON.stringify(e, ( ({}, e) => Array.isArray(e) || "object" != typeof e || null === e ? e : Object.keys(e).sort().reduce(( (t, a) => (t[a] = e[a],
        t)), {})))))
          , n = e => {
            switch (typeof e) {
            case "boolean":
            case "number":
            case "string":
                return JSON.stringify(e);
            case "undefined":
                return "undefined";
            case "object":
                return null === e ? "null" : s(e);
            default:
                throw Error("Unhandled type " + typeof e)
            }
        }
    }
    ,
    30839: (e, t, a) => {
        "use strict";
        a.d(t, {
            Qt: () => s,
            pn: () => d,
            rV: () => u,
            No: () => p,
            cl: () => m,
            HJ: () => h,
            LS: () => _
        });
        var s, n = a(80231), r = a(58576), i = a(79465);
        !function(e) {
            e.REDUX_AgeRestrictedLeaderboardsIntro = "duo.ageRestrictedLeaderboards",
            e.REDUX_AvatarsIntro = "duo.avatarsIntro",
            e.REDUX_DailyQuests = "duo.dailyQuests",
            e.REDUX_DarkMode = "duo.darkMode",
            e.REDUX_FriendsQuestNextStart = "duo.friendsQuestNextStart",
            e.REDUX_LastSeenMonthlyChallengeId = "duo.lastSeenMonthlyChallengeId",
            e.ArchSampleState = "duo.archSample.state",
            e.ArchSampleBackendNumberPreferences = "duo.archSample.backend.numberPreferences",
            e.BrowserSessionDebugFlags = "duo.sessionDebugFlags",
            e.DebugExperimentOverrides = "duo.experimentOverrides",
            e.DebugFlags = "duo.persistentDebugFlags",
            e.DisableZombieMode = "duo.disableZombieMode",
            e.GradingConfig = "duo.clientSideGradingConfig",
            e.GradingConfigTimestamp = "duo.clientSideGradingConfig.timestamp",
            e.InviteCode = "duo.inviteCode",
            e.LanguageTokens = "duo.languageTokens",
            e.LastAppCrashes = "duo.lastAppCrashes",
            e.LastLogin = "duo.lastLogin",
            e.LoggedOutExperiments = "duo.loggedOutExperiments",
            e.SentryThrottling = "duo.sentryThrottling",
            e.State = "duo.state"
        }(s || (s = {}));
        let o = !1;
        const l = ( () => {
            const e = new Map;
            return {
                clear: () => e.clear(),
                getItem: t => {
                    var a;
                    return null !== (a = e.get(t)) && void 0 !== a ? a : null
                }
                ,
                key: t => Array.from(e.keys())[t],
                get length() {
                    return e.size
                },
                removeItem: t => e.delete(t),
                setItem: (t, a) => e.set(t, a)
            }
        }
        )();
        let c = !1;
        const d = async (e, t) => {
            const a = u(e, t);
            if ("string" == typeof a && n.DS.isValid(a)) {
                const e = n.DS.toUint8Array(a);
                if ((e => e.byteLength >= 10 && 31 === e[0] && 139 === e[1])(e) && "DecompressionStream"in window)
                    return (async e => {
                        const t = new Blob([e]).stream().pipeThrough(new DecompressionStream("gzip"));
                        return new Response(t).json()
                    }
                    )(e)
            }
            return a
        }
          , u = (e, t) => {
            const a = g(t)
              , s = ( () => {
                try {
                    return a.getItem(e)
                } catch (e) {
                    (0,
                    r.vU)("Failed to retrieve item from storage", {
                        ex: e,
                        sample: .05
                    });
                    try {
                        a.clear()
                    } catch (e) {
                        (0,
                        r.vU)("Failed to clear storage", {
                            ex: e
                        })
                    }
                }
            }
            )();
            if (s)
                try {
                    return JSON.parse(s)
                } catch (t) {
                    (0,
                    r.vU)("Failed to parse item from storage", {
                        ex: t
                    }),
                    a.removeItem(e)
                }
        }
          , g = e => (null == e ? void 0 : e.useSessionStorage) ? sessionStorage : localStorage || (c || ((0,
        r.um)("localStorage unavailable. Falling back to memoryStorage."),
        c = !0),
        l)
          , p = (e, t) => {
            try {
                return e in g(t)
            } catch {
                return !1
            }
        }
          , m = (e, t) => {
            try {
                g(t).removeItem(e)
            } catch {}
        }
          , h = async (e, t, a) => {
            if ("CompressionStream"in window) {
                const s = n.DS.fromUint8Array(new Uint8Array(await (async e => {
                    const t = new Blob([JSON.stringify(e)]).stream().pipeThrough(new CompressionStream("gzip"));
                    return new Response(t).arrayBuffer()
                }
                )(t)));
                _(e, s, a)
            } else
                _(e, t, a)
        }
          , _ = (e, t, a) => {
            const s = JSON.stringify(t);
            try {
                g(a).setItem(e, s)
            } catch (t) {
                let l;
                const c = (null == a ? void 0 : a.useSessionStorage) ? "session" : "local";
                try {
                    n = g(),
                    l = Object.entries(n).map(( ([e,t]) => ({
                        key: e,
                        size: t.length
                    })))
                } catch {
                    l = `error accessing ${c}Storage`
                }
                (0,
                r.Kp)(`Failed to set ${c}Storage item`, {
                    data: {
                        key: e,
                        keySizes: l,
                        newItemSize: s.length
                    },
                    ex: t,
                    once: !0,
                    sample: .001
                }),
                o || ((0,
                i.track)("browser_storage_full", {
                    browser_storage_type: c
                }),
                o = !0)
            }
            var n
        }
    }
    ,
    18804: (e, t, a) => {
        "use strict";
        a.d(t, {
            CC: () => w,
            Fx: () => I,
            Gl: () => v,
            globalDispatch: () => f,
            globalGetState: () => S,
            tX: () => b,
            xC: () => k
        });
        var s = a(80715)
          , n = a(45106)
          , r = a(35870)
          , i = a(80254)
          , o = a(9990)
          , l = a(42659)
          , c = a(54174)
          , d = a(17135)
          , u = a(64115)
          , g = a(795)
          , p = a(58729)
          , m = a(58576)
          , h = a(30839);
        const _ = ["achievementsV3", "browserSettings", "characters", "config", "courseHistories", "courses", "friends", "goals", "heartsState", "items", "paymentMethods", "sessionCache", "skills", "student", "uiPersisted", "user", "zombieMode"]
          , v = () => (0,
        g.Dp)({})
          , f = e => null == y ? void 0 : y.dispatch(e)
          , S = () => null == y ? void 0 : y.getState();
        let y;
        const E = (e, t, a, s=( (e, t) => e === t)) => {
            let n;
            const r = () => {
                const r = t(e.getState());
                s(n, r) || a(r),
                n = r
            }
              , i = e.subscribe(r);
            return r(),
            i
        }
          , b = () => (0,
        s.I0)()
          , I = (0,
        s.gR)()
          , w = (0,
        s.fw)()
          , k = ({persister: e, rootReducer: t}) => {
            const a = (0,
            u.Au)() && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || n.qC
              , s = (0,
            n.MT)(t, e.get(), a((0,
            n.md)(r.Z, (e => t => a => {
                const s = e.getState()
                  , n = (0,
                d.Ux)();
                let r, i;
                try {
                    r = t(a)
                } catch (e) {
                    i = e
                }
                if ((0,
                p.cj)(s, a, e.getState(), {
                    duration: (0,
                    d.Ux)().getTime() - n.getTime(),
                    timestamp: n
                }),
                i)
                    throw i;
                return r
            }
            ))))
              , g = (0,
            l.dY)(s.getState());
            return void 0 !== g && (s.dispatch((0,
            o.LQ)(g)),
            s.dispatch((0,
            o.iU)(g))),
            E(s, (e => i.ei(e, _)), (t => e.set(( () => t))), ( (e, t) => void 0 !== e && i.BD(e, t))),
            E(s, c.d, (e => (0,
            m.yB)(e))),
            E(s, l.np, (e => {
                const t = e.experiments ? Object.fromEntries(i.XP(e.experiments).filter((t => e.experiments[t].treated)).map((t => [t, e.experiments[t].condition]))) : void 0;
                (0,
                m.av)(e, t)
            }
            )),
            E(s, (e => [(0,
            l.dY)(e), e.goals.lastSeenMonthlyChallengeId]), ( ([e,t]) => {
                e && t && (0,
                h.LS)(h.Qt.REDUX_LastSeenMonthlyChallengeId, {
                    ...(0,
                    h.rV)(h.Qt.REDUX_LastSeenMonthlyChallengeId),
                    [e]: t
                })
            }
            ), i.Xy),
            E(s, (e => [(0,
            l.dY)(e), e.ui.canShowAgeRestrictedLeaderboardsIntro]), ( ([e,t]) => {
                e && (0,
                h.LS)(h.Qt.REDUX_AgeRestrictedLeaderboardsIntro, {
                    ...(0,
                    h.rV)(h.Qt.REDUX_AgeRestrictedLeaderboardsIntro),
                    [e]: t
                })
            }
            ), i.Xy),
            E(s, (e => [(0,
            l.dY)(e), e.avatars.canShowAvatarsIntro]), ( ([e,t]) => {
                e && (0,
                h.LS)(h.Qt.REDUX_AvatarsIntro, {
                    ...(0,
                    h.rV)(h.Qt.REDUX_AvatarsIntro),
                    [e]: t
                })
            }
            ), i.Xy),
            E(s, (e => [(0,
            l.dY)(e), e.goals.lastSeenNextFriendsQuestStart]), ( ([e,t]) => {
                e && 0 !== t && (0,
                h.LS)(h.Qt.REDUX_FriendsQuestNextStart, {
                    ...(0,
                    h.rV)(h.Qt.REDUX_FriendsQuestNextStart),
                    [e]: t
                })
            }
            ), i.Xy),
            E(s, (e => [(0,
            l.dY)(e), {
                coreQuest: e.goals.coreQuest,
                dailyQuest: e.goals.dailyQuest,
                hardQuest: e.goals.hardQuest,
                lastUpdated: e.goals.lastUpdated
            }]), ( ([e,{coreQuest: t, dailyQuest: a, hardQuest: s, lastUpdated: n}]) => {
                [t, a, s, n, e].some((e => void 0 === e)) || (0,
                h.LS)(h.Qt.REDUX_DailyQuests, {
                    ...(0,
                    h.rV)(h.Qt.REDUX_DailyQuests),
                    [e]: {
                        coreQuest: t,
                        dailyQuest: a,
                        hardQuest: s,
                        lastUpdated: n
                    }
                })
            }
            ), i.Xy),
            y = s,
            s
        }
    }
    ,
    8718: (e, t, a) => {
        "use strict";
        a.d(t, {
            Au: () => E,
            BT: () => C,
            Bc: () => P,
            C7: () => T,
            E$: () => O,
            HD: () => _,
            HF: () => v,
            IG: () => R,
            JW: () => f,
            P3: () => u,
            WF: () => S,
            Xq: () => L,
            YL: () => h,
            _L: () => g,
            aJ: () => k,
            dM: () => D,
            e: () => I,
            f1: () => y,
            j0: () => l,
            yy: () => w,
            z$: () => p,
            z_: () => b
        });
        var s = a(80254)
          , n = a(64115)
          , r = a(68903)
          , i = a(67116)
          , o = a(58576);
        const l = 5
          , c = ["ARRANGE", "SELECT_PHRASE", "TYPE_TEXT", "SUBHEADING", "HINT_ONBOARDING"]
          , d = ["ARRANGE", "FREEFORM_WRITING", "MATCH", "MULTIPLE_CHOICE", "POINT_TO_PHRASE", "SELECT_PHRASE", "TYPE_TEXT"]
          , u = e => void 0 !== e && d.includes(e.type)
          , g = e => {
            if (!u(e))
                return !1;
            switch (e.type) {
            case "ARRANGE":
            case "POINT_TO_PHRASE":
            case "SELECT_PHRASE":
            case "TYPE_TEXT":
                return !0;
            case "MULTIPLE_CHOICE":
                return !e.question;
            case "MATCH":
            case "FREEFORM_WRITING":
                return !1;
            default:
                return (0,
                r.RJ)(e),
                !1
            }
        }
          , p = e => void 0 !== e && c.includes(e.type) || (e => "MULTIPLE_CHOICE" === (null == e ? void 0 : e.type) && void 0 === e.question)(e)
          , m = ["POINT_TO_PHRASE", "MULTIPLE_CHOICE", "FREEFORM_WRITING"]
          , h = e => void 0 !== e && m.includes(e.type)
          , _ = e => {
            var t, a;
            let r = 1;
            if (!e.storyElements)
                return r;
            const i = null === (t = e.storyElements) || void 0 === t ? void 0 : t.filter((e => "LINE" === e.type)).length
              , o = (0,
            n.gQ)("debugSkipToStoryLine") ? parseInt(null !== (a = (0,
            n.ky)("debugSkipToStoryLine")) && void 0 !== a ? a : "", 10) : void 0;
            return void 0 !== o ? o >= 1 && o <= i ? r = o : console.error(`Cannot skip to lineIndex ${o} because it's out of bounds.`) : (0,
            n.gQ)("debugSkipToLastStoryLine") && (r = i),
            ( (e, t) => {
                let a = 0;
                return s.cx(t, (t => ["LINE", "HEADER"].includes(t.type) && ++a === e))
            }
            )(r, e.storyElements)
        }
          , v = ({hideAllHints: e, hideRangesForChallenge: t, textWithHints: a}) => {
            var n, r;
            const i = a.text
              , o = e ? [] : a.hints
              , l = e ? [] : s.MR(a.hintMap, (e => e.rangeFrom)).filter((e => !t || t.every((t => e.rangeTo < t.start || e.rangeFrom > t.end))))
              , c = [];
            let d = 0
              , u = 0;
            for (; d < i.length; ) {
                let e;
                l[u] && d >= l[u].rangeFrom ? (e = Math.min(l[u].rangeTo, i.length - 1),
                c.push({
                    hint: o[l[u].hintIndex],
                    rangeFrom: d,
                    rangeTo: e,
                    text: i.slice(d, e + 1)
                }),
                u++) : (e = (null !== (r = null === (n = l[u]) || void 0 === n ? void 0 : n.rangeFrom) && void 0 !== r ? r : i.length) - 1,
                c.push({
                    rangeFrom: d,
                    rangeTo: e,
                    text: i.slice(d, e + 1)
                })),
                d = e + 1
            }
            return c
        }
          , f = e => ((0,
        n.gQ)("debugSlides") || (e.some((e => "streakFreezeChestReward" === e.type)) && (e = e.filter((e => "chestLingotsReward" !== e.type))),
        e.some((e => "streakSocietyFreezes" === e.type)) && (e = e.filter((e => "milestoneStreakFreeze" !== e.type)))),
        e)
          , S = e => e.flatMap((e => "attachedSlides"in e ? [e, ...e.attachedSlides] : [e]))
          , y = (e, t) => {
            if (e.length > 0)
                for (let a = 0; a < e.length; a++)
                    if ((null == t ? void 0 : t[a].type) !== e[a].type)
                        return (0,
                        o.Kp)("Expected attached slides to follow main slide, but found a mismatch", {
                            data: {
                                expected: e[a],
                                found: null == t ? void 0 : t[a]
                            }
                        }),
                        !1;
            return !0
        }
          , E = e => ({
            keypoints: [{
                audioStart: 0,
                rangeEnd: e.content.text.length
            }],
            url: e.ttsURL
        })
          , b = e => {
            switch (e.type) {
            case "HEADER":
                return e.learningLanguageTitleContent;
            case "LINE":
                return e.line.content;
            case "FREEFORM_WRITING_EXAMPLE_RESPONSE":
                return {
                    ...e.content,
                    audio: E(e)
                };
            default:
                return
            }
        }
          , I = e => e ? "custom" : "generic"
          , w = (e, t) => {
            const a = e.elementIndex - t;
            return a > 0 ? {
                elementIndex: t + 1
            } : a < 0 ? {
                elementIndex: t - 1
            } : e
        }
          , k = (e, t) => {
            var a, s;
            if (e) {
                const n = e.filter((e => "MATCH" === e.type))[0];
                if ("MATCH" === (null == n ? void 0 : n.type)) {
                    const e = null === (a = n.matches) || void 0 === a ? void 0 : a.map((e => e.phrase)).filter((e => t.toLowerCase().includes(e.toLowerCase())));
                    return null !== (s = null == e ? void 0 : e.length) && void 0 !== s ? s : 0
                }
            }
            return 0
        }
          , T = e => {
            if (e) {
                const t = e.filter((e => "FREEFORM_WRITING" === e.type))[0];
                if ("FREEFORM_WRITING" === (null == t ? void 0 : t.type))
                    return {
                        custom_prompt_option: t.customPromptOption,
                        custom_prompt_type: t.customPromptType,
                        generic_prompt_type: t.genericPromptType,
                        has_freeform_writing_examples: t.hasExamples,
                        prompt_type: I(t.customPrompt)
                    }
            }
            return []
        }
          , C = (e, t) => t.findIndex((t => "LINE" === t.type && R(t) === e + 1))
          , R = e => {
            if ("LINE" === e.type)
                return e.trackingProperties.line_index;
            throw Error(`Tried to get line index for ${e.type} element`)
        }
          , L = (e, t, a, s) => {
            const n = [e, ...null != s ? s : []]
              , r = [t, ...a];
            return n.includes(t) && n.every((e => r.includes(e)))
        }
          , P = e => {
            const t = [];
            let a = null;
            for (const s of e) {
                if ("CHALLENGE_PROMPT" === (null == a ? void 0 : a.type) && "LINE" === s.type && s.line.content.imageUrl) {
                    const e = {
                        imageUrl: s.line.content.imageUrl,
                        trackingProperties: s.trackingProperties,
                        type: "ILLUSTRATION"
                    };
                    t.splice(-1, 0, e);
                    const a = {
                        ...s
                    };
                    a.line.content.imageUrl = void 0,
                    t.push(a)
                } else
                    t.push(s);
                a = s
            }
            return t
        }
          , A = e => {
            if (0 === e.length)
                return !1;
            return e.split("").some((e => e.charCodeAt(0) >= 1536 && e.charCodeAt(0) <= 1791))
        }
          , D = (e, t, a) => {
            var s, n, r, o, l;
            if (!e || !t || !a)
                return !1;
            switch (null == e ? void 0 : e.type) {
            case "type-text":
            case "freeform-writing":
                return A(e.answer);
            case "multiple-choice":
                return A(null !== (n = null === (s = e.answers[0]) || void 0 === s ? void 0 : s.text) && void 0 !== n ? n : "");
            case "select-phrases":
                return A(null !== (r = e.answers[0]) && void 0 !== r ? r : "");
            case "point-to-phrase":
                return A(null !== (l = null === (o = e.parts[0]) || void 0 === o ? void 0 : o.text) && void 0 !== l ? l : "");
            case "match":
                return "rtl" === (0,
                i.Ux)(a);
            default:
                return "rtl" === (0,
                i.Ux)(t)
            }
        }
          , O = e => {
            const t = N(e);
            return t.filter((e => A(e))).length / t.length > .5
        }
          , N = e => e.map((e => e.text)).join(" ").replace(/[\p{P}\p{S}]/gu, "").split(" ").filter((e => e.trim().length > 0))
    }
    ,
    77042: (e, t, a) => {
        "use strict";
        a.d(t, {
            EU: () => i,
            FG: () => r,
            xL: () => n
        });
        var s = a(97236);
        const n = (e, t) => {
            const a = Date.now()
              , n = e
              , r = a;
            for (const e of n) {
                if (a !== r)
                    return;
                const n = {};
                for (const i of e.audioInfos) {
                    const o = () => {
                        n[i.url] = !0,
                        e.audioInfos.every(( ({url: e}) => n[e])) && a === r && t(e.elementIndex)
                    }
                    ;
                    (async () => {
                        try {
                            await (0,
                            s.IZ)(i.url)
                        } catch (e) {
                            throw (0,
                            s.N$)(i),
                            e
                        }
                        o()
                    }
                    )()
                }
                if (a !== r)
                    return
            }
        }
          , r = e => {
            e.forEach((e => {
                if ("LINE" === e.type) {
                    const t = e.line.content;
                    (0,
                    s.Ms)(t.audio.url),
                    t.audioPrefix && (0,
                    s.Ms)(t.audioPrefix.url),
                    t.audioSuffix && (0,
                    s.Ms)(t.audioSuffix.url)
                }
            }
            ))
        }
          , i = e => t => ({
            audioSyncModel: e.audioSyncModel,
            duration: e.duration,
            fadeDown: e.fadeDown,
            instructionId: t.instructionId + 1,
            playState: e.playState,
            seekTo: e.seekTo,
            speed: e.speed
        })
    }
    ,
    18513: (e, t, a) => {
        "use strict";
        a.d(t, {
            Ag: () => w,
            Bv: () => C,
            FE: () => f,
            Om: () => b,
            PH: () => v,
            Q5: () => S,
            WF: () => T,
            a3: () => y,
            pg: () => I,
            tE: () => k,
            v5: () => d,
            vX: () => E
        });
        var s = a(80254)
          , n = a(83719)
          , r = a(68903)
          , i = a(95940)
          , o = a(795)
          , l = a(58576)
          , c = a(8718);
        a(79465);
        const d = e => {
            var t, a;
            return (0,
            o.TS)(e, {
                storySession: (0,
                o.TS)(e.storySession, {
                    timeline: [...null !== (a = null === (t = e.storySession) || void 0 === t ? void 0 : t.timeline) && void 0 !== a ? a : [], {
                        time: Date.now() / 1e3,
                        type: "challenge-start"
                    }]
                })
            })
        }
          , u = e => e.replace(/\([^()]*\)\s*/g, "").trim()
          , g = e => u(e).toLowerCase()
          , p = e => /^\d+$/.test(e)
          , m = e => e ? 13 : 19
          , h = (e, t, a) => (t = s.XP(t).reduce(( (e, t) => (e[g(t)] = !0,
        e)), {}),
        e.map((e => ({
            ...e,
            translation: u(e.translation)
        }))).filter((e => {
            const s = m(a);
            if (e.phrase.length > s || e.translation.length > s)
                return !1;
            const n = g(e.phrase)
              , r = g(e.translation);
            return !(p(n) || p(r) || t[n] || t[r] || (t[n] = !0,
            t[r] = !0,
            0))
        }
        )))
          , _ = (e, t) => {
            if ("POINT_TO_PHRASE" !== e.type)
                return -1;
            let a = -1;
            return s.cx(e.transcriptParts, (e => (e.selectable && a++,
            a === t)))
        }
          , v = (e, t) => {
            var a, s;
            const n = null === (a = e.storySession) || void 0 === a ? void 0 : a.hintsUsed;
            if ("POINT_TO_PHRASE" !== (null == t ? void 0 : t.type) || !n || 0 === n.length)
                return !1;
            const r = null === (s = t.transcriptParts[_(t, t.correctAnswerIndex)]) || void 0 === s ? void 0 : s.text;
            return !r || n.some((e => e.phrase === r))
        }
          , f = (e, t, a, n, r, i) => {
            const o = {
                completed: !1,
                elementIndex: t,
                mistakeCount: 0,
                trackingProperties: e.trackingProperties
            };
            return ( () => {
                var t, l;
                switch (e.type) {
                case "ARRANGE":
                    return {
                        ...o,
                        arrangedPhrases: 0,
                        phraseOrder: e.phraseOrder,
                        selectedIncorrectIndices: [],
                        shuffledPhrases: e.selectablePhrases,
                        type: "arrange"
                    };
                case "MATCH":
                    {
                        const l = 5;
                        let c = [];
                        const d = m(n)
                          , u = null === (t = e.matches) || void 0 === t ? void 0 : t.filter((e => e.phrase.length <= d && e.translation.length <= d));
                        if (u && u.length >= l)
                            c = s.TV([...u]).slice(0, l);
                        else {
                            c = s.TV(h([...a], {}, n)).slice(0, l);
                            const t = [...e.fallbackHints];
                            if (c.length < l) {
                                const e = {};
                                c.forEach((t => {
                                    e[t.phrase] = !0,
                                    e[t.translation] = !0
                                }
                                ));
                                const a = s.TV(h(t, e, n)).slice(0, l - c.length);
                                c = [...c, ...a]
                            }
                        }
                        const g = {}
                          , p = [];
                        return c.forEach((e => {
                            g[`from:${e.phrase}`] = e.translation,
                            g[`from:${e.translation}`] = e.phrase,
                            p.push({
                                language: i,
                                status: "initial",
                                text: e.phrase
                            }),
                            p.push({
                                language: r,
                                status: "initial",
                                text: e.translation
                            })
                        }
                        )),
                        {
                            ...o,
                            dictionary: g,
                            tokens: s.TV(p),
                            type: "match"
                        }
                    }
                case "MULTIPLE_CHOICE":
                    return {
                        ...o,
                        additionalCorrectAnswerIndices: e.additionalCorrectAnswerIndices,
                        answers: e.answers,
                        correctAnswerIndex: e.correctAnswerIndex,
                        question: e.question,
                        selectedIndices: [],
                        type: "multiple-choice"
                    };
                case "POINT_TO_PHRASE":
                    {
                        let t = 0;
                        const a = e.transcriptParts.map((e => (t += e.text.length,
                        {
                            ...e,
                            rangeTo: t
                        })))
                          , s = _(e, e.correctAnswerIndex)
                          , n = [];
                        return null === (l = e.additionalCorrectAnswerIndices) || void 0 === l || l.forEach((t => n.push(_(e, t)))),
                        {
                            ...o,
                            additionalCorrectAnswerIndices: n,
                            correctAnswerIndex: s,
                            parts: a,
                            question: e.question,
                            selectedIndices: [],
                            type: "point-to-phrase"
                        }
                    }
                case "SELECT_PHRASE":
                    return {
                        ...o,
                        answers: e.answers,
                        correctAnswerIndex: e.correctAnswerIndex,
                        selectedIndices: [],
                        type: "select-phrases"
                    };
                case "TYPE_TEXT":
                    return {
                        ...o,
                        answer: "",
                        grading: e.grading,
                        text: e.text,
                        type: "type-text"
                    };
                case "FREEFORM_WRITING":
                    return {
                        ...o,
                        answer: "",
                        characterMinimum: e.characterCount,
                        customPrompt: e.customPrompt,
                        customPromptType: e.customPromptType,
                        didScroll: !1,
                        genericPromptType: e.genericPromptType,
                        hasExamples: e.hasExamples,
                        numberOfCorrectionsDismissed: 0,
                        prompt: e.promptContent.prompt,
                        showPrompt: e.showPrompt,
                        skipped: !1,
                        starterPhrases: e.promptContent.starterPhrases,
                        type: "freeform-writing"
                    };
                case "LINE":
                    return {
                        ...o,
                        skipped: !1,
                        type: "speak"
                    };
                default:
                    return void console.error("no setup for challenge type:", e.type)
                }
            }
            )()
        }
          , S = e => {
            var t, a, s;
            if (null === (a = null === (t = e.storySession) || void 0 === t ? void 0 : t.challengeSession) || void 0 === a ? void 0 : a.completed)
                throw Error("Challenge already completed");
            if (!(null === (s = e.storySession) || void 0 === s ? void 0 : s.challengeSession))
                throw Error("No challenge session found when grading challenge");
            const n = e.storySession.challengeSession;
            if (null == n ? void 0 : n.completed)
                throw Error("Challenge already completed");
            const r = 0 !== n.mistakeCount || ("speak" === n.type || "freeform-writing" === n.type) && n.skipped ? 0 : 1;
            let i = e.storySession.speakCount;
            "speak" === n.type && i++;
            const o = "freeform-writing" === n.type ? {
                customPromptType: n.customPromptType,
                freeformChallengePrompt: n.prompt.text,
                freeformChallengePromptType: (0,
                c.e)(n.customPrompt),
                freeformChallengeSubmittedResponse: n.answer,
                freeformChallengeSumTimeTaken: (Date.now() - n.startTime) / 1e3,
                genericPromptType: n.genericPromptType,
                hasExamples: n.hasExamples
            } : {};
            return {
                ...e,
                storySession: {
                    ...e.storySession,
                    ...o,
                    challengeSession: {
                        ...n,
                        completed: !0
                    },
                    completedBonusChallenge: "freeform-writing" === n.type || e.storySession.completedBonusChallenge,
                    maxScore: e.storySession.maxScore + 1,
                    score: e.storySession.score + r,
                    speakCount: i
                }
            }
        }
          , y = e => {
            var t;
            if (e.completed)
                switch (e.type) {
                case "freeform-writing":
                    return {
                        correct: !0,
                        sticky: !1,
                        title: n.zD
                    };
                case "arrange":
                case "match":
                    return {
                        correct: !0,
                        sticky: !1,
                        title: (0,
                        i.H8)((0,
                        n.ub)())
                    };
                case "multiple-choice":
                case "point-to-phrase":
                case "select-phrases":
                    return 0 === e.mistakeCount ? {
                        correct: !0,
                        sticky: !1,
                        title: (0,
                        i.H8)((0,
                        n.ub)())
                    } : void 0;
                case "type-text":
                    {
                        const a = e.gradingResult;
                        if (a) {
                            let s, r = null !== (t = a.closestSolution) && void 0 !== t ? t : e.text, o = a.correct || !1;
                            const l = a.highlights;
                            if (a.blameType)
                                switch (a.blameType) {
                                case "accent":
                                    s = 18634;
                                    break;
                                case "missing_word":
                                    o = !1,
                                    s = 8435;
                                    break;
                                case "wrong_word":
                                    o = !1,
                                    s = 576;
                                    break;
                                case "missing_space":
                                    o = !0,
                                    s = 18757;
                                    break;
                                case "extra_space":
                                    o = !0,
                                    s = 4476;
                                    break;
                                case "typo":
                                    s = 4081;
                                    break;
                                default:
                                    return
                                }
                            else
                                a.correct ? (o = !0,
                                s = (0,
                                n.ub)(),
                                r = void 0) : (o = !1,
                                s = 23926);
                            return {
                                blame: r,
                                blameHighlight: l,
                                correct: o,
                                sticky: !0,
                                title: (0,
                                i.H8)(s)
                            }
                        }
                        return void (0,
                        l.vU)("Missing Stories type challenge grading information")
                    }
                case "speak":
                    if (e.skipped)
                        return {
                            blame: (0,
                            i.H8)(15747),
                            correct: void 0,
                            skipped: !0,
                            sticky: !1,
                            title: (0,
                            i.H8)(12946)
                        };
                    if (0 === e.mistakeCount)
                        return;
                    return {
                        correct: !1,
                        sticky: !1,
                        title: (0,
                        i.H8)(6840)
                    };
                default:
                    return void (0,
                    r.RJ)(e)
                }
        }
          , E = (e, t) => {
            var a, s;
            const n = null === (a = e.storySession) || void 0 === a ? void 0 : a.challengeSession;
            if ("type-text" !== (null == n ? void 0 : n.type))
                throw Error("Unexpected type");
            if (!(null === (s = n.grading) || void 0 === s ? void 0 : s.automaton))
                throw Error("No grading automaton found for type text challenge");
            return (0,
            o.TS)(e, {
                storySession: (0,
                o.TS)(e.storySession, {
                    challengeSession: (0,
                    o.TS)(n, {
                        editDistance: t.highlights && "accent" !== t.blameType ? t.highlights.length : 0,
                        gradingResult: t,
                        mistakeCount: t.correct ? 0 : 1
                    })
                })
            })
        }
          , b = e => {
            var t;
            const a = null === (t = e.storySession) || void 0 === t ? void 0 : t.challengeSession;
            if ("freeform-writing" !== (null == a ? void 0 : a.type))
                throw Error("Unexpected type");
            return e
        }
          , I = 300
          , w = 60
          , k = e => {
            switch (e) {
            case 50:
            case 60:
                return 10;
            case 70:
            case 80:
            case 90:
                return 15;
            default:
                return 20
            }
        }
          , T = e => e.trim().split(/\s+/).filter((e => "" !== e)).length
          , C = e => {
            const t = e.answer
              , a = T(t)
              , s = e.characterMinimum;
            return a >= k(s) && a <= w
        }
    }
    ,
    20662: (e, t, a) => {
        "use strict";
        a.d(t, {
            Bu: () => i,
            IN: () => l,
            YE: () => r,
            gu: () => o
        });
        var s = a(68903)
          , n = a(8718);
        const r = e => {
            switch (e) {
            case "READ":
                return "normal";
            case "LISTEN":
                return "listen";
            case "CONVERSATION":
                return "conversation";
            default:
                throw (0,
                s.RJ)(e),
                Error(`Unexpected line mode "${e}"`)
            }
        }
          , i = e => {
            switch (e) {
            case "READ":
                return 0;
            case "LISTEN":
                return 1;
            case "REVIEW":
            case "CONVERSATION":
                return 2;
            default:
                throw (0,
                s.RJ)(e),
                Error(`Unexpected story mode "${e}"`)
            }
        }
          , o = ({mode: e, listenModeCharacterIds: t, conversationModeSpeakCharacterIds: a, line: s, nextElement: r, lineIndex: i, conversationModeSpeakLineIds: o}) => "READ" === e || "CHARACTER" !== s.type || (0,
        n._L)(r) ? "READ" : o.includes(i) && a.includes(s.characterId) ? "SPEAK" : ( ({listenModeCharacterIds: e, line: t, nextElement: a}) => !("CHARACTER" !== t.type || !e.includes(t.characterId) || (0,
        n._L)(a)))({
            line: s,
            listenModeCharacterIds: t,
            nextElement: r
        }) ? "LISTEN" : "READ"
          , l = ({storyId: e, mode: t, practiceHubStoryType: a}) => {
            const s = a ? `&practiceHubStory=${a}` : "";
            return `/stories/${e}?mode=${t.toLowerCase()}${s}`
        }
    }
    ,
    36571: (e, t, a) => {
        "use strict";
        a.d(t, {
            Eo: () => d,
            b5: () => o,
            cG: () => l,
            fC: () => c
        });
        var s = a(64115);
        const n = ["FREEFORM_WRITING", "FREEFORM_WRITING_EXAMPLE_RESPONSE", "FREEFORM_WRITING_PROMPT"]
          , r = ["ARRANGE", "CHALLENGE_PROMPT", "DUO_POPUP", ...n, "HEADER", "HINT_ONBOARDING", "LINE", "MATCH", "MULTIPLE_CHOICE", "POINT_TO_PHRASE", "SECTION_HEADER", "SELECT_PHRASE", "SENDER_RECEIVER", "SUBHEADING", "TYPE_TEXT"]
          , i = ["ILLUSTRATION", "SENDER_RECEIVER"]
          , o = () => (0,
        s.gQ)("debugSkipStoriesFinalMatchChallenge") ? r.filter((e => "MATCH" !== e)) : r
          , l = e => void 0 !== e && r.includes(e.type)
          , c = e => void 0 !== e && i.includes(e.type)
          , d = e => void 0 !== e && n.includes(e.type) || "DUO_POPUP" === (null == e ? void 0 : e.type) && "BONUS_XP" === e.popupType
    }
    ,
    43094: (e, t, a) => {
        "use strict";
        a.d(t, {
            D5: () => u,
            DG: () => c,
            Nh: () => l,
            O$: () => g,
            SU: () => p,
            cw: () => i,
            lo: () => d,
            tl: () => o
        });
        var s = a(80254)
          , n = a(795)
          , r = a(8718);
        const i = (e, t) => !e && !t || !(!e || !t) && e.elementIndex === t.elementIndex && e.textIndex === t.textIndex
          , o = (e, t) => {
            const a = e => null != e ? e : -1;
            return !(!e || t && (e.elementIndex < t.elementIndex || !(e.elementIndex > t.elementIndex || a(e.textIndex) > a(t.textIndex))))
        }
          , l = (e, t) => o(t, e)
          , c = (e, t) => {
            let a = (0,
            n.TS)(e.storySession, {
                selectedPosition: t
            });
            return a && o(t, a.furthestPosition) && (a = (0,
            n.t8)(a, "furthestPosition", t)),
            (0,
            n.t8)(e, "storySession", a)
        }
          , d = (e, t, a) => {
            for (let s = t; s >= 0; s--) {
                if (["LINE", "FREEFORM_WRITING_EXAMPLE_RESPONSE"].includes(e[s].type))
                    return s;
                if ("FREEFORM_WRITING" === e[s].type && a)
                    return s
            }
            return 0
        }
          , u = (e, t) => t.filter(( (t, a) => "LINE" === t.type && a <= e)).length - 1
          , g = (e, t) => s.cx(e.slice(t), r.P3) + t
          , p = (e, t) => {
            var a;
            const s = e.keypoints.find((e => e.rangeEnd >= t));
            return null !== (a = null == s ? void 0 : s.audioStart) && void 0 !== a ? a : e.keypoints.slice(-1)[0].audioStart
        }
    }
    ,
    6947: (e, t, a) => {
        "use strict";
        a.d(t, {
            Yt: () => C,
            xv: () => I,
            _s: () => k,
            kD: () => $,
            $t: () => q,
            Q1: () => O,
            Jo: () => x,
            mj: () => M,
            wW: () => N,
            cA: () => D,
            lw: () => L,
            eU: () => U,
            wh: () => j,
            KJ: () => B,
            gm: () => F,
            NE: () => H,
            dN: () => G,
            Po: () => V,
            pS: () => P,
            dr: () => z,
            Iv: () => A
        });
        var s = a(80254);
        const n = a.p + "images/39dedd7d8fdeeca9e1533134495b5ce0.svg";
        var r = a(21778);
        const i = a.p + "images/streakCalendar/409e32ae79150d9809948154defb09f5.svg"
          , o = a.p + "images/streakCalendar/4e0a0177dbfbbcf30f6a633d825a1460.svg"
          , l = a.p + "images/streakCalendar/fdfafca4c421c6ab3c0c8b10a4ae4ff6.svg"
          , c = a.p + "images/streakCalendar/1a7bd9123609523cb07efd902a0ee2d5.svg"
          , d = a.p + "images/streakCalendar/1137fd970b51b6219b90fce9896e55c9.svg"
          , u = a.p + "images/streakCalendar/fbdc5a60b0f33c7d4beb3af40f2287d5.svg";
        var g = a(26219)
          , p = a(57127)
          , m = a(34049);
        const h = a.p + "images/streakCalendar/b708a2274da80a9dbe333a7a0d090aa6.svg";
        var _ = a(17135)
          , v = a(95940)
          , f = a(67116)
          , S = a(76578)
          , y = a(37111)
          , E = a(97106);
        const b = [99.7, 98.3, 97.7, 97.2, 96.8, 96.4, 96.2, 95.9, 95.7, 95.5, 95.3, 95.2, 95, 94.9, 94.8, 94.7, 94.6, 94.6, 94.5, 94.4, 94.3, 94.3, 94.2, 94.2, 94.1, 94, 94, 93.9, 93.8, 93.7, 93.6, 93.5, 93.4, 93.2, 93, 92.8, 92.6, 92.2, 91.8, 91.4, 90.9, 90.3, 89.7, 89, 88.3, 87.5, 86.6, 85.8, 84.9, 84, 83.1, 82.2, 81.3, 80.4, 79.6, 78.7, 77.9, 77.1, 76.3, 75.5, 74.8, 74, 73.2, 72.5, 71.8, 71.1, 70.4, 69.7, 69, 68.3, 67.7, 67, 66.4, 65.8, 65.1, 64.5, 63.8, 63.2, 62.5, 61.9, 61.3, 60.7, 60.1, 59.4, 58.8, 58.2, 57.6, 57, 56.4, 55.8, 55.2, 54.6, 54, 53.4, 52.8, 52.2, 51.6, 50.9, 50.3, 49.66, 49, 48.33, 47.66, 46.99, 46.3, 45.6, 44.9, 44.18, 43.45, 42.72, 41.98, 41.22, 40.44, 39.63, 38.8, 37.94, 37.04, 36.11, 35.14, 34.12, 33.08, 31.98, 30.87, 29.74, 28.58, 27.37, 26.14, 24.79, 23.38, 21.92, 20.43, 18.93, 17.4, 15.8, 13.98, 12.11, 10.26, 8.46, 6.78, 5.4, 4.15, 2.99, 1.92, .9, 0]
          , I = [10, 11, 12, 13]
          , w = [7, 14, 30, 50, 75, 100, 125, 150, 200, 250, 300, 365];
        var k;
        !function(e) {
            e[e.FROZEN = 0] = "FROZEN",
            e[e.UNEXTENDED = 1] = "UNEXTENDED",
            e[e.STREAK_SOCIETY = 2] = "STREAK_SOCIETY",
            e[e.MILESTONE = 3] = "MILESTONE",
            e[e.EXTENDED = 4] = "EXTENDED"
        }(k || (k = {}));
        const T = e => {
            const t = Math.max(1, Math.min(R.length, e)) - 1
              , a = R[t];
            return (0,
            v.H8)(a.stringId, a.variables)
        }
          , C = 5
          , R = [{
            stringId: 14029,
            variables: void 0
        }, {
            stringId: 22012,
            variables: {
                days: 3
            }
        }, {
            stringId: 8314,
            variables: {
                days: 5
            }
        }, {
            stringId: 22012,
            variables: {
                days: 5
            }
        }, {
            stringId: 8314,
            variables: {
                days: 7
            }
        }, {
            stringId: 22012,
            variables: {
                days: 7
            }
        }, {
            stringId: 13734,
            variables: void 0
        }]
          , L = e => {
            const t = {
                days: e,
                streak: e,
                streak_plus_one: e + 1
            }
              , a = {
                title: (0,
                v.H8)(17672, t),
                titleID: "session_end_miltstone_title_lower_no_dash"
            }
              , n = s.UP([{
                ...a,
                body: (0,
                v.H8)(26206),
                bodyID: "session_end_explain_streak_body_1"
            }, {
                ...a,
                body: (0,
                v.H8)(26205),
                bodyID: "session_end_explain_streak_body_2"
            }, {
                ...a,
                body: (0,
                v.H8)(26204),
                bodyID: "session_end_explain_streak_body_3"
            }])
              , r = [{
                ...a,
                body: T(e),
                bodyID: "session_end_one_day_from_streak"
            }, {
                ...a,
                body: T(e),
                bodyID: "session_end_two_days_from_streak"
            }][e % 2]
              , i = s.UP([{
                ...a,
                body: (0,
                v.H8)(20415, t),
                bodyID: "session_end_streak_body_6"
            }, {
                ...a,
                body: (0,
                v.H8)(21798, t),
                bodyID: "session_end_streak_body_7"
            }, {
                ...a,
                body: (0,
                v.H8)(296, t),
                bodyID: "session_end_streak_body_8"
            }, {
                body: (0,
                v.H8)(10404, t),
                bodyID: "session_end_streak_body_9",
                title: (0,
                v.H8)(20343, t),
                titleID: "session_end_streak_title_2"
            }, {
                body: (0,
                v.H8)(19216, t),
                bodyID: "session_end_streak_body_10",
                title: (0,
                v.H8)(23641, t),
                titleID: "session_end_streak_title_4"
            }])
              , o = {
                ...a,
                body: (0,
                v.H8)(1916, t),
                bodyID: "session_end_streak_body_milestone"
            };
            return P(e) ? o : e <= 3 ? n : e < 7 ? r : i
        }
          , P = e => e <= 365 ? w.includes(e) : e % 100 == 0
          , A = (e, t, a) => e > 0 && !t && (0,
        _.L3)(a) < 4
          , D = (e, t, a, {overrideWeekStartDayForTesting: s}={}) => {
            const n = null != s ? s : (0,
            v.k8)()
              , r = (e.getDay() - n + 7) % 7
              , i = t.slice(0, r).every(E.Qb);
            return i && a ? r + 1 : i ? r : 0
        }
          , O = (e, t, a) => {
            const s = (0,
            _.ky)(e);
            for (; (0,
            E.Qb)((0,
            E.$W)(s, t)); )
                (0,
                _.v4)(s, -1);
            return (0,
            _.v4)(s, 1),
            (0,
            _.S2)(s, e, a)
        }
          , N = (e, t, a) => 1 === t ? 6 === e ? (0,
        v._i)(45866) : 3 === e ? (0,
        v._i)(48766) : 1 === e ? (0,
        v._i)(44052) : 0 === e ? (0,
        v._i)(52736) : a : 6 === e ? (0,
        v._i)(45869, {
            num: t
        }) : 3 === e ? (0,
        v._i)(52686) : 1 === e ? (0,
        v._i)(44052) : 0 === e ? (0,
        v._i)(45867) : a
          , x = e => 1 === e ? "streak_session_end_perfect_week_explanation_d3" : 3 === e ? "streak_session_end_perfect_week_explanation_d4" : 6 === e ? "streak_session_end_perfect_week_explanation_d7" : "streak_session_end_perfect_week_explanation_d1"
          , M = e => 1 === e || 4 === e ? "i_can_do_it" : "continue"
          , F = (e, t, {overrideWeekStartDayForTesting: a}={}) => {
            const s = null != a ? a : (0,
            v.k8)()
              , n = (e.getDay() - s + 7) % 7
              , r = t.slice(0, n).findIndex((e => !(0,
            E.Qb)(e)));
            return -1 !== r && t.slice(r, n).every((e => !(0,
            E.Qb)(e)))
        }
          , U = e => {
            const t = {
                num: e + 1
            }
              , [a,n] = s.UP([[(0,
            v.H8)(49798, t), "se_streak_nudge_title_1"], [(0,
            v.H8)(49799, t), "se_streak_nudge_title_2"], [(0,
            v.H8)(49800, t), "se_streak_nudge_title_3"]])
              , [r,i] = s.UP([[(0,
            v.H8)(43653, t), "se_streak_nudge_body_1"], [(0,
            v.H8)(43654, t), "se_streak_nudge_body_2"], [(0,
            v.H8)(43655, t), "se_streak_nudge_body_3"]]);
            return {
                body: r,
                bodyID: i,
                title: a,
                titleID: n
            }
        }
          , H = (e, t, a, s, n) => !e && t >= 1 && t <= 3 && ((null != a ? a : 0) < 3 || s !== n)
          , G = (e, t, a, s) => {
            const n = (0,
            y.vz)(e)
              , r = (0,
            y.vz)(null != s ? s : 0);
            return void 0 !== n && (0,
            y.Xu)(null != a ? a : "", t, r, n)
        }
          , V = e => e >= y.ev
          , z = e => !!e && (e.frozen || e.repaired) && !(null == e ? void 0 : e.streakExtended)
          , B = (e, t, a, s, n) => {
            if (void 0 !== n)
                return n;
            if (!a) {
                const t = (0,
                _.$$)(e.getFullYear(), e.getMonth(), e.getDate() - 1);
                return z((0,
                E.$W)(t, s)) ? k.FROZEN : k.UNEXTENDED
            }
            return t === y.ev ? k.STREAK_SOCIETY : P(t) ? k.MILESTONE : k.EXTENDED
        }
          , j = ({currentTime: e, excludeId: t, isHover: a, longestStreakData: s, minutesAfterMidnight: E, numStreakFreezeEquipped: I, panelState: T, showStreakCallout: C, streakExtendedTimes: R, streakLength: L, streakRepairOffer: A, userTimezoneOffset: D, xpSummariesTwoWeeks: O}) => {
            var N, x, M;
            const F = (null !== (N = null == A ? void 0 : A.expirationTime) && void 0 !== N ? N : 0) - e;
            if (A && F > 0) {
                const e = a ? (0,
                v._i)(52691, {
                    num: A.length
                }) : Math.ceil(F / _.Mb) > 1 ? (0,
                v._i)(45118, {
                    num: A.length
                }) : (0,
                v._i)(45119, {
                    num: A.length
                });
                return {
                    ctaType: "streakEarnback",
                    icon: n,
                    message: e,
                    trackingId: "streak_earnback"
                }
            }
            if (C) {
                const e = _.rE - E;
                return Math.max(e, 0) <= 60 ? {
                    ctaType: "extendStreak",
                    icon: g,
                    message: (0,
                    v._i)(28048, {
                        num: e
                    }),
                    trackingId: 1
                } : {
                    ctaType: "extendStreak",
                    icon: g,
                    message: (0,
                    v._i)(28049, {
                        num: Math.floor(e / 60)
                    }),
                    trackingId: 1
                }
            }
            if (T === k.STREAK_SOCIETY)
                return {
                    ctaType: "seeBenefits",
                    icon: h,
                    message: (0,
                    v._i)(34819),
                    trackingId: 2
                };
            if (y.jL.includes(L))
                return {
                    icon: h,
                    message: (0,
                    v._i)(43358),
                    trackingId: 3
                };
            const U = null !== (x = null == s ? void 0 : s.length) && void 0 !== x ? x : 0;
            if (L > U || (null == s ? void 0 : s.achieveDate) && (0,
            _.zk)((0,
            _.$I)(s.achieveDate)))
                return {
                    icon: o,
                    message: (0,
                    v._i)(43360),
                    trackingId: 4
                };
            if (T === k.UNEXTENDED)
                return L > 0 ? {
                    ctaType: "extendStreak",
                    icon: u,
                    message: (0,
                    v._i)(43361),
                    trackingId: 5
                } : {
                    ctaType: "extendStreak",
                    icon: u,
                    message: (0,
                    v._i)(45579),
                    trackingId: 5
                };
            if (T === k.FROZEN)
                return {
                    ctaType: "extendStreak",
                    icon: p,
                    message: (0,
                    v._i)(43362),
                    trackingId: 5
                };
            if (I < 2)
                return {
                    ctaType: "getStreakFreeze",
                    icon: m,
                    message: (0,
                    v._i)(49512, {
                        num: I
                    }),
                    trackingId: "streak_freeze_available"
                };
            if (T === k.MILESTONE)
                return {
                    icon: d,
                    message: (0,
                    v._i)(43363),
                    trackingId: 6
                };
            const H = U + 1 - L;
            if ([3, 5, 10].includes(H))
                return {
                    icon: o,
                    message: (0,
                    v._i)(43364, {
                        num: H
                    }),
                    trackingId: 8
                };
            const G = (0,
            _.Ux)();
            G.setDate(G.getDate() + (e => {
                var t;
                return (null !== (t = w.find((t => t > e))) && void 0 !== t ? t : 100 * (Math.floor(e / 100) + 1)) - e
            }
            )(L));
            const V = G.toLocaleString((0,
            f.M$)(window.duo.uiLanguage), {
                day: "numeric",
                month: "long"
            });
            if (P(L - 1))
                return {
                    icon: d,
                    message: (0,
                    v._i)(43365, {
                        date: V
                    }),
                    trackingId: 9
                };
            const z = Z(R)
              , B = R.filter((e => (0,
            _.zk)((0,
            _.QB)(e.utcIsoDateString))))
              , j = Z(B)[0]
              , $ = z.filter((e => e < 12)).length;
            if (void 0 !== j && $ > 1 && j < 12 && 10 !== t)
                return {
                    icon: c,
                    message: (0,
                    v._i)(43366, {
                        num: $
                    }),
                    trackingId: 10
                };
            const q = (0,
            S.J6)(O.map((e => {
                var t;
                return null !== (t = e.gainedXp) && void 0 !== t ? t : 0
            }
            )))
              , Q = null === (M = O.find((e => {
                const t = e.date - (0,
                _.Rw)(D) * _.Xx;
                return (0,
                _.bC)((0,
                _.zM)(t), -1)
            }
            ))) || void 0 === M ? void 0 : M.gainedXp;
            if (q > 0 && Q && Q > q && 11 !== t)
                return {
                    icon: r,
                    message: (0,
                    v._i)(43367),
                    trackingId: 11
                };
            const K = Z(R.filter((e => !(0,
            _.zk)((0,
            _.QB)(e.utcIsoDateString)))))
              , Y = Math.round((0,
            S.J6)(K));
            if (void 0 !== j && z.length > 0 && j < Y && 12 !== t)
                return {
                    icon: i,
                    message: (0,
                    v._i)(43368, {
                        num: Y - j
                    }),
                    trackingId: 12
                };
            const J = z.filter((e => e === j)).length;
            if (J > 1 && 13 !== t)
                return {
                    icon: i,
                    message: (0,
                    v._i)(43369, {
                        num: J
                    }),
                    trackingId: 13
                };
            const X = W(B)[0];
            if (void 0 !== X) {
                const e = X / 10
                  , t = b[Math.floor(e)]
                  , a = b[Math.ceil(e)]
                  , s = Math.round(100 * (0,
                S.t7)(t, a, X % 10 / 10)) / 100;
                return {
                    icon: l,
                    message: (0,
                    v._i)(43370, {
                        percentage: s.toLocaleString((0,
                        f.M$)(window.duo.uiLanguage))
                    }),
                    trackingId: 14
                }
            }
            return {
                icon: d,
                message: (0,
                v._i)(43365, {
                    date: V
                }),
                trackingId: 9
            }
        }
          , $ = (e, t, a) => {
            const s = (0,
            _.QB)(e.utcIsoDateString);
            return s.setUTCMinutes(s.getUTCMinutes() + e.timezoneOffsetMinutes),
            a.filter((e => {
                const a = (0,
                _.QB)(e.utcIsoDateString);
                return a.setUTCMinutes(a.getUTCMinutes() + e.timezoneOffsetMinutes),
                s.getUTCDate() - a.getUTCDate() <= t
            }
            ))
        }
          , Z = e => e.map((e => {
            const t = (0,
            _.QB)(e.utcIsoDateString);
            return t.setUTCMinutes(t.getUTCMinutes() - e.timezoneOffsetMinutes),
            t.getUTCHours()
        }
        ))
          , W = e => e.map((e => {
            const t = (0,
            _.QB)(e.utcIsoDateString);
            return t.setUTCMinutes(t.getUTCMinutes() - e.timezoneOffsetMinutes),
            60 * t.getUTCHours() + t.getUTCMinutes()
        }
        ))
          , q = e => {
            const t = y.jL.find((t => t > e))
              , a = 100 * (Math.floor(e / 100) + 1);
            return t ? Math.min(t, a) : a
        }
    }
    ,
    39837: (e, t, a) => {
        "use strict";
        a.d(t, {
            Av: () => n,
            E6: () => d,
            FD: () => m,
            Jb: () => g,
            PZ: () => i,
            SZ: () => u,
            TT: () => o,
            _m: () => l,
            tL: () => p,
            xY: () => r,
            zg: () => c
        });
        var s = a(23275);
        const n = 10
          , r = 3
          , i = "streak_repair_gems"
          , o = e => e <= 10 ? 3 : e <= 30 ? 4 : e <= 100 ? 5 : 6
          , l = (e, t) => {
            const a = e => ["skill", "practice"].includes(e.type) && "grammar" !== e.subtype
              , n = (0,
            s.m8)(t, (e => "passed" === e.state && a(e)), void 0, {
                findLast: !0
            });
            if (void 0 === n)
                return t[0].levels[0].finishedSessions > 0 ? "/practice" : (0,
                s.tX)({
                    isEarnbackSession: !0,
                    level: t[0].levels[0],
                    levelIndex: 0,
                    unitIndex: 0
                });
            if (0 === e)
                return (0,
                s.tX)({
                    ...n,
                    isEarnbackSession: !0
                });
            let r = 0
              , i = n.levelIndex
              , o = n.unitIndex;
            for (; r < e; ) {
                if (i <= 0) {
                    if (o--,
                    o < 0)
                        return "/practice";
                    i = t[o].levels.length - 1
                } else
                    i--;
                const e = t[o].levels[i];
                "passed" === e.state && a(e) && r++
            }
            const l = (0,
            s.m8)(t, (e => "passed" === e.state && a(e)), {
                levelIndex: i,
                unitIndex: o
            }, {
                findLast: !0
            });
            return void 0 === l ? "/practice" : (0,
            s.tX)({
                ...l,
                isEarnbackSession: !0
            })
        }
          , c = e => e.shop.in_app_purchase.some((e => "streak_repair_instant" === e.id))
          , d = e => void 0 !== e && e.sessionsCompleted >= e.totalSessions
          , u = e => e.sessionsCompleted < e.totalSessions
          , g = (e, t=!1) => {
            var a, s;
            return void 0 !== e.streakRepairOffer && (null !== (s = null === (a = e.streakData.currentStreak) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) === (t ? 0 : 1)
        }
          , p = e => "streakExtended" === (null == e ? void 0 : e.type) && e.showEarnbackOffer
          , m = e => "streakExtended" === (null == e ? void 0 : e.type) && e.showEarnbackOffer
    }
    ,
    55419: (e, t, a) => {
        "use strict";
        a.d(t, {
            _E: () => p,
            vB: () => m,
            vk: () => u
        });
        var s = a(40893)
          , n = a(59510)
          , r = a(18867)
          , i = a(96195)
          , o = a(63956)
          , l = a(19172)
          , c = a(74901);
        const d = e => e.hasActiveGoal ? {
            activeStreakGoal: e.streakGoal
        } : {}
          , u = (0,
        i.d)("streakGoalData", (0,
        c.u)("streakGoal").withReducer(( (e, t) => "override" === t.type ? t.value : "network-success" === t.result.type ? t.result.value : e)).build(), (e => {
            if (e.untracked(n.v))
                return [];
            const t = e.untracked(s.DW);
            return [{
                queryFn: () => async () => {
                    const e = await r.Fo.getUserStreakGoal(t);
                    return d(e)
                }
                ,
                queryKey: [t]
            }]
        }
        ))
          , g = (0,
        o.j)()(( ({tier: e, userId: t}) => ({
            execute: async ({update: a}) => {
                const s = await r.Fo.putUserStreakGoal(t, e);
                a({
                    type: "override",
                    value: d(s)
                })
            }
            ,
            mergeMutation: e => e,
            resolveQueryConflict: () => "superseded"
        })))
          , p = (0,
        l.f)("setStreakGoal").write(( (e, t, a) => {
            const n = e(s.DW);
            t(u, new g({
                tier: a,
                userId: n
            }))
        }
        )).build()
          , m = (0,
        i.d)("streakGoalOptions", (0,
        c.u)("streakGoalNextOptions").withReducer(( (e, t) => "override" === t.type ? t.value : "network-success" === t.result.type ? t.result.value : e)).build(), (e => {
            if (e.untracked(n.v))
                return [];
            const t = e.untracked(s.DW);
            return [{
                queryFn: () => () => r.Fo.getUserStreakGoalOptions(t),
                queryKey: [t]
            }]
        }
        ))
    }
    ,
    37111: (e, t, a) => {
        "use strict";
        a.d(t, {
            E6: () => S,
            ME: () => c,
            P5: () => b,
            TK: () => l,
            Xm: () => I,
            Xu: () => h,
            ev: () => d,
            fI: () => i,
            jL: () => u,
            kA: () => E,
            mx: () => o,
            u: () => m,
            vz: () => p,
            wD: () => y
        });
        var s = a(17135)
          , n = a(68903)
          , r = a(95940);
        const i = 30
          , o = 100
          , l = 3
          , c = 365
          , d = 7
          , u = [i, o, c]
          , g = ["HalfwayFromXPBoost", "HalfwayFromFreezes", "HalfwayFromVIP"]
          , p = e => e >= 16 && e <= 18 ? "HalfwayFromXPBoost" : e >= 20 && e <= 29 ? "TenFromXPBoost" : e >= 51 && e <= 75 ? "HalfwayFromFreezes" : e >= 90 && e <= 99 ? "TenFromFreezes" : e >= 183 && e <= 250 ? "HalfwayFromVIP" : e >= 355 && e <= 364 ? "TenFromVIP" : void 0
          , m = e => void 0 !== e && g.includes(e)
          , h = (e, t, a, n) => (0,
        s.QB)(e) < (0,
        s.QB)(t) || n !== a
          , _ = [15, 7, 3]
          , v = [49, 21, 10, 5]
          , f = [182, 30, 21, 14, 7, 3]
          , S = e => e >= c
          , y = e => {
            if (null != e && 0 !== e)
                return e >= c ? (0,
                r._i)(38404, {
                    num: Math.floor(e / c)
                }) : void 0
        }
          , E = e => {
            const t = c - e;
            if ((0,
            n.p)(f)(t))
                switch (t) {
                case 182:
                    return (0,
                    r._i)(35596);
                case 30:
                    return (0,
                    r._i)(35597, {
                        num: 1
                    });
                case 21:
                case 14:
                case 7:
                    return (0,
                    r._i)(35598, {
                        num: Math.floor(t / 7)
                    });
                case 3:
                    return (0,
                    r._i)(35599, {
                        num: t
                    });
                default:
                    return void (0,
                    n.RJ)(t)
                }
            const a = o - e;
            if ((0,
            n.p)(v)(a))
                switch (a) {
                case 49:
                    return (0,
                    r._i)(35594);
                case 21:
                    return (0,
                    r._i)(39578, {
                        num: 3
                    });
                case 10:
                case 5:
                    return (0,
                    r._i)(35595, {
                        num: a
                    });
                default:
                    return void (0,
                    n.RJ)(a)
                }
            const s = i - e;
            if ((0,
            n.p)(_)(s))
                switch (s) {
                case 15:
                    return (0,
                    r._i)(35591);
                case 7:
                    return (0,
                    r._i)(35592, {
                        num: 1
                    });
                case 3:
                    return (0,
                    r._i)(35593, {
                        num: s
                    });
                default:
                    return void (0,
                    n.RJ)(s)
                }
        }
          , b = (e, t, a) => void 0 !== a && a >= c || void 0 !== t && e.some((e => {
            var a;
            return (null !== (a = t[e.userId]) && void 0 !== a ? a : 0) >= c
        }
        ))
          , I = e => u.find((t => t > e))
    }
    ,
    43006: (e, t, a) => {
        "use strict";
        a.d(t, {
            Dg: () => i,
            HZ: () => l,
            RF: () => c,
            ls: () => r,
            nx: () => n,
            qv: () => s
        });
        const s = "___"
          , n = "-\\'!*()_|\\\\~=`{}\\[\\]:\";?,.‐¡¿·«»“”„–▶’。，、､‚｡；：「」『』（）？！─…《》〈〉．～،؟।—‧"
          , r = `${n}@#$%^&+<>\\/`
          , i = (e, t=" ") => e.replace(new RegExp(`[${r}]`,"g"), t).replace(/\s+/g, t).trim().toLowerCase()
          , o = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
          , l = e => o.test(e.toLowerCase())
          , c = e => [...e].length
    }
    ,
    54448: (e, t, a) => {
        "use strict";
        a.d(t, {
            G: () => r,
            g: () => i
        });
        var s = a(11811)
          , n = a(64591);
        const r = (e, t, a, n) => {
            const r = t.map(i)
              , o = e.type !== s.FF.SpecifiedMatchPractice && n;
            return {
                ...e,
                challenges: r,
                dailyRefreshInfo: null == a ? void 0 : a.dailyRefreshInfo,
                pathLevelSpecifics: null == a ? void 0 : a.pathLevelMetadata,
                ...o ? {
                    hasBoost: n,
                    xpPromised: void 0
                } : {},
                ...e.type === s.FF.GlobalPractice ? {
                    shouldAward5XpFromGlobalPractice: !0
                } : {}
            }
        }
          , i = e => {
            var t;
            const a = (0,
            n.Xh)(e);
            null === (t = a.gradingResult) || void 0 === t || delete t.blameSubtext,
            delete a.startTime,
            !1 === a.skipped && delete a.skipped;
            const s = a.gradingResult ? {
                ...a,
                ...a.gradingResult
            } : {
                ...a,
                correct: void 0
            };
            return delete s.gradingResult,
            "grader"in s && delete s.grader,
            "smartTipsGraderV2"in s && delete s.smartTipsGraderV2,
            s
        }
    }
    ,
    7113: (e, t, a) => {
        "use strict";
        a.d(t, {
            J: () => r,
            w: () => n
        });
        var s = a(43006);
        const n = e => {
            const t = e.match(/"[^"]*"|[^\s"]+/g)
              , a = [];
            return null == t || t.forEach(( (e, s) => {
                let n = e;
                i(n[0]) && (a.push(n[0]),
                n = n.slice(1)),
                i(n[n.length - 1]) ? (n.length > 1 && a.push(n.slice(0, -1)),
                a.push(n[n.length - 1])) : n.length > 0 && a.push(n),
                s !== t.length - 1 && a.push(" ")
            }
            )),
            a
        }
          , r = e => {
            const t = e.match(/"[^"]*"|[^\s"]+/g)
              , a = [];
            let s = 0;
            return null == t || t.forEach(( (e, n) => {
                let r = e;
                i(r[0]) && (a.push({
                    endIndexWithinSentence: s + 1,
                    startIndexWithinSentence: s,
                    word: r[0]
                }),
                r = r.slice(1),
                s += 1),
                i(r[r.length - 1]) ? (r.length > 1 && (a.push({
                    endIndexWithinSentence: s + r.length - 1,
                    startIndexWithinSentence: s,
                    word: r.slice(0, -1)
                }),
                s += r.length - 1),
                a.push({
                    endIndexWithinSentence: s + 1,
                    startIndexWithinSentence: s,
                    word: r[r.length - 1]
                }),
                s += 1) : r.length > 0 && (a.push({
                    endIndexWithinSentence: s + r.length,
                    startIndexWithinSentence: s,
                    word: r
                }),
                s += r.length),
                n !== t.length - 1 && (a.push({
                    endIndexWithinSentence: s + 1,
                    startIndexWithinSentence: s,
                    word: " "
                }),
                s += 1)
            }
            )),
            a
        }
          , i = e => s.ls.includes(e)
    }
    ,
    79465: (e, t, a) => {
        "use strict";
        a.r(t),
        a.d(t, {
            CAMPAIGN_PARAMETERS: () => j,
            FULL_STORY_EXCLUDE: () => O,
            accumulateTime: () => oe,
            alias: () => z,
            canSetCampaignInfo: () => $,
            getCampaignInfo: () => q,
            getDistinctId: () => H,
            getEngagementType: () => ie,
            removeCampaignInfo: () => Q,
            resetTime: () => le,
            setCampaignInfo: () => Z,
            setDistinctId: () => U,
            startTracking: () => M,
            totalTimes: () => re,
            track: () => Y,
            trackAndLogApiError: () => X,
            trackHomeShow: () => ae,
            trackLeaderboardApiEvent: () => de,
            trackRawEvent: () => J,
            trackRedirection: () => te,
            trackUserActive2022: () => se
        });
        var s = a(80254)
          , n = a(70488)
          , r = a(42659)
          , i = a(54174)
          , o = a(70220)
          , l = a(18867)
          , c = a(54412)
          , d = a(17135)
          , u = a(57593)
          , g = a(35506)
          , p = a(21025)
          , m = a(94358)
          , h = a(67899)
          , _ = a(68903)
          , v = a(50548)
          , f = a(59604)
          , S = a(43633)
          , y = a(87443)
          , E = a(58576)
          , b = a(67280);
        const I = "app-info://platform/microsoft-store";
        var w = a(56366)
          , k = a(88868)
          , T = a(18804)
          , C = a(6947)
          , R = a(74597)
          , L = a(16086)
          , P = a(20028)
          , A = a(97106);
        const D = ["DISABLE_PERSONALIZED_ADS", "DISABLE_THIRD_PARTY_TRACKING"]
          , O = "fs-exclude";
        let N;
        const x = new Promise((e => {
            N = e
        }
        )).then((e => (console.log("Received fresh user model; tracking begins now"),
        e)))
          , M = () => {
            const e = (0,
            T.globalGetState)();
            if (!e)
                throw Error("Store should be initialized set before calling startTracking.");
            const t = (0,
            r.Mb)(e)
              , a = (0,
            i.d)(e)
              , s = (0,
            r.np)(e)
              , n = (0,
            r.Lm)(e);
            if (!a) {
                const e = "1" === navigator.doNotTrack;
                l.Vi.registerTrackingStatus(!e, H())
            }
            ( () => {
                const e = (0,
                T.globalGetState)();
                return (e && (0,
                r.np)(e).privacySettings ? (0,
                r.np)(e).privacySettings : D).some((e => D.includes(e)))
            }
            )() || (0,
            h.dl)(),
            n && !(0,
            P.jq)(s) && (!0 === (0,
            f.O)("is_fullstory_recording_enabled", void 0, t) || (0,
            P.ms)(s) || (0,
            P.Sk)(s)) ? m.IM(s.id) : m.sT(),
            N()
        }
          , F = s.IH(( () => {
            n.init(),
            n.setDebug(!1)
        }
        ))
          , U = e => {
            F(),
            console.log(`Set distinct user id ${e}`),
            n.identify(`${e}`),
            (0,
            c.d8)(c.Vj.LoggedOutUUID, `${e}`),
            (0,
            L.Pc)() && (0,
            c.d8)(c.Vj.LoggedIn, "true")
        }
          , H = () => (F(),
        `${n.getDistinctId()}`)
          , G = async e => {
            if (e)
                try {
                    (0,
                    L.Jb)(),
                    await x
                } catch {}
            return !window.location.search.includes("dnt=1") && (F(),
            !0)
        }
          , V = (e, t) => (0,
        E.bP)("track", e, [{
            data: t,
            name: "properties"
        }], {
            excludeFromTelemetry: !0
        })
          , z = async e => {
            if (await G(!1)) {
                const t = n.getDistinctId();
                V("$create_alias", {
                    alias: e,
                    distinct_id: t
                }),
                n.alias(`${e}`)
            }
        }
          , B = {
            utm_campaign: "campaign_name",
            utm_content: "campaign_content",
            utm_medium: "campaign_medium",
            utm_source: "campaign_source",
            utm_term: "campaign_keywords"
        }
          , j = s.XP(B)
          , $ = e => s.jV(s.XP(e), j).length > 0
          , Z = e => {
            const t = s.ei(e, ...j);
            (0,
            c.d8)(c.Vj.UTMParameters, JSON.stringify(t))
        }
          , W = (0,
        _.p)(j)
          , q = e => {
            const t = {}
              , a = (0,
            c.ej)(c.Vj.UTMParameters);
            if (void 0 !== a) {
                const n = JSON.parse(a);
                for (const [a,r] of Object.entries(n))
                    W(a) && (t[(s = a,
                    `${e}${B[s]}`)] = r)
            }
            var s;
            const n = {
                referrer: /"\$initial_referrer":[ ]*"(.+?)"/,
                referring_domain: /"\$initial_referring_domain":[ ]*"(.+?)"/
            };
            return document.cookie.split(";").forEach((a => {
                a = decodeURIComponent(a),
                / ?mp_.+?_mixpanel=/.test(a) && Object.entries(n).forEach(( ([s,n]) => {
                    const r = n.exec(a);
                    r && (t[e + s] = r[1])
                }
                ))
            }
            )),
            t
        }
          , Q = () => {
            (0,
            c.nJ)(c.Vj.UTMParameters)
        }
          , K = (e, t, a, s) => {
            var n, l;
            const g = (0,
            d.Zo)()
              , _ = "Notification"in window ? window.Notification.permission : "unsupported"
              , v = {
                $app_version: window.duo.version,
                $current_url: window.location.href,
                Client: "web",
                app_version_hash: window.duo.versionHash,
                client_utc_datetime: g,
                cn_extension: !1,
                dark_mode_setting: void 0 === t ? void 0 : "system" === t ? "default" : t,
                from_internet_org: !1,
                fullstory_url: m.nP(),
                is_from_microsoft_store: (0,
                c.ej)(c.Vj.InitialReferrer) === I || document.referrer === I,
                is_pwa: window.matchMedia("(display-mode: standalone)").matches,
                leaderboard_alias: null === (n = (0,
                S.h0)().get(y.RT).value) || void 0 === n ? void 0 : n.alias,
                logged_in: (0,
                L.Pc)(),
                mobile: !1,
                mobile_web_view: R.Z.mobile,
                notifications_enabled: "granted" === _,
                notifications_system_status: _,
                product: "learning_app",
                time: g,
                user_agent: navigator.userAgent,
                ...void 0 === e ? void 0 : {
                    current_hearts_segments: e.heartsState.hearts,
                    is_zombie_mode: (0,
                    i.d)(e),
                    plus_discount_type: null === (l = (0,
                    b.p4)(e.user.plusDiscounts, g)) || void 0 === l ? void 0 : l.discountType,
                    prefers_reduced_motion: !e.user.animationEnabled || o.H,
                    streak_extended: (0,
                    A.ab)(e.user.timezoneOffset, e.user.xpGains) > 0
                }
            };
            window.location.hash && (v.location_hash = window.location.hash.slice(1));
            const f = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
            "object" == typeof f && ("downlink"in f && (v.network_downlink = 1e3 * f.downlink),
            "effectiveType"in f && (v.network_quality = f.effectiveType));
            const E = (0,
            h.Nf)();
            if (void 0 !== E && (v.is_google_tag_manager_enabled = E),
            void 0 !== e) {
                const t = (0,
                r.np)(e);
                Object.assign(v, t.trackingProperties);
                const n = (0,
                r.Oz)(e);
                n && Object.assign(v, n.trackingProperties),
                t.creationDate && (v.creation_age = Date.now() - 1e3 * t.creationDate),
                v.email_opt_out = !t.emailPromotion;
                const i = (0,
                r.Mb)(e);
                i.ipCountry && (v.billing_country_code = i.ipCountry),
                (0,
                u.m7)(t) && void 0 !== a && void 0 !== s && (0,
                p.iJ)(a) && Object.assign(v, ( (e, t) => {
                    var a;
                    const s = [...e].sort(( (e, t) => {
                        var a, s;
                        const n = (null !== (a = e.match.confirmTimestamp) && void 0 !== a ? a : 0) - (null !== (s = t.match.confirmTimestamp) && void 0 !== s ? s : 0);
                        return 0 !== n ? n : e.match.other.userId - t.match.other.userId
                    }
                    ));
                    return {
                        friend_streak_num_active: s.length,
                        friend_streak_num_empty_slots: null === (a = t.matchInfo) || void 0 === a ? void 0 : a.emptySlots,
                        ...0 === s.length ? {} : {
                            friend_streak_avg_length: s.reduce(( (e, {streak: t}) => e + t.streakLength), 0) / s.length,
                            friend_streak_lengths: s.map(( ({streak: e}) => e.streakLength)),
                            friend_streak_match_ids: s.map(( ({match: e}) => e.matchId)).filter((e => void 0 !== e)),
                            friend_streak_max_length: Math.max(...s.map(( ({streak: e}) => e.streakLength))),
                            friend_streak_min_length: Math.min(...s.map(( ({streak: e}) => e.streakLength))),
                            friend_streak_partner_user_ids: s.map(( ({match: e}) => e.other.userId))
                        }
                    }
                }
                )(a, s))
            }
            return v
        }
          , Y = async (e, t, a=!0) => {
            var s, r, i;
            const o = (0,
            T.globalGetState)()
              , l = null === (s = (0,
            S.zJ)()) || void 0 === s ? void 0 : s.get(p.qE).value
              , c = null === (r = (0,
            S.zJ)()) || void 0 === r ? void 0 : r.get(w.H_)
              , d = null === (i = (0,
            S.zJ)()) || void 0 === i ? void 0 : i.get(g.aH).value;
            if (await G(a)) {
                const a = {
                    ...K(o, c, l, d),
                    ...t
                };
                return (0,
                h.KU)(e, a),
                V(e, a),
                new Promise((t => {
                    n.track(e, a, t)
                }
                ))
            }
        }
          , J = async (e, t) => {
            const a = t;
            return ( (e, t) => {
                (0,
                E.bP)("track", e, [{
                    data: t,
                    name: "properties"
                }], {
                    excludeFromTelemetry: !0
                })
            }
            )(e, a),
            new Promise((t => {
                n.track(e, a, t)
            }
            ))
        }
          , X = (e, t, a, s, n) => {
            var r;
            (0,
            l.Hx)(a) && void 0 !== (null === (r = a.response) || void 0 === r ? void 0 : r.status) && E.fZ.includes(a.response.status) ? console.warn("Not reporting unactionable server error event") : navigator.onLine && ((0,
            E.Kp)(t, {
                data: {
                    trackingEvent: "api_error",
                    trackingReason: e,
                    ...s
                },
                ex: a,
                fingerprint: ["api_error", t],
                ...n
            }),
            Y("api_error", {
                reason: e
            }))
        }
          , ee = e => {
            let t;
            if (e instanceof URL)
                t = e;
            else
                try {
                    t = new URL(e)
                } catch {
                    t = new URL(e,new URL(window.location.href).origin)
                }
            return t
        }
          , te = (e, t, a, s=!0) => {
            const n = ee(e);
            n.search = "";
            const r = ee(t);
            return r.search = "",
            Y("client_side_redirection", {
                from_url: n.toString(),
                redirection_type: a,
                to_url: r.toString()
            }, s)
        }
          , ae = (e, t) => {
            var a, s;
            const n = (0,
            A.ab)(e.timezoneOffset, e.xpGains) > 0
              , r = (0,
            C.Iv)(null !== (s = null === (a = e.streakData.currentStreak) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0, n, e.timezoneOffset);
            Y("show home", {
                is_dark_mode: window.matchMedia("(prefers-color-scheme: dark)").matches,
                streak_icon: r,
                ...t
            })
        }
          , se = e => {
            if (R.Z.webIos || k.AA.some((e => window.location.href.includes(e))))
                return !1;
            const t = (0,
            L.Pc)()
              , a = document.hidden
              , s = (0,
            v.Jk)().state.location.pathname;
            if (a || !t || "/reset_password" === s)
                return !1;
            const n = {
                activity_screen: s,
                activity_trigger: null,
                is_foregrounded: !a,
                logged_in: t,
                product: "learning_app",
                ...e
            };
            return Y("user_active_2022", n),
            !0
        }
          , ne = [["admin", [/^debug\//, /^enroll/, /^o\//, /^logout$/, /^pearson$/, /^partner/, /^settings/, /^welcome/, /^admin_tools$/, /^juicy$/, /^courses/, /^course\//, /^referred$/, /^register_user$/, /^log-in/, /^register/]], ["ads", [/^placeholderRegex/]], ["game", [/^show_store/, /^shop/]], ["learning", [/^alphabets\//, /^guidebook\//, /^lesson($|\/)/, /^placement\//, /^practice\//, /^preview\//, /^new-comment$/, /^words$/, /^skill\//, /^stories/]], ["loading", [/^placeholderRegex/]], ["promos", [/^abc(-privacy)?$/, /^redeem/, /^plus$/, /^getplus$/, /^youtubeplus$/]], ["social", [/^profile\//]], ["tree", [/^characters/, /^learn/]]]
          , re = {
            admin: 0,
            ads: 0,
            deepest_node_learning: 0,
            game: 0,
            learning: 0,
            loading: 0,
            promos: 0,
            skill_deepest_node_listening: 0,
            skill_deepest_node_reading: 0,
            skill_deepest_node_speaking: 0,
            skill_deepest_node_writing: 0,
            skill_listening: 0,
            skill_reading: 0,
            skill_speaking: 0,
            skill_writing: 0,
            social: 0,
            tree: 0,
            unknown: 0
        }
          , ie = (e=window.location.pathname) => {
            const t = ne.find(( ([{},t]) => t.find((t => t.test(e.slice(1))))));
            return t ? t[0] : "unknown"
        }
          , oe = (e, t, a) => {
            const s = t || ie();
            ["speaking", "writing", "reading", "listening"].includes(s) ? (re[`skill_${s}`] += e,
            a && (re[`skill_deepest_node_${s}`] += e)) : re[s] += e,
            "learning" === s && a && (re.deepest_node_learning += e)
        }
          , le = () => {
            s.XP(re).forEach((e => {
                re[e] = 0
            }
            ))
        }
        ;
        let ce = {};
        const de = async (...e) => {
            await x;
            const t = e => {
                var t;
                ce[e] = (null !== (t = ce[e]) && void 0 !== t ? t : 0) + 1
            }
            ;
            switch (t("leaderboard_stat_api_total"),
            e[0]) {
            case "fetch":
                t("leaderboard_stat_api_fetch_total"),
                e[1].unlocked ? t("leaderboard_stat_api_fetch_unlocked") : t("leaderboard_stat_api_fetch_locked");
                break;
            case "join":
                t("leaderboard_stat_api_join");
                break;
            case "clear_ended":
                t("leaderboard_stat_api_clear_ended");
                break;
            case "set_reaction":
                t("leaderboard_stat_api_set_reaction_total"),
                e[1].cohorted ? t("leaderboard_stat_api_set_reaction_cohorted") : t("leaderboard_stat_api_set_reaction_uncohorted");
                break;
            case "fetch_reaction_uncohorted":
                t("leaderboard_stat_api_fetch_reaction_uncohort");
                break;
            default:
                (0,
                _.RJ)(e)
            }
            Math.random() > (0,
            f.O)("web_leaderboard_stats_sampling_rate", .1) || (Y("leaderboard_stats_aggregate", ce),
            ce = {})
        }
    }
    ,
    34704: (e, t, a) => {
        "use strict";
        a.d(t, {
            LP: () => i,
            _G: () => c,
            dN: () => l,
            hg: () => d,
            iZ: () => o,
            lL: () => u
        });
        var s = a(42659)
          , n = (a(81149),
        a(11811));
        const r = ["ja<en", "zh<en"]
          , i = (e, t) => `${e}<${t}`
          , o = (e, t) => {
            var a;
            return null === (a = e.transliterationTexts.find((e => e.type === t))) || void 0 === a ? void 0 : a.text
        }
          , l = (e, t, a, s=!1) => !(!a || !( (e, t) => !!r.includes(i(e, t)))(e, t)) && (a.enabled || s)
          , c = e => ![n.FF.AlphabetLesson, n.FF.AlphabetPractice, n.FF.SectionTest, n.FF.UnitTest].includes(e)
          , d = e => {
            const t = (0,
            s.iH)(e)
              , a = (0,
            s.Rv)(e);
            return e.browserSettings.transliterationsSettings[i(t, a)]
        }
          , u = {
            hiragana: {
                lang: "ja-Hira",
                trackingName: "hiragana",
                transliterateNewWordsOnly: !1,
                type: "hiragana"
            },
            pinyin_all: {
                lang: "zh-Latn-pinyin",
                trackingName: "pinyin_all",
                transliterateNewWordsOnly: !1,
                type: "pinyin"
            },
            pinyin_new: {
                lang: "zh-Latn-pinyin",
                trackingName: "pinyin_new",
                transliterateNewWordsOnly: !0,
                type: "pinyin"
            },
            romaji: {
                lang: "ja-Latn",
                trackingName: "romaji",
                transliterateNewWordsOnly: !1,
                type: "romaji"
            }
        }
    }
    ,
    11811: (e, t, a) => {
        "use strict";
        var s, n, r;
        a.d(t, {
            A: () => n,
            FF: () => l,
            O4: () => c,
            SP: () => i,
            Sm: () => s,
            tm: () => r,
            y1: () => o
        }),
        function(e) {
            e.Assist = "assist",
            e.CharacterIntro = "characterIntro",
            e.CharacterMatch = "characterMatch",
            e.CharacterPuzzle = "characterPuzzle",
            e.CharacterSelect = "characterSelect",
            e.CharacterTrace = "characterTrace",
            e.CharacterWrite = "characterWrite",
            e.CompleteReverseTranslation = "completeReverseTranslation",
            e.Definition = "definition",
            e.Dialogue = "dialogue",
            e.ExtendedMatch = "extendedMatch",
            e.ExtendedListenMatch = "extendedListenMatch",
            e.Form = "form",
            e.FreeResponse = "freeResponse",
            e.GapFill = "gapFill",
            e.Judge = "judge",
            e.Listen = "listen",
            e.ListenComplete = "listenComplete",
            e.ListenComprehension = "listenComprehension",
            e.ListenIsolation = "listenIsolation",
            e.ListenMatch = "listenMatch",
            e.ListenSpeak = "listenSpeak",
            e.ListenTap = "listenTap",
            e.Match = "match",
            e.Name = "name",
            e.OrderTapComplete = "orderTapComplete",
            e.PartialListen = "partialListen",
            e.PartialReverseTranslate = "partialReverseTranslate",
            e.PatternTapComplete = "patternTapComplete",
            e.RadioBinary = "radioBinary",
            e.RadioImageSelect = "radioImageSelect",
            e.RadioListenMatch = "radioListenMatch",
            e.RadioListenRecognize = "radioListenRecognize",
            e.RadioSelect = "radioSelect",
            e.ReadComprehension = "readComprehension",
            e.ReverseAssist = "reverseAssist",
            e.SameDifferent = "sameDifferent",
            e.Select = "select",
            e.SelectPronunciation = "selectPronunciation",
            e.SelectTranscription = "selectTranscription",
            e.SvgPuzzle = "svgPuzzle",
            e.SyllableListenTap = "syllableListenTap",
            e.SyllableTap = "syllableTap",
            e.Speak = "speak",
            e.TapCloze = "tapCloze",
            e.TapClozeTable = "tapClozeTable",
            e.TapComplete = "tapComplete",
            e.TapCompleteTable = "tapCompleteTable",
            e.TapDescribe = "tapDescribe",
            e.Translate = "translate",
            e.Transliterate = "transliterate",
            e.TransliterationAssist = "transliterationAssist",
            e.TypeCloze = "typeCloze",
            e.TypeClozeTable = "typeClozeTable",
            e.TypeComplete = "typeComplete",
            e.TypeCompleteTable = "typeCompleteTable",
            e.WriteComprehension = "writeComprehension"
        }(s || (s = {})),
        function(e) {
            e.HardChallenge = "HARD_CHALLENGE",
            e.LimitedTts = "LIMITED_TTS",
            e.NewPattern = "NEW_PATTERN",
            e.NewWord = "NEW_WORD",
            e.PastMistake = "PAST_MISTAKE",
            e.ReviewChallenge = "REVIEW_CHALLENGE",
            e.WeakWord = "WEAK_WORD"
        }(n || (n = {})),
        function(e) {
            e.NewYears2020Percent50 = "NEW_YEARS_2020_50",
            e.NewYears2020Percent60 = "NEW_YEARS_2020_60",
            e.NewYears2020Percent50Intro = "NEW_YEARS_2020_50_INTRO",
            e.NewYears2020Percent60Intro = "NEW_YEARS_2020_60_INTRO",
            e.NewYears2021Percent60 = "NEW_YEARS_2021",
            e.NewYears2021FT90 = "NEW_YEARS_2021_3MO",
            e.NewYears2022 = "NEW_YEARS_2022",
            e.NewYears2022FT = "NEW_YEARS_2022_FT",
            e.NewYears2023 = "NEW_YEARS_2023_60",
            e.NewYears2023Fake = "NEW_YEARS_2023_FAKE",
            e.NewYears2024 = "NEW_YEARS_2024",
            e.NewYears2024Fake = "NEW_YEARS_2024_FAKE",
            e.Student = "STUDENT_DISCOUNT_50",
            e.Winback25 = "WINBACK_25",
            e.TestDiscount2025 = "TEST_DISCOUNT_2025_V2",
            e.NewYears2025 = "NEW_YEARS_2025"
        }(r || (r = {}));
        const i = [r.NewYears2024Fake]
          , o = [r.NewYears2024Fake];
        var l, c;
        !function(e) {
            e.AlphabetLesson = "ALPHABET_LESSON",
            e.AlphabetPractice = "ALPHABET_PRACTICE",
            e.GlobalPractice = "GLOBAL_PRACTICE",
            e.Lesson = "LESSON",
            e.MistakesReview = "MISTAKES_REVIEW",
            e.DuoRadio = "DUORADIO",
            e.Legendary = "LEGENDARY",
            e.LegendaryLevel = "LEGENDARY_LEVEL",
            e.LegendaryLexemePractice = "LEGENDARY_LEXEME_PRACTICE",
            e.LegendaryUnitPractice = "LEGENDARY_UNIT_PRACTICE",
            e.LevelReview = "LEVEL_REVIEW",
            e.LexemeSkillLevelPractice = "LEXEME_SKILL_LEVEL_PRACTICE",
            e.LexemePractice = "LEXEME_PRACTICE",
            e.ListeningPractice = "LISTENING_PRACTICE",
            e.Placement = "PLACEMENT",
            e.SectionTest = "SECTION_TEST",
            e.SpeakingPractice = "SPEAKING_PRACTICE",
            e.SpecifiedMatchPractice = "SPECIFIED_MATCH_PRACTICE",
            e.Story = "STORY",
            e.TargetPractice = "TARGET_PRACTICE",
            e.UnitPractice = "UNIT_PRACTICE",
            e.UnitReview = "UNIT_REVIEW",
            e.UnitRewind = "UNIT_REWIND",
            e.UnitTest = "UNIT_TEST"
        }(l || (l = {})),
        function(e) {
            e[e.Green = 1] = "Green",
            e[e.Gold = 2] = "Gold"
        }(c || (c = {}))
    }
    ,
    55829: (e, t, a) => {
        "use strict";
        var s;
        a.d(t, {
            S: () => s
        }),
        function(e) {
            e.ACTIVE = "ACTIVE",
            e.FINISHED = "FINISHED",
            e.NOT_STARTED = "NOT_STARTED"
        }(s || (s = {}))
    }
    ,
    41631: (e, t, a) => {
        "use strict";
        var s;
        a.d(t, {
            t: () => s
        }),
        function(e) {
            e.ROOKIE = "rookie",
            e.EXPLORER = "explorer",
            e.TRAVELER = "traveler",
            e.TRAILBLAZER = "trailblazer",
            e.ADVENTURER = "adventurer",
            e.DISCOVERER = "discoverer",
            e.DAREDEVIL = "daredevil",
            e.NAVIGATOR = "navigator",
            e.CHAMPION = "champion",
            e.DAILY_REFRESH = "daily_refresh"
        }(s || (s = {}))
    }
    ,
    3800: (e, t, a) => {
        "use strict";
        a.d(t, {
            N: () => s,
            h: () => n
        });
        const s = {
            autoCapitalize: "off",
            autoComplete: "off",
            autoCorrect: "off",
            spellCheck: !1
        }
          , n = window.location.search.includes("wantsPlainInfo=1")
    }
    ,
    81621: (e, t, a) => {
        "use strict";
        a.d(t, {
            AO: () => p,
            EO: () => S,
            N9: () => m,
            Nr: () => _,
            P_: () => h,
            Ud: () => g,
            VY: () => d,
            i5: () => b,
            o7: () => u,
            pu: () => y,
            sL: () => v,
            tU: () => l,
            yS: () => f,
            z_: () => c
        });
        var s = a(80254)
          , n = a(17135)
          , r = a(59604)
          , i = a(87471)
          , o = (a(16086),
        a(20028));
        const l = "//s3.amazonaws.com/duolingo-images/avatar/default_2"
          , c = e => e.includes("default_")
          , d = e => !(e.privacySettings || []).includes("DISABLE_SOCIAL") && !(0,
        o.pN)(e)
          , u = e => !(e.privacySettings || []).includes("DISABLE_MATURE_WORDS")
          , g = e => !(e.privacySettings || []).includes("DISABLE_LEADERBOARDS")
          , p = e => !(!(0,
        o.jq)(e) && d(e)) && (0,
        o.jq)(e) && !(0,
        o.zZ)(e)
          , m = (e, t) => !!(0,
        r.O)("enable_user_privacy_settings", void 0, e) && (!(0,
        o.jq)(t) || (0,
        i.d0)(t, e))
          , h = e => "CN" === e.ipCountry && (0,
        r.O)("china_compliance_control", !1, e)
          , _ = (e, t) => {
            const a = [{
                streakFreezeUsed: !1
            }];
            e[e.length - 1] > 0 && t--;
            for (let s = e.length - 2; s >= 0 && t > 0; s--) {
                const n = 0 === e[s];
                a.unshift({
                    streakFreezeUsed: n
                }),
                n || t--
            }
            return a
        }
          , v = e => e
          , f = e => {
            var t;
            const a = (0,
            n.RF)({
                days: 1
            })
              , s = (0,
            n.RF)({
                days: 7
            });
            return (null !== (t = e.xpGains) && void 0 !== t ? t : []).some((e => e.xp > 0 && e.time < a && e.time > s))
        }
          , S = e => (0,
        n.aW)(1e3 * e.creationDate, Date.now()) <= 30
          , y = e => E(e, Date.now())
          , E = (e, t) => s.VO(e.xpSummaries).filter((e => void 0 !== e && (0,
        n.M)(e.date, t) <= 30 && e.gainedXp > 0)).length
          , b = e => {
            const t = e.lastResurrectionTimestamp;
            return t ? (0,
            n.M)(t, Date.now()) : Number.MAX_SAFE_INTEGER
        }
    }
    ,
    74597: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => r
        });
        const s = a(23630).getParser(navigator.userAgent)
          , n = void 0 !== navigator.brave
          , r = {
            android: "Android" === s.getOSName(),
            chrome: "Chrome" === s.getBrowserName() && !n,
            desktop: "desktop" === s.getPlatformType(),
            edge: "Microsoft Edge" === s.getBrowserName(),
            edgeSupportedSpeaking: "Microsoft Edge" === s.getBrowserName() && 134 !== parseInt(s.getBrowserVersion(), 10),
            firefox: "Firefox" === s.getBrowserName(),
            hasMobileApp: "iOS" === s.getOSName() || "Android" === s.getOSName() && "Amazon Silk" !== s.getBrowserName(),
            inwechat: navigator.userAgent.toLowerCase().includes("micromessenger"),
            ios: "iOS" === s.getOSName(),
            macOS: "macOS" === s.getOSName(),
            mobile: "mobile" === s.getPlatformType(),
            safari: "Safari" === s.getBrowserName(),
            silk: "Amazon Silk" === s.getBrowserName(),
            webIos: navigator.userAgent.includes("DuolingoWebIos"),
            windowsPhone: "Windows Phone" === s.getOSName()
        }
    }
    ,
    16086: (e, t, a) => {
        "use strict";
        a.d(t, {
            Jb: () => o,
            MJ: () => i,
            Pc: () => l
        });
        var s = a(80231)
          , n = a(54412)
          , r = a(58576);
        const i = e => {
            try {
                return parseInt(JSON.parse(s.DS.decode(e.split(".")[1])).sub, 10)
            } catch {
                return void (0,
                r.vU)("Failed to parse saved JWT", {
                    data: {
                        jwt: e
                    },
                    once: !0
                })
            }
        }
          , o = () => {
            const e = (0,
            n.ej)(n.Vj.JWT)
              , t = e ? i(e) : void 0;
            if (!t)
                throw Error("JWT missing");
            return t
        }
          , l = () => {
            try {
                return o(),
                !0
            } catch {
                return !1
            }
        }
    }
    ,
    20028: (e, t, a) => {
        "use strict";
        a.d(t, {
            AE: () => p,
            B8: () => S,
            E4: () => f,
            GJ: () => n,
            Go: () => v,
            Jd: () => u,
            Sk: () => c,
            Ye: () => m,
            d1: () => h,
            dE: () => g,
            jq: () => r,
            ms: () => l,
            pN: () => _,
            u: () => d,
            vb: () => o,
            zZ: () => i
        });
        var s = a(80254);
        const n = e => (e.roles || []).includes("admin")
          , r = e => {
            var t;
            return (null !== (t = e.privacySettings) && void 0 !== t ? t : []).includes("AGE_RESTRICTED")
        }
          , i = e => {
            var t;
            return (null !== (t = e.privacySettings) && void 0 !== t ? t : []).includes("COPPA_WAIVED")
        }
          , o = e => (e.roles || []).includes("community-admin")
          , l = e => "ENROLLED" === e.betaStatus || d(e)
          , c = e => (e.roles || []).some((e => "admin" === e || "engineering-contractor" === e))
          , d = e => !s.xb(e.globalAmbassadorStatus)
          , u = e => (e.roles || []).includes("moderators")
          , g = e => !s.xb(e.joinedClassroomIds)
          , p = e => !s.xb(e.observedClassroomIds)
          , m = e => !0 === e.shouldPreventMonetizationForSchoolsUser
          , h = e => g(e) || p(e)
          , _ = e => !e.username
          , v = e => {
            var t;
            return c(e) || (null === (t = e.roles) || void 0 === t ? void 0 : t.some((e => "ios-builds-download" === e || "localization-translator" === e)))
        }
          , f = e => !!e.canUseModerationTools
          , S = e => n(e) || o(e)
    }
    ,
    64591: (e, t, a) => {
        "use strict";
        a.d(t, {
            $f: () => i,
            FL: () => o,
            Xh: () => r
        });
        var s = a(80254)
          , n = a(795);
        const r = e => JSON.parse(JSON.stringify(e))
          , i = (e, t, a, r) => {
            if (!t.length)
                return (0,
                n.TS)(e, a, r);
            const i = t.reduce(( (e, t) => {
                var a;
                return null !== (a = e[t]) && void 0 !== a ? a : {}
            }
            ), e);
            return (0,
            n.tP)(e, t, s.xb(i) ? a : (0,
            n.TS)(i, a, r))
        }
          , o = (e, t, a) => i(e, t, a, {
            deep: !0
        })
    }
    ,
    97106: (e, t, a) => {
        "use strict";
        a.d(t, {
            $W: () => z,
            $Z: () => K,
            BX: () => L,
            CT: () => m,
            Cz: () => U,
            DI: () => B,
            Ig: () => h,
            J4: () => k,
            JE: () => q,
            K3: () => N,
            KM: () => F,
            Lu: () => E,
            MR: () => G,
            Mm: () => C,
            Ms: () => P,
            Qb: () => Z,
            R7: () => v,
            U0: () => T,
            W0: () => $,
            ZS: () => M,
            Zy: () => H,
            ab: () => _,
            ct: () => S,
            dY: () => I,
            dp: () => g,
            dr: () => A,
            fu: () => x,
            g3: () => J,
            h0: () => Y,
            ix: () => O,
            jB: () => u,
            mX: () => R,
            nF: () => D,
            o6: () => p,
            pu: () => b,
            t1: () => y,
            tL: () => w,
            tV: () => W,
            uD: () => j,
            xc: () => V,
            xp: () => f,
            zL: () => Q
        });
        var s = a(50888)
          , n = (a(18867),
        a(17135))
          , r = a(11883)
          , i = a(95940)
          , o = a(23275)
          , l = a(84401)
          , c = a(18804)
          , d = a(11811);
        const u = 9e5
          , g = 18e5
          , p = (e, t) => {
            for (const a of [1, 2, 5])
                if (Math.ceil(e / a) <= t)
                    return a;
            return 10 * Math.ceil(e / t / 10)
        }
          , m = (e, t) => void 0 === t ? 0 : Math.ceil(5 * t / e)
          , h = (e, t, a) => {
            const {enableBonusPoints: s, maxInLessonStreak: n, session: r} = e
              , i = r.xpGain;
            return {
                bonusXp: s && e.completedWithHeartsRemaining ? m(r.challenges.length, n) : 0,
                hasXpBoost: a,
                totalXpThisSession: i,
                totalXpToday: t
            }
        }
          , _ = (e, t) => v(e, t)[6]
          , v = (e, t, a="0") => {
            const s = [0, 0, 0, 0, 0, 0, 0];
            if (!t)
                return s;
            const r = (0,
            n.Ko)(e)
              , i = -1 * (0,
            n.Rw)(a) * 3600
              , o = (0,
            n.Zo)();
            for (const e of t) {
                const t = o - r + 86400 - 1
                  , a = Math.floor((t - (e.time + i)) / 86400);
                a >= 0 && a <= 6 && (s[6 - a] += e.xp)
            }
            return s
        }
          , f = (e, t) => {
            const a = [...e];
            return a[a.length - 1] += t,
            a
        }
          , S = 10
          , y = 5
          , E = 10
          , b = 20
          , I = 30
          , w = 15
          , k = 10
          , T = 5
          , C = 2
          , R = 40
          , L = 40
          , P = L / 2
          , A = 4
          , D = 3
          , O = 5
          , N = 2
          , x = 20
          , M = 10
          , F = 5
          , U = 10
          , H = 20
          , G = 5
          , V = (e, t, a) => {
            var s, n;
            if ((null === (s = e.levelData) || void 0 === s ? void 0 : s.level) && (0,
            o.$)(e.levelData.level))
                return b + m(e.session.challenges.length, e.maxInLessonStreak);
            if ((0,
            o.Wc)(null === (n = e.levelData) || void 0 === n ? void 0 : n.level.state) && ["LEXEME_PRACTICE", "LESSON"].includes(e.session.type))
                return O + m(e.session.challenges.length, e.maxInLessonStreak);
            if (e.sessionParams.isFinalLevel)
                return !e.completedWithHeartsRemaining && void 0 !== e.partialXpGiven && e.partialXpGiven > 0 ? e.partialXpGiven : L + (e.enableBonusPoints ? m(e.session.challenges.length, e.maxInLessonStreak) : 0);
            if ((0,
            l.rK)(e.session.type)) {
                if (e.session.type === d.FF.SpecifiedMatchPractice) {
                    const e = a ? N : 1;
                    return (0,
                    l.w)(t) * e
                }
                return x
            }
        }
          , z = (e, t) => {
            const a = (0,
            n.cz)(e);
            return null == t ? void 0 : t[a]
        }
          , B = (e, t, a) => {
            const s = []
              , r = (0,
            n.Gz)(e);
            for (; r <= (0,
            n.Gz)(t); )
                s.push(z(r, a)),
                r.setDate(r.getDate() + 1);
            return s
        }
          , j = (e, t, {overrideWeekStartDayForTesting: a}={}) => {
            const s = e.getFullYear()
              , r = e.getMonth()
              , o = e.getDate()
              , l = (0,
            n.kJ)(s, r, null != a ? a : (0,
            i.k8)())
              , c = 7 * Math.floor((o - 1 + l) / 7) - l + 1
              , d = [];
            for (let e = 0; e < 7; ++e)
                d.push(z((0,
                n.$$)(s, r, c + e), t));
            return d
        }
          , $ = (e, t) => {
            const a = []
              , s = (0,
            n.Ux)();
            for (let r = 1; r <= e; ++r) {
                const e = z((0,
                n.$$)(s.getFullYear(), s.getMonth(), s.getDate() - r), t);
                void 0 !== e && a.push(e)
            }
            return a
        }
          , Z = e => {
            var t;
            return null !== (t = null == e ? void 0 : e.streakExtended) && void 0 !== t && t
        }
          , W = e => !!e && (e.streakExtended || e.frozen || e.repaired)
          , q = (e, t) => e.map((e => {
            const a = e[0]
              , s = a.getFullYear()
              , r = a.getMonth()
              , i = a.getDate()
              , o = (0,
            n.$$)(s, r, i - 1)
              , l = (0,
            n.$$)(s, r, i + 7);
            return [z(o, t), ...e.map((e => z(e, t))), z(l, t)]
        }
        ));
        var Q;
        !function(e) {
            e.ITEM_NAME_15_MIN = "xp_boost_15",
            e.ITEM_NAME_30_MIN = "general_xp_boost"
        }(Q || (Q = {}));
        const K = {
            [Q.ITEM_NAME_15_MIN]: u,
            [Q.ITEM_NAME_30_MIN]: g
        }
          , Y = e => {
            const t = Object.entries(K).map(( ([t,a]) => {
                var s;
                const n = null === (s = e[t]) || void 0 === s ? void 0 : s.purchaseDate;
                return [t, void 0 === n ? void 0 : 1e3 * n + a]
            }
            )).filter(( ([,e]) => void 0 !== e));
            return t.length > 0 ? t.sort(( ([,e], [,t]) => t - e))[0][0] : void 0
        }
          , J = () => {
            const e = (0,
            r.Z)(1e4);
            return (0,
            c.Fx)((t => (0,
            s.mu)(t, e)))
        }
    }
    ,
    10391: (e, t, a) => {
        "use strict";
        a.d(t, {
            iY: () => n,
            jL: () => i,
            mH: () => s,
            tW: () => r
        });
        const s = (e, t) => {
            const a = Math.max(e.top, t.top)
              , s = Math.min(e.bottom, t.bottom)
              , n = Math.max(e.left, t.left)
              , r = Math.min(e.right, t.right) - n
              , i = s - a;
            if (!(r < 0 || i < 0))
                return new DOMRect(n,a,r,i)
        }
          , n = (e, t) => {
            const a = t.map(( (t, a) => "px" === t.unit ? t.value : t.value * (a % 2 ? e.width : e.height) / 100))
              , s = e.bottom + a[2]
              , n = e.left - a[3]
              , r = e.right + a[1]
              , i = e.top - a[0];
            return new DOMRect(n,i,r - n,s - i)
        }
          , r = e => e instanceof Element ? e.getBoundingClientRect() : new DOMRect(0,0,window.innerWidth,window.innerHeight)
          , i = (e="0px") => {
            const t = e.split(/\s+/).map((e => {
                const t = /^(-?\d*\.?\d+)(px|%)$/.exec(e);
                if (!t)
                    throw Error("rootMargin must be specified in pixels or percent");
                return {
                    unit: t[2],
                    value: parseFloat(t[1])
                }
            }
            ));
            return t[1] = t[1] || t[0],
            t[2] = t[2] || t[0],
            t[3] = t[3] || t[1],
            t
        }
    }
    ,
    5768: (e, t, a) => {
        "use strict";
        a.d(t, {
            Z: () => ca
        });
        const s = a.p + "images/pathCharacters/active/f6716f60d235309775505d851d765c85.svg"
          , n = a.p + "images/pathCharacters/active/bdb3ba49eeb7f68dcd4b4310996757df.svg"
          , r = a.p + "images/pathCharacters/active/c085c27e83dae9c384a1fa5623caf378.svg"
          , i = a.p + "images/pathCharacters/active/2b8208acfd8a19539a7f1f0f583eedaa.svg"
          , o = a.p + "images/pathCharacters/active/5fc71197a1416e4be54c4b5b29499f94.svg"
          , l = a.p + "images/pathCharacters/active/2d9777e95d5de19a2093d197c46c1c0e.svg"
          , c = a.p + "images/pathCharacters/active/349d9719f6303f61230e835ed661dbb5.svg"
          , d = a.p + "images/pathCharacters/active/940d8a1e046b65de37bec0cbbd0cb7d5.svg"
          , u = a.p + "images/pathCharacters/active/82bf5cd118b395613c530684ba24875d.svg"
          , g = a.p + "images/pathCharacters/active/f5021878026faa91fba2d00ad725e595.svg"
          , p = a.p + "images/pathCharacters/active/1d0f3d4cac09ecc764b48e4216971340.svg"
          , m = a.p + "images/pathCharacters/active/1f3c7406207c51a83e70f51a8b278c9a.svg"
          , h = a.p + "images/pathCharacters/active/a506d9752e476f9e29b898c8350e21c6.svg"
          , _ = a.p + "images/pathCharacters/active/7165a21f9d59c20266995311eac2b85b.svg"
          , v = a.p + "images/pathCharacters/active/41ac3c186ece34d11eead4b83018deec.svg"
          , f = a.p + "images/pathCharacters/active/e586e997ac5f61e9efc539a897ea97fa.svg"
          , S = a.p + "images/pathCharacters/active/017db225b5af3a57e8c96ad6e68407f5.svg"
          , y = a.p + "images/pathCharacters/active/6b1c65328a8b08a992ddfdac410f1e59.svg"
          , E = a.p + "images/pathCharacters/active/505dc128d86274a4ae042aaff86e9ee8.svg"
          , b = a.p + "images/pathCharacters/active/e8ca616fcc85da2b7103c5d3dab47c9e.svg"
          , I = a.p + "images/pathCharacters/active/70f2dc0e9b24a7c1b75dcc4f06220def.svg"
          , w = a.p + "images/pathCharacters/active/f33931b2e9c90975dc4f16385e3b9986.svg"
          , k = a.p + "images/pathCharacters/active/b14deaeb92aba09a8db341eed854a510.svg"
          , T = a.p + "images/pathCharacters/active/b130575f6cf5010b979252cc7082bff0.svg"
          , C = a.p + "images/pathCharacters/active/bf0ea3175ff65517dbbcda2a51088310.svg"
          , R = a.p + "images/pathCharacters/active/97f5073db4f9edb223cc3745fb101189.svg"
          , L = a.p + "images/pathCharacters/active/42d8973fd7661278e821e6b443e3cd04.svg"
          , P = a.p + "images/pathCharacters/active/f8ce8a90aa5638e8f8c6f911cab769c5.svg"
          , A = a.p + "images/pathCharacters/active/8377ccd0d783587c5b29afba076dda3f.svg"
          , D = a.p + "images/pathCharacters/active/768e7ac6704417d6a979e4f051ee4cfc.svg"
          , O = a.p + "images/pathCharacters/active/68f281ca714a348cd289484f8922e06a.svg"
          , N = a.p + "images/pathCharacters/active/c4ca05b766187c339c99a5e574a28ce4.svg"
          , x = a.p + "images/pathCharacters/active/586f98637f46d0832a67b074714149dc.svg"
          , M = a.p + "images/pathCharacters/active/0421ab9ac2e358694cf788b984f0a0f4.svg"
          , F = a.p + "images/pathCharacters/active/b2c48eddbd0646c3c89d042125ef31e0.svg"
          , U = a.p + "images/pathCharacters/active/b53ad129e94857a2d4c2affca721b2c8.svg"
          , H = a.p + "images/pathCharacters/active/71d4f6db082a480c6e223c20a3e960af.svg"
          , G = a.p + "images/pathCharacters/active/09b658f65939dd745b7c74c90ab26818.svg"
          , V = a.p + "images/pathCharacters/active/c2fa6ca1ce048c415513d495475eec41.svg"
          , z = a.p + "images/pathCharacters/active/8751c385f1b3a57ce6af336091dfcd4d.svg"
          , B = a.p + "images/pathCharacters/active/ee46ea4ca925eaab1e5e02e9c3ac85e1.svg"
          , j = a.p + "images/pathCharacters/active/ceb30a4743ccd7ac766338cc7a66b752.svg"
          , $ = a.p + "images/pathCharacters/guidebook/53c8fcd21f5e6f8d4e532213964806fa.svg"
          , Z = a.p + "images/pathCharacters/guidebook/8f43a38bf751cb8dff793a838c89df0d.svg"
          , W = a.p + "images/pathCharacters/guidebook/73d5e4f9fa2f1941ab8d05060e190940.svg"
          , q = a.p + "images/pathCharacters/guidebook/939ebad747027f1a9d365e15fda3a4e1.svg"
          , Q = a.p + "images/pathCharacters/guidebook/efc93544fcf3855e11f88bb2cfa5ae6a.svg"
          , K = a.p + "images/pathCharacters/guidebook/cb8f7d0a6699de6bef9bfd462d137c2a.svg"
          , Y = a.p + "images/pathCharacters/guidebook/b6c0d8b501a7f39c054475e567f2cd86.svg"
          , J = a.p + "images/pathCharacters/guidebook/a0c36a29597aaa9f405737994609e4bf.svg"
          , X = a.p + "images/pathCharacters/guidebook/9a365074d115c04b61aa34afba7d2bd5.svg"
          , ee = a.p + "images/pathCharacters/guidebook/1ea369918b8e64958448ad6e7efc7344.svg"
          , te = a.p + "images/pathCharacters/guidebook/f86794ff3b20c42b827f8f4e8bf28fc2.svg"
          , ae = a.p + "images/pathCharacters/guidebook/40c909d8f85e07ad2f7d9d8d6da75902.svg"
          , se = a.p + "images/pathCharacters/guidebook/61e3a5ac98e388bf0de9244e10da39cb.svg"
          , ne = a.p + "images/pathCharacters/guidebook/c2c4bf353572100fb3f67e195e63c351.svg"
          , re = a.p + "images/pathCharacters/guidebook/d0d8dc7a1a4e8e0a95ff0484fb9b17ae.svg"
          , ie = a.p + "images/pathCharacters/guidebook/315a044a2d6f81b9c832db26bf62b215.svg"
          , oe = a.p + "images/pathCharacters/guidebook/37f70fb52e74cb666f289cf53d520cc5.svg"
          , le = a.p + "images/pathCharacters/guidebook/ff005cafd223412b5bfd7ad2d2ee0cdf.svg"
          , ce = a.p + "images/pathCharacters/guidebook/120cbef6f780776c0022d557813e5f74.svg"
          , de = a.p + "images/pathCharacters/guidebook/dcdb3d27bf8b8cb6cd6cf830964a39c8.svg"
          , ue = a.p + "images/pathCharacters/guidebook/03f7ef1e0cb60e21264ca58ca9d71e03.svg"
          , ge = a.p + "images/pathCharacters/guidebook/efacf57a4e0d5050d284ba87aa1c6c02.svg"
          , pe = a.p + "images/pathCharacters/guidebook/b75147787f7b6802fd1586fe1c2cd41e.svg"
          , me = a.p + "images/pathCharacters/guidebook/d5f85b5af625ee3ac0bf1649f76cd56f.svg"
          , he = a.p + "images/pathCharacters/guidebook/c878e993696ae48c101701e1b724d53b.svg"
          , _e = a.p + "images/pathCharacters/guidebook/156abbe091927eb035122b8e3761848b.svg"
          , ve = a.p + "images/pathCharacters/guidebook/4eaafed54241c1649af93bd8c9a4d2f7.svg"
          , fe = a.p + "images/pathCharacters/guidebook/9de3ba3ddfc50cfa99c5bd1afac683df.svg"
          , Se = a.p + "images/pathCharacters/guidebook/f840f12b8161bb2c8fcbbf303fad60fb.svg"
          , ye = a.p + "images/pathCharacters/guidebook/98e0df0e56367f7642df7a1ffa127faf.svg"
          , Ee = a.p + "images/pathCharacters/guidebook/f75ac5f895a988580dc58c17440092f9.svg"
          , be = a.p + "images/pathCharacters/guidebook/d16b76c27fcfaabd59f258018d3cf8bb.svg"
          , Ie = a.p + "images/pathCharacters/guidebook/34e2fb16e4c6ad068a2004dc08823397.svg"
          , we = a.p + "images/pathCharacters/guidebook/0a7807397bc9125928ba9c642aec48b3.svg"
          , ke = a.p + "images/pathCharacters/guidebook/83d237fc9ab23cadf31b0923048de22d.svg"
          , Te = a.p + "images/pathCharacters/guidebook/16c6a73cb17b74b555c33b8ba90130b1.svg"
          , Ce = a.p + "images/pathCharacters/guidebook/8304c27670dcb005c76d2a2f858f3238.svg"
          , Re = a.p + "images/pathCharacters/guidebook/e1216e99a0b4f3e2b41220dba8805cc4.svg"
          , Le = a.p + "images/pathCharacters/guidebook/6b51686fcb4d14ca3ea3dedaf6a120ef.svg"
          , Pe = a.p + "images/pathCharacters/guidebook/86b2ffcca31cec80a8f443a03ab7a552.svg"
          , Ae = a.p + "images/pathCharacters/guidebook/d982595bad4aeecdb7fb143357591000.svg"
          , De = a.p + "images/pathCharacters/guidebook/4c6f1af016a2d198bb198a690889b303.svg"
          , Oe = a.p + "images/pathCharacters/locked/91e7b42fcfad51403e221227646d6bf7.svg"
          , Ne = a.p + "images/pathCharacters/locked/712983de6ee1534605ff11e8e7db1f9d.svg"
          , xe = a.p + "images/pathCharacters/locked/ec557effb34d21d0bc4ec743cc6b88eb.svg"
          , Me = a.p + "images/pathCharacters/locked/5a84d39927b1f9ff52797b8dd305c8e9.svg"
          , Fe = a.p + "images/pathCharacters/locked/b2aa4648b65477fa276fbf2987575756.svg"
          , Ue = a.p + "images/pathCharacters/locked/e33954c3ceeea67f43937613c3f4cc0a.svg"
          , He = a.p + "images/pathCharacters/locked/b77ce87b8d78bf56fbec23b9abe2ff51.svg"
          , Ge = a.p + "images/pathCharacters/locked/bf1a9ccba05390a74cf13a0f7c9a665d.svg"
          , Ve = a.p + "images/pathCharacters/locked/905c171ee1863bfa3cfff749ce7b0fda.svg"
          , ze = a.p + "images/pathCharacters/locked/061c9a310ba3cb90a5165046e9b807c4.svg"
          , Be = a.p + "images/pathCharacters/locked/40203307d51ccadc8592fb18c9b3495e.svg"
          , je = a.p + "images/pathCharacters/locked/6fec8b4fbf961af1323716a1f94ef6a3.svg"
          , $e = a.p + "images/pathCharacters/locked/a226369d1c7123b2cab8b94c876217c2.svg"
          , Ze = a.p + "images/pathCharacters/locked/3b85864235b8ff1dca19e95e5626b581.svg"
          , We = a.p + "images/pathCharacters/locked/9c2dab526f9f8d5bbbf6640f8dceb3be.svg"
          , qe = a.p + "images/pathCharacters/locked/5fd0a5a8769f5dba24bca6378f8d50f0.svg"
          , Qe = a.p + "images/pathCharacters/locked/0e95d11fb22f79166a6e1a234fbd588c.svg"
          , Ke = a.p + "images/pathCharacters/locked/9b47b796e62017999b87844189101f6f.svg"
          , Ye = a.p + "images/pathCharacters/locked/f328bd6af7a695e18b14151d41af0bb7.svg"
          , Je = a.p + "images/pathCharacters/locked/895382cc24dd06b9051d91b0aede65d1.svg"
          , Xe = a.p + "images/pathCharacters/locked/553fbab291d8d785159c3f37dc0a08b8.svg"
          , et = a.p + "images/pathCharacters/locked/f9390df95434c7fde9b81bee083a1b1b.svg"
          , tt = a.p + "images/pathCharacters/locked/6d779e83712860a01164c3145c65818a.svg"
          , at = a.p + "images/pathCharacters/locked/6c7e2a7843e764cbb4ed665ba22f0015.svg"
          , st = a.p + "images/pathCharacters/locked/4fe84a0544799c74348afb28bb9833da.svg"
          , nt = a.p + "images/pathCharacters/locked/dbd618958ac83871a1b1a43983ef9e11.svg"
          , rt = a.p + "images/pathCharacters/locked/34443969dabd59f00795cc94457c1b3b.svg"
          , it = a.p + "images/pathCharacters/locked/3f3753f97c661eb8dcc99b6b9296f5c0.svg"
          , ot = a.p + "images/pathCharacters/locked/f0170ea1b382b18bf20cc8542319d737.svg"
          , lt = a.p + "images/pathCharacters/locked/79487c035b5b5851604e1cbad2a08ce5.svg"
          , ct = a.p + "images/pathCharacters/locked/9ebf7d48e9584e3cf5664e48045f76a5.svg"
          , dt = a.p + "images/pathCharacters/locked/738a67cd7d33976c73a2894b741bb6eb.svg"
          , ut = a.p + "images/pathCharacters/locked/57c584002faafd3eb2eac6fc3a9cb1b5.svg"
          , gt = a.p + "images/pathCharacters/locked/f1a8ca7d22677f84c9781b7e9034f688.svg"
          , pt = a.p + "images/pathCharacters/locked/1a590fb861a96e0bf266bfa51b4c49f2.svg"
          , mt = a.p + "images/pathCharacters/locked/2cd0458ca11c7750844aec70009447a1.svg"
          , ht = a.p + "images/pathCharacters/locked/a39bec2df6719a6ccfaedce0dadb8186.svg"
          , _t = a.p + "images/pathCharacters/locked/4da08f8ab837264583efa654925e6c60.svg"
          , vt = a.p + "images/pathCharacters/locked/f61b069908217e296577a477e58e00a5.svg"
          , ft = a.p + "images/pathCharacters/locked/a0cb3a88f573417a7c8947a27ca0fdf5.svg"
          , St = a.p + "images/pathCharacters/locked/e489245b60a7f45968e3cf497d7e4a13.svg"
          , yt = a.p + "images/pathCharacters/locked/51c2fae37ac6000a32b56b49452300c1.svg"
          , Et = a.p + "images/pathCharacters/dark/d04961b6ab7a67fc666c31ddb9ae7300.svg"
          , bt = a.p + "images/pathCharacters/dark/d8c966fb8b990397836029468874b3c7.svg"
          , It = a.p + "images/pathCharacters/dark/6424c07838b740553d47b194169b9687.svg"
          , wt = a.p + "images/pathCharacters/dark/e34ed8cd1c855f7a0bd355aa753f6187.svg"
          , kt = a.p + "images/pathCharacters/dark/c9379a6ea0a3d2304db5107c87e9cd8d.svg"
          , Tt = a.p + "images/pathCharacters/dark/9edc1bab8bb64e35d1a6ad46acf6f21f.svg"
          , Ct = a.p + "images/pathCharacters/dark/063b19fbbfec48f887c7d5ad2b1849d7.svg"
          , Rt = a.p + "images/pathCharacters/dark/c4419cac8477c25a1761abbf438cf531.svg"
          , Lt = a.p + "images/pathCharacters/dark/05164af290313e637e51f5a30c472e96.svg"
          , Pt = a.p + "images/pathCharacters/dark/297a3a905c8cabf3728dc123e9eed2ae.svg"
          , At = a.p + "images/pathCharacters/dark/f8fa790433c0f5cb4eccf8b15ec17cb7.svg"
          , Dt = a.p + "images/pathCharacters/dark/b82d75c2859ed7eb6fc32415cd4a049a.svg"
          , Ot = a.p + "images/pathCharacters/dark/8f596552d9922c0053afb1595fd17e4d.svg"
          , Nt = a.p + "images/pathCharacters/dark/e46e218ccaf58ee7b0828b2d7823f67e.svg"
          , xt = a.p + "images/pathCharacters/dark/a182083228ca9ae7caa6e04c67ba3319.svg"
          , Mt = a.p + "images/pathCharacters/dark/7c9adeb1fe285009c6e2a66237a1d67c.svg"
          , Ft = a.p + "images/pathCharacters/dark/61a06d7064f6e9faf54ad90f2e91f82b.svg"
          , Ut = a.p + "images/pathCharacters/dark/7dee264e444be67317676501571d1adf.svg"
          , Ht = a.p + "images/pathCharacters/dark/0658130f08ebff08d9fec5f63de374ad.svg"
          , Gt = a.p + "images/pathCharacters/dark/9614e10008fe07d7cc143883a76bed81.svg"
          , Vt = a.p + "images/pathCharacters/dark/2d30e5a86c537dac04b7f87e50faa495.svg"
          , zt = a.p + "images/pathCharacters/dark/c45923336541ef5a8309a1758ff5ca91.svg"
          , Bt = a.p + "images/pathCharacters/dark/0666681732336ff1a9740bba04bd0920.svg"
          , jt = a.p + "images/pathCharacters/dark/6f31bc33f041ccb7009072ddeebefd54.svg"
          , $t = a.p + "images/pathCharacters/dark/4830ce54059fde22c292153f044eea5b.svg"
          , Zt = a.p + "images/pathCharacters/dark/f389b81e89cdb9c91f1c11d0e2b43c6c.svg"
          , Wt = a.p + "images/pathCharacters/dark/a3e1fd17f6d11b10ecae6bf5bc1ca701.svg"
          , qt = a.p + "images/pathCharacters/dark/fd54597a7b5e285bce32a8a97860b9c1.svg"
          , Qt = a.p + "images/pathCharacters/dark/497f3d136d0af6285e915ed47c4a8f36.svg"
          , Kt = a.p + "images/pathCharacters/dark/24b858c7608560bff72d1eacc89467e1.svg"
          , Yt = a.p + "images/pathCharacters/dark/7a6f4ccab9ff546c3f3780d33a0641ff.svg"
          , Jt = a.p + "images/pathCharacters/dark/5c67588a2c368e997aeabe4f1d349593.svg"
          , Xt = a.p + "images/pathCharacters/dark/9d3aea4743e0cb72d2449a5b400de680.svg"
          , ea = a.p + "images/pathCharacters/dark/350eb5e80d4ddc292088d0acc5ef3e2d.svg"
          , ta = a.p + "images/pathCharacters/dark/c43181b8aff6b93a60c67aa9683352bd.svg"
          , aa = a.p + "images/pathCharacters/dark/1c076601edde48ff382d23b0929d277e.svg"
          , sa = a.p + "images/pathCharacters/dark/d2df0451dcc78faeba2fd5e4bb0d1422.svg"
          , na = a.p + "images/pathCharacters/dark/b3ae4979d0f3a2d284727d3aa8b6d755.svg"
          , ra = a.p + "images/pathCharacters/dark/365b784b66dd40dab60da28e065b8b9a.svg"
          , ia = a.p + "images/pathCharacters/dark/791fc3429e145eafb9419778f922f13e.svg"
          , oa = a.p + "images/pathCharacters/dark/096e4bb633b6c35eba1a2ec2f814e7d4.svg"
          , la = a.p + "images/pathCharacters/dark/379c41f243b0bac4ec06e120ad03e9fc.svg"
          , ca = {
            BEA_SMORES: {
                activeImage: s,
                guidebookHeaderImage: $,
                lockedImage: Oe,
                darkImage: Et,
                animation: a.p + "lottie/pathCharacters/1607e4d7d34a90b7801f1c47d6f9c6ea.json"
            },
            BEA_TENNIS: {
                activeImage: n,
                guidebookHeaderImage: Z,
                lockedImage: Ne,
                darkImage: bt,
                animation: a.p + "lottie/pathCharacters/fe36d90699c984de29ff7981c9cc2d05.json"
            },
            DUO_BALL: {
                activeImage: r,
                guidebookHeaderImage: W,
                lockedImage: xe,
                darkImage: It,
                animation: a.p + "lottie/pathCharacters/241a1daf9e1650c59c2421aa73744336.json"
            },
            DUO_BOOKS: {
                activeImage: i,
                guidebookHeaderImage: q,
                lockedImage: Me,
                darkImage: wt,
                animation: a.p + "lottie/pathCharacters/dc7f54a73e6340a16176a91bf0d18b83.json"
            },
            DUO_BUTTERFLY: {
                activeImage: o,
                guidebookHeaderImage: Q,
                lockedImage: Fe,
                darkImage: kt,
                animation: a.p + "lottie/pathCharacters/192edd4e5f1a09d2d53f8ab605b05695.json"
            },
            DUO_CHEER: {
                activeImage: l,
                guidebookHeaderImage: K,
                lockedImage: Ue,
                darkImage: Tt,
                animation: a.p + "lottie/pathCharacters/7e038d7ac140bbafc9a6665404f0efe1.json"
            },
            DUO_GEM: {
                activeImage: c,
                guidebookHeaderImage: Y,
                lockedImage: He,
                darkImage: Ct,
                animation: a.p + "lottie/pathCharacters/c61c8f0fe4a9e1a9ae4f443eb7c314f0.json"
            },
            DUO_GLOBE: {
                activeImage: d,
                guidebookHeaderImage: J,
                lockedImage: Ge,
                darkImage: Rt,
                animation: a.p + "lottie/pathCharacters/71886a73198014f8277ba04fa5f5fbf0.json"
            },
            DUO_HEADPHONES: {
                activeImage: u,
                guidebookHeaderImage: X,
                lockedImage: Ve,
                darkImage: Lt,
                animation: a.p + "lottie/pathCharacters/db2060dfa323f5380a5aad451b089ae8.json"
            },
            DUO_JUMPFLAP: {
                activeImage: g,
                guidebookHeaderImage: ee,
                lockedImage: ze,
                darkImage: Pt,
                animation: a.p + "lottie/pathCharacters/8bb6c897c3f01efa2cbd0c138772ef67.json"
            },
            DUO_POTION: {
                activeImage: p,
                guidebookHeaderImage: te,
                lockedImage: Be,
                darkImage: At,
                animation: a.p + "lottie/pathCharacters/320a1cd60f7d26a3d4b7801fecc7f01e.json"
            },
            DUO_SUNGLASSES: {
                activeImage: m,
                guidebookHeaderImage: ae,
                lockedImage: je,
                darkImage: Dt,
                animation: a.p + "lottie/pathCharacters/f872318ec63a7e667458456703a51513.json"
            },
            DUO_TWIRL: {
                activeImage: h,
                guidebookHeaderImage: se,
                lockedImage: $e,
                darkImage: Ot,
                animation: a.p + "lottie/pathCharacters/01a1427cc5613179ea3d7568a5f7445b.json"
            },
            DUO_WHISTLING: {
                activeImage: _,
                guidebookHeaderImage: ne,
                lockedImage: Ze,
                darkImage: Nt,
                animation: a.p + "lottie/pathCharacters/9eaf4990aaf1c6a96ea3960cf159c787.json"
            },
            EDDY_BASKETBALL: {
                activeImage: v,
                guidebookHeaderImage: re,
                lockedImage: We,
                darkImage: xt,
                animation: a.p + "lottie/pathCharacters/a6b12fd04248e71c10fb618c21728f64.json"
            },
            EDDY_JUMPROPE: {
                activeImage: f,
                guidebookHeaderImage: ie,
                lockedImage: qe,
                darkImage: Mt,
                animation: a.p + "lottie/pathCharacters/67844ded0243177e653006a90ff2d123.json"
            },
            FALSTAFF_EATING: {
                activeImage: S,
                guidebookHeaderImage: oe,
                lockedImage: Qe,
                darkImage: Ft,
                animation: a.p + "lottie/pathCharacters/2b220ab845add3699ee05c74616256a2.json"
            },
            FALSTAFF_FISHING: {
                activeImage: y,
                guidebookHeaderImage: le,
                lockedImage: Ke,
                darkImage: Ut,
                animation: a.p + "lottie/pathCharacters/ae34cc76c0de53ade116ac8805199ba2.json"
            },
            FALSTAFF_SNEEZING: {
                activeImage: E,
                guidebookHeaderImage: ce,
                lockedImage: Ye,
                darkImage: Ht,
                animation: a.p + "lottie/pathCharacters/08a9aac28d225ce2bedcbdb26327bf7f.json"
            },
            FALSTAFF_SNOOZE: {
                activeImage: b,
                guidebookHeaderImage: de,
                lockedImage: Je,
                darkImage: Gt,
                animation: a.p + "lottie/pathCharacters/f1ef5bf2963d4a07a873b19b97452c17.json"
            },
            JUNIOR_FROG: {
                activeImage: I,
                guidebookHeaderImage: ue,
                lockedImage: Xe,
                darkImage: Vt,
                animation: a.p + "lottie/pathCharacters/88d9353d9f8743e369eff8bb7e903e08.json"
            },
            JUNIOR_ICECREAM: {
                activeImage: w,
                guidebookHeaderImage: ge,
                lockedImage: et,
                darkImage: zt,
                animation: a.p + "lottie/pathCharacters/094c591bedc6b367a58332bbe4da9319.json"
            },
            JUNIOR_POGO: {
                activeImage: k,
                guidebookHeaderImage: pe,
                lockedImage: tt,
                darkImage: Bt,
                animation: a.p + "lottie/pathCharacters/35a6eb069de131103f1a217dc839974d.json"
            },
            JUNIOR_SLEEP: {
                activeImage: T,
                guidebookHeaderImage: me,
                lockedImage: at,
                darkImage: jt,
                animation: a.p + "lottie/pathCharacters/c522eaf9eba484ed712bb6d2235e8b92.json"
            },
            LILY_DOOMSCROLL: {
                activeImage: C,
                guidebookHeaderImage: he,
                lockedImage: st,
                darkImage: $t,
                animation: a.p + "lottie/pathCharacters/c89e727c30b2be9affdbe76d869f45fa.json"
            },
            LILY_RAINCLOUD: {
                activeImage: R,
                guidebookHeaderImage: _e,
                lockedImage: nt,
                darkImage: Zt,
                animation: a.p + "lottie/pathCharacters/884f551952f9476c7b9b98a344fb6119.json"
            },
            LILY_SHIRTS: {
                activeImage: L,
                guidebookHeaderImage: ve,
                lockedImage: rt,
                darkImage: Wt,
                animation: a.p + "lottie/pathCharacters/a3579eb9c6bb2fd6ee757fe0e7e415ad.json"
            },
            LIN_BIKE: {
                activeImage: P,
                guidebookHeaderImage: fe,
                lockedImage: it,
                darkImage: qt,
                animation: a.p + "lottie/pathCharacters/bbdaf0d9b14a9aedddf9677b081b2ccb.json"
            },
            LIN_BIKEKISS: {
                activeImage: A,
                guidebookHeaderImage: Se,
                lockedImage: ot,
                darkImage: Qt,
                animation: a.p + "lottie/pathCharacters/5e697e3598a488b072c5c9a26b0698a9.json"
            },
            LUCY_CAT: {
                activeImage: D,
                guidebookHeaderImage: ye,
                lockedImage: lt,
                darkImage: Kt,
                animation: a.p + "lottie/pathCharacters/ba26a1174d78ad0448028049f9caf665.json"
            },
            LUCY_WALKIETALKIE: {
                activeImage: O,
                guidebookHeaderImage: Ee,
                lockedImage: ct,
                darkImage: Yt,
                animation: a.p + "lottie/pathCharacters/ed60015b3035b85cf593ec1e2c941077.json"
            },
            OSCAR_BONSAI: {
                activeImage: N,
                guidebookHeaderImage: be,
                lockedImage: dt,
                darkImage: Jt,
                animation: a.p + "lottie/pathCharacters/949e42a5121007d24252cc1f13dc5340.json"
            },
            OSCAR_COMB: {
                activeImage: x,
                guidebookHeaderImage: Ie,
                lockedImage: ut,
                darkImage: Xt,
                animation: a.p + "lottie/pathCharacters/d8995c025643e9a8b14df60490607117.json"
            },
            OSCAR_FLOWER: {
                activeImage: M,
                guidebookHeaderImage: we,
                lockedImage: gt,
                darkImage: ea,
                animation: a.p + "lottie/pathCharacters/843367dca1d93f9279d29b44e03d78bf.json"
            },
            OSCAR_PAINTING: {
                activeImage: F,
                guidebookHeaderImage: ke,
                lockedImage: pt,
                darkImage: ta,
                animation: a.p + "lottie/pathCharacters/760c257b6301764926b2437c5ef49396.json"
            },
            VIKRAM_GRILL: {
                activeImage: U,
                guidebookHeaderImage: Te,
                lockedImage: mt,
                darkImage: aa,
                animation: a.p + "lottie/pathCharacters/e2c0feab5bfdf0681026cf74a3e68780.json"
            },
            VIKRAM_NOODLES: {
                activeImage: H,
                guidebookHeaderImage: Ce,
                lockedImage: ht,
                darkImage: sa,
                animation: a.p + "lottie/pathCharacters/53827134d9f7d9bdcdf51aaa70c808fc.json"
            },
            VIKRAM_PANCAKES: {
                activeImage: G,
                guidebookHeaderImage: Re,
                lockedImage: _t,
                darkImage: na,
                animation: a.p + "lottie/pathCharacters/235a9512cd87635aae19380f4fd4ff46.json"
            },
            VIKRAM_PANSIES: {
                activeImage: V,
                guidebookHeaderImage: Le,
                lockedImage: vt,
                darkImage: ra,
                animation: a.p + "lottie/pathCharacters/4563de1e9b220d608fe1e0959e5bb74e.json"
            },
            ZARI_GAMING: {
                activeImage: z,
                guidebookHeaderImage: Pe,
                lockedImage: ft,
                darkImage: ia,
                animation: a.p + "lottie/pathCharacters/e3fe1ff10daf05e0cc2499af28f113db.json"
            },
            ZARI_KICK: {
                activeImage: B,
                guidebookHeaderImage: Ae,
                lockedImage: St,
                darkImage: oa,
                animation: a.p + "lottie/pathCharacters/2eecad629ae938d2a280feeab1f33aac.json"
            },
            ZARI_LOLLIPOP: {
                activeImage: j,
                guidebookHeaderImage: De,
                lockedImage: yt,
                darkImage: la,
                animation: a.p + "lottie/pathCharacters/f30c12ed93bdc41695cdded00b8f45a9.json"
            }
        }
    }
    ,
    63198: (e, t, a) => {
        var s = {
            "./sampleChallenges.json": [48033, 223, 5314, 75],
            "./sampleChallengesCharacterWrite.json": [92485, 5770],
            "./sampleChallengesJapanese.json": [89437, 407, 3860, 5905],
            "./sampleChallengesKorean.json": [66265, 407, 7493, 3860, 1012, 7764],
            "./sampleChallengesPuzzleArabic.json": [18451, 5931, 2209, 7581, 5314, 5410, 5148, 4249, 12, 4048, 6628, 2980, 2039, 5644, 7981, 9031, 2100, 8238, 7208, 3869],
            "./sampleChallengesPuzzleKorean.json": [56158, 2039, 7981, 4099],
            "./sampleChallengesSpanish.json": [90337, 7253],
            "./sampleChallengesSpeak.json": [19872, 2039, 9031, 5123],
            "./sampleChallengesSvgPuzzle.json": [42870, 7581, 3746],
            "./sampleChallengesTrace.json": [54731, 5931, 2209, 7581, 5314, 5410, 5148, 4249, 12, 4048, 6628, 2980, 2039, 5644, 7981, 9031, 2100, 8238, 7208, 9481]
        };
        function n(e) {
            if (!a.o(s, e))
                return Promise.resolve().then(( () => {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND",
                    t
                }
                ));
            var t = s[e]
              , n = t[0];
            return Promise.all(t.slice(1).map(a.e)).then(( () => a.t(n, 19)))
        }
        n.keys = () => Object.keys(s),
        n.id = 63198,
        e.exports = n
    }
    ,
    55081: (e, t, a) => {
        var s = {
            "./ar.duostrings": [99135, 9135],
            "./bn.duostrings": [17464, 7464],
            "./contextual_variables.duostrings": [78805, 8805],
            "./cs.duostrings": [96102, 6102],
            "./de.duostrings": [82867, 2867],
            "./el.duostrings": [49495, 9495],
            "./en.duostrings": [39819, 9819],
            "./es.duostrings": [12579, 2579],
            "./experiments.duostrings": [69295, 9295],
            "./fr.duostrings": [34970, 4970],
            "./hi.duostrings": [40620, 620],
            "./hu.duostrings": [39666, 9666],
            "./id.duostrings": [71062, 1062],
            "./it.duostrings": [87490, 7490],
            "./ja.duostrings": [43162, 3162],
            "./ko.duostrings": [15750, 5750],
            "./metadata.duostrings": [84309, 4309],
            "./nl-NL.duostrings": [67674, 7674],
            "./pl.duostrings": [17716, 7716],
            "./plural_rules.duostrings": [18222, 9879],
            "./pt.duostrings": [37763, 7763],
            "./ro.duostrings": [37292, 7292],
            "./ru.duostrings": [25529, 5529],
            "./sv.duostrings": [49764, 4005],
            "./ta.duostrings": [73216, 3216],
            "./te.duostrings": [87274, 7274],
            "./th.duostrings": [39943, 9943],
            "./tl.duostrings": [8324, 821],
            "./tr.duostrings": [7396, 7396],
            "./uk.duostrings": [78374, 8374],
            "./vi.duostrings": [89036, 9036],
            "./zh-CN.duostrings": [85189, 5189],
            "./zh-TW.duostrings": [74615, 4615]
        };
        function n(e) {
            if (!a.o(s, e))
                return Promise.resolve().then(( () => {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND",
                    t
                }
                ));
            var t = s[e]
              , n = t[0];
            return a.e(t[1]).then(( () => a.t(n, 19)))
        }
        n.keys = () => Object.keys(s),
        n.id = 55081,
        e.exports = n
    }
    ,
    91575: (e, t, a) => {
        !function() {
            var e = "function" == typeof Object.defineProperties ? Object.defineProperty : function(e, t, a) {
                if (a.get || a.set)
                    throw new TypeError("ES3 does not support getters and setters.");
                e != Array.prototype && e != Object.prototype && (e[t] = a.value)
            }
              , t = "undefined" != typeof window && window === this ? this : void 0 !== a.g && null != a.g ? a.g : this;
            function s() {
                s = function() {}
                ,
                t.Symbol || (t.Symbol = r)
            }
            var n = 0;
            function r(e) {
                return "jscomp_symbol_" + (e || "") + n++
            }
            function i() {
                s();
                var a = t.Symbol.iterator;
                a || (a = t.Symbol.iterator = t.Symbol("iterator")),
                "function" != typeof Array.prototype[a] && e(Array.prototype, a, {
                    configurable: !0,
                    writable: !0,
                    value: function() {
                        return o(this)
                    }
                }),
                i = function() {}
            }
            function o(e) {
                var a = 0;
                return function(e) {
                    return i(),
                    (e = {
                        next: e
                    })[t.Symbol.iterator] = function() {
                        return this
                    }
                    ,
                    e
                }((function() {
                    return a < e.length ? {
                        done: !1,
                        value: e[a++]
                    } : {
                        done: !0
                    }
                }
                ))
            }
            function l(e) {
                if (!(e instanceof Array)) {
                    i();
                    var t = e[Symbol.iterator];
                    e = t ? t.call(e) : o(e);
                    for (var a = []; !(t = e.next()).done; )
                        a.push(t.value);
                    e = a
                }
                return e
            }
            var c = [];
            function d(e, t) {
                var a = this;
                this.context = e,
                this.h = t,
                this.f = (this.c = /Task$/.test(t)) ? e.get(t) : e[t],
                this.a = [],
                this.b = [],
                this.g = function(e) {
                    for (var t = [], s = 0; s < arguments.length; ++s)
                        t[s - 0] = arguments[s];
                    return a.b[a.b.length - 1].apply(null, [].concat(l(t)))
                }
                ,
                this.c ? e.set(t, this.g) : e[t] = this.g
            }
            function u(e, t) {
                -1 < (t = e.a.indexOf(t)) && (e.a.splice(t, 1),
                0 < e.a.length ? g(e) : -1 < (t = c.indexOf(e)) && (c.splice(t, 1),
                e.c ? e.context.set(e.h, e.f) : e.context[e.h] = e.f))
            }
            function g(e) {
                e.b = [];
                for (var t, a = 0; t = e.a[a]; a++) {
                    var s = e.b[a - 1] || e.f.bind(e.context);
                    e.b.push(t(s))
                }
            }
            function p(e) {
                var t = history
                  , a = c.filter((function(a) {
                    return a.context == t && a.h == e
                }
                ))[0];
                return a || (a = new d(t,e),
                c.push(a)),
                a
            }
            var m, h, _, v = Object.assign || function(e, t) {
                for (var a = [], s = 1; s < arguments.length; ++s)
                    a[s - 1] = arguments[s];
                s = 0;
                for (var n = a.length; s < n; s++) {
                    var r, i = Object(a[s]);
                    for (r in i)
                        Object.prototype.hasOwnProperty.call(i, r) && (e[r] = i[r])
                }
                return e
            }
            , f = {
                l: 1,
                m: 2,
                o: 3,
                u: 4,
                v: 5,
                w: 6,
                A: 7,
                B: 8,
                j: 9,
                s: 10
            }, S = Object.keys(f).length;
            function y(e, t) {
                var a = f.j;
                e.set("&_av", "2.4.1");
                var s = e.get("&_au");
                if ((s = parseInt(s || "0", 16).toString(2)).length < S)
                    for (var n = S - s.length; n; )
                        s = "0" + s,
                        n--;
                a = S - a,
                s = s.substr(0, a) + 1 + s.substr(a + 1),
                e.set("&_au", parseInt(s || "0", 2).toString(16)),
                history.pushState && window.addEventListener && (this.b = v({
                    shouldTrackUrlChange: this.shouldTrackUrlChange,
                    trackReplaceState: !1,
                    fieldsObj: {},
                    hitFilter: null
                }, t),
                this.g = e,
                this.i = location.pathname + location.search,
                this.c = this.c.bind(this),
                this.f = this.f.bind(this),
                this.a = this.a.bind(this),
                e = this.c,
                (t = p("pushState")).a.push(e),
                g(t),
                e = this.f,
                (t = p("replaceState")).a.push(e),
                g(t),
                window.addEventListener("popstate", this.a))
            }
            function E(e, t) {
                setTimeout((function() {
                    var a = e.i
                      , s = location.pathname + location.search;
                    a != s && e.b.shouldTrackUrlChange.call(e, s, a) && (e.i = s,
                    e.g.set({
                        page: s,
                        title: document.title
                    }),
                    (t || e.b.trackReplaceState) && e.g.send("pageview", function(e, t, a) {
                        var s = {
                            transport: "beacon"
                        };
                        if ("function" == typeof a) {
                            var n = t.get("buildHitTask");
                            return {
                                buildHitTask: function(t) {
                                    t.set(s, null, !0),
                                    t.set(e, null, !0),
                                    a(t, void 0, void 0),
                                    n(t)
                                }
                            }
                        }
                        return v({}, s, e)
                    }(e.b.fieldsObj, e.g, e.b.hitFilter)))
                }
                ), 0)
            }
            y.prototype.c = function(e) {
                var t = this;
                return function(a) {
                    for (var s = [], n = 0; n < arguments.length; ++n)
                        s[n - 0] = arguments[n];
                    e.apply(null, [].concat(l(s))),
                    E(t, !0)
                }
            }
            ,
            y.prototype.f = function(e) {
                var t = this;
                return function(a) {
                    for (var s = [], n = 0; n < arguments.length; ++n)
                        s[n - 0] = arguments[n];
                    e.apply(null, [].concat(l(s))),
                    E(t, !1)
                }
            }
            ,
            y.prototype.a = function() {
                E(this, !0)
            }
            ,
            y.prototype.shouldTrackUrlChange = function(e, t) {
                return !(!e || !t)
            }
            ,
            y.prototype.remove = function() {
                var e = this.c;
                u(p("pushState"), e),
                e = this.f,
                u(p("replaceState"), e),
                window.removeEventListener("popstate", this.a)
            }
            ,
            m = "urlChangeTracker",
            h = y,
            _ = window.GoogleAnalyticsObject || "ga",
            window[_] = window[_] || function(e) {
                for (var t = [], a = 0; a < arguments.length; ++a)
                    t[a - 0] = arguments[a];
                (window[_].q = window[_].q || []).push(t)
            }
            ,
            window.gaDevIds = window.gaDevIds || [],
            0 > window.gaDevIds.indexOf("i5iSjo") && window.gaDevIds.push("i5iSjo"),
            window[_]("provide", m, h),
            window.gaplugins = window.gaplugins || {},
            window.gaplugins[m.charAt(0).toUpperCase() + m.slice(1)] = h
        }()
    }
    ,
    95649: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/a440799373d131cb4a2bbfe8add8a10f.svg"
    }
    ,
    42004: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/84481e2507d0fd72f121db57ad029fc7.svg"
    }
    ,
    17833: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/512eb76d3f55365106b6553583884c81.svg"
    }
    ,
    42158: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/617c9bcf01673a55c983c7d0a14a6bd4.svg"
    }
    ,
    90778: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/68388f00ef865490c5b79b3a7238a791.svg"
    }
    ,
    45437: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/c29a13c4b115e8a9000ba1b6ac2e1918.svg"
    }
    ,
    20770: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/goals/235433119ddbb9e7a011fce8d725610e.svg"
    }
    ,
    20750: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/7da752378a3b1b8bbcd94a4d4f10561e.svg"
    }
    ,
    9115: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/b294c1b7e661d8039b723d450e12a91e.svg"
    }
    ,
    13567: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/9249183104c6fcd338c3dc70fe33612c.svg"
    }
    ,
    21778: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/icons/f5358b2d4087a109790fc809eedc08c5.svg"
    }
    ,
    39631: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/b2cfacfc26adff8e547866db1b4d2249.svg"
    }
    ,
    80869: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/838ba65643baef4c8442317df514cab5.svg"
    }
    ,
    83577: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/afe5c7067cd5fb7de936d3928ea7add6.svg"
    }
    ,
    92902: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/020eeff7a4bb54d62dc430445102de8f.svg"
    }
    ,
    83831: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/50e20c051d41d8446f13d5fae10f8797.svg"
    }
    ,
    8466: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/80fecb328c5aefd400db229794fd7a08.svg"
    }
    ,
    8146: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/58454634c8fdf43d606b85832102eb9b.svg"
    }
    ,
    79815: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/fc303539a465de810900b8bf9101df5b.svg"
    }
    ,
    9175: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/b7c96323c16272efa6794d33791686d2.svg"
    }
    ,
    40301: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/8b3ff5d2a2b0ec2ff7cec8ebd639a5ab.svg"
    }
    ,
    26858: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/968f56b566887d7718898cf8b5e74f40.svg"
    }
    ,
    78466: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/1795aa8b3b10d243e5d138a79bde360a.svg"
    }
    ,
    65908: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/eef523c872b71178ef5acb2442d453a2.svg"
    }
    ,
    66586: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/9e4f18c0bc42c7508d5fa5b18346af11.svg"
    }
    ,
    25324: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/leagues/cc7b8f8582e9cfb88408ab851ec2e9bd.svg"
    }
    ,
    26219: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/streakCalendar/85f13bef0cec7175ae190a3a8a513d58.svg"
    }
    ,
    57127: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/streakCalendar/ddd4794e495fca5c45bf358115bd9053.svg"
    }
    ,
    34049: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/streakCalendar/8d8a819f30b6f538853e0877599ed7f1.svg"
    }
    ,
    89090: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/48b38c250a652878bc0c779a07f2ca48.svg"
    }
    ,
    45633: (e, t, a) => {
        "use strict";
        e.exports = a.p + "images/ed25a8cf69261b0c1e25b147f369f74a.svg"
    }
    ,
    76986: e => {
        "use strict";
        e.exports = JSON.parse('[["[’\\\\\\"´‘`′ʻ́̀´]","\'"],["[\\\\[\\\\]\\\\{\\\\}\\\\<\\\\>\\\\)\\\\(\\\\^\\\\~\\\\_\\\\-\\\\‐\\\\;\\\\!\\\\¡\\\\|\\\\?\\\\¿\\\\/\\\\·\\\\\\"\\\\«\\\\»\\\\“\\\\”\\\\„\\\\–\\\\:\\\\,\\\\.\\\\▶\\\\*\\\\+\\\\’\\\\。\\\\，\\\\、\\\\､\\\\‚\\\\｡\\\\；\\\\：\\\\「\\\\」\\\\『\\\\』\\\\（\\\\）\\\\？\\\\！\\\\─\\\\…\\\\《\\\\》\\\\〈\\\\〉\\\\．\\\\～\\\\،\\\\؟\\\\।\\\\—\\\\‧]",""],["\\\\s+"," "],["^ | $",""]]')
    }
    ,
    72538: e => {
        "use strict";
        e.exports = JSON.parse('{"ar":{"de":"الألمانية","en":"الإنجليزية","es":"الإسبانية","fr":"الفرنسية","it":"الإيطالية","ja":"اليابانية","ko":"الكوريّة","pt":"البرتغالية","sv":"السويدية","zh":"الصينية"},"bn":{"de":"জার্মান","en":"ইংরেজি","es":"স্প্যানিশ","fr":"ফ্রেঞ্চ","it":"ইতালিয়ান","ja":"জাপানিজ","ko":"কোরিয়ান","pt":"পর্তুগিজ","zh":"চাইনিজ"},"cs":{"de":"Němčina","en":"Angličtina","es":"Španělština","fr":"Francouzština","it":"Italština","ja":"Japonština","ko":"Korejština","pt":"Portugalština","zh":"Čínština"},"de":{"en":"Englisch","es":"Spanisch","fr":"Französisch","it":"Italienisch","ja":"Japanisch","ko":"Koreanisch","pt":"Portugiesisch","zh":"Chinesisch"},"el":{"de":"Γερμανικά","en":"Αγγλικά","es":"Ισπανικά","fr":"Γαλλικά","it":"Ιταλικά","ja":"Ιαπωνικά","ko":"Κορεατικά","pt":"Πορτογαλικά","zh":"Κινεζικά"},"en":{"ar":"Arabic","cs":"Czech","cy":"Welsh","da":"Danish","de":"German","el":"Greek","en":"English","eo":"Esperanto","es":"Spanish","fi":"Finnish","fr":"French","ga":"Irish","gd":"Scottish Gaelic","he":"Hebrew","hi":"Hindi","ht":"Haitian Creole","hu":"Hungarian","hv":"High Valyrian","hw":"Hawaiian","id":"Indonesian","it":"Italian","ja":"Japanese","ko":"Korean","la":"Latin","nl-NL":"Dutch","no-BO":"Norwegian (Bokmål)","nv":"Navajo","pl":"Polish","pt":"Portuguese","ro":"Romanian","ru":"Russian","sv":"Swedish","sw":"Swahili","tlh":"Klingon","tr":"Turkish","uk":"Ukrainian","vi":"Vietnamese","yi":"Yiddish","zh":"Chinese","zu":"Zulu"},"es":{"ca":"Catalán","de":"Alemán","en":"Inglés","eo":"Esperanto","fr":"Francés","gn":"Guaraní","it":"Italiano","ja":"Japonés","ko":"Coreano","pt":"Portugués","ru":"Ruso","sv":"Sueco","zh":"Chino"},"fr":{"de":"Allemand","en":"Anglais","eo":"Espéranto","es":"Espagnol","it":"Italien","ja":"Japonais","ko":"Coréen","pt":"Portugais","zh":"Chinois"},"hi":{"de":"जर्मन","en":"इंग्लिश","es":"स्पैनिश","fr":"फ़्रेंच","it":"इटैलियन","ja":"जापानी","ko":"कोरियन","pt":"पोर्तुगीज़","zh":"चाइनीज़"},"hu":{"de":"Német","en":"Angol","es":"Spanyol","fr":"Francia","it":"Olasz","ja":"Japán","ko":"Koreai","pt":"Portugál","zh":"Kínai"},"id":{"de":"Bahasa Jerman","en":"Bahasa Inggris","es":"Bahasa Spanyol","fr":"Bahasa Prancis","it":"Bahasa Italia","ja":"Bahasa Jepang","ko":"Bahasa Korea","pt":"Bahasa Portugis","zh":"Bahasa China"},"it":{"de":"Tedesco","en":"Inglese","es":"Spagnolo","fr":"Francese","ja":"Giapponese","ko":"Coreano","pt":"Portoghese","zh":"Cinese"},"ja":{"de":"ドイツ語","en":"英語","es":"スペイン語","fr":"フランス語","it":"イタリア語","ko":"韓国語","pt":"ポルトガル語","zh":"中国語"},"ko":{"de":"독⁠일⁠어","en":"영⁠어","es":"스⁠페⁠인⁠어","fr":"프⁠랑⁠스⁠어","it":"이⁠탈⁠리⁠아⁠어","ja":"일⁠본⁠어","pt":"포⁠르⁠투⁠갈⁠어","zh":"중⁠국⁠어"},"nl-NL":{"de":"Duits","en":"Engels","es":"Spaans","fr":"Frans","it":"Italiaans","ja":"Japans","ko":"Koreaans","pt":"Portugees","zh":"Chinees"},"pl":{"de":"Niemiecki","en":"Angielski","es":"Hiszpański","fr":"Francuski","it":"Włoski","ja":"Japoński","ko":"Koreański","pt":"Portugalski","zh":"Chiński"},"pt":{"de":"Alemão","en":"Inglês","eo":"Esperanto","es":"Espanhol","fr":"Francês","it":"Italiano","ja":"Japonês","ko":"Coreano","zh":"Chinês"},"ro":{"de":"germană","en":"engleză","es":"spaniolă","fr":"franceză","it":"italiană","ja":"japoneză","ko":"coreeană","pt":"portugheză","zh":"chineză"},"ru":{"de":"Немецкий","en":"Английский","es":"Испанский","fr":"Французский","it":"Итальянский","ja":"Японский","ko":"Корейский","pt":"Португальский","sv":"Шведский","uk":"Украинский","zh":"Китайский"},"sv":{"de":"tyska","en":"engelska","es":"spanska","fr":"franska","it":"italienska","ja":"japanska","ko":"koreanska","pt":"portugisiska","zh":"kinesiska"},"ta":{"de":"ஜெர்மன்","en":"ஆங்கிலம்","es":"ஸ்பானீஷ்","fr":"ஃபிரெஞ்சு","it":"இத்தாலியன்","ja":"ஜப்பானீஸ்","ko":"கொரியன்","pt":"போர்ச்சுக்கீஸ்","zh":"சீனம்"},"te":{"de":"జర్మన్","en":"ఇంగ్లీష్","es":"స్పానిష్","fr":"ఫ్రెంచ్","it":"ఇటాలియన్","ja":"జపనీస్","ko":"కొరియన్","pt":"పోర్చుగీస్","zh":"చైనీస్"},"th":{"de":"ภาษาเยอรมัน","en":"ภ⁠า⁠ษ⁠าอั⁠ง⁠ก⁠ฤ⁠ษ","es":"ภาษาสเปน","fr":"ภาษาฝรั่งเศส","it":"ภาษาอิตาลี","ja":"ภ⁠า⁠ษ⁠าญี่ปุ่⁠น","ko":"ภาษาเกาหลี","pt":"ภาษาโปรตุเกส","zh":"ภาษาจีน"},"tl":{"de":"Aleman","en":"Ingles","es":"Espanyol","fr":"Pranses","it":"Italyano","ja":"Japanese","ko":"Korean","pt":"Portuguese","zh":"Chinese"},"tr":{"de":"Almanca","en":"İngilizce","es":"İspanyolca","fr":"Fransızca","it":"İtalyanca","ja":"Japonca","ko":"Korece","pt":"Portekizce","ru":"Rusça","zh":"Çince"},"uk":{"de":"Німецька","en":"Англійська","es":"Іспанська","fr":"Французька","it":"Італійська","ja":"Японська","ko":"Корейська","pt":"Португальська","zh":"Китайська"},"vi":{"de":"Tiếng Đức","en":"Tiếng Anh","es":"Tiếng Tây Ban Nha","fr":"Tiếng Pháp","it":"Tiếng Ý","ja":"Tiếng Nhật","ko":"Tiếng Hàn","pt":"Tiếng Bồ Đào Nha","zh":"Tiếng Hoa"},"zh-CN":{"de":"德语","en":"英语","es":"西班牙语","fr":"法语","it":"意大利语","ja":"日语","ko":"韩语","pt":"葡萄牙语","zh-HK":"中文（粤语）"},"zh-TW":{"de":"德語","en":"英語","es":"西班牙語","fr":"法語","it":"義大利語","ja":"日語","ko":"韓語","pt":"葡萄牙語","zh-HK":"中文（粵語）"}}')
    }
}, e => {
    e.O(0, [6458], ( () => (54110,
    e(e.s = 54110)))),
    e.O()
}
]);
